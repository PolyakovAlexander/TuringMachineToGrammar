@% gotoMark 1E -> gotoDecC @% 1E
1# gotoMark @1 -> gotoMark 1# @1
e% eraseC 00 -> eraseC e% 0B
1# checkCD e0 -> checkCD 1# e0
1E backToSharpZero $E -> backToSharpZero 1E $E
1B restoreCD 00 -> restoreCD 1B 00
0D restoreCD $& -> restoreCD 0D $1
1& backToSharpZero @X -> backToSharpZero 1& @X
e0 searchOne @0 -> restoreCD e0 @0
e@ findBlank @0 -> temp e@ @0
@$ searchNextBit @0 -> searchNextBit @$ @0
$X incD e0 -> checkCD $X e1
eE searchNextBit $0 -> searchNextBit eE $0
$& eraseE 0E -> prepEraseC $& 0E
e0 restoreCD 0D -> restoreCD e0 0D
1X eraseE @0 -> eraseE 1X @B
$$ backToDFromLeft 0& -> backToDFromLeft $$ 0&
$X backToSharpOne @D -> backToSharpOne $X @D
eE findZero $1 -> beginCopying eE $1
@1 searchNextBit @1 -> searchNextBit @1 @1
@D gotoMark $E -> gotoDecC @D $E
1D backToDFromRight 00 -> backToDFromRight 1D 00
00 eraseC e1 -> eraseC 00 eB
eX backToSharpZero @1 -> backToSharpZero eX @1
1$ gotoMark 01 -> gotoMark 1$ 01
@# gotoMark 11 -> gotoMark @# 11
@& gotoDecC 11 -> gotoDecC @& 11
@0 gotoMark 00 -> gotoMark @0 00
@& massErase e@ -> eraseE @& e@
0& forwardToLastD $E -> incD 0& $E
@& searchNextBit 11 -> searchNextBit @& 11
e% checkCD 1D -> checkCD e% 1D
$X gotoDecC e0 -> gotoDecC $X e0
1@ backToSharpOne eC -> backToSharpOne 1@ eC
0B backToSharpOne $C -> backToSharpOne 0B $C
e% gotoDecC @1 -> gotoDecC e% @1
$$ prepEraseC @D -> eraseC $$ @D
$E backToSharpOne @0 -> backToSharpOne $E @0
1E gotoLastE $@ -> dec 1E $@
10 initDividerByTwo $0 -> backToD 10 $1
eD findBlank @0 -> temp eD @0
@& backToSharpOne 11 -> backToSharpOne @& 11
ifZero $0 -> $0 ifZero
eD backToSharpZero @E -> backToSharpZero eD @E
$X backToSharpOne @C -> backToSharpOne $X @C
@1 backToSharpOne 1D -> backToSharpOne @1 1D
1& backToD 01 -> backToD 1& 01
1# backToSharpOne @D -> backToSharpOne 1# @D
1@ eraseC 1C -> backToStart 1@ 1X
@E copyZero eB -> backToSharpZero @E e0
$B backToSharpOne eD -> backToSharpOne $B eD
1$ backToDFromRight e1 -> backToDFromRight 1$ e1
$B backToD @1 -> backToD $B @1
1$ backToSharpZero @D -> backToSharpZero 1$ @D
0E findBlank 10 -> temp 0E 10
e# dec @0 -> dec e# @1
$E backToDFromRight 11 -> backToDFromRight $E 11
1$ searchZero e1 -> restoreCD 1$ e1
$1 searchNextBit e1 -> searchNextBit $1 e1
1& temp 00 -> beginCopying 1& 00
e@ gotoDecC 1D -> dec e@ 1D
e@ backToSharpZero e1 -> backToSharpZero e@ e1
$$ beginCopying 1B -> backToStart $$ 1C
@X goToPlaceForDivider @B -> backToFirstC @X @D
$1 searchZero 00 -> backToDFromLeft $1 0%
0& dec 11 -> gotoMark 0& 10
eD eraseE eE -> prepEraseC eD eE
0X eraseC $C -> backToStart 0X $X
@0 prepEraseC $D -> eraseC @0 $D
@E backToDFromLeft 0% -> backToDFromLeft @E 0%
10 findBlank $1 -> temp 10 $1
@X replaceWithBlanks $@ -> backToDFromRight @X $@
$@ temp @1 -> beginCopying $@ @1
e# backToDFromRight 10 -> backToDFromRight e# 10
0% backToFirstC 01 -> backToFirstC 0% 01
e% restoreCD 1& -> restoreCD e% 11
e@ incD e0 -> checkCD e@ e1
eD eraseC $C -> backToStart eD $X
eB initDivider 00 -> initDividerByTwo eB 00
1E findZero @1 -> beginCopying 1E @1
10 backToD 10 -> backToD 10 10
e@ backToDFromRight @E -> backToDFromRight e@ @E
$D searchZero e1 -> restoreCD $D e1
1% initDivider e0 -> initDividerByTwo 1% e0
$# dec 01 -> gotoMark $# 00
1% backToDFromLeft 11 -> backToDFromLeft 1% 11
1$ backToSharpOne $X -> backToSharpOne 1$ $X
@D findBlank $0 -> temp @D $0
0E checkCD $D -> checkCD 0E $D
eC restoreCD 10 -> restoreCD eC 10
$C backToSharpZero e0 -> backToSharpZero $C e0
1D prepEraseC 00 -> prepEraseC 1D 00
1# eraseE eE -> prepEraseC 1# eE
10 gotoDecC 11 -> gotoDecC 10 11
eB replaceWithBlanks $@ -> backToDFromRight eB $@
1# restoreCD @% -> restoreCD 1# @0
eC checkCD @1 -> checkCD eC @1
1E checkCD $1 -> checkCD 1E $1
$C searchZero 00 -> backToDFromLeft $C 0%
0E backToSharpZero 11 -> backToSharpZero 0E 11
e1 gotoLastE @@ -> dec e1 @@
e& backToSharpOne eE -> backToSharpOne e& eE
1@ goToPlaceForDivider eB -> backToFirstC 1@ eD
eC searchOne 11 -> backToDFromLeft eC 1&
e@ eraseC e1 -> eraseC e@ eB
@E gotoDecC eD -> dec @E eD
@B backToStart e1 -> backToStart @B e1
0E backToSharpOne @D -> backToSharpOne 0E @D
eB findBlank 00 -> temp eB 00
$% backToSharpZero 0C -> backToSharpZero $% 0C
1$ backToSharpOne 0D -> backToSharpOne 1$ 0D
$D gotoDecC @0 -> gotoDecC $D @0
1E massErase $@ -> eraseE 1E $@
@@ goToPlaceForDivider $B -> backToFirstC @@ $D
e# backToDFromLeft 0D -> searchNextBit e# 0D
e@ findBlank 11 -> temp e@ 11
0B gotoDecC 11 -> gotoDecC 0B 11
$1 backToDFromRight @B -> backToDFromRight $1 @B
1@ backToSharpOne 1E -> backToSharpOne 1@ 1E
$0 backToFirstC $1 -> backToFirstC $0 $1
e% searchNextBit $0 -> searchNextBit e% $0
@# backToStart 00 -> backToStart @# 00
e1 findBlank $1 -> temp e1 $1
@1 findBlank $B -> FINAL @1 $B
$% gotoDecC e0 -> gotoDecC $% e0
$@ restoreCD e1 -> restoreCD $@ e1
$C backToFirstC @0 -> backToFirstC $C @0
1X searchOne e1 -> backToDFromLeft 1X e&
eE searchZero 10 -> backToDFromLeft eE 1%
1& gotoMark e0 -> gotoMark 1& e0
@E backToSharpOne e1 -> backToSharpOne @E e1
1$ searchZero @1 -> restoreCD 1$ @1
$E backToDFromRight e1 -> backToDFromRight $E e1
1& backToSharpZero 01 -> backToSharpZero 1& 01
@X backToSharpZero @0 -> backToSharpZero @X @0
@C backToD $1 -> backToD @C $1
1% checkCD 11 -> checkCD 1% 11
0& backToSharpOne 1C -> backToSharpOne 0& 1C
10 restoreCD $1 -> restoreCD 10 $1
$@ incD e0 -> checkCD $@ e1
@X eraseC 00 -> eraseC @X 0B
0& gotoMark 10 -> gotoMark 0& 10
0& backToSharpZero $0 -> backToSharpZero 0& $0
0% eraseE 0E -> prepEraseC 0% 0E
0% backToDFromLeft 01 -> backToDFromLeft 0% 01
eB searchZero 01 -> restoreCD eB 01
e0 gotoMark 1E -> gotoDecC e0 1E
$& findZero 11 -> beginCopying $& 11
1@ gotoLastE @@ -> dec 1@ @@
@E checkCD 0D -> checkCD @E 0D
1% copyOne 1B -> backToSharpOne 1% 11
e1 backToSharpZero $C -> backToSharpZero e1 $C
1E checkCD $D -> checkCD 1E $D
0B nullifier eB -> initDivider 0B eE
$# incD @0 -> checkCD $# @1
e@ backToSharpOne $D -> backToSharpOne e@ $D
$B backToSharpZero @1 -> backToSharpZero $B @1
e0 backToDFromRight eE -> backToDFromRight e0 eE
1@ backToDFromRight 10 -> backToDFromRight 1@ 10
1@ searchZero 00 -> backToDFromLeft 1@ 0%
1@ restoreCD 01 -> restoreCD 1@ 01
10 backToDFromRight 00 -> backToDFromRight 10 00
@# dec 01 -> gotoMark @# 00
10 gotoMark 0E -> gotoDecC 10 0E
0C backToSharpZero 1C -> backToSharpZero 0C 1C
eE checkCD 00 -> checkCD eE 00
$$ checkCD 01 -> checkCD $$ 01
@0 findBlank 00 -> temp @0 00
@C backToSharpZero 1X -> backToSharpZero @C 1X
0C backToDFromRight $0 -> backToDFromRight 0C $0
$B forwardToLastD $E -> incD $B $E
$C backToStart @1 -> backToStart $C @1
@B checkCD 11 -> checkCD @B 11
$# backToStart 11 -> backToStart $# 11
01 findBlank 0B -> FINAL 01 0B
$# prepEraseC 11 -> prepEraseC $# 11
0X backToSharpOne eX -> backToSharpOne 0X eX
$& initDivider 10 -> initDividerByTwo $& 10
eC initDividerByTwo $0 -> backToD eC $1
0# backToDFromLeft $% -> backToDFromLeft 0# $%
@1 backToDFromRight $E -> backToDFromRight @1 $E
$@ nullifier @B -> initDivider $@ @E
0# backToD @0 -> backToD 0# @0
e0 eraseC e1 -> eraseC e0 eB
$1 backToDFromLeft 0% -> backToDFromLeft $1 0%
@@ findBlank @B -> FINAL @@ @B
01 searchOne @1 -> backToDFromLeft 01 @&
@@ massErase e@ -> eraseE @@ e@
0@ backToStart 01 -> backToStart 0@ 01
0D copyOne @B -> backToSharpOne 0D @1
eC backToDFromLeft 1& -> backToDFromLeft eC 1&
FINAL @& -> FINAL @ FINAL
0X backToSharpOne eD -> backToSharpOne 0X eD
$% copyOne @B -> backToSharpOne $% @1
0C gotoDecC e0 -> gotoDecC 0C e0
eB backToSharpZero @C -> backToSharpZero eB @C
0# temp $1 -> beginCopying 0# $1
@X findZero @1 -> beginCopying @X @1
0E temp e0 -> beginCopying 0E e0
eE restoreCD 00 -> restoreCD eE 00
$0 backToSharpZero @C -> backToSharpZero $0 @C
10 restoreCD @1 -> restoreCD 10 @1
@@ backToSharpOne 0D -> backToSharpOne @@ 0D
@C backToSharpZero eE -> backToSharpZero @C eE
0D restoreCD @0 -> restoreCD 0D @0
$C dec 00 -> dec $C 01
@1 prepEraseC @D -> eraseC @1 @D
0E backToSharpZero 1C -> backToSharpZero 0E 1C
1X beginCopying $B -> backToStart 1X $C
1B dec $0 -> dec 1B $1
1D backToD 00 -> backToD 1D 00
10 temp 11 -> beginCopying 10 11
eX dec e1 -> gotoMark eX e0
@# restoreCD $D -> restoreCD @# $D
1@ checkCD 01 -> checkCD 1@ 01
00 restoreCD $D -> restoreCD 00 $D
1@ gotoDecC 01 -> gotoDecC 1@ 01
@C temp @0 -> beginCopying @C @0
@C prepEraseC 10 -> prepEraseC @C 10
1@ backToSharpZero 1C -> backToSharpZero 1@ 1C
@@ eraseC $C -> backToStart @@ $X
01 backToDFromLeft e& -> backToDFromLeft 01 e&
0D backToSharpOne e1 -> backToSharpOne 0D e1
1@ eraseE @1 -> eraseE 1@ @B
@D incD @1 -> incD @D @0
1# checkCD e1 -> checkCD 1# e1
$B backToSharpZero @D -> backToSharpZero $B @D
@# backToSharpZero 1E -> backToSharpZero @# 1E
$B findBlank 01 -> temp $B 01
e% backToDFromRight @0 -> backToDFromRight e% @0
0% restoreCD 1& -> restoreCD 0% 11
$B findBlank e0 -> temp $B e0
$# gotoDecC e0 -> gotoDecC $# e0
0B gotoMark $0 -> gotoMark 0B $0
$1 restoreCD @& -> restoreCD $1 @1
$% backToSharpZero 1D -> backToSharpZero $% 1D
1D searchOne e1 -> backToDFromLeft 1D e&
0@ searchZero e0 -> backToDFromLeft 0@ e%
@X backToDFromLeft 00 -> backToDFromLeft @X 00
0@ eraseE 0E -> prepEraseC 0@ 0E
e% beginCopying $B -> backToStart e% $C
@D backToSharpOne 0C -> backToSharpOne @D 0C
$B backToSharpOne 11 -> backToSharpOne $B 11
eD beginCopying 1B -> backToStart eD 1C
1@ backToDFromRight $1 -> backToDFromRight 1@ $1
0# backToSharpZero e1 -> backToSharpZero 0# e1
eC backToSharpZero eC -> backToSharpZero eC eC
1C gotoDecC $0 -> gotoDecC 1C $0
e& dec $1 -> gotoMark e& $0
$& backToSharpOne 00 -> backToSharpOne $& 00
$D backToSharpZero 1X -> backToSharpZero $D 1X
e1 findBlank @0 -> temp e1 @0
0X searchNextBit 11 -> searchNextBit 0X 11
$@ checkCD $D -> checkCD $@ $D
e& incD $1 -> incD e& $0
1@ checkCD 1D -> checkCD 1@ 1D
@B backToFirstC $0 -> backToFirstC @B $0
@% backToStart e0 -> backToStart @% e0
0E backToDFromRight @0 -> backToDFromRight 0E @0
0C backToSharpOne @D -> backToSharpOne 0C @D
e$ goToPlaceForDivider @B -> backToFirstC e$ @D
1B gotoDecC eD -> dec 1B eD
1E prepEraseC 0D -> eraseC 1E 0D
e$ goToPlaceForDivider 0B -> backToFirstC e$ 0D
0X beginCopying 1B -> backToStart 0X 1C
1@ beginCopying 1B -> backToStart 1@ 1C
0D gotoMark @0 -> gotoMark 0D @0
$$ findBlank $B -> FINAL $$ $B
@C backToSharpOne 1E -> backToSharpOne @C 1E
$D searchNextBit 11 -> searchNextBit $D 11
1D eraseE @0 -> eraseE 1D @B
@& gotoMark 1E -> gotoDecC @& 1E
@% replaceWithBlanks e@ -> backToDFromRight @% e@
$D eraseC @1 -> eraseC $D @B
$1 restoreCD e& -> restoreCD $1 e1
$X massErase e@ -> eraseE $X e@
1$ copyOne 1B -> backToSharpOne 1$ 11
$$ backToFirstC 10 -> backToFirstC $$ 10
$0 eraseC 01 -> eraseC $0 0B
eE dec 11 -> gotoMark eE 10
@# temp 00 -> beginCopying @# 00
1C eraseC eC -> backToStart 1C eX
11 findBlank $B -> FINAL 11 $B
@@ backToDFromLeft e1 -> backToDFromLeft @@ e1
10 checkCD @1 -> checkCD 10 @1
@1 backToStart $1 -> backToStart @1 $1
@@ findBlank e0 -> temp @@ e0
eB dec 00 -> dec eB 01
eX backToSharpZero eX -> backToSharpZero eX eX
1X backToSharpZero 1X -> backToSharpZero 1X 1X
0$ incD $0 -> checkCD 0$ $1
$@ searchNextBit @1 -> searchNextBit $@ @1
0@ replaceWithBlanks e@ -> backToDFromRight 0@ e@
@0 backToSharpOne @C -> backToSharpOne @0 @C
1& dec 10 -> dec 1& 11
@X backToSharpZero 0E -> backToSharpZero @X 0E
1X incD 10 -> checkCD 1X 11
eX restoreCD e& -> restoreCD eX e1
0E backToSharpOne @E -> backToSharpOne 0E @E
0& gotoMark 00 -> gotoMark 0& 00
1@ checkCD $0 -> checkCD 1@ $0
$0 gotoDecC @1 -> gotoDecC $0 @1
@& eraseE 0E -> prepEraseC @& 0E
e$ restoreCD $D -> restoreCD e$ $D
@D forwardToLastD $E -> incD @D $E
eD checkCD $0 -> checkCD eD $0
1@ backToSharpZero 0E -> backToSharpZero 1@ 0E
$% backToD 10 -> backToD $% 10
eB copyZero $B -> backToSharpZero eB $0
0B gotoLastE e@ -> dec 0B e@
e& eraseC eC -> backToStart e& eX
1& backToSharpZero e0 -> backToSharpZero 1& e0
@@ eraseC 01 -> eraseC @@ 0B
e# backToDFromRight e1 -> backToDFromRight e# e1
0# backToSharpOne 0E -> backToSharpOne 0# 0E
00 searchNextBit @0 -> searchNextBit 00 @0
@# prepEraseC 10 -> prepEraseC @# 10
1E searchNextBit e0 -> searchNextBit 1E e0
$0 beginCopying @B -> backToStart $0 @C
@B gotoDecC $1 -> gotoDecC @B $1
$X eraseC e1 -> eraseC $X eB
1E backToDFromRight 00 -> backToDFromRight 1E 00
e$ nullifier 0B -> initDivider e$ 0E
1X backToStart $1 -> backToStart 1X $1
$1 initDividerByTwo 10 -> backToD $1 11
1D backToDFromRight $E -> backToDFromRight 1D $E
e# backToSharpOne $X -> backToSharpOne e# $X
1% prepEraseC 00 -> prepEraseC 1% 00
$C nullifier 0B -> initDivider $C 0E
$0 searchNextBit $0 -> searchNextBit $0 $0
1% gotoDecC $D -> dec 1% $D
1@ backToStart e0 -> backToStart 1@ e0
@$ gotoDecC 01 -> gotoDecC @$ 01
$1 findBlank e1 -> temp $1 e1
1C restoreCD 11 -> restoreCD 1C 11
@# backToSharpZero eE -> backToSharpZero @# eE
$1 eraseC e1 -> eraseC $1 eB
0X backToSharpOne 0E -> backToSharpOne 0X 0E
1E backToSharpZero $0 -> backToSharpZero 1E $0
$D initDividerByTwo @0 -> backToD $D @1
$B checkCD e0 -> checkCD $B e0
10 massErase @@ -> eraseE 10 @@
1& backToSharpOne eC -> backToSharpOne 1& eC
$& goToPlaceForDivider @B -> backToFirstC $& @D
1B backToStart $1 -> backToStart 1B $1
@0 gotoDecC @D -> dec @0 @D
$$ backToDFromRight 10 -> backToDFromRight $$ 10
1B temp $0 -> beginCopying 1B $0
@0 backToDFromLeft $1 -> backToDFromLeft @0 $1
@@ eraseE 1E -> prepEraseC @@ 1E
@& findZero e1 -> beginCopying @& e1
e$ checkEForZero 0B -> stop e$ 0B
1@ gotoMark eE -> gotoDecC 1@ eE
0@ searchZero @0 -> backToDFromLeft 0@ @%
@% initDividerByTwo 00 -> backToD @% 01
e0 restoreCD $1 -> restoreCD e0 $1
eE eraseC 1C -> backToStart eE 1X
0# eraseC 10 -> eraseC 0# 1B
@X restoreCD 11 -> restoreCD @X 11
gotoLastE $E -> $E gotoLastE
e0 backToD 01 -> backToD e0 01
@% dec 11 -> gotoMark @% 10
@# findBlank 01 -> temp @# 01
@$ backToSharpZero 0D -> backToSharpZero @$ 0D
01 incD e0 -> checkCD 01 e1
00 backToDFromLeft e% -> backToDFromLeft 00 e%
@# gotoMark e1 -> gotoMark @# e1
eE gotoMark 10 -> gotoMark eE 10
1C gotoMark $1 -> gotoMark 1C $1
1# gotoLastE e@ -> dec 1# e@
0X searchOne 01 -> backToDFromLeft 0X 0&
1E dec @1 -> gotoMark 1E @0
0D gotoDecC 0D -> dec 0D 0D
@1 backToDFromLeft 10 -> backToDFromLeft @1 10
0$ backToSharpOne e1 -> backToSharpOne 0$ e1
$C backToDFromRight @E -> backToDFromRight $C @E
e% backToFirstC 10 -> backToFirstC e% 10
$@ gotoMark @0 -> gotoMark $@ @0
@1 backToFirstC 00 -> backToFirstC @1 00
@& initDividerByTwo @0 -> backToD @& @1
$1 prepEraseC 00 -> prepEraseC $1 00
@0 eraseC $C -> backToStart @0 $X
1E searchZero 01 -> restoreCD 1E 01
1% backToSharpOne 0E -> backToSharpOne 1% 0E
$0 temp 00 -> beginCopying $0 00
@C backToSharpZero 0D -> backToSharpZero @C 0D
e& initDividerByTwo e0 -> backToD e& e1
$& searchZero 00 -> backToDFromLeft $& 0%
1% gotoMark 1E -> gotoDecC 1% 1E
@1 backToDFromRight @B -> backToDFromRight @1 @B
@# backToStart e0 -> backToStart @# e0
$@ checkCD @0 -> checkCD $@ @0
incD 0D -> 0D FINAL
1C gotoMark e0 -> gotoMark 1C e0
$$ findBlank e1 -> temp $$ e1
$D replaceWithBlanks e@ -> backToDFromRight $D e@
@% restoreCD 0% -> restoreCD @% 00
e$ backToSharpZero @X -> backToSharpZero e$ @X
1$ searchNextBit e1 -> searchNextBit 1$ e1
1C goToPlaceForDivider 0B -> backToFirstC 1C 0D
1& findBlank 10 -> temp 1& 10
0X searchOne @0 -> restoreCD 0X @0
$D goToPlaceForDivider eB -> backToFirstC $D eD
$@ backToD $1 -> backToD $@ $1
0E eraseC 01 -> eraseC 0E 0B
$# findBlank 00 -> temp $# 00
$B gotoMark @E -> gotoDecC $B @E
1X beginCopying @B -> backToStart 1X @C
1C backToStart 11 -> backToStart 1C 11
00 temp 10 -> beginCopying 00 10
0$ prepEraseC 1D -> eraseC 0$ 1D
$E eraseE $E -> prepEraseC $E $E
0X replaceWithBlanks e@ -> backToDFromRight 0X e@
1D backToSharpOne 0D -> backToSharpOne 1D 0D
eE backToSharpZero 0D -> backToSharpZero eE 0D
@D backToStart $1 -> backToStart @D $1
eX initDivider @0 -> initDividerByTwo eX @0
00 restoreCD 0& -> restoreCD 00 01
1E temp @1 -> beginCopying 1E @1
eD restoreCD $% -> restoreCD eD $0
$1 gotoMark $0 -> gotoMark $1 $0
$C backToDFromLeft $D -> searchNextBit $C $D
$1 findBlank 01 -> temp $1 01
10 searchNextBit e1 -> searchNextBit 10 e1
eE backToSharpZero @C -> backToSharpZero eE @C
$C temp e0 -> beginCopying $C e0
00 eraseE 00 -> eraseE 00 0B
e# backToSharpOne eE -> backToSharpOne e# eE
$$ backToDFromRight 1E -> backToDFromRight $$ 1E
eX backToSharpZero eD -> backToSharpZero eX eD
@@ gotoMark eE -> gotoDecC @@ eE
@X gotoMark $1 -> gotoMark @X $1
e# backToDFromRight $E -> backToDFromRight e# $E
1C backToSharpOne eD -> backToSharpOne 1C eD
01 gotoMark @0 -> gotoMark 01 @0
0X beginCopying 0B -> backToStart 0X 0C
$@ backToDFromRight $1 -> backToDFromRight $@ $1
0# beginCopying 1B -> backToStart 0# 1C
@C copyOne @B -> backToSharpOne @C @1
@$ dec $1 -> gotoMark @$ $0
$0 nullifier 0B -> initDivider $0 0E
0# prepEraseC e0 -> prepEraseC 0# e0
1E backToDFromRight 10 -> backToDFromRight 1E 10
e@ backToDFromLeft @D -> searchNextBit e@ @D
0$ backToDFromLeft 0% -> backToDFromLeft 0$ 0%
1& searchZero 11 -> restoreCD 1& 11
@0 findBlank @B -> FINAL @0 @B
e@ massErase @@ -> eraseE e@ @@
e$ backToSharpZero $C -> backToSharpZero e$ $C
1% goToPlaceForDivider $B -> backToFirstC 1% $D
$# backToDFromRight $E -> backToDFromRight $# $E
1E restoreCD e0 -> restoreCD 1E e0
e$ backToSharpZero @E -> backToSharpZero e$ @E
00 backToD @1 -> backToD 00 @1
0E incD @1 -> incD 0E @0
@0 incD e1 -> incD @0 e0
0& dec $1 -> gotoMark 0& $0
10 checkEForZero $B -> stop 10 $B
eB eraseC 10 -> eraseC eB 1B
@@ checkEForZero 1B -> stop @@ 1B
@0 prepEraseC 00 -> prepEraseC @0 00
1C temp 11 -> beginCopying 1C 11
00 backToDFromLeft 00 -> backToDFromLeft 00 00
@@ backToSharpOne eC -> backToSharpOne @@ eC
0D initDivider 10 -> initDividerByTwo 0D 10
@C restoreCD 00 -> restoreCD @C 00
@0 backToDFromRight eE -> backToDFromRight @0 eE
$X findBlank 01 -> temp $X 01
1D beginCopying eB -> backToStart 1D eC
1X backToStart @1 -> backToStart 1X @1
0C restoreCD 00 -> restoreCD 0C 00
0$ backToStart e1 -> backToStart 0$ e1
1B backToD e1 -> backToD 1B e1
0X eraseE @1 -> eraseE 0X @B
moveToE 10 -> 10 moveToE
1# gotoDecC $0 -> gotoDecC 1# $0
@@ backToDFromRight @0 -> backToDFromRight @@ @0
0@ backToSharpOne 1C -> backToSharpOne 0@ 1C
eX restoreCD 0& -> restoreCD eX 01
@D checkCD 01 -> checkCD @D 01
e& findBlank eB -> FINAL e& eB
eD beginCopying @B -> backToStart eD @C
1D backToDFromLeft e& -> backToDFromLeft 1D e&
0C backToSharpOne 11 -> backToSharpOne 0C 11
1$ backToSharpOne eE -> backToSharpOne 1$ eE
0D initDividerByTwo 10 -> backToD 0D 11
1& checkCD @D -> checkCD 1& @D
0X copyZero eB -> backToSharpZero 0X e0
$# backToSharpZero e0 -> backToSharpZero $# e0
11 prepEraseC $1 -> prepEraseC 11 $1
0@ incD @1 -> incD 0@ @0
@% backToSharpOne $C -> backToSharpOne @% $C
eC backToSharpOne 1E -> backToSharpOne eC 1E
@% searchZero e1 -> restoreCD @% e1
1% backToSharpOne $D -> backToSharpOne 1% $D
@B checkCD eD -> checkCD @B eD
1% eraseE @E -> prepEraseC 1% @E
@@ backToDFromLeft 00 -> backToDFromLeft @@ 00
0E gotoMark $1 -> gotoMark 0E $1
$% searchNextBit 00 -> searchNextBit $% 00
$B searchZero 01 -> restoreCD $B 01
$B copyZero @B -> backToSharpZero $B @0
0B checkCD 11 -> checkCD 0B 11
1$ searchOne $0 -> restoreCD 1$ $0
@& temp 11 -> beginCopying @& 11
0B checkCD @0 -> checkCD 0B @0
1$ backToStart 00 -> backToStart 1$ 00
0C restoreCD @D -> restoreCD 0C @D
0E gotoMark 10 -> gotoMark 0E 10
eC restoreCD @0 -> restoreCD eC @0
0D backToSharpOne 10 -> backToSharpOne 0D 10
1X backToFirstC e1 -> backToFirstC 1X e1
10 initDivider @0 -> initDividerByTwo 10 @0
e@ backToSharpOne $0 -> backToSharpOne e@ $0
@# backToSharpZero 0E -> backToSharpZero @# 0E
@# temp e0 -> beginCopying @# e0
e# findBlank 01 -> temp e# 01
1B eraseC 01 -> eraseC 1B 0B
@1 dec e1 -> gotoMark @1 e0
1% checkCD 00 -> checkCD 1% 00
0C eraseC @C -> backToStart 0C @X
$D backToSharpOne 0D -> backToSharpOne $D 0D
$1 backToDFromLeft e& -> backToDFromLeft $1 e&
$# dec e0 -> dec $# e1
0# backToSharpZero eC -> backToSharpZero 0# eC
$B backToD 10 -> backToD $B 10
$# prepEraseC 01 -> prepEraseC $# 01
$% replaceWithBlanks e@ -> backToDFromRight $% e@
eX incD @1 -> incD eX @0
0E copyZero eB -> backToSharpZero 0E e0
0X eraseE 11 -> eraseE 0X 1B
00 gotoMark e0 -> gotoMark 00 e0
@$ backToSharpOne eE -> backToSharpOne @$ eE
@D restoreCD eD -> restoreCD @D eD
0D searchZero $0 -> backToDFromLeft 0D $%
01 backToSharpOne @0 -> backToSharpOne 01 @0
@C eraseC 00 -> eraseC @C 0B
eB forwardToLastD eE -> incD eB eE
@D backToDFromLeft @0 -> backToDFromLeft @D @0
0D dec 11 -> gotoMark 0D 10
eD findBlank @B -> FINAL eD @B
e# backToDFromRight @B -> backToDFromRight e# @B
e% backToD 00 -> backToD e% 00
e@ prepEraseC @D -> eraseC e@ @D
$D initDivider 00 -> initDividerByTwo $D 00
1C beginCopying eB -> backToStart 1C eC
00 searchOne 10 -> restoreCD 00 10
@% backToSharpZero 00 -> backToSharpZero @% 00
00 gotoDecC eD -> dec 00 eD
0B backToStart 01 -> backToStart 0B 01
0D prepEraseC 10 -> prepEraseC 0D 10
1% backToSharpOne eE -> backToSharpOne 1% eE
e& restoreCD @0 -> restoreCD e& @0
e$ backToDFromLeft eD -> searchNextBit e$ eD
e@ eraseE @0 -> eraseE e@ @B
1% gotoLastE 0@ -> dec 1% 0@
@@ incD 11 -> incD @@ 10
1# initDivider 00 -> initDividerByTwo 1# 00
eB backToDFromLeft e0 -> backToDFromLeft eB e0
1B temp e1 -> beginCopying 1B e1
copyOne eC -> eC copyOne
@% backToSharpZero eC -> backToSharpZero @% eC
@0 backToSharpZero 11 -> backToSharpZero @0 11
$@ backToSharpZero $0 -> backToSharpZero $@ $0
@X searchOne $1 -> backToDFromLeft @X $&
$C backToDFromRight e1 -> backToDFromRight $C e1
eE restoreCD $1 -> restoreCD eE $1
$% gotoDecC 1D -> dec $% 1D
1# dec @1 -> gotoMark 1# @0
$0 backToFirstC 01 -> backToFirstC $0 01
e0 searchOne 00 -> restoreCD e0 00
1@ backToSharpZero 0X -> backToSharpZero 1@ 0X
@E gotoMark eE -> gotoDecC @E eE
e& restoreCD @1 -> restoreCD e& @1
0% backToDFromLeft 0D -> searchNextBit 0% 0D
e% copyOne eB -> backToSharpOne e% e1
@D prepEraseC 11 -> prepEraseC @D 11
11 eraseC @0 -> eraseC 11 @B
1E checkCD @0 -> checkCD 1E @0
1# gotoMark $E -> gotoDecC 1# $E
0& backToSharpZero @0 -> backToSharpZero 0& @0
$C gotoMark 00 -> gotoMark $C 00
0X gotoDecC 1D -> dec 0X 1D
0X backToSharpOne @D -> backToSharpOne 0X @D
@& backToFirstC @0 -> backToFirstC @& @0
0@ checkCD @D -> checkCD 0@ @D
1$ restoreCD 1D -> restoreCD 1$ 1D
1# backToStart e1 -> backToStart 1# e1
forwardToLastD @1 -> @1 forwardToLastD
$@ eraseE $E -> prepEraseC $@ $E
eB backToD e1 -> backToD eB e1
1& copyOne @B -> backToSharpOne 1& @1
@% backToSharpOne 1D -> backToSharpOne @% 1D
0E backToSharpOne 00 -> backToSharpOne 0E 00
1C backToD 10 -> backToD 1C 10
@X searchOne 00 -> restoreCD @X 00
1B backToDFromRight 11 -> backToDFromRight 1B 11
$E restoreCD e0 -> restoreCD $E e0
0% eraseE e0 -> eraseE 0% eB
0C searchOne @0 -> restoreCD 0C @0
$% backToSharpZero eC -> backToSharpZero $% eC
0@ backToSharpZero 01 -> backToSharpZero 0@ 01
11 gotoMark @E -> gotoDecC 11 @E
$1 initDividerByTwo e0 -> backToD $1 e1
@@ backToSharpZero @D -> backToSharpZero @@ @D
$E eraseE 10 -> eraseE $E 1B
1@ restoreCD e1 -> restoreCD 1@ e1
0D checkCD 11 -> checkCD 0D 11
@B searchOne 11 -> backToDFromLeft @B 1&
e& backToDFromLeft 10 -> backToDFromLeft e& 10
@@ prepEraseC e0 -> prepEraseC @@ e0
eX searchNextBit 01 -> searchNextBit eX 01
e0 incD 01 -> incD e0 00
@0 beginCopying eB -> backToStart @0 eC
@& backToDFromLeft $0 -> backToDFromLeft @& $0
e@ backToSharpOne @X -> backToSharpOne e@ @X
e# backToD @0 -> backToD e# @0
0$ gotoMark 11 -> gotoMark 0$ 11
1D replaceWithBlanks $@ -> backToDFromRight 1D $@
$C eraseC 01 -> eraseC $C 0B
1& initDivider 10 -> initDividerByTwo 1& 10
11 searchOne @1 -> backToDFromLeft 11 @&
0& gotoDecC 00 -> gotoDecC 0& 00
@& temp 00 -> beginCopying @& 00
$% dec 11 -> gotoMark $% 10
1C backToDFromRight 0B -> backToDFromRight 1C 0B
$& restoreCD e0 -> restoreCD $& e0
@C findBlank $1 -> temp @C $1
$D backToSharpZero 1D -> backToSharpZero $D 1D
e# searchNextBit $1 -> searchNextBit e# $1
0@ searchOne 11 -> backToDFromLeft 0@ 1&
$E restoreCD 1& -> restoreCD $E 11
@@ searchZero 00 -> backToDFromLeft @@ 0%
eD backToSharpZero 1D -> backToSharpZero eD 1D
@@ replaceWithBlanks e@ -> backToDFromRight @@ e@
@0 incD 10 -> checkCD @0 11
@1 backToDFromLeft @D -> searchNextBit @1 @D
1# backToDFromLeft 1& -> backToDFromLeft 1# 1&
@% checkEForZero 1B -> stop @% 1B
0B backToSharpOne 1D -> backToSharpOne 0B 1D
1E gotoMark $1 -> gotoMark 1E $1
e@ replaceWithBlanks 0@ -> backToDFromRight e@ 0@
$@ backToFirstC 11 -> backToFirstC $@ 11
0E eraseE e0 -> eraseE 0E eB
$E backToDFromLeft $D -> searchNextBit $E $D
1X backToSharpOne @0 -> backToSharpOne 1X @0
backToDAfterInc e0 -> e0 backToDAfterInc
1C copyOne $B -> backToSharpOne 1C $1
1$ backToSharpOne eX -> backToSharpOne 1$ eX
1$ searchNextBit @1 -> searchNextBit 1$ @1
@$ replaceWithBlanks 1@ -> backToDFromRight @$ 1@
1B replaceWithBlanks 0@ -> backToDFromRight 1B 0@
@1 backToDFromLeft 01 -> backToDFromLeft @1 01
$X backToSharpOne 1C -> backToSharpOne $X 1C
0D backToSharpZero @X -> backToSharpZero 0D @X
@B backToStart @1 -> backToStart @B @1
@@ backToSharpZero 1D -> backToSharpZero @@ 1D
0# massErase 1@ -> eraseE 0# 1@
@E gotoMark 01 -> gotoMark @E 01
0@ dec 01 -> gotoMark 0@ 00
eB backToDFromLeft $1 -> backToDFromLeft eB $1
1E gotoDecC 1D -> dec 1E 1D
1& restoreCD eD -> restoreCD 1& eD
0B restoreCD 0% -> restoreCD 0B 00
1$ massErase 0@ -> eraseE 1$ 0@
@$ searchZero 00 -> backToDFromLeft @$ 0%
eX nullifier $B -> initDivider eX $E
11 goToPlaceForDivider eB -> backToFirstC 11 eD
0# backToSharpZero @C -> backToSharpZero 0# @C
0@ searchZero $0 -> backToDFromLeft 0@ $%
$@ gotoMark @E -> gotoDecC $@ @E
e# searchZero 11 -> restoreCD e# 11
@B backToSharpOne eX -> backToSharpOne @B eX
01 forwardToLastD $E -> incD 01 $E
$C temp 10 -> beginCopying $C 10
eC gotoDecC e0 -> gotoDecC eC e0
@E restoreCD $% -> restoreCD @E $0
eC prepEraseC 11 -> prepEraseC eC 11
11 backToSharpOne 0X -> backToSharpOne 11 0X
e0 backToDFromLeft @& -> backToDFromLeft e0 @&
e0 restoreCD e& -> restoreCD e0 e1
eE backToD 01 -> backToD eE 01
eX checkCD 00 -> checkCD eX 00
0@ eraseC e1 -> eraseC 0@ eB
1D searchNextBit @0 -> searchNextBit 1D @0
1E eraseC $C -> backToStart 1E $X
@1 initDivider 10 -> initDividerByTwo @1 10
0# incD e0 -> checkCD 0# e1
@E backToFirstC e1 -> backToFirstC @E e1
1# backToSharpZero 1E -> backToSharpZero 1# 1E
$@ searchZero @0 -> backToDFromLeft $@ @%
e1 temp @1 -> beginCopying e1 @1
$@ backToFirstC 01 -> backToFirstC $@ 01
0@ goToPlaceForDivider @B -> backToFirstC 0@ @D
e@ backToDFromLeft e1 -> backToDFromLeft e@ e1
@@ restoreCD 11 -> restoreCD @@ 11
00 checkCD $D -> checkCD 00 $D
0& findBlank e1 -> temp 0& e1
$& backToSharpZero @D -> backToSharpZero $& @D
eX copyOne $B -> backToSharpOne eX $1
@C backToSharpZero eD -> backToSharpZero @C eD
$X backToDFromRight @E -> backToDFromRight $X @E
10 backToSharpOne @0 -> backToSharpOne 10 @0
@C eraseC e0 -> eraseC @C eB
10 backToSharpOne @1 -> backToSharpOne 10 @1
1$ backToFirstC 01 -> backToFirstC 1$ 01
@% gotoMark 0E -> gotoDecC @% 0E
0% findBlank $B -> FINAL 0% $B
$% replaceWithBlanks 0@ -> backToDFromRight $% 0@
1D restoreCD 0% -> restoreCD 1D 00
0@ backToSharpZero @D -> backToSharpZero 0@ @D
00 checkEForZero @B -> stop 00 @B
0E beginCopying 1B -> backToStart 0E 1C
@X eraseC 10 -> eraseC @X 1B
1E backToFirstC @0 -> backToFirstC 1E @0
01 backToSharpOne 1X -> backToSharpOne 01 1X
@$ backToFirstC 10 -> backToFirstC @$ 10
e% backToSharpOne e1 -> backToSharpOne e% e1
$0 backToDFromLeft 01 -> backToDFromLeft $0 01
1C backToSharpOne eC -> backToSharpOne 1C eC
1C checkCD 10 -> checkCD 1C 10
1% initDividerByTwo 00 -> backToD 1% 01
eC restoreCD 0& -> restoreCD eC 01
0@ restoreCD 1& -> restoreCD 0@ 11
$1 nullifier eB -> initDivider $1 eE
@1 gotoDecC eD -> dec @1 eD
0E backToSharpOne 1D -> backToSharpOne 0E 1D
1C backToSharpOne 10 -> backToSharpOne 1C 10
e0 eraseC 0C -> backToStart e0 0X
@D findBlank 0B -> FINAL @D 0B
1C gotoDecC 01 -> gotoDecC 1C 01
1$ backToSharpZero @C -> backToSharpZero 1$ @C
$$ prepEraseC @1 -> prepEraseC $$ @1
$@ backToDFromLeft 01 -> backToDFromLeft $@ 01
0D findZero @1 -> beginCopying 0D @1
0$ backToFirstC @0 -> backToFirstC 0$ @0
0% gotoDecC 11 -> gotoDecC 0% 11
eD checkEForZero $B -> stop eD $B
1X gotoLastE @@ -> dec 1X @@
1C copyZero eB -> backToSharpZero 1C e0
e& copyZero 0B -> backToSharpZero e& 00
1$ backToSharpOne e0 -> backToSharpOne 1$ e0
@& backToSharpZero @1 -> backToSharpZero @& @1
$& restoreCD @1 -> restoreCD $& @1
@% searchZero e0 -> backToDFromLeft @% e%
1D restoreCD 10 -> restoreCD 1D 10
0X initDividerByTwo $0 -> backToD 0X $1
$@ backToDFromLeft 1% -> backToDFromLeft $@ 1%
1D restoreCD 11 -> restoreCD 1D 11
00 backToDFromLeft @% -> backToDFromLeft 00 @%
@$ backToDFromRight eE -> backToDFromRight @$ eE
e$ eraseE 10 -> eraseE e$ 1B
$# eraseE 1E -> prepEraseC $# 1E
@X backToSharpZero eX -> backToSharpZero @X eX
1X copyZero $B -> backToSharpZero 1X $0
$C prepEraseC $D -> eraseC $C $D
$B backToDFromLeft 1% -> backToDFromLeft $B 1%
1C dec $1 -> gotoMark 1C $0
@0 initDividerByTwo e0 -> backToD @0 e1
@X beginCopying 1B -> backToStart @X 1C
1B dec 10 -> dec 1B 11
eE findBlank $B -> FINAL eE $B
e0 gotoDecC 0D -> dec e0 0D
1C gotoDecC 0D -> dec 1C 0D
1E nullifier $B -> initDivider 1E $E
e& beginCopying 1B -> backToStart e& 1C
@B checkCD 00 -> checkCD @B 00
1$ incD 01 -> incD 1$ 00
0C incD @0 -> checkCD 0C @1
$B gotoDecC e1 -> gotoDecC $B e1
0D gotoMark $E -> gotoDecC 0D $E
@% backToDFromRight $E -> backToDFromRight @% $E
e# backToStart $0 -> backToStart e# $0
@% backToSharpZero @1 -> backToSharpZero @% @1
1D checkEForZero eB -> stop 1D eB
$E backToDFromLeft 00 -> backToDFromLeft $E 00
@1 backToSharpOne 01 -> backToSharpOne @1 01
0B copyOne eB -> backToSharpOne 0B e1
0# backToD 01 -> backToD 0# 01
@E restoreCD e% -> restoreCD @E e0
@$ eraseC 11 -> eraseC @$ 1B
$B gotoDecC 11 -> gotoDecC $B 11
e# backToDFromRight 0B -> backToDFromRight e# 0B
$B eraseC eC -> backToStart $B eX
$D backToSharpZero 00 -> backToSharpZero $D 00
eE checkCD 0D -> checkCD eE 0D
$@ backToSharpZero $E -> backToSharpZero $@ $E
0D incD 00 -> checkCD 0D 01
1D beginCopying $B -> backToStart 1D $C
0% backToDFromLeft 0% -> backToDFromLeft 0% 0%
eE checkCD $1 -> checkCD eE $1
gotoLastE @1 -> @1 gotoLastE
1# eraseC @0 -> eraseC 1# @B
1C backToSharpOne 0X -> backToSharpOne 1C 0X
eD backToSharpZero $X -> backToSharpZero eD $X
1# temp $0 -> beginCopying 1# $0
$X backToDFromLeft @D -> searchNextBit $X @D
@0 backToSharpZero $C -> backToSharpZero @0 $C
0C backToDFromRight @0 -> backToDFromRight 0C @0
$$ initDividerByTwo @0 -> backToD $$ @1
@# findBlank @B -> FINAL @# @B
01 restoreCD $% -> restoreCD 01 $0
e1 backToDFromLeft $1 -> backToDFromLeft e1 $1
$C initDivider 10 -> initDividerByTwo $C 10
$X checkCD e1 -> checkCD $X e1
1@ initDividerByTwo $0 -> backToD 1@ $1
@C backToSharpOne @1 -> backToSharpOne @C @1
@0 initDivider e0 -> initDividerByTwo @0 e0
@% backToSharpOne 0E -> backToSharpOne @% 0E
e1 backToSharpOne eE -> backToSharpOne e1 eE
e% backToDFromLeft 01 -> backToDFromLeft e% 01
0B prepEraseC 01 -> prepEraseC 0B 01
$@ replaceWithBlanks e@ -> backToDFromRight $@ e@
@@ backToStart 00 -> backToStart @@ 00
@C gotoMark eE -> gotoDecC @C eE
@X gotoMark @E -> gotoDecC @X @E
0# searchZero $0 -> backToDFromLeft 0# $%
$@ goToPlaceForDivider $B -> backToFirstC $@ $D
1C findBlank $1 -> temp 1C $1
@# eraseE $E -> prepEraseC @# $E
e@ backToDFromRight 0E -> backToDFromRight e@ 0E
@X incD 01 -> incD @X 00
e0 gotoDecC e1 -> gotoDecC e0 e1
1# backToSharpZero eE -> backToSharpZero 1# eE
$# restoreCD 0% -> restoreCD $# 00
00 gotoMark @0 -> gotoMark 00 @0
10 backToDFromRight @1 -> backToDFromRight 10 @1
eB searchOne 11 -> backToDFromLeft eB 1&
0& gotoDecC eD -> dec 0& eD
@D dec 00 -> dec @D 01
0% checkEForZero 0B -> stop 0% 0B
11 incD e0 -> checkCD 11 e1
$C gotoDecC $1 -> gotoDecC $C $1
@E goToPlaceForDivider @B -> backToFirstC @E @D
@0 backToSharpZero e1 -> backToSharpZero @0 e1
$X backToStart 01 -> backToStart $X 01
@D backToDFromLeft 01 -> backToDFromLeft @D 01
1& restoreCD e& -> restoreCD 1& e1
eC backToSharpOne @E -> backToSharpOne eC @E
@# copyZero @B -> backToSharpZero @# @0
0@ backToDFromRight 0B -> backToDFromRight 0@ 0B
@X replaceWithBlanks @@ -> backToDFromRight @X @@
$1 restoreCD @1 -> restoreCD $1 @1
1# backToFirstC 00 -> backToFirstC 1# 00
eD eraseC 01 -> eraseC eD 0B
$@ gotoMark 11 -> gotoMark $@ 11
@X backToDFromLeft $1 -> backToDFromLeft @X $1
0$ initDivider 00 -> initDividerByTwo 0$ 00
$0 backToFirstC 00 -> backToFirstC $0 00
e@ backToDFromLeft e% -> backToDFromLeft e@ e%
@D temp e0 -> beginCopying @D e0
1# massErase 1@ -> eraseE 1# 1@
$$ gotoDecC 10 -> gotoDecC $$ 10
0% replaceWithBlanks 1@ -> backToDFromRight 0% 1@
1$ findZero @1 -> beginCopying 1$ @1
@$ incD 11 -> incD @$ 10
$# backToSharpOne @C -> backToSharpOne $# @C
$1 searchNextBit 11 -> searchNextBit $1 11
0C gotoLastE 1@ -> dec 0C 1@
eE gotoDecC e1 -> gotoDecC eE e1
@@ backToSharpZero 0X -> backToSharpZero @@ 0X
@% replaceWithBlanks @@ -> backToDFromRight @% @@
eD gotoMark 0E -> gotoDecC eD 0E
e0 backToStart e1 -> backToStart e0 e1
0B backToD 00 -> backToD 0B 00
e1 copyOne eB -> backToSharpOne e1 e1
0E eraseE @0 -> eraseE 0E @B
$D eraseE @E -> prepEraseC $D @E
$% findBlank 00 -> temp $% 00
@1 temp 10 -> beginCopying @1 10
@1 temp e0 -> beginCopying @1 e0
1E eraseE 10 -> eraseE 1E 1B
1@ restoreCD $0 -> restoreCD 1@ $0
0# dec e1 -> gotoMark 0# e0
e# checkCD e1 -> checkCD e# e1
eE gotoDecC @D -> dec eE @D
eB findZero 11 -> beginCopying eB 11
1C backToSharpOne @C -> backToSharpOne 1C @C
e1 backToSharpOne $0 -> backToSharpOne e1 $0
e& gotoMark 11 -> gotoMark e& 11
$$ backToSharpZero @C -> backToSharpZero $$ @C
$B eraseC 0C -> backToStart $B 0X
01 searchOne @0 -> restoreCD 01 @0
1% replaceWithBlanks e@ -> backToDFromRight 1% e@
1& backToDFromRight $0 -> backToDFromRight 1& $0
e% backToSharpZero $1 -> backToSharpZero e% $1
e1 backToSharpOne e0 -> backToSharpOne e1 e0
0C backToDFromLeft @% -> backToDFromLeft 0C @%
@& backToSharpZero eD -> backToSharpZero @& eD
0@ restoreCD 0D -> restoreCD 0@ 0D
1% restoreCD 0D -> restoreCD 1% 0D
1& backToStart $0 -> backToStart 1& $0
@1 restoreCD 0% -> restoreCD @1 00
@E dec 11 -> gotoMark @E 10
$X backToD $0 -> backToD $X $0
1@ backToDFromRight @B -> backToDFromRight 1@ @B
@1 eraseC $1 -> eraseC @1 $B
backToDFromRight 0D -> 0D createCopy
00 backToDFromLeft 0& -> backToDFromLeft 00 0&
1@ backToSharpZero 10 -> backToSharpZero 1@ 10
eD prepEraseC 0D -> eraseC eD 0D
0% restoreCD $D -> restoreCD 0% $D
1$ backToSharpOne eD -> backToSharpOne 1$ eD
e# gotoLastE $@ -> dec e# $@
@@ backToDFromRight @E -> backToDFromRight @@ @E
10 backToStart 00 -> backToStart 10 00
$0 goToPlaceForDivider $B -> backToFirstC $0 $D
$D forwardToLastD 1E -> incD $D 1E
$D findBlank $1 -> temp $D $1
$1 backToStart $1 -> backToStart $1 $1
0& backToStart @0 -> backToStart 0& @0
1# backToSharpZero eD -> backToSharpZero 1# eD
@D searchNextBit e1 -> searchNextBit @D e1
$# backToSharpOne eD -> backToSharpOne $# eD
@% eraseE $0 -> eraseE @% $B
1E copyOne $B -> backToSharpOne 1E $1
e# temp @0 -> beginCopying e# @0
$& backToSharpZero @X -> backToSharpZero $& @X
1& gotoMark 0E -> gotoDecC 1& 0E
1X backToSharpOne 00 -> backToSharpOne 1X 00
1X findZero e1 -> beginCopying 1X e1
eD backToD e1 -> backToD eD e1
0D eraseE 11 -> eraseE 0D 1B
e0 backToSharpOne @0 -> backToSharpOne e0 @0
eB gotoLastE 1@ -> dec eB 1@
0$ temp @0 -> beginCopying 0$ @0
1X backToDFromRight 11 -> backToDFromRight 1X 11
$E initDividerByTwo 00 -> backToD $E 01
0$ restoreCD 1D -> restoreCD 0$ 1D
1# backToDFromLeft 1% -> backToDFromLeft 1# 1%
e@ searchZero @0 -> backToDFromLeft e@ @%
$# backToD e0 -> backToD $# e0
0& eraseE 1E -> prepEraseC 0& 1E
@% searchOne @0 -> restoreCD @% @0
e# backToSharpZero $0 -> backToSharpZero e# $0
0% gotoMark @1 -> gotoMark 0% @1
$D backToD 11 -> backToD $D 11
1% backToStart e1 -> backToStart 1% e1
0@ backToSharpZero e0 -> backToSharpZero 0@ e0
@0 backToSharpOne $X -> backToSharpOne @0 $X
@C backToStart 11 -> backToStart @C 11
01 initDivider e0 -> initDividerByTwo 01 e0
e& replaceWithBlanks 0@ -> backToDFromRight e& 0@
e0 restoreCD 0& -> restoreCD e0 01
1C backToD @1 -> backToD 1C @1
$@ gotoDecC @1 -> gotoDecC $@ @1
0E restoreCD $% -> restoreCD 0E $0
1X checkEForZero @B -> stop 1X @B
0E initDividerByTwo $0 -> backToD 0E $1
@B replaceWithBlanks $@ -> backToDFromRight @B $@
eD checkCD 01 -> checkCD eD 01
1& eraseE @1 -> eraseE 1& @B
11 checkCD $0 -> checkCD 11 $0
1% backToSharpZero 1X -> backToSharpZero 1% 1X
$X backToSharpOne $D -> backToSharpOne $X $D
e% dec e1 -> gotoMark e% e0
0& findZero $1 -> beginCopying 0& $1
eB backToDFromLeft $0 -> backToDFromLeft eB $0
1X searchZero @1 -> restoreCD 1X @1
$C copyZero 0B -> backToSharpZero $C 00
@C beginCopying @B -> backToStart @C @C
1B prepEraseC $0 -> prepEraseC 1B $0
$C nullifier 1B -> initDivider $C 1E
@X backToDFromRight 01 -> backToDFromRight @X 01
e$ backToSharpOne @C -> backToSharpOne e$ @C
0@ backToStart @0 -> backToStart 0@ @0
eB backToSharpOne e1 -> backToSharpOne eB e1
@1 backToSharpOne 1E -> backToSharpOne @1 1E
01 backToDFromLeft @& -> backToDFromLeft 01 @&
eC prepEraseC eD -> eraseC eC eD
@& forwardToLastD eE -> incD @& eE
1@ eraseC $C -> backToStart 1@ $X
eC gotoMark e0 -> gotoMark eC e0
0& incD 11 -> incD 0& 10
eX temp $1 -> beginCopying eX $1
e$ gotoMark 10 -> gotoMark e$ 10
0% findBlank @B -> FINAL 0% @B
00 searchZero $1 -> restoreCD 00 $1
1C backToFirstC e1 -> backToFirstC 1C e1
@C findBlank e1 -> temp @C e1
@1 backToSharpZero 1C -> backToSharpZero @1 1C
@$ massErase 1@ -> eraseE @$ 1@
eX backToD 00 -> backToD eX 00
$E initDividerByTwo 10 -> backToD $E 11
00 findBlank @B -> FINAL 00 @B
$E restoreCD 1% -> restoreCD $E 10
1E eraseC @1 -> eraseC 1E @B
eB dec @1 -> gotoMark eB @0
0% searchNextBit e0 -> searchNextBit 0% e0
@% backToDFromLeft $D -> searchNextBit @% $D
@D copyOne $B -> backToSharpOne @D $1
1& checkCD 10 -> checkCD 1& 10
eD backToSharpOne $E -> backToSharpOne eD $E
0@ prepEraseC $0 -> prepEraseC 0@ $0
e% eraseC e1 -> eraseC e% eB
e1 backToDFromRight $E -> backToDFromRight e1 $E
10 prepEraseC $1 -> prepEraseC 10 $1
1C backToSharpOne @D -> backToSharpOne 1C @D
eB backToSharpOne 10 -> backToSharpOne eB 10
$$ gotoMark $E -> gotoDecC $$ $E
e0 copyOne @B -> backToSharpOne e0 @1
@1 backToDFromRight 00 -> backToDFromRight @1 00
eB backToDFromLeft @% -> backToDFromLeft eB @%
0E prepEraseC @D -> eraseC 0E @D
@E eraseE 01 -> eraseE @E 0B
$C backToSharpOne eX -> backToSharpOne $C eX
$B backToSharpOne $1 -> backToSharpOne $B $1
@% initDivider 00 -> initDividerByTwo @% 00
0B backToSharpOne 01 -> backToSharpOne 0B 01
1X backToSharpZero 0C -> backToSharpZero 1X 0C
0C restoreCD eD -> restoreCD 0C eD
@X backToDFromLeft e% -> backToDFromLeft @X e%
eB backToSharpZero @E -> backToSharpZero eB @E
0# restoreCD 0& -> restoreCD 0# 01
11 findBlank $0 -> temp 11 $0
1& searchZero @1 -> restoreCD 1& @1
10 findBlank e1 -> temp 10 e1
0& restoreCD 0D -> restoreCD 0& 0D
0E replaceWithBlanks @@ -> backToDFromRight 0E @@
@1 backToStart 11 -> backToStart @1 11
1C dec @1 -> gotoMark 1C @0
@E restoreCD 0D -> restoreCD @E 0D
$% findZero @1 -> beginCopying $% @1
e@ restoreCD e& -> restoreCD e@ e1
1& backToSharpOne @1 -> backToSharpOne 1& @1
eB backToSharpZero $C -> backToSharpZero eB $C
01 findZero e1 -> beginCopying 01 e1
0% incD 01 -> incD 0% 00
11 backToSharpZero @D -> backToSharpZero 11 @D
1B searchNextBit 10 -> searchNextBit 1B 10
01 backToSharpOne eE -> backToSharpOne 01 eE
0$ incD $1 -> incD 0$ $0
0D searchOne 11 -> backToDFromLeft 0D 1&
0& copyZero $B -> backToSharpZero 0& $0
1C temp @1 -> beginCopying 1C @1
e% temp 01 -> beginCopying e% 01
01 replaceWithBlanks 1@ -> backToDFromRight 01 1@
$E dec 01 -> gotoMark $E 00
eE gotoDecC 0D -> dec eE 0D
1# backToDFromLeft @D -> searchNextBit 1# @D
0D backToSharpOne 1C -> backToSharpOne 0D 1C
$0 temp e0 -> beginCopying $0 e0
1@ beginCopying eB -> backToStart 1@ eC
e# backToDFromLeft @& -> backToDFromLeft e# @&
@D checkCD @1 -> checkCD @D @1
$D searchNextBit @1 -> searchNextBit $D @1
$D backToDFromLeft 10 -> backToDFromLeft $D 10
$C dec 10 -> dec $C 11
0D backToSharpOne 1D -> backToSharpOne 0D 1D
e# searchOne e1 -> backToDFromLeft e# e&
0B backToDFromLeft @& -> backToDFromLeft 0B @&
@& incD e1 -> incD @& e0
eB backToStart $0 -> backToStart eB $0
0B backToFirstC @0 -> backToFirstC 0B @0
@0 dec @1 -> gotoMark @0 @0
1# checkCD @1 -> checkCD 1# @1
e& backToSharpOne e0 -> backToSharpOne e& e0
@@ backToSharpOne eE -> backToSharpOne @@ eE
0@ gotoDecC e1 -> gotoDecC 0@ e1
eE backToDFromLeft e1 -> backToDFromLeft eE e1
$$ searchNextBit 10 -> searchNextBit $$ 10
$@ searchZero $1 -> restoreCD $@ $1
1E copyZero 0B -> backToSharpZero 1E 00
0B restoreCD @1 -> restoreCD 0B @1
1B gotoDecC @1 -> gotoDecC 1B @1
1D initDivider @0 -> initDividerByTwo 1D @0
$0 backToSharpOne 1D -> backToSharpOne $0 1D
$X replaceWithBlanks @@ -> backToDFromRight $X @@
$D eraseC @0 -> eraseC $D @B
@@ searchNextBit 10 -> searchNextBit @@ 10
$B backToSharpZero 1D -> backToSharpZero $B 1D
e0 eraseC 00 -> eraseC e0 0B
eD backToSharpOne 0C -> backToSharpOne eD 0C
@% backToStart @0 -> backToStart @% @0
@$ backToSharpOne e0 -> backToSharpOne @$ e0
0# dec e0 -> dec 0# e1
@& backToDFromRight 1B -> backToDFromRight @& 1B
0X backToFirstC 10 -> backToFirstC 0X 10
$1 backToD e0 -> backToD $1 e0
$@ searchNextBit e1 -> searchNextBit $@ e1
11 backToDFromRight 11 -> backToDFromRight 11 11
e& backToStart 01 -> backToStart e& 01
$# eraseC @1 -> eraseC $# @B
0# backToDFromLeft @1 -> backToDFromLeft 0# @1
1D backToDFromRight 01 -> backToDFromRight 1D 01
$0 backToSharpOne @C -> backToSharpOne $0 @C
backToDAfterInc 00 -> 00 backToDAfterInc
forwardToLastD 10 -> 10 forwardToLastD
@E temp 11 -> beginCopying @E 11
0X incD $0 -> checkCD 0X $1
0& checkCD @0 -> checkCD 0& @0
1X searchNextBit $1 -> searchNextBit 1X $1
e# backToD 00 -> backToD e# 00
0& backToSharpOne @1 -> backToSharpOne 0& @1
$C goToPlaceForDivider $B -> backToFirstC $C $D
11 eraseE 00 -> eraseE 11 0B
1E backToDFromRight @1 -> backToDFromRight 1E @1
1& backToDFromRight @B -> backToDFromRight 1& @B
1& eraseE 11 -> eraseE 1& 1B
$D prepEraseC 11 -> prepEraseC $D 11
0& backToDFromRight eB -> backToDFromRight 0& eB
e0 gotoDecC @0 -> gotoDecC e0 @0
e$ temp 10 -> beginCopying e$ 10
@$ prepEraseC 11 -> prepEraseC @$ 11
0@ eraseE $1 -> eraseE 0@ $B
0$ searchZero 01 -> restoreCD 0$ 01
00 gotoMark 1E -> gotoDecC 00 1E
e0 backToD 00 -> backToD e0 00
$0 gotoDecC e1 -> gotoDecC $0 e1
$@ findBlank 11 -> temp $@ 11
e@ gotoMark 00 -> gotoMark e@ 00
$D restoreCD 0D -> restoreCD $D 0D
@B checkCD $D -> checkCD @B $D
1% searchNextBit @1 -> searchNextBit 1% @1
0@ findBlank @B -> FINAL 0@ @B
1@ findBlank 10 -> temp 1@ 10
eX searchOne 00 -> restoreCD eX 00
0# eraseC 00 -> eraseC 0# 0B
eE checkCD @1 -> checkCD eE @1
10 backToD 00 -> backToD 10 00
$$ restoreCD e1 -> restoreCD $$ e1
1# backToSharpOne eX -> backToSharpOne 1# eX
eE copyOne $B -> backToSharpOne eE $1
$& dec @0 -> dec $& @1
@0 searchOne 00 -> restoreCD @0 00
$E findBlank @B -> FINAL $E @B
$& searchOne @0 -> restoreCD $& @0
0$ checkCD @0 -> checkCD 0$ @0
eX restoreCD 1% -> restoreCD eX 10
$0 eraseE 11 -> eraseE $0 1B
1# nullifier @B -> initDivider 1# @E
10 temp @0 -> beginCopying 10 @0
$# FINAL -> FINAL $ FINAL
1# backToSharpZero @0 -> backToSharpZero 1# @0
1D gotoDecC 01 -> gotoDecC 1D 01
1% backToDFromLeft e0 -> backToDFromLeft 1% e0
$C backToDFromLeft 0& -> backToDFromLeft $C 0&
e# backToSharpZero eD -> backToSharpZero e# eD
e% backToFirstC 11 -> backToFirstC e% 11
01 gotoMark $1 -> gotoMark 01 $1
e& backToD $0 -> backToD e& $0
@$ prepEraseC eD -> eraseC @$ eD
1& FINAL -> FINAL 1 FINAL
@0 backToFirstC 10 -> backToFirstC @0 10
10 backToSharpZero 11 -> backToSharpZero 10 11
1B goToPlaceForDivider $B -> backToFirstC 1B $D
$D eraseE e1 -> eraseE $D eB
00 backToSharpZero eC -> backToSharpZero 00 eC
1E incD 00 -> checkCD 1E 01
1E eraseC $0 -> eraseC 1E $B
eX goToPlaceForDivider 0B -> backToFirstC eX 0D
$E temp e1 -> beginCopying $E e1
$% temp 11 -> beginCopying $% 11
@% gotoMark $0 -> gotoMark @% $0
eX restoreCD eD -> restoreCD eX eD
00 backToDFromLeft $1 -> backToDFromLeft 00 $1
0# searchZero $1 -> restoreCD 0# $1
@E searchOne e0 -> restoreCD @E e0
1$ backToSharpOne eC -> backToSharpOne 1$ eC
$1 backToDFromLeft e% -> backToDFromLeft $1 e%
eC eraseC eC -> backToStart eC eX
1D searchNextBit 10 -> searchNextBit 1D 10
e& backToD 10 -> backToD e& 10
$% backToSharpZero e0 -> backToSharpZero $% e0
@0 backToStart 10 -> backToStart @0 10
@B copyZero eB -> backToSharpZero @B e0
$1 initDivider $0 -> initDividerByTwo $1 $0
eE dec 00 -> dec eE 01
$& eraseC @0 -> eraseC $& @B
10 eraseE $E -> prepEraseC 10 $E
e% gotoMark 01 -> gotoMark e% 01
eX searchZero e0 -> backToDFromLeft eX e%
eB backToFirstC @1 -> backToFirstC eB @1
1X backToSharpZero $0 -> backToSharpZero 1X $0
@C backToStart @0 -> backToStart @C @0
0& beginCopying @B -> backToStart 0& @C
e@ forwardToLastD eE -> incD e@ eE
0D backToDFromRight 11 -> backToDFromRight 0D 11
eE beginCopying @B -> backToStart eE @C
1X backToD 10 -> backToD 1X 10
0D searchNextBit @1 -> searchNextBit 0D @1
11 checkEForZero $B -> stop 11 $B
@D incD e0 -> checkCD @D e1
1& checkCD 00 -> checkCD 1& 00
e1 backToSharpOne @E -> backToSharpOne e1 @E
e# backToSharpOne 0E -> backToSharpOne e# 0E
@@ backToDFromRight 0B -> backToDFromRight @@ 0B
0% gotoMark eE -> gotoDecC 0% eE
01 backToFirstC @1 -> backToFirstC 01 @1
1$ backToStart e1 -> backToStart 1$ e1
e0 copyOne eB -> backToSharpOne e0 e1
0% backToDFromRight 1B -> backToDFromRight 0% 1B
$@ eraseE 01 -> eraseE $@ 0B
1D eraseE 1E -> prepEraseC 1D 1E
searchOne $& -> $& searchOne
1X searchOne @0 -> restoreCD 1X @0
@# backToSharpZero 10 -> backToSharpZero @# 10
@@ restoreCD @D -> restoreCD @@ @D
1& gotoMark 1E -> gotoDecC 1& 1E
0& eraseE e1 -> eraseE 0& eB
$D searchZero 10 -> backToDFromLeft $D 1%
$0 copyZero 0B -> backToSharpZero $0 00
$& backToDFromLeft @D -> searchNextBit $& @D
$C initDividerByTwo e0 -> backToD $C e1
@% gotoMark 10 -> gotoMark @% 10
0B backToSharpZero 1E -> backToSharpZero 0B 1E
1E checkEForZero 0B -> stop 1E 0B
$B restoreCD $& -> restoreCD $B $1
$# checkCD $0 -> checkCD $# $0
$D backToSharpZero e0 -> backToSharpZero $D e0
0C incD 10 -> checkCD 0C 11
$C prepEraseC e0 -> prepEraseC $C e0
@D searchZero 10 -> backToDFromLeft @D 1%
@E findZero 01 -> beginCopying @E 01
0B eraseC $C -> backToStart 0B $X
$& massErase 0@ -> eraseE $& 0@
$% backToFirstC e1 -> backToFirstC $% e1
1X copyZero @B -> backToSharpZero 1X @0
@D restoreCD e& -> restoreCD @D e1
@1 dec 11 -> gotoMark @1 10
1# backToSharpOne e1 -> backToSharpOne 1# e1
1% eraseC e0 -> eraseC 1% eB
1# backToFirstC 10 -> backToFirstC 1# 10
backToStart 0$ -> 0$ createCopy
1% restoreCD @D -> restoreCD 1% @D
$% forwardToLastD eE -> incD $% eE
1# eraseC eC -> backToStart 1# eX
1E initDivider 00 -> initDividerByTwo 1E 00
eC temp $1 -> beginCopying eC $1
1E initDividerByTwo @0 -> backToD 1E @1
e& backToDFromRight eE -> backToDFromRight e& eE
eD backToStart 10 -> backToStart eD 10
01 nullifier eB -> initDivider 01 eE
@$ backToFirstC $1 -> backToFirstC @$ $1
$@ restoreCD $D -> restoreCD $@ $D
1@ backToDFromRight $B -> backToDFromRight 1@ $B
@1 backToD @0 -> backToD @1 @0
1$ restoreCD 00 -> restoreCD 1$ 00
0X backToSharpZero 1X -> backToSharpZero 0X 1X
$0 eraseC 00 -> eraseC $0 0B
@C backToSharpZero e0 -> backToSharpZero @C e0
1E findBlank 01 -> temp 1E 01
@& eraseE 11 -> eraseE @& 1B
$0 prepEraseC e0 -> prepEraseC $0 e0
@# findBlank $1 -> temp @# $1
eC backToSharpZero @E -> backToSharpZero eC @E
0$ backToSharpOne 0X -> backToSharpOne 0$ 0X
eB backToDFromLeft 1% -> backToDFromLeft eB 1%
1$ gotoMark @E -> gotoDecC 1$ @E
@$ prepEraseC 00 -> prepEraseC @$ 00
$@ backToSharpOne 01 -> backToSharpOne $@ 01
@& dec @0 -> dec @& @1
@0 backToSharpOne 0D -> backToSharpOne @0 0D
$& findBlank 00 -> temp $& 00
1% backToDFromLeft e% -> backToDFromLeft 1% e%
0D backToDFromLeft eD -> searchNextBit 0D eD
1% gotoMark @E -> gotoDecC 1% @E
$@ backToD 01 -> backToD $@ 01
$# prepEraseC $0 -> prepEraseC $# $0
0D searchOne e1 -> backToDFromLeft 0D e&
eD gotoDecC 11 -> gotoDecC eD 11
0@ backToDFromLeft 1% -> backToDFromLeft 0@ 1%
eqCD eD -> eD FINAL
01 eraseC $0 -> eraseC 01 $B
0# backToDFromRight e0 -> backToDFromRight 0# e0
00 incD e1 -> incD 00 e0
10 replaceWithBlanks 1@ -> backToDFromRight 10 1@
0# initDividerByTwo $0 -> backToD 0# $1
e@ backToD $0 -> backToD e@ $0
e$ initDivider 10 -> initDividerByTwo e$ 10
@& backToDFromRight 0E -> backToDFromRight @& 0E
11 restoreCD @1 -> restoreCD 11 @1
e@ backToStart @1 -> backToStart e@ @1
$% backToStart $0 -> backToStart $% $0
1% backToSharpZero 11 -> backToSharpZero 1% 11
0B searchOne $1 -> backToDFromLeft 0B $&
1X backToDFromRight 0E -> backToDFromRight 1X 0E
@% temp @1 -> beginCopying @% @1
@0 goToPlaceForDivider eB -> backToFirstC @0 eD
@D eraseE @0 -> eraseE @D @B
@$ replaceWithBlanks $@ -> backToDFromRight @$ $@
@C incD e0 -> checkCD @C e1
$X backToSharpZero 1E -> backToSharpZero $X 1E
@1 forwardToLastD 1E -> incD @1 1E
0C restoreCD @0 -> restoreCD 0C @0
@1 backToSharpZero $X -> backToSharpZero @1 $X
$# eraseC 0C -> backToStart $# 0X
eX backToDFromLeft $0 -> backToDFromLeft eX $0
@C findBlank @1 -> temp @C @1
@& backToStart 11 -> backToStart @& 11
1$ backToDFromRight 1E -> backToDFromRight 1$ 1E
@0 prepEraseC eD -> eraseC @0 eD
eB checkCD $0 -> checkCD eB $0
0E searchNextBit @1 -> searchNextBit 0E @1
$$ backToSharpZero @0 -> backToSharpZero $$ @0
11 backToSharpZero eC -> backToSharpZero 11 eC
eE replaceWithBlanks @@ -> backToDFromRight eE @@
e@ searchOne e0 -> restoreCD e@ e0
@# eraseE 1E -> prepEraseC @# 1E
1X backToDFromRight 0B -> backToDFromRight 1X 0B
e& prepEraseC 00 -> prepEraseC e& 00
eX backToSharpZero @C -> backToSharpZero eX @C
$@ eraseE $0 -> eraseE $@ $B
@E backToFirstC $1 -> backToFirstC @E $1
1C dec 01 -> gotoMark 1C 00
$D searchZero 00 -> backToDFromLeft $D 0%
0B restoreCD e& -> restoreCD 0B e1
$& restoreCD 11 -> restoreCD $& 11
@B backToSharpZero 10 -> backToSharpZero @B 10
e% forwardToLastD $E -> incD e% $E
$X eraseC 10 -> eraseC $X 1B
eB backToSharpOne $C -> backToSharpOne eB $C
@B backToSharpZero @C -> backToSharpZero @B @C
replaceWithBlanks @1 -> @B replaceWithBlanks
$# prepEraseC @1 -> prepEraseC $# @1
1D eraseE e0 -> eraseE 1D eB
@$ backToSharpOne @1 -> backToSharpOne @$ @1
00 checkCD $0 -> checkCD 00 $0
@& forwardToLastD @E -> incD @& @E
0D temp @0 -> beginCopying 0D @0
$$ eraseC eC -> backToStart $$ eX
@B searchZero 01 -> restoreCD @B 01
1@ gotoMark 0E -> gotoDecC 1@ 0E
0@ backToDFromLeft 01 -> backToDFromLeft 0@ 01
10 temp 10 -> beginCopying 10 10
0$ restoreCD 11 -> restoreCD 0$ 11
0% checkCD @1 -> checkCD 0% @1
@# incD 11 -> incD @# 10
1C searchNextBit 10 -> searchNextBit 1C 10
$@ restoreCD 1& -> restoreCD $@ 11
0D dec e0 -> dec 0D e1
e$ backToDFromRight $B -> backToDFromRight e$ $B
@& gotoLastE @@ -> dec @& @@
1X findBlank $0 -> temp 1X $0
$& checkCD eD -> checkCD $& eD
$B backToSharpOne $0 -> backToSharpOne $B $0
1# eraseE 01 -> eraseE 1# 0B
@E temp $1 -> beginCopying @E $1
1@ findBlank 1B -> FINAL 1@ 1B
eB backToFirstC $1 -> backToFirstC eB $1
e@ searchNextBit $1 -> searchNextBit e@ $1
e1 backToSharpZero 1C -> backToSharpZero e1 1C
1B initDivider 10 -> initDividerByTwo 1B 10
0# checkCD 1D -> checkCD 0# 1D
@0 gotoMark 1E -> gotoDecC @0 1E
0# backToSharpZero @E -> backToSharpZero 0# @E
0# backToSharpOne eC -> backToSharpOne 0# eC
e% backToSharpOne $X -> backToSharpOne e% $X
e@ findZero e1 -> beginCopying e@ e1
backToDAfterInc 1D -> 1D createCopy
0C restoreCD $% -> restoreCD 0C $0
eE incD 11 -> incD eE 10
0& checkEForZero $B -> stop 0& $B
0C gotoMark 01 -> gotoMark 0C 01
0D gotoDecC $0 -> gotoDecC 0D $0
eC backToDFromRight eB -> backToDFromRight eC eB
@& gotoMark 10 -> gotoMark @& 10
1D backToD @1 -> backToD 1D @1
1$ eraseE @1 -> eraseE 1$ @B
0% gotoMark e0 -> gotoMark 0% e0
e@ eraseC e0 -> eraseC e@ eB
1C backToStart $0 -> backToStart 1C $0
$$ eraseE 00 -> eraseE $$ 0B
@1 searchNextBit e1 -> searchNextBit @1 e1
$B forwardToLastD 1E -> incD $B 1E
00 prepEraseC $1 -> prepEraseC 00 $1
1C backToSharpOne @1 -> backToSharpOne 1C @1
@X backToFirstC @1 -> backToFirstC @X @1
0D eraseE 10 -> eraseE 0D 1B
$1 searchNextBit @1 -> searchNextBit $1 @1
$& searchNextBit e0 -> searchNextBit $& e0
01 checkEForZero @B -> stop 01 @B
1% backToDFromRight 11 -> backToDFromRight 1% 11
1@ prepEraseC $0 -> prepEraseC 1@ $0
0X backToSharpOne $E -> backToSharpOne 0X $E
0X initDividerByTwo e0 -> backToD 0X e1
0B gotoDecC $1 -> gotoDecC 0B $1
1$ dec e0 -> dec 1$ e1
@@ dec 01 -> gotoMark @@ 00
eC eraseC 01 -> eraseC eC 0B
$0 incD 00 -> checkCD $0 01
00 eraseE e0 -> eraseE 00 eB
eC nullifier $B -> initDivider eC $E
$B backToDFromRight e1 -> backToDFromRight $B e1
1C searchNextBit @1 -> searchNextBit 1C @1
@0 backToFirstC 01 -> backToFirstC @0 01
e0 checkEForZero eB -> stop e0 eB
$% prepEraseC eD -> eraseC $% eD
0C eraseE e0 -> eraseE 0C eB
0C backToDFromRight e0 -> backToDFromRight 0C e0
eX findBlank $1 -> temp eX $1
1@ searchOne $0 -> restoreCD 1@ $0
findZero 10 -> 10 findBlank
0B backToSharpZero 10 -> backToSharpZero 0B 10
eD gotoDecC 00 -> gotoDecC eD 00
@C checkEForZero 0B -> stop @C 0B
1B initDividerByTwo 00 -> backToD 1B 01
11 replaceWithBlanks @@ -> backToDFromRight 11 @@
e$ backToDFromRight 10 -> backToDFromRight e$ 10
@C nullifier 0B -> initDivider @C 0E
@# eraseC eC -> backToStart @# eX
$X temp @1 -> beginCopying $X @1
0D backToDFromRight 1B -> backToDFromRight 0D 1B
0E searchZero 10 -> backToDFromLeft 0E 1%
$C findZero $1 -> beginCopying $C $1
e# gotoDecC 0D -> dec e# 0D
e% checkEForZero 1B -> stop e% 1B
1% incD e0 -> checkCD 1% e1
$% dec @1 -> gotoMark $% @0
@# searchZero e1 -> restoreCD @# e1
1X backToSharpZero e1 -> backToSharpZero 1X e1
e$ backToStart @1 -> backToStart e$ @1
e# gotoDecC 11 -> gotoDecC e# 11
$$ checkCD $1 -> checkCD $$ $1
@X findBlank 01 -> temp @X 01
$& backToSharpOne @D -> backToSharpOne $& @D
@$ beginCopying $B -> backToStart @$ $C
e# backToSharpOne eX -> backToSharpOne e# eX
1# gotoDecC $1 -> gotoDecC 1# $1
0D eraseC $0 -> eraseC 0D $B
@% initDivider 10 -> initDividerByTwo @% 10
$B backToSharpZero 11 -> backToSharpZero $B 11
e% backToD e0 -> backToD e% e0
1B backToDFromRight $E -> backToDFromRight 1B $E
@0 checkEForZero $B -> stop @0 $B
@E eraseE @0 -> eraseE @E @B
0% backToDFromLeft 1& -> backToDFromLeft 0% 1&
1B backToSharpZero $D -> backToSharpZero 1B $D
e0 findZero $1 -> beginCopying e0 $1
checkZeroD @1 -> @1 checkZeroD
@# temp $0 -> beginCopying @# $0
$@ backToFirstC @1 -> backToFirstC $@ @1
searchOne 1& -> 1& searchOne
0X FINAL -> FINAL 0 FINAL
10 backToSharpOne 11 -> backToSharpOne 10 11
0D gotoDecC @0 -> gotoDecC 0D @0
@% gotoDecC @D -> dec @% @D
0# checkCD $1 -> checkCD 0# $1
eC backToSharpZero 1D -> backToSharpZero eC 1D
0D gotoLastE 0@ -> dec 0D 0@
e1 backToSharpOne eX -> backToSharpOne e1 eX
@E backToStart 11 -> backToStart @E 11
11 eraseC eC -> backToStart 11 eX
0C backToSharpZero 1E -> backToSharpZero 0C 1E
e0 backToDFromRight @E -> backToDFromRight e0 @E
@D backToSharpZero $E -> backToSharpZero @D $E
$# backToStart $0 -> backToStart $# $0
@0 findBlank 0B -> FINAL @0 0B
00 backToDFromRight @0 -> backToDFromRight 00 @0
1$ backToD @0 -> backToD 1$ @0
$E initDivider e0 -> initDividerByTwo $E e0
$1 backToSharpZero 1X -> backToSharpZero $1 1X
@# backToDFromRight @1 -> backToDFromRight @# @1
e1 initDividerByTwo @0 -> backToD e1 @1
$E searchZero 10 -> backToDFromLeft $E 1%
$E backToSharpZero eD -> backToSharpZero $E eD
$& gotoLastE e@ -> dec $& e@
@& backToStart e0 -> backToStart @& e0
FINAL $% -> FINAL $ FINAL
0& gotoMark e0 -> gotoMark 0& e0
$& backToDFromRight 1E -> backToDFromRight $& 1E
1@ gotoDecC eD -> dec 1@ eD
e0 backToD 11 -> backToD e0 11
e% findBlank $1 -> temp e% $1
0B goToPlaceForDivider 0B -> backToFirstC 0B 0D
eE backToDFromRight e0 -> backToDFromRight eE e0
$$ goToPlaceForDivider @B -> backToFirstC $$ @D
0B massErase @@ -> eraseE 0B @@
01 eraseE e0 -> eraseE 01 eB
e& goToPlaceForDivider 1B -> backToFirstC e& 1D
0E temp $1 -> beginCopying 0E $1
$% backToSharpOne e1 -> backToSharpOne $% e1
1X backToSharpOne 10 -> backToSharpOne 1X 10
eE searchOne $0 -> restoreCD eE $0
e$ incD 01 -> incD e$ 00
$& findBlank $B -> FINAL $& $B
e@ temp 01 -> beginCopying e@ 01
1$ restoreCD $% -> restoreCD 1$ $0
eX backToStart $0 -> backToStart eX $0
@B beginCopying @B -> backToStart @B @C
$B checkCD $D -> checkCD $B $D
$E searchZero $0 -> backToDFromLeft $E $%
0X temp 11 -> beginCopying 0X 11
0% backToSharpZero 00 -> backToSharpZero 0% 00
0D eraseE e1 -> eraseE 0D eB
0X nullifier @B -> initDivider 0X @E
e1 eraseC e1 -> eraseC e1 eB
e# restoreCD @D -> restoreCD e# @D
@D temp 11 -> beginCopying @D 11
$$ initDividerByTwo e0 -> backToD $$ e1
e$ checkCD 0D -> checkCD e$ 0D
@E prepEraseC eD -> eraseC @E eD
e& backToSharpZero 0E -> backToSharpZero e& 0E
01 backToSharpOne eC -> backToSharpOne 01 eC
@C backToSharpZero 0E -> backToSharpZero @C 0E
e1 backToD 10 -> backToD e1 10
1C FINAL -> FINAL 1 FINAL
checkOneD @1 -> @1 checkOneD
10 backToDFromRight 1E -> backToDFromRight 10 1E
0% backToSharpOne 1X -> backToSharpOne 0% 1X
11 beginCopying 1B -> backToStart 11 1C
@@ searchNextBit 11 -> searchNextBit @@ 11
@# checkCD 0D -> checkCD @# 0D
e0 nullifier 1B -> initDivider e0 1E
$$ gotoDecC e1 -> gotoDecC $$ e1
eB findBlank e1 -> temp eB e1
0D restoreCD 0% -> restoreCD 0D 00
$% incD e1 -> incD $% e0
0$ restoreCD 01 -> restoreCD 0$ 01
@E restoreCD eD -> restoreCD @E eD
$# backToDFromLeft $& -> backToDFromLeft $# $&
10 searchOne e0 -> restoreCD 10 e0
e1 backToSharpOne @D -> backToSharpOne e1 @D
$1 restoreCD 0% -> restoreCD $1 00
$# copyZero 0B -> backToSharpZero $# 00
eX backToSharpOne 11 -> backToSharpOne eX 11
e1 incD 10 -> checkCD e1 11
0C restoreCD e& -> restoreCD 0C e1
0& gotoLastE e@ -> dec 0& e@
1B gotoDecC e1 -> gotoDecC 1B e1
$B backToSharpZero @E -> backToSharpZero $B @E
@$ backToDFromRight $B -> backToDFromRight @$ $B
1D searchNextBit 00 -> searchNextBit 1D 00
$$ gotoDecC 00 -> gotoDecC $$ 00
$% dec e0 -> dec $% e1
eB gotoDecC $0 -> gotoDecC eB $0
1D backToSharpZero @0 -> backToSharpZero 1D @0
@1 backToSharpZero 0X -> backToSharpZero @1 0X
0$ backToSharpOne 0D -> backToSharpOne 0$ 0D
@# restoreCD 11 -> restoreCD @# 11
0X backToSharpZero 1D -> backToSharpZero 0X 1D
1C initDivider 00 -> initDividerByTwo 1C 00
11 findBlank e1 -> temp 11 e1
0X backToSharpZero @X -> backToSharpZero 0X @X
0# findBlank e0 -> temp 0# e0
eX temp e0 -> beginCopying eX e0
0D backToSharpZero 00 -> backToSharpZero 0D 00
1E temp $1 -> beginCopying 1E $1
1# backToSharpZero $D -> backToSharpZero 1# $D
@& backToDFromLeft $D -> searchNextBit @& $D
@% restoreCD e1 -> restoreCD @% e1
@B restoreCD e1 -> restoreCD @B e1
1C prepEraseC e0 -> prepEraseC 1C e0
1E backToSharpOne 0E -> backToSharpOne 1E 0E
1X backToFirstC e0 -> backToFirstC 1X e0
eE backToStart 11 -> backToStart eE 11
0& temp $1 -> beginCopying 0& $1
e$ backToSharpZero 1E -> backToSharpZero e$ 1E
$@ massErase e@ -> eraseE $@ e@
1X backToSharpOne 1X -> backToSharpOne 1X 1X
1D findZero @1 -> beginCopying 1D @1
eB copyOne 0B -> backToSharpOne eB 01
@D findBlank 1B -> FINAL @D 1B
1% checkEForZero 0B -> stop 1% 0B
0C eraseE $0 -> eraseE 0C $B
@$ checkCD $0 -> checkCD @$ $0
eB searchOne $1 -> backToDFromLeft eB $&
$1 backToDFromLeft @% -> backToDFromLeft $1 @%
@$ checkEForZero @B -> stop @$ @B
10 backToDFromLeft e% -> backToDFromLeft 10 e%
1C backToDFromRight $E -> backToDFromRight 1C $E
@# eraseC 01 -> eraseC @# 0B
1& beginCopying $B -> backToStart 1& $C
@X backToFirstC 10 -> backToFirstC @X 10
11 backToSharpZero 0C -> backToSharpZero 11 0C
@X backToSharpOne 1E -> backToSharpOne @X 1E
0# backToSharpOne 01 -> backToSharpOne 0# 01
$@ gotoDecC $0 -> gotoDecC $@ $0
@1 copyOne 0B -> backToSharpOne @1 01
e@ backToFirstC @1 -> backToFirstC e@ @1
0& searchOne 11 -> backToDFromLeft 0& 1&
$D findZero @1 -> beginCopying $D @1
0@ replaceWithBlanks @@ -> backToDFromRight 0@ @@
00 searchNextBit @1 -> searchNextBit 00 @1
@D checkCD @0 -> checkCD @D @0
1# gotoMark eE -> gotoDecC 1# eE
eC backToDFromLeft $D -> searchNextBit eC $D
$E backToDFromLeft @1 -> backToDFromLeft $E @1
$0 searchZero e1 -> restoreCD $0 e1
01 backToSharpOne @D -> backToSharpOne 01 @D
e@ findBlank $0 -> temp e@ $0
00 backToDFromLeft e0 -> backToDFromLeft 00 e0
0C gotoMark e1 -> gotoMark 0C e1
eD searchNextBit e0 -> searchNextBit eD e0
0E eraseE 0E -> prepEraseC 0E 0E
eE searchZero @0 -> backToDFromLeft eE @%
@$ findBlank 10 -> temp @$ 10
1B backToSharpZero 00 -> backToSharpZero 1B 00
$B eraseE @1 -> eraseE $B @B
e1 temp 01 -> beginCopying e1 01
@1 nullifier eB -> initDivider @1 eE
$E temp 00 -> beginCopying $E 00
eD prepEraseC @0 -> prepEraseC eD @0
1# findBlank e0 -> temp 1# e0
0C checkEForZero eB -> stop 0C eB
e# eraseC e0 -> eraseC e# eB
$# gotoMark @1 -> gotoMark $# @1
e0 backToSharpOne @E -> backToSharpOne e0 @E
0# backToSharpOne @D -> backToSharpOne 0# @D
1# gotoMark 00 -> gotoMark 1# 00
1E backToDFromRight e0 -> backToDFromRight 1E e0
$0 backToD 11 -> backToD $0 11
$@ massErase $@ -> eraseE $@ $@
0@ backToFirstC $0 -> backToFirstC 0@ $0
1$ backToSharpZero eX -> backToSharpZero 1$ eX
@B backToDFromLeft 0% -> backToDFromLeft @B 0%
e1 restoreCD 1% -> restoreCD e1 10
0X forwardToLastD eE -> incD 0X eE
0% eraseC 1C -> backToStart 0% 1X
$X backToDFromLeft e1 -> backToDFromLeft $X e1
e0 searchZero 10 -> backToDFromLeft e0 1%
0& prepEraseC $D -> eraseC 0& $D
@1 backToSharpOne 1X -> backToSharpOne @1 1X
1$ checkCD 0D -> checkCD 1$ 0D
1B backToFirstC $0 -> backToFirstC 1B $0
0C initDividerByTwo $0 -> backToD 0C $1
1& backToSharpZero 0D -> backToSharpZero 1& 0D
@1 backToSharpZero 11 -> backToSharpZero @1 11
1D goToPlaceForDivider $B -> backToFirstC 1D $D
@1 backToDFromLeft e% -> backToDFromLeft @1 e%
11 searchZero $0 -> backToDFromLeft 11 $%
0% dec $1 -> gotoMark 0% $0
$1 backToDFromLeft @1 -> backToDFromLeft $1 @1
eB restoreCD @& -> restoreCD eB @1
@X searchZero 10 -> backToDFromLeft @X 1%
0# prepEraseC 01 -> prepEraseC 0# 01
0B backToSharpZero 0X -> backToSharpZero 0B 0X
1% backToD 01 -> backToD 1% 01
1E prepEraseC 1D -> eraseC 1E 1D
@E findZero @1 -> beginCopying @E @1
@E backToDFromLeft @D -> searchNextBit @E @D
@D backToSharpOne 0D -> backToSharpOne @D 0D
1E temp 10 -> beginCopying 1E 10
e1 backToDFromRight e1 -> backToDFromRight e1 e1
0@ checkCD @0 -> checkCD 0@ @0
1B copyZero @B -> backToSharpZero 1B @0
eE backToSharpZero @1 -> backToSharpZero eE @1
1& backToSharpZero $D -> backToSharpZero 1& $D
0& backToDFromLeft 10 -> backToDFromLeft 0& 10
1# searchOne 00 -> restoreCD 1# 00
01 backToDFromLeft 00 -> backToDFromLeft 01 00
$B restoreCD 10 -> restoreCD $B 10
eD eraseC @0 -> eraseC eD @B
1& gotoLastE 1@ -> dec 1& 1@
0D backToDFromLeft @0 -> backToDFromLeft 0D @0
e@ restoreCD @1 -> restoreCD e@ @1
e@ beginCopying eB -> backToStart e@ eC
e& searchZero e1 -> restoreCD e& e1
searchZero e% -> e% searchZero
1E temp e1 -> beginCopying 1E e1
@$ incD e0 -> checkCD @$ e1
$E checkCD 0D -> checkCD $E 0D
1D searchZero @0 -> backToDFromLeft 1D @%
1% findZero 11 -> beginCopying 1% 11
0$ backToSharpOne @X -> backToSharpOne 0$ @X
@D restoreCD e% -> restoreCD @D e0
0X backToSharpOne @E -> backToSharpOne 0X @E
e@ backToFirstC 00 -> backToFirstC e@ 00
@@ eraseE @1 -> eraseE @@ @B
$C prepEraseC 11 -> prepEraseC $C 11
@$ initDivider @0 -> initDividerByTwo @$ @0
@@ initDividerByTwo @0 -> backToD @@ @1
e# temp $0 -> beginCopying e# $0
eD backToFirstC 00 -> backToFirstC eD 00
copyZero 00 -> 00 copyZero
0@ temp $1 -> beginCopying 0@ $1
eE backToDFromLeft @1 -> backToDFromLeft eE @1
0$ prepEraseC @1 -> prepEraseC 0$ @1
e$ dec 00 -> dec e$ 01
0$ gotoDecC e1 -> gotoDecC 0$ e1
@@ restoreCD $0 -> restoreCD @@ $0
01 backToDFromLeft 0& -> backToDFromLeft 01 0&
@0 backToDFromRight @1 -> backToDFromRight @0 @1
0D backToFirstC 11 -> backToFirstC 0D 11
1E backToDFromLeft $% -> backToDFromLeft 1E $%
1E backToSharpOne @D -> backToSharpOne 1E @D
$& goToPlaceForDivider 0B -> backToFirstC $& 0D
0X backToDFromRight 1B -> backToDFromRight 0X 1B
01 backToD 01 -> backToD 01 01
$1 backToSharpZero 10 -> backToSharpZero $1 10
$% backToSharpZero @E -> backToSharpZero $% @E
@0 backToStart 00 -> backToStart @0 00
0@ gotoDecC 01 -> gotoDecC 0@ 01
@0 gotoMark 10 -> gotoMark @0 10
@& copyZero $B -> backToSharpZero @& $0
10 backToSharpZero 0E -> backToSharpZero 10 0E
1$ backToSharpOne e1 -> backToSharpOne 1$ e1
$B initDivider 10 -> initDividerByTwo $B 10
@D gotoMark @E -> gotoDecC @D @E
@D restoreCD 11 -> restoreCD @D 11
1& checkCD $D -> checkCD 1& $D
$X gotoMark @E -> gotoDecC $X @E
e# backToSharpOne $1 -> backToSharpOne e# $1
@% backToSharpZero @C -> backToSharpZero @% @C
@E findBlank e1 -> temp @E e1
$# gotoDecC e1 -> gotoDecC $# e1
$D restoreCD @% -> restoreCD $D @0
1X checkCD $D -> checkCD 1X $D
0% massErase 1@ -> eraseE 0% 1@
e0 backToDFromLeft $& -> backToDFromLeft e0 $&
1& gotoDecC 01 -> gotoDecC 1& 01
e0 backToSharpOne e0 -> backToSharpOne e0 e0
eC gotoDecC $D -> dec eC $D
eC restoreCD $% -> restoreCD eC $0
0D eraseC e1 -> eraseC 0D eB
eC searchOne 10 -> restoreCD eC 10
0E eraseE 11 -> eraseE 0E 1B
10 findBlank $B -> FINAL 10 $B
0B eraseE $1 -> eraseE 0B $B
1$ backToDFromRight 01 -> backToDFromRight 1$ 01
0# gotoMark e0 -> gotoMark 0# e0
0$ findBlank 10 -> temp 0$ 10
e$ backToSharpZero 0D -> backToSharpZero e$ 0D
eX eraseC 01 -> eraseC eX 0B
1& nullifier 1B -> initDivider 1& 1E
$& restoreCD e% -> restoreCD $& e0
@D beginCopying @B -> backToStart @D @C
$$ gotoDecC $D -> dec $$ $D
FINAL e1 -> FINAL e FINAL
00 eraseC @1 -> eraseC 00 @B
1$ goToPlaceForDivider 1B -> backToFirstC 1$ 1D
$0 findBlank eB -> FINAL $0 eB
$# gotoLastE 1@ -> dec $# 1@
e1 searchOne e1 -> backToDFromLeft e1 e&
$1 backToSharpZero @X -> backToSharpZero $1 @X
@0 goToPlaceForDivider $B -> backToFirstC @0 $D
0C backToDFromRight $1 -> backToDFromRight 0C $1
0$ initDivider e0 -> initDividerByTwo 0$ e0
1X restoreCD 0% -> restoreCD 1X 00
0@ dec $1 -> gotoMark 0@ $0
$X backToFirstC 10 -> backToFirstC $X 10
$& dec 10 -> dec $& 11
0X dec e0 -> dec 0X e1
@@ backToSharpOne $D -> backToSharpOne @@ $D
$C massErase e@ -> eraseE $C e@
0B eraseC 01 -> eraseC 0B 0B
eC copyZero 1B -> backToSharpZero eC 10
0D searchNextBit 01 -> searchNextBit 0D 01
1X backToDFromLeft 1D -> searchNextBit 1X 1D
0& backToSharpOne e1 -> backToSharpOne 0& e1
0B backToStart @0 -> backToStart 0B @0
0@ backToStart @1 -> backToStart 0@ @1
$0 backToSharpZero 10 -> backToSharpZero $0 10
1$ backToFirstC @0 -> backToFirstC 1$ @0
e@ backToSharpZero 01 -> backToSharpZero e@ 01
@0 backToSharpOne $1 -> backToSharpOne @0 $1
1@ backToDFromLeft 11 -> backToDFromLeft 1@ 11
e# copyOne eB -> backToSharpOne e# e1
@D initDividerByTwo e0 -> backToD @D e1
1E backToSharpOne 1E -> backToSharpOne 1E 1E
eE backToSharpOne @C -> backToSharpOne eE @C
eX copyOne eB -> backToSharpOne eX e1
$0 findBlank 10 -> temp $0 10
$0 backToSharpZero 00 -> backToSharpZero $0 00
@1 backToSharpOne e0 -> backToSharpOne @1 e0
0D backToStart 10 -> backToStart 0D 10
@% prepEraseC eD -> eraseC @% eD
@# copyOne eB -> backToSharpOne @# e1
0E checkCD 01 -> checkCD 0E 01
ifZero @D -> @D moveToE
$E searchOne 10 -> restoreCD $E 10
0X backToDFromRight $0 -> backToDFromRight 0X $0
@X copyZero 0B -> backToSharpZero @X 00
0@ prepEraseC 1D -> eraseC 0@ 1D
@1 backToSharpZero 1D -> backToSharpZero @1 1D
0$ gotoDecC 11 -> gotoDecC 0$ 11
$# backToSharpOne $E -> backToSharpOne $# $E
$1 backToSharpZero $X -> backToSharpZero $1 $X
$1 backToDFromLeft eD -> searchNextBit $1 eD
@E backToSharpOne eX -> backToSharpOne @E eX
1# backToSharpOne 11 -> backToSharpOne 1# 11
$1 prepEraseC 1D -> eraseC $1 1D
$& backToDFromRight @E -> backToDFromRight $& @E
$$ beginCopying eB -> backToStart $$ eC
@C backToStart @1 -> backToStart @C @1
$D backToStart 10 -> backToStart $D 10
e1 gotoDecC eD -> dec e1 eD
01 backToDFromRight $0 -> backToDFromRight 01 $0
e$ nullifier eB -> initDivider e$ eE
e$ searchZero 11 -> restoreCD e$ 11
0E backToSharpZero eX -> backToSharpZero 0E eX
1@ searchZero $0 -> backToDFromLeft 1@ $%
$$ prepEraseC $D -> eraseC $$ $D
0@ gotoDecC $0 -> gotoDecC 0@ $0
@E copyZero $B -> backToSharpZero @E $0
$0 searchOne e1 -> backToDFromLeft $0 e&
1C backToSharpOne $0 -> backToSharpOne 1C $0
0B backToSharpZero 00 -> backToSharpZero 0B 00
11 searchOne 01 -> backToDFromLeft 11 0&
@1 backToD e1 -> backToD @1 e1
0% restoreCD 0% -> restoreCD 0% 00
eD backToStart e1 -> backToStart eD e1
1$ temp $0 -> beginCopying 1$ $0
$@ backToSharpZero eD -> backToSharpZero $@ eD
@E backToD 01 -> backToD @E 01
0D initDividerByTwo @0 -> backToD 0D @1
11 initDivider @0 -> initDividerByTwo 11 @0
0B restoreCD @D -> restoreCD 0B @D
eD backToSharpOne 1X -> backToSharpOne eD 1X
@D gotoDecC @1 -> gotoDecC @D @1
@& incD $0 -> checkCD @& $1
1& goToPlaceForDivider $B -> backToFirstC 1& $D
$E backToStart @1 -> backToStart $E @1
1C massErase @@ -> eraseE 1C @@
@C backToSharpOne 0D -> backToSharpOne @C 0D
1X backToDFromRight 1B -> backToDFromRight 1X 1B
0$ backToSharpOne $D -> backToSharpOne 0$ $D
@# gotoMark $0 -> gotoMark @# $0
1% backToStart $1 -> backToStart 1% $1
1D restoreCD @1 -> restoreCD 1D @1
$D gotoMark e0 -> gotoMark $D e0
$C backToDFromLeft $0 -> backToDFromLeft $C $0
start e1 -> e1 findZero
1# prepEraseC e0 -> prepEraseC 1# e0
e& dec 00 -> dec e& 01
10 searchOne 01 -> backToDFromLeft 10 0&
eX backToSharpOne 10 -> backToSharpOne eX 10
0$ prepEraseC $1 -> prepEraseC 0$ $1
1$ restoreCD e% -> restoreCD 1$ e0
@% dec 00 -> dec @% 01
0X backToFirstC 11 -> backToFirstC 0X 11
eX backToSharpZero $0 -> backToSharpZero eX $0
0# forwardToLastD eE -> incD 0# eE
@X backToD 11 -> backToD @X 11
10 searchZero e0 -> backToDFromLeft 10 e%
0& gotoDecC @1 -> gotoDecC 0& @1
01 restoreCD $1 -> restoreCD 01 $1
01 eraseC 11 -> eraseC 01 1B
1% searchNextBit 11 -> searchNextBit 1% 11
@# backToDFromRight 10 -> backToDFromRight @# 10
0% searchOne e1 -> backToDFromLeft 0% e&
$& backToSharpOne 0E -> backToSharpOne $& 0E
@# FINAL -> FINAL @ FINAL
0X eraseC @1 -> eraseC 0X @B
1@ backToDFromLeft $D -> searchNextBit 1@ $D
1$ eraseE eE -> prepEraseC 1$ eE
1E restoreCD 1D -> restoreCD 1E 1D
$1 restoreCD 10 -> restoreCD $1 10
@1 copyOne eB -> backToSharpOne @1 e1
@E backToSharpZero @X -> backToSharpZero @E @X
eX copyZero $B -> backToSharpZero eX $0
e& findBlank e1 -> temp e& e1
0B incD 00 -> checkCD 0B 01
0B backToDFromRight e1 -> backToDFromRight 0B e1
$D restoreCD 00 -> restoreCD $D 00
10 backToDFromLeft $& -> backToDFromLeft 10 $&
0% dec $0 -> dec 0% $1
$C eraseC $0 -> eraseC $C $B
@1 findZero e1 -> beginCopying @1 e1
$$ findBlank e0 -> temp $$ e0
ifZero 1D -> 1D moveToE
$# gotoMark @E -> gotoDecC $# @E
0# goToPlaceForDivider $B -> backToFirstC 0# $D
0$ dec $0 -> dec 0$ $1
0# backToDFromRight 11 -> backToDFromRight 0# 11
10 nullifier 1B -> initDivider 10 1E
$# backToSharpZero @0 -> backToSharpZero $# @0
@# gotoDecC $D -> dec @# $D
$# findZero e1 -> beginCopying $# e1
01 backToSharpOne $E -> backToSharpOne 01 $E
@1 backToSharpOne $1 -> backToSharpOne @1 $1
@E goToPlaceForDivider 1B -> backToFirstC @E 1D
start 01 -> 01 findZero
1C backToSharpOne 1E -> backToSharpOne 1C 1E
eB gotoDecC @1 -> gotoDecC eB @1
$% gotoDecC @1 -> gotoDecC $% @1
0C checkCD e1 -> checkCD 0C e1
eE initDividerByTwo 00 -> backToD eE 01
@% backToDFromLeft 0& -> backToDFromLeft @% 0&
@$ gotoLastE e@ -> dec @$ e@
1E eraseE @1 -> eraseE 1E @B
11 searchOne 10 -> restoreCD 11 10
00 restoreCD e0 -> restoreCD 00 e0
0E backToDFromLeft $% -> backToDFromLeft 0E $%
1& restoreCD 10 -> restoreCD 1& 10
@& backToSharpZero @D -> backToSharpZero @& @D
$B backToDFromRight eE -> backToDFromRight $B eE
1X findBlank 00 -> temp 1X 00
$D findBlank 0B -> FINAL $D 0B
1C backToSharpZero $D -> backToSharpZero 1C $D
1B backToSharpOne e1 -> backToSharpOne 1B e1
1D searchNextBit e0 -> searchNextBit 1D e0
$$ temp @0 -> beginCopying $$ @0
$E findBlank 01 -> temp $E 01
@@ backToDFromRight 00 -> backToDFromRight @@ 00
10 incD 10 -> checkCD 10 11
0X backToDFromLeft eD -> searchNextBit 0X eD
1B gotoMark 11 -> gotoMark 1B 11
@X findZero $1 -> beginCopying @X $1
0@ eraseC 00 -> eraseC 0@ 0B
@% checkCD 1D -> checkCD @% 1D
1@ dec $0 -> dec 1@ $1
$# backToSharpZero e1 -> backToSharpZero $# e1
0C backToSharpZero 0X -> backToSharpZero 0C 0X
0& backToSharpOne @D -> backToSharpOne 0& @D
eB backToDFromLeft 01 -> backToDFromLeft eB 01
11 eraseC $1 -> eraseC 11 $B
@0 backToDFromLeft e& -> backToDFromLeft @0 e&
e@ backToSharpZero @X -> backToSharpZero e@ @X
1C backToDFromRight $1 -> backToDFromRight 1C $1
10 findBlank @0 -> temp 10 @0
0E initDivider e0 -> initDividerByTwo 0E e0
@D eraseE 01 -> eraseE @D 0B
0% gotoDecC 0D -> dec 0% 0D
@0 backToFirstC 00 -> backToFirstC @0 00
$B backToDFromRight 11 -> backToDFromRight $B 11
0X temp $0 -> beginCopying 0X $0
0B restoreCD eD -> restoreCD 0B eD
eX backToSharpZero @0 -> backToSharpZero eX @0
0D initDividerByTwo 00 -> backToD 0D 01
$B backToDFromRight 0B -> backToDFromRight $B 0B
1# initDivider 10 -> initDividerByTwo 1# 10
eD temp @0 -> beginCopying eD @0
eB backToDFromLeft 0D -> searchNextBit eB 0D
$E gotoMark 00 -> gotoMark $E 00
$1 findZero 01 -> beginCopying $1 01
0% restoreCD e1 -> restoreCD 0% e1
11 backToSharpZero 1E -> backToSharpZero 11 1E
$X gotoDecC 1D -> dec $X 1D
01 backToSharpOne @X -> backToSharpOne 01 @X
$$ backToSharpZero @D -> backToSharpZero $$ @D
$0 incD e1 -> incD $0 e0
e# findBlank $B -> FINAL e# $B
e0 restoreCD e1 -> restoreCD e0 e1
e& findBlank 01 -> temp e& 01
@$ gotoDecC $1 -> gotoDecC @$ $1
0$ backToDFromRight @E -> backToDFromRight 0$ @E
1B forwardToLastD @E -> incD 1B @E
e$ searchOne $1 -> backToDFromLeft e$ $&
1& forwardToLastD 1E -> incD 1& 1E
10 eraseE e0 -> eraseE 10 eB
0X gotoDecC $1 -> gotoDecC 0X $1
e0 replaceWithBlanks $@ -> backToDFromRight e0 $@
1% backToSharpZero 1D -> backToSharpZero 1% 1D
$% eraseE @1 -> eraseE $% @B
@C findBlank @0 -> temp @C @0
1$ searchZero $0 -> backToDFromLeft 1$ $%
1B backToSharpOne eX -> backToSharpOne 1B eX
1C forwardToLastD 0E -> incD 1C 0E
eC backToDFromLeft @1 -> backToDFromLeft eC @1
e# checkCD 11 -> checkCD e# 11
0B restoreCD 10 -> restoreCD 0B 10
$B backToSharpZero eE -> backToSharpZero $B eE
eC gotoMark 1E -> gotoDecC eC 1E
$D gotoMark eE -> gotoDecC $D eE
e0 findBlank @B -> FINAL e0 @B
0$ backToDFromLeft $D -> searchNextBit 0$ $D
eD eraseC 10 -> eraseC eD 1B
1D incD 00 -> checkCD 1D 01
eX dec 00 -> dec eX 01
eE backToSharpZero 1C -> backToSharpZero eE 1C
0X nullifier $B -> initDivider 0X $E
0B eraseE e0 -> eraseE 0B eB
e$ backToSharpZero eX -> backToSharpZero e$ eX
0C backToFirstC @1 -> backToFirstC 0C @1
@0 restoreCD 1% -> restoreCD @0 10
eB gotoLastE @@ -> dec eB @@
e1 searchNextBit @0 -> searchNextBit e1 @0
1E backToSharpOne 00 -> backToSharpOne 1E 00
$C backToSharpOne 11 -> backToSharpOne $C 11
1& backToDFromRight @0 -> backToDFromRight 1& @0
$@ initDivider $0 -> initDividerByTwo $@ $0
eE eraseE 01 -> eraseE eE 0B
@E backToSharpOne 11 -> backToSharpOne @E 11
1% backToDFromRight @B -> backToDFromRight 1% @B
$@ searchZero @1 -> restoreCD $@ @1
0E findBlank $0 -> temp 0E $0
$% dec e1 -> gotoMark $% e0
0& restoreCD @% -> restoreCD 0& @0
@1 backToFirstC $0 -> backToFirstC @1 $0
10 backToDFromLeft 10 -> backToDFromLeft 10 10
$0 incD @1 -> incD $0 @0
$$ incD 10 -> checkCD $$ 11
@B findBlank 11 -> temp @B 11
e% backToSharpOne eE -> backToSharpOne e% eE
@% restoreCD 00 -> restoreCD @% 00
$D backToDFromRight 10 -> backToDFromRight $D 10
0B checkCD 1D -> checkCD 0B 1D
$C nullifier $B -> initDivider $C $E
0E backToSharpZero e0 -> backToSharpZero 0E e0
0E prepEraseC 11 -> prepEraseC 0E 11
0D backToDFromLeft 0% -> backToDFromLeft 0D 0%
eB gotoMark @1 -> gotoMark eB @1
1# backToDFromRight @B -> backToDFromRight 1# @B
@B backToDFromRight @0 -> backToDFromRight @B @0
$# searchOne @0 -> restoreCD $# @0
e& forwardToLastD 1E -> incD e& 1E
@$ replaceWithBlanks 0@ -> backToDFromRight @$ 0@
00 eraseE @1 -> eraseE 00 @B
@% restoreCD 01 -> restoreCD @% 01
$# goToPlaceForDivider 0B -> backToFirstC $# 0D
massErase @0 -> @0 massErase
1D eraseC 00 -> eraseC 1D 0B
@B backToStart $1 -> backToStart @B $1
@E backToDFromLeft 10 -> backToDFromLeft @E 10
$D eraseE e0 -> eraseE $D eB
eC restoreCD $1 -> restoreCD eC $1
@$ temp e1 -> beginCopying @$ e1
0D backToSharpOne $0 -> backToSharpOne 0D $0
eD checkCD 10 -> checkCD eD 10
@$ backToStart 10 -> backToStart @$ 10
0X searchNextBit e0 -> searchNextBit 0X e0
0D replaceWithBlanks @@ -> backToDFromRight 0D @@
$& eraseC e0 -> eraseC $& eB
1$ backToDFromRight $1 -> backToDFromRight 1$ $1
$$ gotoDecC @D -> dec $$ @D
e@ copyZero eB -> backToSharpZero e@ e0
$# temp @1 -> beginCopying $# @1
$& backToSharpZero 01 -> backToSharpZero $& 01
0X restoreCD e% -> restoreCD 0X e0
@1 checkEForZero 0B -> stop @1 0B
eB findBlank $B -> FINAL eB $B
11 temp 01 -> beginCopying 11 01
1B gotoMark 0E -> gotoDecC 1B 0E
00 gotoMark $1 -> gotoMark 00 $1
01 backToSharpOne $0 -> backToSharpOne 01 $0
@0 backToD e0 -> backToD @0 e0
$D massErase $@ -> eraseE $D $@
1$ searchOne 11 -> backToDFromLeft 1$ 1&
$1 FINAL -> FINAL $ FINAL
0D eraseE e0 -> eraseE 0D eB
0$ backToSharpOne $0 -> backToSharpOne 0$ $0
eX restoreCD e1 -> restoreCD eX e1
@C gotoMark 1E -> gotoDecC @C 1E
eE searchOne 00 -> restoreCD eE 00
0E gotoLastE e@ -> dec 0E e@
$E checkEForZero 1B -> stop $E 1B
@$ restoreCD $& -> restoreCD @$ $1
@0 backToDFromRight 1B -> backToDFromRight @0 1B
10 searchNextBit 01 -> searchNextBit 10 01
eD prepEraseC eD -> eraseC eD eD
$C searchOne 01 -> backToDFromLeft $C 0&
@1 gotoDecC 10 -> gotoDecC @1 10
@& backToDFromRight @1 -> backToDFromRight @& @1
eX backToDFromLeft 1% -> backToDFromLeft eX 1%
$$ eraseE @1 -> eraseE $$ @B
$1 eraseC $C -> backToStart $1 $X
$# dec @1 -> gotoMark $# @0
$$ eraseE 0E -> prepEraseC $$ 0E
@0 searchOne $0 -> restoreCD @0 $0
11 incD e1 -> incD 11 e0
@% prepEraseC 11 -> prepEraseC @% 11
1X backToSharpZero 0D -> backToSharpZero 1X 0D
0B searchNextBit @0 -> searchNextBit 0B @0
$E searchOne $0 -> restoreCD $E $0
@1 backToSharpOne $C -> backToSharpOne @1 $C
0B backToSharpOne @0 -> backToSharpOne 0B @0
@@ searchZero @1 -> restoreCD @@ @1
FINAL 1$ -> FINAL 1 FINAL
$X restoreCD @1 -> restoreCD $X @1
$B prepEraseC 1D -> eraseC $B 1D
eB backToStart e0 -> backToStart eB e0
1B eraseE 01 -> eraseE 1B 0B
e1 searchNextBit e0 -> searchNextBit e1 e0
@D dec e1 -> gotoMark @D e0
eE backToDFromLeft eD -> searchNextBit eE eD
$E checkCD @D -> checkCD $E @D
eD findBlank eB -> FINAL eD eB
0% backToDFromLeft e& -> backToDFromLeft 0% e&
$1 gotoDecC $0 -> gotoDecC $1 $0
eE backToSharpZero 1D -> backToSharpZero eE 1D
eE dec e0 -> dec eE e1
$0 checkCD 00 -> checkCD $0 00
$@ checkCD $0 -> checkCD $@ $0
1& temp @1 -> beginCopying 1& @1
11 prepEraseC eD -> eraseC 11 eD
0$ backToSharpZero eX -> backToSharpZero 0$ eX
$E restoreCD @& -> restoreCD $E @1
1@ eraseE @0 -> eraseE 1@ @B
eD nullifier eB -> initDivider eD eE
@D searchOne @1 -> backToDFromLeft @D @&
@X backToDFromRight $0 -> backToDFromRight @X $0
1$ checkEForZero eB -> stop 1$ eB
10 checkCD $1 -> checkCD 10 $1
1C gotoMark e1 -> gotoMark 1C e1
$% checkCD @D -> checkCD $% @D
e1 searchNextBit $0 -> searchNextBit e1 $0
1C backToSharpZero @C -> backToSharpZero 1C @C
1C gotoDecC @D -> dec 1C @D
e$ findBlank @1 -> temp e$ @1
$& backToD e0 -> backToD $& e0
eC backToDFromRight @E -> backToDFromRight eC @E
$D searchNextBit e0 -> searchNextBit $D e0
1@ prepEraseC e0 -> prepEraseC 1@ e0
$# temp $1 -> beginCopying $# $1
e1 checkCD @0 -> checkCD e1 @0
@B backToD 10 -> backToD @B 10
@E backToSharpOne @C -> backToSharpOne @E @C
$& checkCD @D -> checkCD $& @D
eX backToSharpOne 0E -> backToSharpOne eX 0E
0X temp 10 -> beginCopying 0X 10
e1 restoreCD 10 -> restoreCD e1 10
eX searchOne @0 -> restoreCD eX @0
0C temp 00 -> beginCopying 0C 00
e@ restoreCD 0& -> restoreCD e@ 01
0E dec e0 -> dec 0E e1
@C backToSharpZero e1 -> backToSharpZero @C e1
@X findBlank 0B -> FINAL @X 0B
e1 findBlank 11 -> temp e1 11
e$ replaceWithBlanks 1@ -> backToDFromRight e$ 1@
@$ backToFirstC 01 -> backToFirstC @$ 01
0C backToDFromRight 11 -> backToDFromRight 0C 11
1& restoreCD @1 -> restoreCD 1& @1
1& gotoMark 01 -> gotoMark 1& 01
0E backToSharpZero $D -> backToSharpZero 0E $D
1& backToDFromLeft @D -> searchNextBit 1& @D
@D prepEraseC 1D -> eraseC @D 1D
0% backToFirstC $0 -> backToFirstC 0% $0
eB eraseC $1 -> eraseC eB $B
0& beginCopying eB -> backToStart 0& eC
@$ eraseE 00 -> eraseE @$ 0B
e1 searchOne $0 -> restoreCD e1 $0
@$ eraseC 0C -> backToStart @$ 0X
$1 findBlank @B -> FINAL $1 @B
0& massErase e@ -> eraseE 0& e@
$E prepEraseC 01 -> prepEraseC $E 01
$1 initDivider @0 -> initDividerByTwo $1 @0
0C eraseC $1 -> eraseC 0C $B
$% backToDFromLeft eD -> searchNextBit $% eD
@@ replaceWithBlanks 0@ -> backToDFromRight @@ 0@
$1 backToDFromRight 11 -> backToDFromRight $1 11
eX backToSharpOne @1 -> backToSharpOne eX @1
@@ copyZero 1B -> backToSharpZero @@ 10
$X searchNextBit 11 -> searchNextBit $X 11
1D backToSharpOne @0 -> backToSharpOne 1D @0
$& backToDFromRight $E -> backToDFromRight $& $E
10 searchOne $0 -> restoreCD 10 $0
0$ restoreCD 0& -> restoreCD 0$ 01
$E eraseE eE -> prepEraseC $E eE
eE backToDFromLeft e0 -> backToDFromLeft eE e0
@X backToSharpOne $E -> backToSharpOne @X $E
$B temp $1 -> beginCopying $B $1
1D gotoDecC e1 -> gotoDecC 1D e1
@# backToSharpOne 1C -> backToSharpOne @# 1C
1% restoreCD 0& -> restoreCD 1% 01
@$ backToSharpOne 1E -> backToSharpOne @$ 1E
e0 temp 10 -> beginCopying e0 10
$0 gotoDecC e0 -> gotoDecC $0 e0
@@ restoreCD 1% -> restoreCD @@ 10
1B backToSharpOne @0 -> backToSharpOne 1B @0
11 initDivider 10 -> initDividerByTwo 11 10
$& gotoDecC $D -> dec $& $D
eE gotoLastE @@ -> dec eE @@
@C checkEForZero $B -> stop @C $B
$B searchNextBit 01 -> searchNextBit $B 01
00 backToSharpOne 0C -> backToSharpOne 00 0C
$1 searchOne 00 -> restoreCD $1 00
$X replaceWithBlanks $@ -> backToDFromRight $X $@
0@ backToDFromLeft @D -> searchNextBit 0@ @D
1C backToFirstC e0 -> backToFirstC 1C e0
00 massErase e@ -> eraseE 00 e@
@B initDividerByTwo 00 -> backToD @B 01
@& backToDFromLeft e1 -> backToDFromLeft @& e1
1C backToFirstC @1 -> backToFirstC 1C @1
e& searchNextBit 00 -> searchNextBit e& 00
$1 incD 11 -> incD $1 10
0@ backToSharpZero eX -> backToSharpZero 0@ eX
1# prepEraseC $1 -> prepEraseC 1# $1
eC backToStart 11 -> backToStart eC 11
1C initDivider $0 -> initDividerByTwo 1C $0
0% gotoMark 11 -> gotoMark 0% 11
$D initDivider 10 -> initDividerByTwo $D 10
1D backToDFromRight @E -> backToDFromRight 1D @E
eC gotoLastE 0@ -> dec eC 0@
@@ eraseE e0 -> eraseE @@ eB
$D backToDFromRight $0 -> backToDFromRight $D $0
e# FINAL -> FINAL e FINAL
1% findBlank 11 -> temp 1% 11
e% initDividerByTwo $0 -> backToD e% $1
e0 gotoMark @0 -> gotoMark e0 @0
0X gotoDecC e1 -> gotoDecC 0X e1
@& restoreCD 0% -> restoreCD @& 00
0$ backToSharpZero 1C -> backToSharpZero 0$ 1C
11 backToSharpZero e0 -> backToSharpZero 11 e0
e0 gotoMark $E -> gotoDecC e0 $E
1% backToSharpOne @1 -> backToSharpOne 1% @1
@@ backToD e0 -> backToD @@ e0
$D restoreCD $% -> restoreCD $D $0
$% searchOne 00 -> restoreCD $% 00
@0 searchNextBit $1 -> searchNextBit @0 $1
$0 backToSharpOne 01 -> backToSharpOne $0 01
1B prepEraseC @1 -> prepEraseC 1B @1
0X restoreCD eD -> restoreCD 0X eD
1@ checkEForZero 1B -> stop 1@ 1B
@X prepEraseC $D -> eraseC @X $D
10 incD 01 -> incD 10 00
1D checkCD 11 -> checkCD 1D 11
1# backToDFromRight 11 -> backToDFromRight 1# 11
eC backToDFromLeft e& -> backToDFromLeft eC e&
0B backToSharpZero 0D -> backToSharpZero 0B 0D
eE eraseC $1 -> eraseC eE $B
1@ findZero 01 -> beginCopying 1@ 01
0$ checkCD @1 -> checkCD 0$ @1
$C gotoMark @E -> gotoDecC $C @E
@B findBlank @0 -> temp @B @0
1X backToDFromLeft @D -> searchNextBit 1X @D
1C prepEraseC 11 -> prepEraseC 1C 11
e# beginCopying $B -> backToStart e# $C
0% backToD 10 -> backToD 0% 10
0E findZero 01 -> beginCopying 0E 01
$1 backToSharpZero eX -> backToSharpZero $1 eX
$X backToSharpOne eX -> backToSharpOne $X eX
@B searchZero $1 -> restoreCD @B $1
0E backToD 01 -> backToD 0E 01
@1 findBlank 01 -> temp @1 01
@# searchNextBit 10 -> searchNextBit @# 10
@B backToDFromRight $B -> backToDFromRight @B $B
0C backToSharpZero $X -> backToSharpZero 0C $X
10 dec 00 -> dec 10 01
forwardToLastD 0D -> 0D forwardToLastD
@D prepEraseC @0 -> prepEraseC @D @0
$# incD $0 -> checkCD $# $1
0D copyOne 0B -> backToSharpOne 0D 01
$B goToPlaceForDivider 0B -> backToFirstC $B 0D
@X searchOne $0 -> restoreCD @X $0
@C backToDFromLeft @1 -> backToDFromLeft @C @1
0$ eraseC eC -> backToStart 0$ eX
@@ backToDFromRight $1 -> backToDFromRight @@ $1
$0 prepEraseC $0 -> prepEraseC $0 $0
1D copyOne 0B -> backToSharpOne 1D 01
1E backToD 10 -> backToD 1E 10
e@ backToSharpZero 1E -> backToSharpZero e@ 1E
$& gotoMark 01 -> gotoMark $& 01
@E eraseC 1C -> backToStart @E 1X
0# eraseC 11 -> eraseC 0# 1B
0% goToPlaceForDivider 1B -> backToFirstC 0% 1D
0$ findBlank $1 -> temp 0$ $1
0$ gotoDecC $D -> dec 0$ $D
e& gotoLastE @@ -> dec e& @@
11 eraseE $0 -> eraseE 11 $B
0$ backToSharpZero 1E -> backToSharpZero 0$ 1E
1C checkEForZero 1B -> stop 1C 1B
@D restoreCD @& -> restoreCD @D @1
0C goToPlaceForDivider $B -> backToFirstC 0C $D
1D searchOne @0 -> restoreCD 1D @0
1B backToDFromRight 0E -> backToDFromRight 1B 0E
10 backToDFromRight e0 -> backToDFromRight 10 e0
e0 temp e0 -> beginCopying e0 e0
0D dec @1 -> gotoMark 0D @0
e% backToD e1 -> backToD e% e1
1E restoreCD $1 -> restoreCD 1E $1
0E eraseC @C -> backToStart 0E @X
1% eraseC 1C -> backToStart 1% 1X
eC massErase $@ -> eraseE eC $@
@$ backToSharpZero 0E -> backToSharpZero @$ 0E
$& backToSharpOne @E -> backToSharpOne $& @E
$B backToSharpOne 1C -> backToSharpOne $B 1C
01 backToSharpZero 1X -> backToSharpZero 01 1X
0X searchZero 01 -> restoreCD 0X 01
@C backToDFromLeft 0% -> backToDFromLeft @C 0%
@E backToSharpZero $X -> backToSharpZero @E $X
$0 dec 01 -> gotoMark $0 00
0@ backToDFromRight $0 -> backToDFromRight 0@ $0
$$ restoreCD 00 -> restoreCD $$ 00
@C checkCD 01 -> checkCD @C 01
0# searchOne 01 -> backToDFromLeft 0# 0&
1@ backToDFromLeft $& -> backToDFromLeft 1@ $&
eD backToFirstC 01 -> backToFirstC eD 01
$# gotoDecC 1D -> dec $# 1D
0% findBlank 01 -> temp 0% 01
1D gotoDecC 0D -> dec 1D 0D
@B gotoDecC 10 -> gotoDecC @B 10
0@ backToDFromRight e0 -> backToDFromRight 0@ e0
eE backToStart $1 -> backToStart eE $1
e# gotoMark eE -> gotoDecC e# eE
@@ backToSharpOne 1C -> backToSharpOne @@ 1C
$X searchZero @1 -> restoreCD $X @1
e1 gotoMark 10 -> gotoMark e1 10
$@ eraseE 0E -> prepEraseC $@ 0E
$% backToSharpZero $E -> backToSharpZero $% $E
01 temp 00 -> beginCopying 01 00
@& massErase 1@ -> eraseE @& 1@
@D searchNextBit @1 -> searchNextBit @D @1
eE restoreCD 10 -> restoreCD eE 10
1C backToDFromLeft 0% -> backToDFromLeft 1C 0%
1E backToDFromLeft @& -> backToDFromLeft 1E @&
e$ backToDFromLeft $0 -> backToDFromLeft e$ $0
1D backToSharpOne 01 -> backToSharpOne 1D 01
0$ beginCopying 0B -> backToStart 0$ 0C
1B eraseE 10 -> eraseE 1B 1B
eB backToDFromRight $E -> backToDFromRight eB $E
$B restoreCD 01 -> restoreCD $B 01
@B eraseE @1 -> eraseE @B @B
0& eraseC e0 -> eraseC 0& eB
0C backToDFromLeft $0 -> backToDFromLeft 0C $0
1@ findBlank $1 -> temp 1@ $1
1B findBlank 0B -> FINAL 1B 0B
00 dec 01 -> gotoMark 00 00
eB eraseE eE -> prepEraseC eB eE
@# backToSharpOne @C -> backToSharpOne @# @C
$0 backToSharpOne eE -> backToSharpOne $0 eE
$D searchZero @1 -> restoreCD $D @1
00 dec $0 -> dec 00 $1
$# backToD e1 -> backToD $# e1
e$ replaceWithBlanks @@ -> backToDFromRight e$ @@
1B searchOne $1 -> backToDFromLeft 1B $&
e% gotoMark e1 -> gotoMark e% e1
1@ backToFirstC 10 -> backToFirstC 1@ 10
@B eraseE 10 -> eraseE @B 1B
1@ prepEraseC @1 -> prepEraseC 1@ @1
@# restoreCD 0% -> restoreCD @# 00
$D initDivider e0 -> initDividerByTwo $D e0
1X backToSharpZero 0X -> backToSharpZero 1X 0X
1E backToDFromLeft @D -> searchNextBit 1E @D
e$ backToSharpZero $X -> backToSharpZero e$ $X
@& backToFirstC @1 -> backToFirstC @& @1
@1 incD 01 -> incD @1 00
1@ searchNextBit 00 -> searchNextBit 1@ 00
$X incD 10 -> checkCD $X 11
1# backToD 11 -> backToD 1# 11
@% forwardToLastD eE -> incD @% eE
@0 backToSharpZero @0 -> backToSharpZero @0 @0
0E backToSharpZero 1D -> backToSharpZero 0E 1D
0@ prepEraseC $1 -> prepEraseC 0@ $1
$B backToStart $1 -> backToStart $B $1
$1 nullifier 1B -> initDivider $1 1E
@C backToSharpOne 01 -> backToSharpOne @C 01
1D backToDFromLeft 1& -> backToDFromLeft 1D 1&
@@ backToDFromRight 10 -> backToDFromRight @@ 10
e@ gotoLastE e@ -> dec e@ e@
@@ massErase $@ -> eraseE @@ $@
$D gotoDecC 11 -> gotoDecC $D 11
10 copyOne 1B -> backToSharpOne 10 11
0E backToSharpOne $0 -> backToSharpOne 0E $0
1E backToFirstC e0 -> backToFirstC 1E e0
@C copyOne $B -> backToSharpOne @C $1
eX incD e0 -> checkCD eX e1
1C replaceWithBlanks e@ -> backToDFromRight 1C e@
$0 backToDFromRight $1 -> backToDFromRight $0 $1
01 gotoDecC @0 -> gotoDecC 01 @0
e% temp @0 -> beginCopying e% @0
$& gotoDecC 10 -> gotoDecC $& 10
e$ gotoDecC @D -> dec e$ @D
$D backToSharpZero 0E -> backToSharpZero $D 0E
@E backToDFromLeft e& -> backToDFromLeft @E e&
0# checkCD 10 -> checkCD 0# 10
@D findBlank eB -> FINAL @D eB
eB backToDFromRight 10 -> backToDFromRight eB 10
$& backToSharpZero 10 -> backToSharpZero $& 10
0B backToDFromLeft 0D -> searchNextBit 0B 0D
1E restoreCD e& -> restoreCD 1E e1
$$ backToDFromLeft $0 -> backToDFromLeft $$ $0
$D temp $0 -> beginCopying $D $0
e& restoreCD 0% -> restoreCD e& 00
@E searchOne @1 -> backToDFromLeft @E @&
@C restoreCD $1 -> restoreCD @C $1
$0 eraseC e1 -> eraseC $0 eB
@D eraseE 10 -> eraseE @D 1B
@X forwardToLastD 0E -> incD @X 0E
$D backToDFromRight $B -> backToDFromRight $D $B
e% backToDFromLeft e% -> backToDFromLeft e% e%
0E eraseC e1 -> eraseC 0E eB
1% checkCD e0 -> checkCD 1% e0
@C prepEraseC e0 -> prepEraseC @C e0
$& restoreCD @% -> restoreCD $& @0
1D checkCD 00 -> checkCD 1D 00
eE searchOne 01 -> backToDFromLeft eE 0&
1X backToD 01 -> backToD 1X 01
0& dec e1 -> gotoMark 0& e0
@$ searchOne 00 -> restoreCD @$ 00
$& backToDFromLeft 1D -> searchNextBit $& 1D
0E eraseE 00 -> eraseE 0E 0B
eC searchNextBit @1 -> searchNextBit eC @1
$% goToPlaceForDivider 0B -> backToFirstC $% 0D
1D backToSharpZero eE -> backToSharpZero 1D eE
1# backToFirstC @1 -> backToFirstC 1# @1
0$ eraseC 0C -> backToStart 0$ 0X
e1 incD 01 -> incD e1 00
00 backToSharpZero @0 -> backToSharpZero 00 @0
1# eraseC e0 -> eraseC 1# eB
0D backToFirstC @1 -> backToFirstC 0D @1
@# backToSharpOne $C -> backToSharpOne @# $C
0E gotoMark 11 -> gotoMark 0E 11
11 backToDFromLeft 0% -> backToDFromLeft 11 0%
01 forwardToLastD 0E -> incD 01 0E
0C backToD e0 -> backToD 0C e0
0% eraseE 10 -> eraseE 0% 1B
1B copyOne 1B -> backToSharpOne 1B 11
11 massErase 1@ -> eraseE 11 1@
$% initDivider 10 -> initDividerByTwo $% 10
$C backToSharpOne eC -> backToSharpOne $C eC
$1 eraseE 01 -> eraseE $1 0B
00 copyOne $B -> backToSharpOne 00 $1
@D backToSharpZero $C -> backToSharpZero @D $C
1B dec 00 -> dec 1B 01
$@ checkCD 10 -> checkCD $@ 10
@C backToSharpZero eC -> backToSharpZero @C eC
1D eraseC $1 -> eraseC 1D $B
1D findBlank @B -> FINAL 1D @B
01 temp e0 -> beginCopying 01 e0
1B backToSharpZero @C -> backToSharpZero 1B @C
1D eraseC $C -> backToStart 1D $X
@0 backToSharpOne 0E -> backToSharpOne @0 0E
1$ backToSharpOne @D -> backToSharpOne 1$ @D
e$ replaceWithBlanks $@ -> backToDFromRight e$ $@
11 searchNextBit e1 -> searchNextBit 11 e1
1# backToSharpZero 0X -> backToSharpZero 1# 0X
0C eraseC 10 -> eraseC 0C 1B
1C prepEraseC 01 -> prepEraseC 1C 01
e@ backToDFromRight 0B -> backToDFromRight e@ 0B
replaceWithBlanks 10 -> 1B replaceWithBlanks
e# nullifier 1B -> initDivider e# 1E
$@ restoreCD eD -> restoreCD $@ eD
checkZeroD $0 -> $0 checkZeroD
e$ massErase 0@ -> eraseE e$ 0@
0$ dec e0 -> dec 0$ e1
backToStart e$ -> e$ createCopy
0D backToD e1 -> backToD 0D e1
0X dec 01 -> gotoMark 0X 00
@& backToD e0 -> backToD @& e0
@@ copyZero @B -> backToSharpZero @@ @0
$E eraseC 00 -> eraseC $E 0B
@% temp @0 -> beginCopying @% @0
@D backToSharpOne $1 -> backToSharpOne @D $1
0C searchZero @0 -> backToDFromLeft 0C @%
$B forwardToLastD eE -> incD $B eE
@1 eraseE 11 -> eraseE @1 1B
@B findBlank 10 -> temp @B 10
1E eraseC 11 -> eraseC 1E 1B
1& eraseE 10 -> eraseE 1& 1B
$1 goToPlaceForDivider eB -> backToFirstC $1 eD
11 backToFirstC 10 -> backToFirstC 11 10
@X backToD 10 -> backToD @X 10
$1 gotoMark 11 -> gotoMark $1 11
0C dec $1 -> gotoMark 0C $0
$# gotoLastE e@ -> dec $# e@
0X backToDFromLeft @D -> searchNextBit 0X @D
00 backToSharpZero 1X -> backToSharpZero 00 1X
$0 backToSharpZero 0E -> backToSharpZero $0 0E
1D findZero e1 -> beginCopying 1D e1
1X backToDFromLeft 10 -> backToDFromLeft 1X 10
@& FINAL -> FINAL @ FINAL
1B backToSharpZero eE -> backToSharpZero 1B eE
1B dec e0 -> dec 1B e1
10 backToFirstC 01 -> backToFirstC 10 01
@$ goToPlaceForDivider $B -> backToFirstC @$ $D
00 backToSharpOne @E -> backToSharpOne 00 @E
@D gotoDecC 10 -> gotoDecC @D 10
$1 searchNextBit 10 -> searchNextBit $1 10
1D gotoLastE @@ -> dec 1D @@
@% backToDFromLeft e0 -> backToDFromLeft @% e0
eE eraseE @E -> prepEraseC eE @E
0& copyOne 1B -> backToSharpOne 0& 11
1& eraseE @E -> prepEraseC 1& @E
0$ beginCopying @B -> backToStart 0$ @C
eB backToSharpOne 0D -> backToSharpOne eB 0D
e@ gotoMark 0E -> gotoDecC e@ 0E
@B initDividerByTwo @0 -> backToD @B @1
$D gotoLastE @@ -> dec $D @@
0C backToSharpZero 10 -> backToSharpZero 0C 10
eE initDivider @0 -> initDividerByTwo eE @0
$& dec @1 -> gotoMark $& @0
0# backToDFromLeft e0 -> backToDFromLeft 0# e0
eD backToFirstC $1 -> backToFirstC eD $1
1B backToSharpOne 0C -> backToSharpOne 1B 0C
$$ dec @0 -> dec $$ @1
0E backToDFromLeft 11 -> backToDFromLeft 0E 11
$0 backToD e0 -> backToD $0 e0
0@ searchOne $0 -> restoreCD 0@ $0
00 backToStart 00 -> backToStart 00 00
e% backToDFromRight 11 -> backToDFromRight e% 11
$D gotoMark 00 -> gotoMark $D 00
1C backToFirstC @0 -> backToFirstC 1C @0
@1 restoreCD @1 -> restoreCD @1 @1
e0 backToDFromLeft 10 -> backToDFromLeft e0 10
e0 prepEraseC 1D -> eraseC e0 1D
@X searchNextBit 11 -> searchNextBit @X 11
1D restoreCD $% -> restoreCD 1D $0
eD backToSharpOne 10 -> backToSharpOne eD 10
$D backToDFromRight @1 -> backToDFromRight $D @1
1X gotoDecC 01 -> gotoDecC 1X 01
e% temp e1 -> beginCopying e% e1
00 backToD $0 -> backToD 00 $0
@X dec $1 -> gotoMark @X $0
@1 dec 10 -> dec @1 11
$1 incD $1 -> incD $1 $0
@C gotoMark $E -> gotoDecC @C $E
e0 findBlank eB -> FINAL e0 eB
$1 prepEraseC $D -> eraseC $1 $D
eE backToFirstC 01 -> backToFirstC eE 01
@E massErase 1@ -> eraseE @E 1@
@B backToDFromLeft $& -> backToDFromLeft @B $&
@% gotoLastE e@ -> dec @% e@
1B gotoMark 01 -> gotoMark 1B 01
10 backToSharpZero $C -> backToSharpZero 10 $C
$@ restoreCD 10 -> restoreCD $@ 10
e$ gotoMark eE -> gotoDecC e$ eE
e$ restoreCD 0& -> restoreCD e$ 01
@E backToDFromLeft 11 -> backToDFromLeft @E 11
eB searchZero @1 -> restoreCD eB @1
10 searchOne 10 -> restoreCD 10 10
0B searchOne @0 -> restoreCD 0B @0
eC searchNextBit e1 -> searchNextBit eC e1
$# eraseC 11 -> eraseC $# 1B
@$ incD 00 -> checkCD @$ 01
0B eraseC $0 -> eraseC 0B $B
eqCD 1D -> 1D FINAL
0$ checkCD @D -> checkCD 0$ @D
0$ gotoDecC 01 -> gotoDecC 0$ 01
$@ backToSharpZero eC -> backToSharpZero $@ eC
@@ backToSharpZero 0E -> backToSharpZero @@ 0E
eX backToSharpZero $D -> backToSharpZero eX $D
00 backToSharpZero @X -> backToSharpZero 00 @X
1& copyZero 1B -> backToSharpZero 1& 10
$1 eraseC eC -> backToStart $1 eX
@$ backToDFromRight 10 -> backToDFromRight @$ 10
$B copyOne $B -> backToSharpOne $B $1
0& findBlank e0 -> temp 0& e0
1@ backToDFromRight 0E -> backToDFromRight 1@ 0E
1X backToSharpZero @C -> backToSharpZero 1X @C
1C backToDFromRight 1E -> backToDFromRight 1C 1E
00 prepEraseC @0 -> prepEraseC 00 @0
@C replaceWithBlanks 0@ -> backToDFromRight @C 0@
e0 eraseE 1E -> prepEraseC e0 1E
e# massErase 0@ -> eraseE e# 0@
$C restoreCD $D -> restoreCD $C $D
0$ backToDFromRight 11 -> backToDFromRight 0$ 11
0$ gotoMark $E -> gotoDecC 0$ $E
@X incD $1 -> incD @X $0
1@ checkCD e1 -> checkCD 1@ e1
@1 backToSharpZero @E -> backToSharpZero @1 @E
0B backToDFromRight 1B -> backToDFromRight 0B 1B
0B nullifier @B -> initDivider 0B @E
0E replaceWithBlanks 0@ -> backToDFromRight 0E 0@
e% backToSharpZero eX -> backToSharpZero e% eX
$0 searchZero $1 -> restoreCD $0 $1
@# nullifier @B -> initDivider @# @E
e0 eraseC eC -> backToStart e0 eX
1X checkCD @1 -> checkCD 1X @1
@E findBlank $0 -> temp @E $0
$# backToSharpZero 0C -> backToSharpZero $# 0C
1% backToDFromLeft @1 -> backToDFromLeft 1% @1
0% massErase e@ -> eraseE 0% e@
0E replaceWithBlanks e@ -> backToDFromRight 0E e@
@# backToD e1 -> backToD @# e1
@# backToSharpZero 1D -> backToSharpZero @# 1D
$C dec @1 -> gotoMark $C @0
$& backToSharpZero 1C -> backToSharpZero $& 1C
@E searchNextBit $1 -> searchNextBit @E $1
0% checkCD @0 -> checkCD 0% @0
eD backToSharpZero eE -> backToSharpZero eD eE
$$ backToD $1 -> backToD $$ $1
0$ backToDFromLeft e1 -> backToDFromLeft 0$ e1
01 prepEraseC 11 -> prepEraseC 01 11
$$ restoreCD eD -> restoreCD $$ eD
00 backToSharpZero eE -> backToSharpZero 00 eE
$E eraseE 00 -> eraseE $E 0B
e@ backToDFromRight 10 -> backToDFromRight e@ 10
e# backToSharpZero e0 -> backToSharpZero e# e0
$D temp 10 -> beginCopying $D 10
e$ backToDFromLeft 1D -> searchNextBit e$ 1D
0E eraseC @1 -> eraseC 0E @B
$X backToFirstC 00 -> backToFirstC $X 00
e$ gotoDecC 0D -> dec e$ 0D
0E backToDFromLeft 0% -> backToDFromLeft 0E 0%
@0 incD $1 -> incD @0 $0
$$ backToSharpOne @0 -> backToSharpOne $$ @0
eC backToSharpZero 11 -> backToSharpZero eC 11
eX beginCopying eB -> backToStart eX eC
00 searchNextBit $1 -> searchNextBit 00 $1
eC restoreCD e1 -> restoreCD eC e1
1E initDividerByTwo e0 -> backToD 1E e1
eB backToDFromRight eB -> backToDFromRight eB eB
e$ prepEraseC $D -> eraseC e$ $D
$B findZero 11 -> beginCopying $B 11
@$ backToSharpZero 1C -> backToSharpZero @$ 1C
eD findBlank 1B -> FINAL eD 1B
@E prepEraseC 01 -> prepEraseC @E 01
0E restoreCD @& -> restoreCD 0E @1
0% temp @0 -> beginCopying 0% @0
eX eraseE 00 -> eraseE eX 0B
0X dec e1 -> gotoMark 0X e0
eB backToStart 11 -> backToStart eB 11
$@ backToDFromRight 0E -> backToDFromRight $@ 0E
$@ restoreCD 00 -> restoreCD $@ 00
0& findBlank 11 -> temp 0& 11
0D nullifier 0B -> initDivider 0D 0E
10 backToDFromRight eE -> backToDFromRight 10 eE
FINAL 00 -> FINAL 0 FINAL
0E restoreCD 00 -> restoreCD 0E 00
$# searchZero @1 -> restoreCD $# @1
eD beginCopying 0B -> backToStart eD 0C
eD incD 11 -> incD eD 10
1X eraseC 0C -> backToStart 1X 0X
@& searchNextBit e1 -> searchNextBit @& e1
0E findBlank e0 -> temp 0E e0
1X backToD e1 -> backToD 1X e1
1B dec 11 -> gotoMark 1B 10
eB backToDFromLeft 0% -> backToDFromLeft eB 0%
00 backToSharpZero 10 -> backToSharpZero 00 10
@D backToStart e0 -> backToStart @D e0
0C gotoMark @E -> gotoDecC 0C @E
e$ findBlank eB -> FINAL e$ eB
eX eraseE $E -> prepEraseC eX $E
1E copyZero $B -> backToSharpZero 1E $0
$E backToSharpZero $X -> backToSharpZero $E $X
01 gotoDecC 11 -> gotoDecC 01 11
0X backToSharpZero @D -> backToSharpZero 0X @D
@0 checkCD $0 -> checkCD @0 $0
@X findBlank e1 -> temp @X e1
$C restoreCD @D -> restoreCD $C @D
$D backToD $0 -> backToD $D $0
1X backToSharpOne @C -> backToSharpOne 1X @C
@& searchZero $1 -> restoreCD @& $1
$$ initDividerByTwo $0 -> backToD $$ $1
$B gotoMark @0 -> gotoMark $B @0
$# copyOne eB -> backToSharpOne $# e1
eB backToStart 10 -> backToStart eB 10
1& backToDFromRight 00 -> backToDFromRight 1& 00
0& beginCopying $B -> backToStart 0& $C
$$ initDividerByTwo 00 -> backToD $$ 01
10 restoreCD e1 -> restoreCD 10 e1
0$ checkCD 11 -> checkCD 0$ 11
@0 checkCD 0D -> checkCD @0 0D
eD findBlank $B -> FINAL eD $B
$D beginCopying 0B -> backToStart $D 0C
$@ restoreCD 0D -> restoreCD $@ 0D
e& gotoDecC $1 -> gotoDecC e& $1
FINAL e% -> FINAL e FINAL
@& incD 10 -> checkCD @& 11
$B eraseE $0 -> eraseE $B $B
$X prepEraseC e0 -> prepEraseC $X e0
@D restoreCD 1D -> restoreCD @D 1D
$0 eraseE @0 -> eraseE $0 @B
eE searchOne 11 -> backToDFromLeft eE 1&
0@ goToPlaceForDivider 0B -> backToFirstC 0@ 0D
11 backToStart 10 -> backToStart 11 10
eE backToDFromRight 1B -> backToDFromRight eE 1B
$X backToDFromLeft 01 -> backToDFromLeft $X 01
e@ findBlank @1 -> temp e@ @1
@0 eraseC 11 -> eraseC @0 1B
0& searchNextBit 11 -> searchNextBit 0& 11
$D forwardToLastD @E -> incD $D @E
findZero $0 -> $0 findBlank
eC backToDFromLeft @& -> backToDFromLeft eC @&
1D findZero 11 -> beginCopying 1D 11
@& backToSharpZero 0D -> backToSharpZero @& 0D
1E checkCD $0 -> checkCD 1E $0
e1 beginCopying $B -> backToStart e1 $C
1X prepEraseC $0 -> prepEraseC 1X $0
$C findBlank 10 -> temp $C 10
e@ eraseE $0 -> eraseE e@ $B
$D checkCD 01 -> checkCD $D 01
0# searchNextBit $0 -> searchNextBit 0# $0
@E dec $1 -> gotoMark @E $0
1E backToSharpOne $E -> backToSharpOne 1E $E
01 backToSharpZero $0 -> backToSharpZero 01 $0
@% temp $0 -> beginCopying @% $0
$1 gotoLastE 1@ -> dec $1 1@
1@ backToDFromRight 11 -> backToDFromRight 1@ 11
e& gotoDecC @1 -> gotoDecC e& @1
0& backToSharpZero 10 -> backToSharpZero 0& 10
10 backToSharpZero eE -> backToSharpZero 10 eE
0@ incD 00 -> checkCD 0@ 01
1B replaceWithBlanks @@ -> backToDFromRight 1B @@
e% findBlank 00 -> temp e% 00
eC backToDFromLeft e0 -> backToDFromLeft eC e0
0E backToD 11 -> backToD 0E 11
1X searchOne 01 -> backToDFromLeft 1X 0&
0& backToDFromLeft 01 -> backToDFromLeft 0& 01
@C incD 00 -> checkCD @C 01
1# backToSharpOne 1X -> backToSharpOne 1# 1X
e& eraseC 0C -> backToStart e& 0X
10 gotoMark 01 -> gotoMark 10 01
eD nullifier 0B -> initDivider eD 0E
e0 backToSharpOne @X -> backToSharpOne e0 @X
$& restoreCD eD -> restoreCD $& eD
0X gotoMark $0 -> gotoMark 0X $0
0& copyZero @B -> backToSharpZero 0& @0
11 gotoDecC eD -> dec 11 eD
11 backToSharpOne 10 -> backToSharpOne 11 10
e$ beginCopying 0B -> backToStart e$ 0C
$1 backToDFromLeft e0 -> backToDFromLeft $1 e0
1% backToSharpOne e0 -> backToSharpOne 1% e0
eX restoreCD @% -> restoreCD eX @0
0$ backToD $0 -> backToD 0$ $0
e& eraseC e1 -> eraseC e& eB
e& nullifier $B -> initDivider e& $E
1@ searchZero 01 -> restoreCD 1@ 01
$C backToD @0 -> backToD $C @0
@% prepEraseC $D -> eraseC @% $D
0& eraseC @1 -> eraseC 0& @B
01 backToDFromLeft $0 -> backToDFromLeft 01 $0
e1 eraseE @0 -> eraseE e1 @B
e0 restoreCD $0 -> restoreCD e0 $0
e$ temp @0 -> beginCopying e$ @0
@B dec e0 -> dec @B e1
$& gotoLastE $@ -> dec $& $@
00 gotoDecC 10 -> gotoDecC 00 10
1D backToD 01 -> backToD 1D 01
eD restoreCD 1& -> restoreCD eD 11
@$ copyOne 0B -> backToSharpOne @$ 01
1X backToFirstC @1 -> backToFirstC 1X @1
$# backToSharpZero eD -> backToSharpZero $# eD
1C backToSharpOne @X -> backToSharpOne 1C @X
eC eraseE eE -> prepEraseC eC eE
@B backToD @0 -> backToD @B @0
e1 checkCD 0D -> checkCD e1 0D
0@ findZero 01 -> beginCopying 0@ 01
e$ backToSharpOne 1C -> backToSharpOne e$ 1C
$C searchOne @0 -> restoreCD $C @0
0# eraseE 11 -> eraseE 0# 1B
1D replaceWithBlanks @@ -> backToDFromRight 1D @@
eE backToSharpOne 1X -> backToSharpOne eE 1X
@# searchNextBit 11 -> searchNextBit @# 11
$C replaceWithBlanks e@ -> backToDFromRight $C e@
0B searchNextBit 01 -> searchNextBit 0B 01
10 replaceWithBlanks $@ -> backToDFromRight 10 $@
@D gotoDecC $0 -> gotoDecC @D $0
01 findBlank 11 -> temp 01 11
e1 backToDFromRight $0 -> backToDFromRight e1 $0
1X backToDFromLeft $0 -> backToDFromLeft 1X $0
@E backToDFromRight $E -> backToDFromRight @E $E
e1 dec e0 -> dec e1 e1
0@ backToStart e0 -> backToStart 0@ e0
moveToE e0 -> e0 moveToE
$X searchOne 00 -> restoreCD $X 00
1$ backToSharpOne $D -> backToSharpOne 1$ $D
@1 backToSharpZero @C -> backToSharpZero @1 @C
$1 goToPlaceForDivider 1B -> backToFirstC $1 1D
eB prepEraseC 11 -> prepEraseC eB 11
0E dec 11 -> gotoMark 0E 10
0C backToFirstC 01 -> backToFirstC 0C 01
1B backToD 10 -> backToD 1B 10
@X backToFirstC @0 -> backToFirstC @X @0
01 restoreCD e& -> restoreCD 01 e1
00 searchOne 01 -> backToDFromLeft 00 0&
1B searchZero 01 -> restoreCD 1B 01
e& nullifier eB -> initDivider e& eE
0@ backToSharpZero 0C -> backToSharpZero 0@ 0C
e# backToSharpZero @0 -> backToSharpZero e# @0
eB prepEraseC @D -> eraseC eB @D
1E prepEraseC 10 -> prepEraseC 1E 10
1$ massErase @@ -> eraseE 1$ @@
@# copyOne $B -> backToSharpOne @# $1
@B backToDFromLeft @1 -> backToDFromLeft @B @1
@X temp e0 -> beginCopying @X e0
@X prepEraseC e0 -> prepEraseC @X e0
1@ backToSharpZero eX -> backToSharpZero 1@ eX
@& backToSharpZero $E -> backToSharpZero @& $E
@% backToSharpOne 10 -> backToSharpOne @% 10
0% checkCD $0 -> checkCD 0% $0
1C searchOne @1 -> backToDFromLeft 1C @&
1% backToSharpZero e0 -> backToSharpZero 1% e0
eE forwardToLastD $E -> incD eE $E
eC backToSharpZero $X -> backToSharpZero eC $X
0C gotoLastE @@ -> dec 0C @@
00 backToStart @0 -> backToStart 00 @0
@% findBlank @1 -> temp @% @1
@X backToD e0 -> backToD @X e0
e@ backToD 10 -> backToD e@ 10
0$ gotoDecC e0 -> gotoDecC 0$ e0
1X backToSharpOne eE -> backToSharpOne 1X eE
$X gotoMark $E -> gotoDecC $X $E
eC checkCD e0 -> checkCD eC e0
eD backToSharpOne 0E -> backToSharpOne eD 0E
$& beginCopying @B -> backToStart $& @C
0B backToStart e1 -> backToStart 0B e1
0D backToFirstC 01 -> backToFirstC 0D 01
@D backToStart 00 -> backToStart @D 00
0$ findBlank eB -> FINAL 0$ eB
eE prepEraseC 10 -> prepEraseC eE 10
0D findBlank 0B -> FINAL 0D 0B
00 replaceWithBlanks 0@ -> backToDFromRight 00 0@
@0 findZero @1 -> beginCopying @0 @1
$% backToDFromRight 0E -> backToDFromRight $% 0E
1D copyOne 1B -> backToSharpOne 1D 11
1B backToDFromRight @B -> backToDFromRight 1B @B
$$ backToStart e0 -> backToStart $$ e0
$% eraseC 1C -> backToStart $% 1X
@$ forwardToLastD eE -> incD @$ eE
$B copyOne @B -> backToSharpOne $B @1
1E backToDFromRight $0 -> backToDFromRight 1E $0
@% gotoMark e0 -> gotoMark @% e0
e# backToSharpOne eC -> backToSharpOne e# eC
@# searchZero $1 -> restoreCD @# $1
e@ backToDFromLeft 1D -> searchNextBit e@ 1D
$E gotoMark $0 -> gotoMark $E $0
@& initDividerByTwo e0 -> backToD @& e1
eX dec $0 -> dec eX $1
eC findZero 11 -> beginCopying eC 11
@# prepEraseC eD -> eraseC @# eD
eD initDividerByTwo 00 -> backToD eD 01
$$ backToDFromRight e1 -> backToDFromRight $$ e1
$@ checkEForZero 1B -> stop $@ 1B
@0 backToSharpOne e0 -> backToSharpOne @0 e0
1% eraseC $1 -> eraseC 1% $B
$D gotoDecC 01 -> gotoDecC $D 01
$$ searchZero 00 -> backToDFromLeft $$ 0%
@0 temp e1 -> beginCopying @0 e1
@X copyOne $B -> backToSharpOne @X $1
e1 backToDFromRight @0 -> backToDFromRight e1 @0
e@ forwardToLastD 0E -> incD e@ 0E
e$ backToSharpOne e0 -> backToSharpOne e$ e0
e# findZero @1 -> beginCopying e# @1
$0 gotoDecC $0 -> gotoDecC $0 $0
0# backToStart e0 -> backToStart 0# e0
@D backToFirstC @1 -> backToFirstC @D @1
0B eraseC eC -> backToStart 0B eX
@@ backToFirstC 10 -> backToFirstC @@ 10
e% searchOne e1 -> backToDFromLeft e% e&
11 restoreCD 00 -> restoreCD 11 00
@C temp @1 -> beginCopying @C @1
$& backToD 01 -> backToD $& 01
$X prepEraseC $1 -> prepEraseC $X $1
$& restoreCD 0& -> restoreCD $& 01
$& eraseE $E -> prepEraseC $& $E
@@ temp 01 -> beginCopying @@ 01
e% backToStart 11 -> backToStart e% 11
0@ restoreCD @D -> restoreCD 0@ @D
0@ backToDFromLeft e& -> backToDFromLeft 0@ e&
0E temp 00 -> beginCopying 0E 00
e$ backToSharpOne 0E -> backToSharpOne e$ 0E
$@ backToDFromLeft @D -> searchNextBit $@ @D
@@ searchNextBit @0 -> searchNextBit @@ @0
@1 backToSharpZero @X -> backToSharpZero @1 @X
1$ backToSharpOne $C -> backToSharpOne 1$ $C
$@ checkCD 01 -> checkCD $@ 01
00 incD $0 -> checkCD 00 $1
0$ backToDFromRight 01 -> backToDFromRight 0$ 01
1% backToSharpZero eD -> backToSharpZero 1% eD
0X checkCD 1D -> checkCD 0X 1D
0B gotoMark 01 -> gotoMark 0B 01
$E incD $1 -> incD $E $0
$C backToDFromLeft 0D -> searchNextBit $C 0D
$C eraseC @C -> backToStart $C @X
@0 dec 10 -> dec @0 11
$X temp e0 -> beginCopying $X e0
$E dec e0 -> dec $E e1
1$ massErase 1@ -> eraseE 1$ 1@
$$ gotoDecC $1 -> gotoDecC $$ $1
10 searchNextBit @1 -> searchNextBit 10 @1
$$ searchOne @1 -> backToDFromLeft $$ @&
e1 backToSharpZero e1 -> backToSharpZero e1 e1
0X gotoDecC 0D -> dec 0X 0D
$$ backToDFromLeft 1% -> backToDFromLeft $$ 1%
0C backToDFromRight @B -> backToDFromRight 0C @B
11 backToSharpZero 1X -> backToSharpZero 11 1X
00 findBlank 1B -> FINAL 00 1B
11 backToSharpZero @X -> backToSharpZero 11 @X
0$ eraseC e0 -> eraseC 0$ eB
e$ backToSharpZero e1 -> backToSharpZero e$ e1
@X backToDFromLeft e& -> backToDFromLeft @X e&
e% prepEraseC e0 -> prepEraseC e% e0
0# searchNextBit $1 -> searchNextBit 0# $1
1E backToSharpOne $1 -> backToSharpOne 1E $1
@& backToD 01 -> backToD @& 01
@$ backToStart e0 -> backToStart @$ e0
@E backToSharpZero eC -> backToSharpZero @E eC
$B backToSharpZero 0C -> backToSharpZero $B 0C
@# checkCD @1 -> checkCD @# @1
@# searchNextBit 01 -> searchNextBit @# 01
@# beginCopying $B -> backToStart @# $C
$B searchOne 01 -> backToDFromLeft $B 0&
eC dec 11 -> gotoMark eC 10
1X eraseE 0E -> prepEraseC 1X 0E
0C backToFirstC $1 -> backToFirstC 0C $1
eB prepEraseC e1 -> prepEraseC eB e1
01 temp $0 -> beginCopying 01 $0
0D backToSharpOne $D -> backToSharpOne 0D $D
@# backToDFromLeft e0 -> backToDFromLeft @# e0
0$ initDividerByTwo $0 -> backToD 0$ $1
@X restoreCD e& -> restoreCD @X e1
1# initDividerByTwo e0 -> backToD 1# e1
1C copyZero $B -> backToSharpZero 1C $0
0# dec 00 -> dec 0# 01
@% nullifier @B -> initDivider @% @E
@X backToDFromLeft 1& -> backToDFromLeft @X 1&
$B copyZero 1B -> backToSharpZero $B 10
@B backToSharpZero eC -> backToSharpZero @B eC
@0 backToD 10 -> backToD @0 10
0E massErase @@ -> eraseE 0E @@
$E backToDFromRight eE -> backToDFromRight $E eE
$$ backToDFromRight 0E -> backToDFromRight $$ 0E
0E searchNextBit 00 -> searchNextBit 0E 00
e& checkCD 01 -> checkCD e& 01
0$ eraseE e0 -> eraseE 0$ eB
@# findBlank e0 -> temp @# e0
$# forwardToLastD 0E -> incD $# 0E
0B backToDFromRight 11 -> backToDFromRight 0B 11
1$ searchOne @0 -> restoreCD 1$ @0
@B prepEraseC @D -> eraseC @B @D
1& backToDFromLeft 01 -> backToDFromLeft 1& 01
$0 gotoDecC @D -> dec $0 @D
$0 beginCopying eB -> backToStart $0 eC
0X searchOne e1 -> backToDFromLeft 0X e&
@C findZero @1 -> beginCopying @C @1
$% incD $1 -> incD $% $0
eC backToSharpOne 1C -> backToSharpOne eC 1C
0C dec e0 -> dec 0C e1
e0 backToDFromLeft $% -> backToDFromLeft e0 $%
@0 beginCopying 1B -> backToStart @0 1C
@C incD @0 -> checkCD @C @1
0B incD 11 -> incD 0B 10
0@ restoreCD @1 -> restoreCD 0@ @1
eE backToFirstC e1 -> backToFirstC eE e1
@% findZero 01 -> beginCopying @% 01
e0 eraseC $1 -> eraseC e0 $B
1@ backToDFromLeft e1 -> backToDFromLeft 1@ e1
@& eraseC 01 -> eraseC @& 0B
e# eraseC $C -> backToStart e# $X
1@ eraseC $1 -> eraseC 1@ $B
$% prepEraseC @1 -> prepEraseC $% @1
1# copyZero $B -> backToSharpZero 1# $0
e# eraseC 00 -> eraseC e# 0B
e% backToDFromLeft 00 -> backToDFromLeft e% 00
@B backToSharpOne e0 -> backToSharpOne @B e0
eX gotoLastE $@ -> dec eX $@
$E backToSharpOne 1E -> backToSharpOne $E 1E
eB backToSharpOne eD -> backToSharpOne eB eD
0D initDivider e0 -> initDividerByTwo 0D e0
01 backToSharpOne $D -> backToSharpOne 01 $D
eC replaceWithBlanks @@ -> backToDFromRight eC @@
$X backToSharpOne 0X -> backToSharpOne $X 0X
e% backToSharpOne 1C -> backToSharpOne e% 1C
0C backToDFromRight eE -> backToDFromRight 0C eE
1& eraseE e0 -> eraseE 1& eB
$X gotoDecC 11 -> gotoDecC $X 11
@E copyOne 1B -> backToSharpOne @E 11
$B incD @0 -> checkCD $B @1
0# findBlank @0 -> temp 0# @0
0@ backToSharpZero 10 -> backToSharpZero 0@ 10
@X restoreCD e% -> restoreCD @X e0
1E prepEraseC $1 -> prepEraseC 1E $1
@E backToSharpZero $E -> backToSharpZero @E $E
$X findBlank $1 -> temp $X $1
0& prepEraseC 11 -> prepEraseC 0& 11
1D backToSharpZero eC -> backToSharpZero 1D eC
@% nullifier eB -> initDivider @% eE
0& backToSharpZero eC -> backToSharpZero 0& eC
eX findBlank 00 -> temp eX 00
@# findBlank e1 -> temp @# e1
$& findZero 01 -> beginCopying $& 01
eD temp e1 -> beginCopying eD e1
eX backToSharpZero 1X -> backToSharpZero eX 1X
0E backToDFromLeft @0 -> backToDFromLeft 0E @0
$$ backToStart 01 -> backToStart $$ 01
@& eraseC 0C -> backToStart @& 0X
e$ backToDFromRight 01 -> backToDFromRight e$ 01
1C restoreCD 1D -> restoreCD 1C 1D
0X backToDFromRight eE -> backToDFromRight 0X eE
11 eraseE 0E -> prepEraseC 11 0E
$& backToSharpZero 0D -> backToSharpZero $& 0D
@B backToDFromLeft 1D -> searchNextBit @B 1D
11 temp $1 -> beginCopying 11 $1
e& eraseC $C -> backToStart e& $X
eB restoreCD 01 -> restoreCD eB 01
0X backToStart 01 -> backToStart 0X 01
eE gotoDecC @0 -> gotoDecC eE @0
00 checkCD 11 -> checkCD 00 11
ifZero $1 -> $1 gotoLastE
$# eraseC e0 -> eraseC $# eB
@D findZero @1 -> beginCopying @D @1
e# backToDFromLeft 1& -> backToDFromLeft e# 1&
0& backToFirstC @0 -> backToFirstC 0& @0
@D eraseE eE -> prepEraseC @D eE
0B dec @0 -> dec 0B @1
e$ backToSharpZero @D -> backToSharpZero e$ @D
eX backToDFromLeft $% -> backToDFromLeft eX $%
eE dec @1 -> gotoMark eE @0
1@ copyZero $B -> backToSharpZero 1@ $0
e& backToDFromRight 0E -> backToDFromRight e& 0E
$$ replaceWithBlanks @@ -> backToDFromRight $$ @@
1X eraseC e0 -> eraseC 1X eB
@C goToPlaceForDivider 1B -> backToFirstC @C 1D
$D backToSharpZero eC -> backToSharpZero $D eC
1B findBlank 00 -> temp 1B 00
1& backToDFromLeft 11 -> backToDFromLeft 1& 11
e1 prepEraseC @0 -> prepEraseC e1 @0
$% gotoLastE 0@ -> dec $% 0@
e& checkCD $1 -> checkCD e& $1
@D prepEraseC eD -> eraseC @D eD
@0 nullifier @B -> initDivider @0 @E
@1 backToStart e0 -> backToStart @1 e0
e0 findBlank 1B -> FINAL e0 1B
$X searchNextBit 01 -> searchNextBit $X 01
0# backToSharpOne @1 -> backToSharpOne 0# @1
1$ eraseC $1 -> eraseC 1$ $B
00 copyOne @B -> backToSharpOne 00 @1
e# restoreCD e& -> restoreCD e# e1
0E checkEForZero 0B -> stop 0E 0B
$% beginCopying $B -> backToStart $% $C
massErase e1 -> e1 massErase
1& backToSharpZero @C -> backToSharpZero 1& @C
@1 backToSharpOne @C -> backToSharpOne @1 @C
1C copyZero @B -> backToSharpZero 1C @0
0$ copyZero @B -> backToSharpZero 0$ @0
@# backToSharpOne e1 -> backToSharpOne @# e1
1@ prepEraseC @0 -> prepEraseC 1@ @0
$0 replaceWithBlanks e@ -> backToDFromRight $0 e@
e& checkCD $D -> checkCD e& $D
e# goToPlaceForDivider $B -> backToFirstC e# $D
eC backToSharpOne eE -> backToSharpOne eC eE
$# findBlank e0 -> temp $# e0
$B backToSharpZero 0E -> backToSharpZero $B 0E
e@ copyOne $B -> backToSharpOne e@ $1
10 searchZero 10 -> backToDFromLeft 10 1%
11 searchZero @0 -> backToDFromLeft 11 @%
11 searchNextBit @1 -> searchNextBit 11 @1
@D backToSharpZero 1E -> backToSharpZero @D 1E
@$ copyZero @B -> backToSharpZero @$ @0
e$ massErase $@ -> eraseE e$ $@
0% backToDFromRight @B -> backToDFromRight 0% @B
1$ checkCD e0 -> checkCD 1$ e0
$$ forwardToLastD 1E -> incD $$ 1E
e@ backToDFromLeft 0& -> backToDFromLeft e@ 0&
01 prepEraseC @D -> eraseC 01 @D
e% incD $0 -> checkCD e% $1
$% searchNextBit e1 -> searchNextBit $% e1
e1 backToDFromLeft e0 -> backToDFromLeft e1 e0
@E backToSharpOne 00 -> backToSharpOne @E 00
e# copyZero 0B -> backToSharpZero e# 00
$D restoreCD $D -> restoreCD $D $D
e# backToDFromLeft e& -> backToDFromLeft e# e&
@0 backToSharpOne $C -> backToSharpOne @0 $C
$# restoreCD @0 -> restoreCD $# @0
0C eraseE e1 -> eraseE 0C eB
@1 backToDFromLeft $& -> backToDFromLeft @1 $&
$B backToStart @1 -> backToStart $B @1
@B backToDFromRight $E -> backToDFromRight @B $E
$& copyOne @B -> backToSharpOne $& @1
e# backToSharpOne 0D -> backToSharpOne e# 0D
0& backToStart $1 -> backToStart 0& $1
$# gotoDecC @1 -> gotoDecC $# @1
$& checkEForZero @B -> stop $& @B
0@ nullifier @B -> initDivider 0@ @E
$$ temp 01 -> beginCopying $$ 01
e$ backToDFromLeft $& -> backToDFromLeft e$ $&
$% backToDFromLeft e% -> backToDFromLeft $% e%
11 temp 11 -> beginCopying 11 11
$# goToPlaceForDivider @B -> backToFirstC $# @D
e1 backToSharpZero eD -> backToSharpZero e1 eD
0$ findBlank 01 -> temp 0$ 01
$D copyZero eB -> backToSharpZero $D e0
@B backToDFromLeft e1 -> backToDFromLeft @B e1
1D copyOne eB -> backToSharpOne 1D e1
@D backToStart 11 -> backToStart @D 11
1& copyOne $B -> backToSharpOne 1& $1
e& searchOne e1 -> backToDFromLeft e& e&
10 searchZero $0 -> backToDFromLeft 10 $%
@D temp e1 -> beginCopying @D e1
@E backToSharpOne 0C -> backToSharpOne @E 0C
moveToE 1E -> 1E checkEForZero
0@ backToSharpZero 0D -> backToSharpZero 0@ 0D
eD eraseE 1E -> prepEraseC eD 1E
@$ temp 00 -> beginCopying @$ 00
$1 backToSharpOne 00 -> backToSharpOne $1 00
0C searchNextBit 10 -> searchNextBit 0C 10
eB backToSharpOne @X -> backToSharpOne eB @X
1$ dec $1 -> gotoMark 1$ $0
0X checkCD 01 -> checkCD 0X 01
1E backToFirstC $0 -> backToFirstC 1E $0
00 initDividerByTwo 00 -> backToD 00 01
@% restoreCD e0 -> restoreCD @% e0
e# beginCopying 1B -> backToStart e# 1C
$% eraseE 0E -> prepEraseC $% 0E
eX eraseC 11 -> eraseC eX 1B
$0 backToStart @0 -> backToStart $0 @0
$$ backToSharpZero $C -> backToSharpZero $$ $C
$D searchOne 00 -> restoreCD $D 00
$C prepEraseC @0 -> prepEraseC $C @0
@B findBlank @B -> FINAL @B @B
$% backToDFromLeft @% -> backToDFromLeft $% @%
$% FINAL -> FINAL $ FINAL
@@ forwardToLastD 0E -> incD @@ 0E
e% initDividerByTwo e0 -> backToD e% e1
00 backToSharpZero 01 -> backToSharpZero 00 01
e0 backToSharpZero 1D -> backToSharpZero e0 1D
@E incD 11 -> incD @E 10
@# gotoMark 1E -> gotoDecC @# 1E
1E temp e0 -> beginCopying 1E e0
$# gotoMark 10 -> gotoMark $# 10
1@ incD 11 -> incD 1@ 10
@# initDivider 00 -> initDividerByTwo @# 00
1B eraseC $0 -> eraseC 1B $B
@D gotoDecC 11 -> gotoDecC @D 11
$0 backToStart 00 -> backToStart $0 00
0# restoreCD eD -> restoreCD 0# eD
1E restoreCD $& -> restoreCD 1E $1
FINAL 0X -> FINAL 0 FINAL
0X findBlank $B -> FINAL 0X $B
1@ prepEraseC 11 -> prepEraseC 1@ 11
@D backToSharpOne 1C -> backToSharpOne @D 1C
1$ backToDFromRight $E -> backToDFromRight 1$ $E
1& gotoDecC 10 -> gotoDecC 1& 10
eC searchNextBit $1 -> searchNextBit eC $1
$@ eraseE $1 -> eraseE $@ $B
$# gotoMark 11 -> gotoMark $# 11
@1 incD 00 -> checkCD @1 01
$@ gotoDecC eD -> dec $@ eD
@C eraseC $1 -> eraseC @C $B
@$ backToDFromRight e1 -> backToDFromRight @$ e1
1& restoreCD 0D -> restoreCD 1& 0D
@$ backToDFromRight eB -> backToDFromRight @$ eB
eC backToDFromLeft e% -> backToDFromLeft eC e%
$X backToDFromRight $B -> backToDFromRight $X $B
1E gotoDecC $1 -> gotoDecC 1E $1
$% backToDFromLeft $& -> backToDFromLeft $% $&
e$ temp 00 -> beginCopying e$ 00
$@ nullifier 0B -> initDivider $@ 0E
$0 backToSharpZero 1C -> backToSharpZero $0 1C
1E eraseE @0 -> eraseE 1E @B
$$ goToPlaceForDivider 0B -> backToFirstC $$ 0D
1E checkCD eD -> checkCD 1E eD
@D backToDFromRight 1E -> backToDFromRight @D 1E
eX gotoMark $E -> gotoDecC eX $E
@$ dec 00 -> dec @$ 01
createCopy @C -> @C goToPlaceForDivider
11 searchOne @0 -> restoreCD 11 @0
0X searchZero e0 -> backToDFromLeft 0X e%
$E backToSharpZero 1X -> backToSharpZero $E 1X
1D temp $0 -> beginCopying 1D $0
ifZero @1 -> @1 gotoLastE
0& backToSharpOne eX -> backToSharpOne 0& eX
0C replaceWithBlanks @@ -> backToDFromRight 0C @@
1E temp @0 -> beginCopying 1E @0
$# backToSharpOne @X -> backToSharpOne $# @X
@D checkCD $D -> checkCD @D $D
@0 eraseC 0C -> backToStart @0 0X
@@ backToSharpOne @E -> backToSharpOne @@ @E
eC checkCD @0 -> checkCD eC @0
$D backToD $1 -> backToD $D $1
@% gotoMark eE -> gotoDecC @% eE
@C backToDFromRight 1E -> backToDFromRight @C 1E
11 backToDFromLeft 11 -> backToDFromLeft 11 11
1C checkCD $1 -> checkCD 1C $1
$B dec 00 -> dec $B 01
checkCD eC -> eC eqCD
$0 restoreCD 0D -> restoreCD $0 0D
$C findBlank e1 -> temp $C e1
0@ backToDFromRight @B -> backToDFromRight 0@ @B
eX searchZero $1 -> restoreCD eX $1
$0 gotoDecC 11 -> gotoDecC $0 11
0E backToDFromRight 1E -> backToDFromRight 0E 1E
$% initDividerByTwo e0 -> backToD $% e1
1E beginCopying eB -> backToStart 1E eC
$E initDivider @0 -> initDividerByTwo $E @0
FINAL 0C -> FINAL 0 FINAL
copyOne 1X -> 1X copyOne
0% backToD @0 -> backToD 0% @0
@$ gotoMark e0 -> gotoMark @$ e0
$B checkCD eD -> checkCD $B eD
0% gotoMark 00 -> gotoMark 0% 00
0X eraseC 11 -> eraseC 0X 1B
1D backToFirstC @1 -> backToFirstC 1D @1
e0 backToFirstC 11 -> backToFirstC e0 11
0D copyZero eB -> backToSharpZero 0D e0
1D backToFirstC 11 -> backToFirstC 1D 11
1D searchZero e1 -> restoreCD 1D e1
$E backToDFromLeft e& -> backToDFromLeft $E e&
0B findBlank 0B -> FINAL 0B 0B
01 backToDFromRight @1 -> backToDFromRight 01 @1
eE restoreCD 1% -> restoreCD eE 10
1% temp @0 -> beginCopying 1% @0
@# eraseE 10 -> eraseE @# 1B
0E goToPlaceForDivider 1B -> backToFirstC 0E 1D
@# backToFirstC $1 -> backToFirstC @# $1
$X copyOne 1B -> backToSharpOne $X 11
$1 findBlank e0 -> temp $1 e0
@E initDividerByTwo $0 -> backToD @E $1
00 gotoDecC 1D -> dec 00 1D
@1 backToDFromRight 1B -> backToDFromRight @1 1B
eD checkEForZero eB -> stop eD eB
$0 restoreCD 11 -> restoreCD $0 11
00 temp e0 -> beginCopying 00 e0
$% findZero 11 -> beginCopying $% 11
@D restoreCD 01 -> restoreCD @D 01
eX backToDFromLeft 01 -> backToDFromLeft eX 01
1@ gotoLastE $@ -> dec 1@ $@
1D nullifier 1B -> initDivider 1D 1E
e% backToStart @0 -> backToStart e% @0
e% restoreCD $1 -> restoreCD e% $1
0% goToPlaceForDivider @B -> backToFirstC 0% @D
10 eraseC e0 -> eraseC 10 eB
$0 prepEraseC $1 -> prepEraseC $0 $1
1$ copyZero eB -> backToSharpZero 1$ e0
e0 eraseE 0E -> prepEraseC e0 0E
@$ backToD $1 -> backToD @$ $1
e& backToSharpOne @1 -> backToSharpOne e& @1
0B goToPlaceForDivider $B -> backToFirstC 0B $D
1E dec e1 -> gotoMark 1E e0
1# searchZero @0 -> backToDFromLeft 1# @%
0$ copyZero 1B -> backToSharpZero 0$ 10
e# searchNextBit e0 -> searchNextBit e# e0
$1 gotoLastE $@ -> dec $1 $@
eX checkEForZero 1B -> stop eX 1B
@E findBlank 11 -> temp @E 11
11 findZero $1 -> beginCopying 11 $1
$D backToDFromRight @B -> backToDFromRight $D @B
@B backToDFromRight e0 -> backToDFromRight @B e0
1& backToDFromLeft e& -> backToDFromLeft 1& e&
0# nullifier 1B -> initDivider 0# 1E
0# backToDFromRight eB -> backToDFromRight 0# eB
@% searchOne e1 -> backToDFromLeft @% e&
$E eraseC 11 -> eraseC $E 1B
$D restoreCD 0& -> restoreCD $D 01
1X backToSharpOne $X -> backToSharpOne 1X $X
replaceWithBlanks $1 -> $B replaceWithBlanks
1$ backToSharpZero 1E -> backToSharpZero 1$ 1E
@@ backToFirstC @1 -> backToFirstC @@ @1
e1 backToSharpZero 1D -> backToSharpZero e1 1D
1E checkCD 11 -> checkCD 1E 11
eE gotoDecC 10 -> gotoDecC eE 10
$# gotoMark e0 -> gotoMark $# e0
@C gotoDecC @1 -> gotoDecC @C @1
e% searchNextBit e0 -> searchNextBit e% e0
11 backToDFromRight 01 -> backToDFromRight 11 01
11 beginCopying @B -> backToStart 11 @C
1& incD @1 -> incD 1& @0
$C eraseE eE -> prepEraseC $C eE
1X eraseC 01 -> eraseC 1X 0B
1% backToFirstC $0 -> backToFirstC 1% $0
eD backToSharpOne $0 -> backToSharpOne eD $0
$D backToD 10 -> backToD $D 10
@# backToSharpZero eD -> backToSharpZero @# eD
$1 beginCopying 0B -> backToStart $1 0C
@$ backToFirstC @0 -> backToFirstC @$ @0
@1 backToDFromRight 11 -> backToDFromRight @1 11
$& backToSharpOne @X -> backToSharpOne $& @X
$# searchOne @1 -> backToDFromLeft $# @&
0% backToSharpOne eD -> backToSharpOne 0% eD
0$ massErase $@ -> eraseE 0$ $@
11 checkCD 00 -> checkCD 11 00
@X gotoDecC $D -> dec @X $D
1# gotoDecC 0D -> dec 1# 0D
1X searchNextBit $0 -> searchNextBit 1X $0
@$ incD @0 -> checkCD @$ @1
$1 copyOne $B -> backToSharpOne $1 $1
0& findZero e1 -> beginCopying 0& e1
e1 gotoDecC 01 -> gotoDecC e1 01
e0 gotoMark eE -> gotoDecC e0 eE
@0 checkCD 1D -> checkCD @0 1D
1E replaceWithBlanks 1@ -> backToDFromRight 1E 1@
$@ eraseC $C -> backToStart $@ $X
1C temp 00 -> beginCopying 1C 00
@% findBlank 01 -> temp @% 01
0B prepEraseC 1D -> eraseC 0B 1D
0$ gotoMark @0 -> gotoMark 0$ @0
0% searchNextBit 10 -> searchNextBit 0% 10
$E backToFirstC @0 -> backToFirstC $E @0
0C backToFirstC e0 -> backToFirstC 0C e0
@D restoreCD 0% -> restoreCD @D 00
$# findBlank @1 -> temp $# @1
$B findBlank 11 -> temp $B 11
1E gotoLastE e@ -> dec 1E e@
@@ searchNextBit e1 -> searchNextBit @@ e1
1D restoreCD 1% -> restoreCD 1D 10
FINAL @E -> FINAL @ FINAL
1E eraseC 1C -> backToStart 1E 1X
@$ gotoDecC $D -> dec @$ $D
$D backToDFromRight 1B -> backToDFromRight $D 1B
$D backToSharpZero @1 -> backToSharpZero $D @1
1& massErase @@ -> eraseE 1& @@
@E goToPlaceForDivider $B -> backToFirstC @E $D
1& gotoMark @0 -> gotoMark 1& @0
0E temp 11 -> beginCopying 0E 11
0C eraseC 0C -> backToStart 0C 0X
eC backToDFromRight $0 -> backToDFromRight eC $0
0D backToDFromLeft 0D -> searchNextBit 0D 0D
eE massErase e@ -> eraseE eE e@
@B backToFirstC e1 -> backToFirstC @B e1
eD backToDFromLeft 1D -> searchNextBit eD 1D
0@ gotoMark @0 -> gotoMark 0@ @0
1& eraseE @0 -> eraseE 1& @B
eX temp 01 -> beginCopying eX 01
@C backToD e0 -> backToD @C e0
01 searchZero 01 -> restoreCD 01 01
0& eraseC $C -> backToStart 0& $X
0D backToDFromLeft e0 -> backToDFromLeft 0D e0
1B searchOne @1 -> backToDFromLeft 1B @&
eD findZero $1 -> beginCopying eD $1
0@ prepEraseC 10 -> prepEraseC 0@ 10
0# eraseE 1E -> prepEraseC 0# 1E
@B backToD $1 -> backToD @B $1
0X gotoMark @E -> gotoDecC 0X @E
0D dec 10 -> dec 0D 11
$0 eraseC 10 -> eraseC $0 1B
0X backToDFromLeft $1 -> backToDFromLeft 0X $1
e& backToSharpZero 01 -> backToSharpZero e& 01
01 checkEForZero $B -> stop 01 $B
e# searchOne 10 -> restoreCD e# 10
$$ restoreCD $1 -> restoreCD $$ $1
e1 beginCopying 1B -> backToStart e1 1C
@X backToSharpZero 0X -> backToSharpZero @X 0X
$B backToSharpOne e1 -> backToSharpOne $B e1
e@ backToFirstC @0 -> backToFirstC e@ @0
@B restoreCD 0D -> restoreCD @B 0D
eD incD e1 -> incD eD e0
@X prepEraseC eD -> eraseC @X eD
$$ gotoDecC 1D -> dec $$ 1D
$@ searchNextBit e0 -> searchNextBit $@ e0
1@ dec @0 -> dec 1@ @1
@# backToFirstC e0 -> backToFirstC @# e0
1% gotoLastE $@ -> dec 1% $@
eD eraseC eC -> backToStart eD eX
$$ restoreCD 0D -> restoreCD $$ 0D
$D nullifier 1B -> initDivider $D 1E
$1 gotoMark 1E -> gotoDecC $1 1E
0B backToSharpOne eD -> backToSharpOne 0B eD
e% eraseE 0E -> prepEraseC e% 0E
0% copyZero 1B -> backToSharpZero 0% 10
00 backToD 01 -> backToD 00 01
e1 gotoDecC $1 -> gotoDecC e1 $1
0E gotoDecC 01 -> gotoDecC 0E 01
@X gotoMark @0 -> gotoMark @X @0
$0 eraseE $0 -> eraseE $0 $B
@& backToDFromRight $B -> backToDFromRight @& $B
$X checkCD 10 -> checkCD $X 10
10 findBlank 0B -> FINAL 10 0B
1X prepEraseC 0D -> eraseC 1X 0D
@1 backToSharpZero $D -> backToSharpZero @1 $D
0$ initDivider @0 -> initDividerByTwo 0$ @0
e$ backToDFromRight @0 -> backToDFromRight e$ @0
10 searchOne @0 -> restoreCD 10 @0
1X checkCD @0 -> checkCD 1X @0
0& backToSharpZero eX -> backToSharpZero 0& eX
e& gotoLastE 0@ -> dec e& 0@
0C backToDFromLeft 0& -> backToDFromLeft 0C 0&
$% backToDFromRight 01 -> backToDFromRight $% 01
@& searchZero 00 -> backToDFromLeft @& 0%
$1 checkCD eD -> checkCD $1 eD
0# backToFirstC 01 -> backToFirstC 0# 01
0B dec 10 -> dec 0B 11
$C goToPlaceForDivider eB -> backToFirstC $C eD
$# backToDFromLeft e1 -> backToDFromLeft $# e1
e% eraseC @0 -> eraseC e% @B
$C backToDFromLeft 1% -> backToDFromLeft $C 1%
e& backToSharpOne e1 -> backToSharpOne e& e1
e# eraseE 10 -> eraseE e# 1B
0D restoreCD @D -> restoreCD 0D @D
@C backToDFromLeft eD -> searchNextBit @C eD
0$ backToSharpZero 0D -> backToSharpZero 0$ 0D
e$ gotoMark $0 -> gotoMark e$ $0
1% backToSharpOne @X -> backToSharpOne 1% @X
e& forwardToLastD 0E -> incD e& 0E
1D dec $0 -> dec 1D $1
e@ searchZero $1 -> restoreCD e@ $1
e% backToStart e1 -> backToStart e% e1
11 gotoMark $1 -> gotoMark 11 $1
eB searchNextBit @0 -> searchNextBit eB @0
0# gotoDecC 00 -> gotoDecC 0# 00
@E backToSharpZero 10 -> backToSharpZero @E 10
@1 prepEraseC eD -> eraseC @1 eD
e$ searchOne 01 -> backToDFromLeft e$ 0&
0D backToD 10 -> backToD 0D 10
11 copyOne 0B -> backToSharpOne 11 01
1$ incD 11 -> incD 1$ 10
0D prepEraseC @0 -> prepEraseC 0D @0
1@ restoreCD 1& -> restoreCD 1@ 11
0% temp 00 -> beginCopying 0% 00
1C findBlank @1 -> temp 1C @1
$$ checkEForZero eB -> stop $$ eB
eX eraseE e1 -> eraseE eX eB
0E copyOne @B -> backToSharpOne 0E @1
$B backToDFromLeft e% -> backToDFromLeft $B e%
@& backToSharpZero @X -> backToSharpZero @& @X
01 backToStart 00 -> backToStart 01 00
1& initDivider $0 -> initDividerByTwo 1& $0
1@ massErase 1@ -> eraseE 1@ 1@
1$ restoreCD $0 -> restoreCD 1$ $0
@C checkCD eD -> checkCD @C eD
0$ checkCD 00 -> checkCD 0$ 00
e& gotoLastE 1@ -> dec e& 1@
$$ copyOne $B -> backToSharpOne $$ $1
1D eraseC 0C -> backToStart 1D 0X
@# backToFirstC @1 -> backToFirstC @# @1
1@ dec 00 -> dec 1@ 01
e& temp @1 -> beginCopying e& @1
eC restoreCD @% -> restoreCD eC @0
@E eraseC @0 -> eraseC @E @B
0B backToSharpZero e0 -> backToSharpZero 0B e0
@X prepEraseC $1 -> prepEraseC @X $1
0& gotoMark $1 -> gotoMark 0& $1
$D backToSharpOne eD -> backToSharpOne $D eD
0C backToDFromLeft 00 -> backToDFromLeft 0C 00
00 backToFirstC $1 -> backToFirstC 00 $1
0C massErase 0@ -> eraseE 0C 0@
eC goToPlaceForDivider eB -> backToFirstC eC eD
copyOne $1 -> $1 copyOne
0# restoreCD @& -> restoreCD 0# @1
@$ searchOne e0 -> restoreCD @$ e0
@E gotoMark @E -> gotoDecC @E @E
eB searchNextBit 11 -> searchNextBit eB 11
1C backToD 11 -> backToD 1C 11
e# replaceWithBlanks e@ -> backToDFromRight e# e@
e@ backToSharpOne @C -> backToSharpOne e@ @C
1E backToSharpZero @C -> backToSharpZero 1E @C
$@ backToFirstC $0 -> backToFirstC $@ $0
@& massErase @@ -> eraseE @& @@
e$ gotoLastE $@ -> dec e$ $@
1$ backToStart e0 -> backToStart 1$ e0
@$ searchOne e1 -> backToDFromLeft @$ e&
gotoLastE 11 -> 11 gotoLastE
0E dec 10 -> dec 0E 11
copyOne $E -> $E copyOne
$1 incD e0 -> checkCD $1 e1
$0 copyOne eB -> backToSharpOne $0 e1
@& backToD $0 -> backToD @& $0
10 eraseC $1 -> eraseC 10 $B
@B checkEForZero 1B -> stop @B 1B
$X backToDFromLeft 10 -> backToDFromLeft $X 10
$B restoreCD e0 -> restoreCD $B e0
@% checkCD 0D -> checkCD @% 0D
$C backToSharpZero 11 -> backToSharpZero $C 11
1B backToDFromRight $1 -> backToDFromRight 1B $1
searchZero 1% -> 1% searchZero
0$ initDividerByTwo e0 -> backToD 0$ e1
@1 checkCD 01 -> checkCD @1 01
$1 gotoDecC @1 -> gotoDecC $1 @1
1& backToFirstC @1 -> backToFirstC 1& @1
00 searchZero e1 -> restoreCD 00 e1
01 searchOne 01 -> backToDFromLeft 01 0&
e0 checkCD $D -> checkCD e0 $D
0$ checkCD 1D -> checkCD 0$ 1D
eC searchNextBit @0 -> searchNextBit eC @0
01 backToSharpZero @X -> backToSharpZero 01 @X
$C copyZero 1B -> backToSharpZero $C 10
@D gotoDecC e1 -> gotoDecC @D e1
@1 eraseC e1 -> eraseC @1 eB
$@ restoreCD $1 -> restoreCD $@ $1
01 restoreCD 01 -> restoreCD 01 01
0B replaceWithBlanks $@ -> backToDFromRight 0B $@
1% eraseC $C -> backToStart 1% $X
@C gotoMark @1 -> gotoMark @C @1
1# copyZero eB -> backToSharpZero 1# e0
1& findBlank eB -> FINAL 1& eB
$X findBlank @0 -> temp $X @0
0C dec @1 -> gotoMark 0C @0
$1 restoreCD 11 -> restoreCD $1 11
$D temp $1 -> beginCopying $D $1
10 gotoDecC e0 -> gotoDecC 10 e0
e$ backToDFromLeft e1 -> backToDFromLeft e$ e1
e$ beginCopying eB -> backToStart e$ eC
eX restoreCD @1 -> restoreCD eX @1
@$ gotoDecC 1D -> dec @$ 1D
@1 eraseC 01 -> eraseC @1 0B
@C searchOne 01 -> backToDFromLeft @C 0&
01 gotoMark 00 -> gotoMark 01 00
eB initDividerByTwo $0 -> backToD eB $1
10 findZero 01 -> beginCopying 10 01
$1 nullifier $B -> initDivider $1 $E
1X eraseE $E -> prepEraseC 1X $E
$0 gotoDecC 1D -> dec $0 1D
@1 restoreCD @& -> restoreCD @1 @1
@# gotoLastE 0@ -> dec @# 0@
$X incD $0 -> checkCD $X $1
@1 prepEraseC e1 -> prepEraseC @1 e1
e0 eraseC 11 -> eraseC e0 1B
$% backToSharpOne 0C -> backToSharpOne $% 0C
1% goToPlaceForDivider eB -> backToFirstC 1% eD
0X copyZero 1B -> backToSharpZero 0X 10
@B gotoMark $0 -> gotoMark @B $0
1E eraseE 01 -> eraseE 1E 0B
00 eraseE eE -> prepEraseC 00 eE
e1 findBlank @1 -> temp e1 @1
10 backToFirstC 10 -> backToFirstC 10 10
10 backToSharpOne 0D -> backToSharpOne 10 0D
0$ replaceWithBlanks e@ -> backToDFromRight 0$ e@
$$ backToSharpOne eE -> backToSharpOne $$ eE
0$ gotoDecC 00 -> gotoDecC 0$ 00
$& checkEForZero $B -> stop $& $B
1X findBlank e0 -> temp 1X e0
@@ gotoMark e0 -> gotoMark @@ e0
0& gotoDecC $1 -> gotoDecC 0& $1
1& massErase e@ -> eraseE 1& e@
$E restoreCD 0% -> restoreCD $E 00
@0 copyZero $B -> backToSharpZero @0 $0
1D checkCD @D -> checkCD 1D @D
$$ backToDFromLeft $% -> backToDFromLeft $$ $%
@B backToDFromLeft @& -> backToDFromLeft @B @&
$B goToPlaceForDivider eB -> backToFirstC $B eD
e# searchZero @1 -> restoreCD e# @1
0$ findBlank e1 -> temp 0$ e1
e& eraseE @0 -> eraseE e& @B
@C findBlank 01 -> temp @C 01
1# prepEraseC @0 -> prepEraseC 1# @0
@0 restoreCD eD -> restoreCD @0 eD
checkCD @C -> @C eqCD
1% gotoDecC 01 -> gotoDecC 1% 01
$0 prepEraseC @1 -> prepEraseC $0 @1
@% backToD e0 -> backToD @% e0
e0 initDividerByTwo 10 -> backToD e0 11
0E backToDFromLeft $0 -> backToDFromLeft 0E $0
@C backToDFromRight 1B -> backToDFromRight @C 1B
$# backToSharpZero $0 -> backToSharpZero $# $0
0B initDivider @0 -> initDividerByTwo 0B @0
1# backToDFromLeft 0D -> searchNextBit 1# 0D
@& backToSharpOne @E -> backToSharpOne @& @E
0E backToDFromRight $1 -> backToDFromRight 0E $1
0@ backToSharpZero 0X -> backToSharpZero 0@ 0X
eE gotoDecC e0 -> gotoDecC eE e0
1% findZero @1 -> beginCopying 1% @1
$X backToSharpZero eC -> backToSharpZero $X eC
e$ backToDFromLeft $1 -> backToDFromLeft e$ $1
1B eraseE @E -> prepEraseC 1B @E
eX backToSharpOne eC -> backToSharpOne eX eC
@D backToSharpZero eD -> backToSharpZero @D eD
$1 dec 10 -> dec $1 11
$& gotoDecC @D -> dec $& @D
e& FINAL -> FINAL e FINAL
$1 backToSharpOne $E -> backToSharpOne $1 $E
$1 backToSharpZero eC -> backToSharpZero $1 eC
$X prepEraseC 0D -> eraseC $X 0D
0D searchOne @1 -> backToDFromLeft 0D @&
@X restoreCD @0 -> restoreCD @X @0
@E incD $0 -> checkCD @E $1
$# goToPlaceForDivider 1B -> backToFirstC $# 1D
$1 gotoMark e0 -> gotoMark $1 e0
0D incD 01 -> incD 0D 00
01 gotoMark $E -> gotoDecC 01 $E
@C checkCD 00 -> checkCD @C 00
@& nullifier eB -> initDivider @& eE
@% backToStart $1 -> backToStart @% $1
0C gotoMark 10 -> gotoMark 0C 10
00 eraseC eC -> backToStart 00 eX
01 copyOne 0B -> backToSharpOne 01 01
@0 copyOne 1B -> backToSharpOne @0 11
@% searchNextBit 00 -> searchNextBit @% 00
0C eraseC $0 -> eraseC 0C $B
@E backToDFromLeft e% -> backToDFromLeft @E e%
@% backToSharpOne 01 -> backToSharpOne @% 01
00 initDivider 10 -> initDividerByTwo 00 10
$1 prepEraseC $1 -> prepEraseC $1 $1
1C backToSharpZero $0 -> backToSharpZero 1C $0
$& backToD 10 -> backToD $& 10
1# backToDFromRight 0E -> backToDFromRight 1# 0E
copyOne e0 -> e0 copyOne
1X backToDFromLeft e0 -> backToDFromLeft 1X e0
e$ gotoDecC 00 -> gotoDecC e$ 00
e$ searchZero e1 -> restoreCD e$ e1
$@ checkEForZero @B -> stop $@ @B
e0 findBlank $0 -> temp e0 $0
e@ checkCD $1 -> checkCD e@ $1
@@ backToDFromRight @1 -> backToDFromRight @@ @1
$# backToDFromLeft e& -> backToDFromLeft $# e&
eX eraseC @C -> backToStart eX @X
1& backToD e0 -> backToD 1& e0
$& copyZero 0B -> backToSharpZero $& 00
1# backToSharpOne 10 -> backToSharpOne 1# 10
@0 copyZero eB -> backToSharpZero @0 e0
1$ temp @1 -> beginCopying 1$ @1
e% initDividerByTwo 10 -> backToD e% 11
@& backToDFromRight 01 -> backToDFromRight @& 01
10 nullifier $B -> initDivider 10 $E
eB findBlank 10 -> temp eB 10
e1 beginCopying 0B -> backToStart e1 0C
eX prepEraseC e0 -> prepEraseC eX e0
@B backToDFromLeft @% -> backToDFromLeft @B @%
00 backToStart @1 -> backToStart 00 @1
@% gotoMark 01 -> gotoMark @% 01
e0 gotoMark @1 -> gotoMark e0 @1
e0 dec @1 -> gotoMark e0 @0
e0 backToFirstC e1 -> backToFirstC e0 e1
@@ copyOne 0B -> backToSharpOne @@ 01
1& incD $1 -> incD 1& $0
@0 prepEraseC e1 -> prepEraseC @0 e1
1D gotoMark 1E -> gotoDecC 1D 1E
0E backToDFromLeft e& -> backToDFromLeft 0E e&
$X copyZero $B -> backToSharpZero $X $0
$$ checkEForZero 0B -> stop $$ 0B
0$ backToSharpOne $E -> backToSharpOne 0$ $E
1B goToPlaceForDivider @B -> backToFirstC 1B @D
1& backToDFromLeft 1D -> searchNextBit 1& 1D
$E backToSharpOne 1X -> backToSharpOne $E 1X
e# backToDFromRight 00 -> backToDFromRight e# 00
$% eraseE @E -> prepEraseC $% @E
1X findBlank @B -> FINAL 1X @B
$1 massErase 0@ -> eraseE $1 0@
@E restoreCD 1& -> restoreCD @E 11
$# incD 01 -> incD $# 00
e$ backToDFromRight @B -> backToDFromRight e$ @B
$# backToDFromRight $B -> backToDFromRight $# $B
0C copyOne 1B -> backToSharpOne 0C 11
$B beginCopying 0B -> backToStart $B 0C
0& eraseC 10 -> eraseC 0& 1B
00 searchOne e0 -> restoreCD 00 e0
@C backToSharpOne @C -> backToSharpOne @C @C
$& backToDFromLeft eD -> searchNextBit $& eD
@C prepEraseC $0 -> prepEraseC @C $0
1& backToDFromLeft 00 -> backToDFromLeft 1& 00
e0 beginCopying $B -> backToStart e0 $C
eB checkCD e0 -> checkCD eB e0
@& backToSharpOne @X -> backToSharpOne @& @X
$@ backToStart $0 -> backToStart $@ $0
$& backToD 00 -> backToD $& 00
$% initDividerByTwo 00 -> backToD $% 01
eC backToSharpZero $D -> backToSharpZero eC $D
1$ eraseC @0 -> eraseC 1$ @B
@$ gotoMark @E -> gotoDecC @$ @E
eB backToDFromLeft 00 -> backToDFromLeft eB 00
1@ nullifier $B -> initDivider 1@ $E
1% checkEForZero eB -> stop 1% eB
$1 findBlank $B -> FINAL $1 $B
0D searchOne $0 -> restoreCD 0D $0
1B backToFirstC @1 -> backToFirstC 1B @1
@% checkCD e1 -> checkCD @% e1
$C replaceWithBlanks @@ -> backToDFromRight $C @@
$B backToStart 01 -> backToStart $B 01
@D backToSharpZero 10 -> backToSharpZero @D 10
@& initDivider 00 -> initDividerByTwo @& 00
eD prepEraseC 00 -> prepEraseC eD 00
1& eraseC @C -> backToStart 1& @X
e$ restoreCD $0 -> restoreCD e$ $0
11 restoreCD @% -> restoreCD 11 @0
1D backToSharpOne 0X -> backToSharpOne 1D 0X
e1 backToSharpOne 0D -> backToSharpOne e1 0D
$X gotoMark $0 -> gotoMark $X $0
@1 backToStart 01 -> backToStart @1 01
$C restoreCD @0 -> restoreCD $C @0
0% forwardToLastD 1E -> incD 0% 1E
1E temp 01 -> beginCopying 1E 01
@X checkEForZero eB -> stop @X eB
$B backToSharpOne $C -> backToSharpOne $B $C
@C dec @0 -> dec @C @1
eX prepEraseC $D -> eraseC eX $D
$E backToSharpOne 11 -> backToSharpOne $E 11
01 initDividerByTwo $0 -> backToD 01 $1
$% restoreCD 10 -> restoreCD $% 10
1E eraseE 0E -> prepEraseC 1E 0E
$C incD e0 -> checkCD $C e1
10 eraseC 00 -> eraseC 10 0B
0& backToSharpOne 10 -> backToSharpOne 0& 10
e@ backToSharpZero @1 -> backToSharpZero e@ @1
1& eraseC 11 -> eraseC 1& 1B
1@ FINAL -> FINAL 1 FINAL
0$ forwardToLastD $E -> incD 0$ $E
eE replaceWithBlanks $@ -> backToDFromRight eE $@
$B searchOne e1 -> backToDFromLeft $B e&
@X gotoLastE @@ -> dec @X @@
$X gotoLastE e@ -> dec $X e@
@# searchOne 01 -> backToDFromLeft @# 0&
@C eraseC 1C -> backToStart @C 1X
@$ copyOne $B -> backToSharpOne @$ $1
1B gotoDecC $D -> dec 1B $D
e1 searchNextBit e1 -> searchNextBit e1 e1
e0 nullifier @B -> initDivider e0 @E
0X dec $0 -> dec 0X $1
@$ beginCopying 0B -> backToStart @$ 0C
e& gotoMark e1 -> gotoMark e& e1
0C findZero @1 -> beginCopying 0C @1
0% copyOne @B -> backToSharpOne 0% @1
@0 backToDFromRight eB -> backToDFromRight @0 eB
$C replaceWithBlanks $@ -> backToDFromRight $C $@
$% backToD e1 -> backToD $% e1
$1 backToSharpOne 0D -> backToSharpOne $1 0D
e# gotoLastE @@ -> dec e# @@
0X backToSharpZero e1 -> backToSharpZero 0X e1
1X backToDFromRight @1 -> backToDFromRight 1X @1
1# gotoDecC 10 -> gotoDecC 1# 10
$1 backToD @1 -> backToD $1 @1
0D checkCD $1 -> checkCD 0D $1
@D prepEraseC 10 -> prepEraseC @D 10
$C gotoMark $E -> gotoDecC $C $E
@# prepEraseC 00 -> prepEraseC @# 00
e% searchOne $1 -> backToDFromLeft e% $&
e@ searchOne 10 -> restoreCD e@ 10
$& gotoMark @E -> gotoDecC $& @E
e$ goToPlaceForDivider $B -> backToFirstC e$ $D
0% eraseE $E -> prepEraseC 0% $E
$# gotoMark 00 -> gotoMark $# 00
$1 eraseE $0 -> eraseE $1 $B
e# searchNextBit @1 -> searchNextBit e# @1
0X backToSharpOne 00 -> backToSharpOne 0X 00
$& eraseC 00 -> eraseC $& 0B
00 searchZero @0 -> backToDFromLeft 00 @%
0& eraseC 11 -> eraseC 0& 1B
0E initDividerByTwo @0 -> backToD 0E @1
11 backToSharpZero $D -> backToSharpZero 11 $D
0% restoreCD e0 -> restoreCD 0% e0
e0 initDividerByTwo e0 -> backToD e0 e1
@1 checkCD 1D -> checkCD @1 1D
1C eraseE @1 -> eraseE 1C @B
e0 searchNextBit e1 -> searchNextBit e0 e1
e@ searchNextBit 11 -> searchNextBit e@ 11
1$ backToDFromRight @0 -> backToDFromRight 1$ @0
$D backToSharpZero 1E -> backToSharpZero $D 1E
$D searchZero e0 -> backToDFromLeft $D e%
@D beginCopying eB -> backToStart @D eC
$X initDivider @0 -> initDividerByTwo $X @0
1# backToDFromLeft $D -> searchNextBit 1# $D
1D backToStart e0 -> backToStart 1D e0
e0 findZero @1 -> beginCopying e0 @1
e@ backToSharpZero e0 -> backToSharpZero e@ e0
e0 backToDFromLeft @0 -> backToDFromLeft e0 @0
@B gotoDecC e0 -> gotoDecC @B e0
$@ backToSharpZero $D -> backToSharpZero $@ $D
eC beginCopying eB -> backToStart eC eC
eC temp e0 -> beginCopying eC e0
0& searchNextBit $1 -> searchNextBit 0& $1
@B backToSharpZero e1 -> backToSharpZero @B e1
@C backToSharpOne $E -> backToSharpOne @C $E
FINAL 0% -> FINAL 0 FINAL
$% checkEForZero 0B -> stop $% 0B
$$ backToSharpOne 1C -> backToSharpOne $$ 1C
eC backToDFromRight 0B -> backToDFromRight eC 0B
0$ backToDFromLeft 1% -> backToDFromLeft 0$ 1%
1D gotoLastE 0@ -> dec 1D 0@
eB copyZero eB -> backToSharpZero eB e0
1# beginCopying $B -> backToStart 1# $C
1$ copyOne 0B -> backToSharpOne 1$ 01
e@ backToFirstC 01 -> backToFirstC e@ 01
0$ checkCD $1 -> checkCD 0$ $1
$0 backToSharpOne $1 -> backToSharpOne $0 $1
e% prepEraseC 00 -> prepEraseC e% 00
0X backToSharpOne 1E -> backToSharpOne 0X 1E
$D gotoDecC 1D -> dec $D 1D
00 goToPlaceForDivider 0B -> backToFirstC 00 0D
e& checkCD $0 -> checkCD e& $0
@E replaceWithBlanks @@ -> backToDFromRight @E @@
@0 backToFirstC @0 -> backToFirstC @0 @0
@C backToD e1 -> backToD @C e1
0& backToSharpZero @E -> backToSharpZero 0& @E
10 backToDFromLeft $0 -> backToDFromLeft 10 $0
1B findBlank @B -> FINAL 1B @B
1X backToDFromLeft 00 -> backToDFromLeft 1X 00
1X forwardToLastD $E -> incD 1X $E
@# backToDFromRight 01 -> backToDFromRight @# 01
1$ restoreCD 0D -> restoreCD 1$ 0D
e1 prepEraseC eD -> eraseC e1 eD
$@ backToD @1 -> backToD $@ @1
@$ backToDFromLeft $0 -> backToDFromLeft @$ $0
00 replaceWithBlanks @@ -> backToDFromRight 00 @@
@0 backToFirstC e0 -> backToFirstC @0 e0
0# gotoMark @0 -> gotoMark 0# @0
e$ backToSharpOne 11 -> backToSharpOne e$ 11
01 dec 00 -> dec 01 01
0$ backToDFromRight 0E -> backToDFromRight 0$ 0E
$E searchNextBit 10 -> searchNextBit $E 10
@$ gotoMark @1 -> gotoMark @$ @1
0& temp 00 -> beginCopying 0& 00
e& backToSharpZero @X -> backToSharpZero e& @X
eB restoreCD 11 -> restoreCD eB 11
11 backToSharpOne 1D -> backToSharpOne 11 1D
1D initDividerByTwo @0 -> backToD 1D @1
eX backToD 10 -> backToD eX 10
00 gotoMark e1 -> gotoMark 00 e1
@1 backToDFromRight eB -> backToDFromRight @1 eB
0& gotoMark @1 -> gotoMark 0& @1
0E forwardToLastD 1E -> incD 0E 1E
0E incD e0 -> checkCD 0E e1
$E backToDFromRight @E -> backToDFromRight $E @E
$C restoreCD 01 -> restoreCD $C 01
e0 searchZero e1 -> restoreCD e0 e1
e1 findBlank 10 -> temp e1 10
1& searchNextBit 10 -> searchNextBit 1& 10
@% searchOne $0 -> restoreCD @% $0
$& backToSharpOne 1C -> backToSharpOne $& 1C
1$ backToSharpOne 1D -> backToSharpOne 1$ 1D
1E dec 10 -> dec 1E 11
e% searchNextBit 00 -> searchNextBit e% 00
1# incD @1 -> incD 1# @0
$D backToSharpZero $1 -> backToSharpZero $D $1
@$ backToDFromLeft 10 -> backToDFromLeft @$ 10
@% incD @1 -> incD @% @0
@C restoreCD @& -> restoreCD @C @1
$@ searchNextBit $0 -> searchNextBit $@ $0
e# backToSharpZero $E -> backToSharpZero e# $E
eB gotoDecC @0 -> gotoDecC eB @0
searchZero @& -> @& searchZero
eC incD 11 -> incD eC 10
@B backToSharpOne $E -> backToSharpOne @B $E
@@ searchOne $0 -> restoreCD @@ $0
@0 backToSharpZero $D -> backToSharpZero @0 $D
eC restoreCD @& -> restoreCD eC @1
$$ eraseE @0 -> eraseE $$ @B
$X gotoDecC $1 -> gotoDecC $X $1
@C restoreCD @1 -> restoreCD @C @1
e# goToPlaceForDivider @B -> backToFirstC e# @D
@# gotoDecC @D -> dec @# @D
0B dec 11 -> gotoMark 0B 10
1C restoreCD e0 -> restoreCD 1C e0
1X backToSharpZero 00 -> backToSharpZero 1X 00
$% backToSharpOne 1X -> backToSharpOne $% 1X
0@ eraseC 11 -> eraseC 0@ 1B
eB searchNextBit 10 -> searchNextBit eB 10
@& backToSharpOne @0 -> backToSharpOne @& @0
$X beginCopying $B -> backToStart $X $C
@$ backToDFromLeft 01 -> backToDFromLeft @$ 01
e# restoreCD 1& -> restoreCD e# 11
eX eraseE $0 -> eraseE eX $B
0% nullifier $B -> initDivider 0% $E
1% backToFirstC $1 -> backToFirstC 1% $1
$D backToStart $0 -> backToStart $D $0
01 massErase @@ -> eraseE 01 @@
1% restoreCD @% -> restoreCD 1% @0
e& gotoDecC 10 -> gotoDecC e& 10
eD searchNextBit 00 -> searchNextBit eD 00
01 backToFirstC e0 -> backToFirstC 01 e0
@D backToSharpZero 0E -> backToSharpZero @D 0E
@$ gotoLastE 0@ -> dec @$ 0@
@% restoreCD @% -> restoreCD @% @0
$C gotoMark @1 -> gotoMark $C @1
0% eraseE 00 -> eraseE 0% 0B
0X backToDFromLeft e% -> backToDFromLeft 0X e%
@B restoreCD @& -> restoreCD @B @1
@@ backToFirstC @0 -> backToFirstC @@ @0
1# restoreCD 1% -> restoreCD 1# 10
e0 replaceWithBlanks 0@ -> backToDFromRight e0 0@
1% backToStart 11 -> backToStart 1% 11
e1 checkCD 00 -> checkCD e1 00
copyZero 1C -> 1C copyZero
1# replaceWithBlanks 1@ -> backToDFromRight 1# 1@
01 replaceWithBlanks e@ -> backToDFromRight 01 e@
$# checkCD e1 -> checkCD $# e1
1B backToSharpOne $E -> backToSharpOne 1B $E
0$ searchOne e1 -> backToDFromLeft 0$ e&
$1 backToD $0 -> backToD $1 $0
e@ backToStart @0 -> backToStart e@ @0
1$ backToDFromRight 0B -> backToDFromRight 1$ 0B
@E backToDFromRight @0 -> backToDFromRight @E @0
eB nullifier @B -> initDivider eB @E
@% beginCopying @B -> backToStart @% @C
@1 backToDFromLeft 0& -> backToDFromLeft @1 0&
e1 gotoMark $E -> gotoDecC e1 $E
1@ searchNextBit 11 -> searchNextBit 1@ 11
1E searchNextBit 01 -> searchNextBit 1E 01
eE copyZero @B -> backToSharpZero eE @0
$C eraseE e1 -> eraseE $C eB
@% dec $0 -> dec @% $1
@C backToSharpZero $E -> backToSharpZero @C $E
@$ gotoDecC e0 -> gotoDecC @$ e0
eX prepEraseC 00 -> prepEraseC eX 00
eB backToD @1 -> backToD eB @1
1X gotoMark @1 -> gotoMark 1X @1
eD gotoMark 10 -> gotoMark eD 10
e% eraseC @1 -> eraseC e% @B
$% backToDFromRight @1 -> backToDFromRight $% @1
0% backToFirstC e0 -> backToFirstC 0% e0
eD dec e1 -> gotoMark eD e0
@X restoreCD e1 -> restoreCD @X e1
@X forwardToLastD 1E -> incD @X 1E
e0 backToSharpOne @C -> backToSharpOne e0 @C
1$ backToDFromLeft $% -> backToDFromLeft 1$ $%
1C gotoDecC $D -> dec 1C $D
beginCopying 01 -> 01 beginCopying
eC findBlank $1 -> temp eC $1
01 gotoMark 1E -> gotoDecC 01 1E
$@ replaceWithBlanks $@ -> backToDFromRight $@ $@
1& gotoDecC @0 -> gotoDecC 1& @0
$E gotoMark 1E -> gotoDecC $E 1E
1# findBlank eB -> FINAL 1# eB
1D restoreCD @0 -> restoreCD 1D @0
@$ goToPlaceForDivider @B -> backToFirstC @$ @D
$@ replaceWithBlanks 1@ -> backToDFromRight $@ 1@
@$ gotoMark eE -> gotoDecC @$ eE
1# gotoMark @E -> gotoDecC 1# @E
$% temp 10 -> beginCopying $% 10
0& eraseE $0 -> eraseE 0& $B
1% gotoDecC 1D -> dec 1% 1D
0D FINAL -> FINAL 0 FINAL
e& nullifier 0B -> initDivider e& 0E
@B incD 01 -> incD @B 00
@X gotoMark e1 -> gotoMark @X e1
@X restoreCD 1% -> restoreCD @X 10
e& restoreCD $1 -> restoreCD e& $1
01 copyZero 0B -> backToSharpZero 01 00
0# incD 01 -> incD 0# 00
1# findZero @1 -> beginCopying 1# @1
@X backToSharpOne e0 -> backToSharpOne @X e0
$# dec 00 -> dec $# 01
0E restoreCD e1 -> restoreCD 0E e1
$E gotoMark $1 -> gotoMark $E $1
$B backToSharpOne 01 -> backToSharpOne $B 01
eD gotoDecC 01 -> gotoDecC eD 01
e0 searchNextBit $1 -> searchNextBit e0 $1
eB backToSharpZero eD -> backToSharpZero eB eD
10 backToDFromRight @0 -> backToDFromRight 10 @0
@E eraseC @1 -> eraseC @E @B
$X prepEraseC @0 -> prepEraseC $X @0
e@ copyOne eB -> backToSharpOne e@ e1
0D restoreCD 1% -> restoreCD 0D 10
11 prepEraseC 0D -> eraseC 11 0D
$& temp e0 -> beginCopying $& e0
eB backToStart e1 -> backToStart eB e1
0C findZero $1 -> beginCopying 0C $1
@C eraseC $0 -> eraseC @C $B
$# backToFirstC 00 -> backToFirstC $# 00
11 massErase @@ -> eraseE 11 @@
01 gotoDecC 10 -> gotoDecC 01 10
$C checkEForZero @B -> stop $C @B
0@ backToDFromRight 1E -> backToDFromRight 0@ 1E
@# searchOne e0 -> restoreCD @# e0
@E searchZero @0 -> backToDFromLeft @E @%
0$ gotoMark $0 -> gotoMark 0$ $0
1& restoreCD $0 -> restoreCD 1& $0
1@ incD 10 -> checkCD 1@ 11
FINAL @% -> FINAL @ FINAL
01 backToStart $1 -> backToStart 01 $1
eC copyZero 0B -> backToSharpZero eC 00
e1 backToDFromLeft $D -> searchNextBit e1 $D
$X dec 10 -> dec $X 11
e% eraseE @E -> prepEraseC e% @E
@1 gotoMark 01 -> gotoMark @1 01
1B backToDFromLeft @% -> backToDFromLeft 1B @%
@X temp $1 -> beginCopying @X $1
0$ backToSharpZero 0X -> backToSharpZero 0$ 0X
$$ searchOne 00 -> restoreCD $$ 00
1B backToSharpZero 0D -> backToSharpZero 1B 0D
1& copyOne 1B -> backToSharpOne 1& 11
1@ goToPlaceForDivider @B -> backToFirstC 1@ @D
@& findBlank @1 -> temp @& @1
$0 eraseE eE -> prepEraseC $0 eE
$# replaceWithBlanks 1@ -> backToDFromRight $# 1@
0& backToFirstC $1 -> backToFirstC 0& $1
@D backToDFromRight 11 -> backToDFromRight @D 11
$$ gotoMark $1 -> gotoMark $$ $1
$X backToSharpOne $C -> backToSharpOne $X $C
0% eraseE @1 -> eraseE 0% @B
0& eraseE @E -> prepEraseC 0& @E
0# prepEraseC @D -> eraseC 0# @D
1@ findBlank $0 -> temp 1@ $0
@@ findZero $1 -> beginCopying @@ $1
e% checkEForZero 0B -> stop e% 0B
@E temp 10 -> beginCopying @E 10
e1 copyOne $B -> backToSharpOne e1 $1
$# goToPlaceForDivider $B -> backToFirstC $# $D
@& temp $1 -> beginCopying @& $1
@& restoreCD $% -> restoreCD @& $0
@@ gotoLastE 1@ -> dec @@ 1@
0$ backToSharpZero 0E -> backToSharpZero 0$ 0E
e% backToSharpZero 1X -> backToSharpZero e% 1X
@E gotoDecC e0 -> gotoDecC @E e0
1C backToSharpZero eC -> backToSharpZero 1C eC
eD backToSharpZero 1X -> backToSharpZero eD 1X
$$ dec @1 -> gotoMark $$ @0
$% backToDFromLeft 10 -> backToDFromLeft $% 10
0C prepEraseC $1 -> prepEraseC 0C $1
e0 eraseE 10 -> eraseE e0 1B
0X restoreCD @D -> restoreCD 0X @D
1& forwardToLastD $E -> incD 1& $E
@$ forwardToLastD @E -> incD @$ @E
0% gotoLastE @@ -> dec 0% @@
0E backToDFromRight e1 -> backToDFromRight 0E e1
1C beginCopying 0B -> backToStart 1C 0C
eB beginCopying 1B -> backToStart eB 1C
1$ findBlank 0B -> FINAL 1$ 0B
11 eraseC 01 -> eraseC 11 0B
0D restoreCD 10 -> restoreCD 0D 10
$@ copyZero 1B -> backToSharpZero $@ 10
$& restoreCD $% -> restoreCD $& $0
$1 backToSharpOne e1 -> backToSharpOne $1 e1
$& backToDFromLeft 10 -> backToDFromLeft $& 10
@1 gotoDecC 11 -> gotoDecC @1 11
@1 incD @1 -> incD @1 @0
0% backToStart 00 -> backToStart 0% 00
@@ backToSharpOne @0 -> backToSharpOne @@ @0
1% backToSharpZero 0D -> backToSharpZero 1% 0D
e@ backToSharpZero $X -> backToSharpZero e@ $X
0& searchNextBit 01 -> searchNextBit 0& 01
$& incD 01 -> incD $& 00
$D backToDFromRight $E -> backToDFromRight $D $E
1@ replaceWithBlanks 0@ -> backToDFromRight 1@ 0@
$E prepEraseC 10 -> prepEraseC $E 10
$E massErase e@ -> eraseE $E e@
restoreCD eC -> eC backToDAfterInc
0C backToDFromLeft e1 -> backToDFromLeft 0C e1
0B backToSharpZero $0 -> backToSharpZero 0B $0
$E backToSharpZero eX -> backToSharpZero $E eX
0# backToFirstC e0 -> backToFirstC 0# e0
1E eraseE 11 -> eraseE 1E 1B
@& restoreCD eD -> restoreCD @& eD
@1 checkCD e1 -> checkCD @1 e1
1C searchZero e0 -> backToDFromLeft 1C e%
backToDAfterInc @0 -> @0 backToDAfterInc
eE searchZero 11 -> restoreCD eE 11
$X backToSharpOne 10 -> backToSharpOne $X 10
0# backToDFromRight e1 -> backToDFromRight 0# e1
e0 backToSharpOne 0E -> backToSharpOne e0 0E
1D restoreCD e& -> restoreCD 1D e1
0C temp e0 -> beginCopying 0C e0
e$ backToD @1 -> backToD e$ @1
eD eraseC $1 -> eraseC eD $B
e$ prepEraseC $1 -> prepEraseC e$ $1
0@ backToDFromLeft 10 -> backToDFromLeft 0@ 10
$& copyOne 1B -> backToSharpOne $& 11
$& temp @1 -> beginCopying $& @1
1$ gotoMark $0 -> gotoMark 1$ $0
@0 checkEForZero @B -> stop @0 @B
@E initDividerByTwo e0 -> backToD @E e1
1B findZero @1 -> beginCopying 1B @1
$% checkCD $0 -> checkCD $% $0
1X initDividerByTwo 00 -> backToD 1X 01
0C backToFirstC 11 -> backToFirstC 0C 11
@$ prepEraseC 10 -> prepEraseC @$ 10
0# copyOne $B -> backToSharpOne 0# $1
@E nullifier 0B -> initDivider @E 0E
0D backToSharpZero eX -> backToSharpZero 0D eX
@C restoreCD e& -> restoreCD @C e1
eX restoreCD 0% -> restoreCD eX 00
@E copyOne $B -> backToSharpOne @E $1
0& checkCD 00 -> checkCD 0& 00
$@ restoreCD e% -> restoreCD $@ e0
0D findBlank @B -> FINAL 0D @B
0& backToSharpOne 1D -> backToSharpOne 0& 1D
eE eraseC 0C -> backToStart eE 0X
eC backToDFromRight @0 -> backToDFromRight eC @0
11 backToDFromRight @B -> backToDFromRight 11 @B
$C backToDFromRight 11 -> backToDFromRight $C 11
1E findBlank @B -> FINAL 1E @B
1E gotoDecC eD -> dec 1E eD
e% checkCD $1 -> checkCD e% $1
e@ eraseE $1 -> eraseE e@ $B
e@ checkCD @D -> checkCD e@ @D
1E backToFirstC 10 -> backToFirstC 1E 10
$# incD 10 -> checkCD $# 11
1# checkCD $1 -> checkCD 1# $1
moveToE 01 -> 01 moveToE
e# backToSharpOne e0 -> backToSharpOne e# e0
e1 nullifier 1B -> initDivider e1 1E
e0 restoreCD @% -> restoreCD e0 @0
@B backToSharpOne 1C -> backToSharpOne @B 1C
$@ backToSharpZero 11 -> backToSharpZero $@ 11
e% backToDFromLeft 0% -> backToDFromLeft e% 0%
@0 temp 01 -> beginCopying @0 01
1% backToD 10 -> backToD 1% 10
1E backToD e0 -> backToD 1E e0
e@ massErase e@ -> eraseE e@ e@
e$ initDividerByTwo e0 -> backToD e$ e1
@1 checkCD @D -> checkCD @1 @D
@@ searchZero @0 -> backToDFromLeft @@ @%
@% prepEraseC $1 -> prepEraseC @% $1
eD searchNextBit $1 -> searchNextBit eD $1
1& temp @0 -> beginCopying 1& @0
1C backToDFromLeft @0 -> backToDFromLeft 1C @0
@0 gotoMark e1 -> gotoMark @0 e1
0# backToDFromLeft $1 -> backToDFromLeft 0# $1
0$ gotoMark e1 -> gotoMark 0$ e1
@B backToDFromRight 0B -> backToDFromRight @B 0B
10 backToD @0 -> backToD 10 @0
@D checkCD 11 -> checkCD @D 11
0& massErase $@ -> eraseE 0& $@
$1 dec @1 -> gotoMark $1 @0
10 backToFirstC $0 -> backToFirstC 10 $0
@@ goToPlaceForDivider eB -> backToFirstC @@ eD
e@ initDividerByTwo $0 -> backToD e@ $1
$@ copyZero 0B -> backToSharpZero $@ 00
1& backToSharpOne 1X -> backToSharpOne 1& 1X
e& backToDFromLeft $0 -> backToDFromLeft e& $0
1% copyZero 0B -> backToSharpZero 1% 00
e% backToSharpZero eC -> backToSharpZero e% eC
01 backToSharpZero @0 -> backToSharpZero 01 @0
e& searchOne 00 -> restoreCD e& 00
eC eraseC $0 -> eraseC eC $B
1@ backToSharpOne 10 -> backToSharpOne 1@ 10
e# goToPlaceForDivider 0B -> backToFirstC e# 0D
e% incD 01 -> incD e% 00
$& searchNextBit 11 -> searchNextBit $& 11
$& eraseE e0 -> eraseE $& eB
eD checkCD $1 -> checkCD eD $1
$X gotoMark 0E -> gotoDecC $X 0E
e1 backToDFromLeft @& -> backToDFromLeft e1 @&
@1 dec $0 -> dec @1 $1
1$ eraseC 1C -> backToStart 1$ 1X
eC backToStart 00 -> backToStart eC 00
$D backToSharpOne e1 -> backToSharpOne $D e1
0X checkEForZero $B -> stop 0X $B
@E backToDFromLeft $D -> searchNextBit @E $D
1D incD @0 -> checkCD 1D @1
eX dec $1 -> gotoMark eX $0
0$ searchNextBit @1 -> searchNextBit 0$ @1
@E findZero 11 -> beginCopying @E 11
0B backToDFromLeft 1& -> backToDFromLeft 0B 1&
1C findBlank eB -> FINAL 1C eB
0X backToDFromRight $1 -> backToDFromRight 0X $1
$1 beginCopying $B -> backToStart $1 $C
1% restoreCD 00 -> restoreCD 1% 00
1E nullifier @B -> initDivider 1E @E
$@ gotoDecC 0D -> dec $@ 0D
0B gotoLastE 1@ -> dec 0B 1@
1# backToSharpOne eD -> backToSharpOne 1# eD
@C checkEForZero 1B -> stop @C 1B
eD dec 10 -> dec eD 11
1@ backToDFromRight @1 -> backToDFromRight 1@ @1
0% incD 10 -> checkCD 0% 11
$C gotoMark 11 -> gotoMark $C 11
0B backToDFromRight eB -> backToDFromRight 0B eB
$C searchZero $1 -> restoreCD $C $1
0@ eraseE $E -> prepEraseC 0@ $E
0# gotoDecC 01 -> gotoDecC 0# 01
e@ FINAL -> FINAL e FINAL
eX searchOne 11 -> backToDFromLeft eX 1&
0X initDividerByTwo 10 -> backToD 0X 11
1D searchZero $1 -> restoreCD 1D $1
0E gotoDecC 00 -> gotoDecC 0E 00
$D backToDFromLeft $% -> backToDFromLeft $D $%
e0 eraseE $0 -> eraseE e0 $B
1B eraseE e1 -> eraseE 1B eB
@X searchZero 11 -> restoreCD @X 11
0@ eraseC eC -> backToStart 0@ eX
@X restoreCD 1D -> restoreCD @X 1D
e1 backToDFromLeft @% -> backToDFromLeft e1 @%
e& gotoMark $1 -> gotoMark e& $1
e% eraseE 11 -> eraseE e% 1B
@1 backToStart 10 -> backToStart @1 10
e1 dec e1 -> gotoMark e1 e0
0% findZero 11 -> beginCopying 0% 11
@X initDividerByTwo 00 -> backToD @X 01
$# gotoDecC $D -> dec $# $D
@B findBlank 1B -> FINAL @B 1B
@& gotoMark $1 -> gotoMark @& $1
11 backToSharpOne e0 -> backToSharpOne 11 e0
@# backToSharpZero $1 -> backToSharpZero @# $1
$E replaceWithBlanks $@ -> backToDFromRight $E $@
@1 backToD $0 -> backToD @1 $0
1C prepEraseC $0 -> prepEraseC 1C $0
$@ backToSharpZero 1C -> backToSharpZero $@ 1C
$$ checkCD e1 -> checkCD $$ e1
@# backToSharpOne eD -> backToSharpOne @# eD
@B backToDFromRight 1B -> backToDFromRight @B 1B
11 beginCopying 0B -> backToStart 11 0C
e# gotoMark 01 -> gotoMark e# 01
e0 backToSharpOne $E -> backToSharpOne e0 $E
0B backToDFromLeft $% -> backToDFromLeft 0B $%
$# gotoDecC @D -> dec $# @D
eX massErase @@ -> eraseE eX @@
$$ backToDFromRight 01 -> backToDFromRight $$ 01
0C forwardToLastD $E -> incD 0C $E
0% backToSharpOne 0E -> backToSharpOne 0% 0E
@1 backToDFromLeft 1% -> backToDFromLeft @1 1%
1@ findBlank e0 -> temp 1@ e0
1# restoreCD $& -> restoreCD 1# $1
0# backToDFromRight $0 -> backToDFromRight 0# $0
eB gotoMark 01 -> gotoMark eB 01
0# backToStart e1 -> backToStart 0# e1
@D replaceWithBlanks $@ -> backToDFromRight @D $@
$# findBlank $1 -> temp $# $1
searchOne @& -> @& searchOne
10 backToSharpZero 10 -> backToSharpZero 10 10
0$ incD 01 -> incD 0$ 00
$% checkCD @1 -> checkCD $% @1
$1 eraseE 0E -> prepEraseC $1 0E
@$ findBlank eB -> FINAL @$ eB
$1 restoreCD 1& -> restoreCD $1 11
e# eraseE $E -> prepEraseC e# $E
1% nullifier 1B -> initDivider 1% 1E
$1 restoreCD e1 -> restoreCD $1 e1
@E gotoMark 1E -> gotoDecC @E 1E
$E restoreCD @% -> restoreCD $E @0
1% backToSharpOne $0 -> backToSharpOne 1% $0
0C backToSharpOne 10 -> backToSharpOne 0C 10
0@ backToSharpOne eC -> backToSharpOne 0@ eC
0X backToStart @1 -> backToStart 0X @1
$@ backToSharpZero e1 -> backToSharpZero $@ e1
1X eraseE 00 -> eraseE 1X 0B
0B backToSharpOne $X -> backToSharpOne 0B $X
$% gotoDecC $1 -> gotoDecC $% $1
@0 searchZero 01 -> restoreCD @0 01
0C incD $0 -> checkCD 0C $1
@1 eraseC @1 -> eraseC @1 @B
10 copyOne $B -> backToSharpOne 10 $1
0C gotoDecC $D -> dec 0C $D
1$ initDivider 00 -> initDividerByTwo 1$ 00
e% gotoMark @E -> gotoDecC e% @E
1@ restoreCD 00 -> restoreCD 1@ 00
@D backToSharpOne $0 -> backToSharpOne @D $0
1@ initDivider @0 -> initDividerByTwo 1@ @0
$D backToStart @0 -> backToStart $D @0
@& findBlank e1 -> temp @& e1
0$ backToStart 10 -> backToStart 0$ 10
0E backToD $1 -> backToD 0E $1
0B backToDFromRight 0E -> backToDFromRight 0B 0E
@D backToDFromRight $E -> backToDFromRight @D $E
1C copyOne 1B -> backToSharpOne 1C 11
0@ findBlank e1 -> temp 0@ e1
0% backToSharpZero @C -> backToSharpZero 0% @C
0& backToDFromRight $B -> backToDFromRight 0& $B
1% backToSharpOne $E -> backToSharpOne 1% $E
1& copyZero @B -> backToSharpZero 1& @0
$C temp 00 -> beginCopying $C 00
0& backToDFromLeft 1D -> searchNextBit 0& 1D
1E nullifier eB -> initDivider 1E eE
$B backToSharpZero eX -> backToSharpZero $B eX
0D eraseC 10 -> eraseC 0D 1B
eB searchNextBit e0 -> searchNextBit eB e0
00 eraseE 0E -> prepEraseC 00 0E
e0 initDivider @0 -> initDividerByTwo e0 @0
@$ backToDFromLeft $1 -> backToDFromLeft @$ $1
@# backToDFromLeft @% -> backToDFromLeft @# @%
1X eraseE $0 -> eraseE 1X $B
$% backToD $0 -> backToD $% $0
01 dec @0 -> dec 01 @1
@0 backToDFromRight 01 -> backToDFromRight @0 01
e# backToSharpZero eX -> backToSharpZero e# eX
eC backToDFromRight @1 -> backToDFromRight eC @1
10 backToDFromRight 1B -> backToDFromRight 10 1B
@% backToFirstC 11 -> backToFirstC @% 11
1X prepEraseC e0 -> prepEraseC 1X e0
e1 gotoDecC 0D -> dec e1 0D
e# forwardToLastD 1E -> incD e# 1E
@0 eraseE 01 -> eraseE @0 0B
0@ initDividerByTwo 00 -> backToD 0@ 01
$D temp @0 -> beginCopying $D @0
@% backToSharpZero @0 -> backToSharpZero @% @0
1E eraseE $1 -> eraseE 1E $B
1& dec e0 -> dec 1& e1
createCopy 1X -> 1C forwardToLastD
eB initDivider 10 -> initDividerByTwo eB 10
$$ gotoMark @0 -> gotoMark $$ @0
@@ prepEraseC @1 -> prepEraseC @@ @1
e# forwardToLastD 0E -> incD e# 0E
@$ backToSharpOne $E -> backToSharpOne @$ $E
0& backToDFromLeft e1 -> backToDFromLeft 0& e1
e# restoreCD e0 -> restoreCD e# e0
e0 eraseE eE -> prepEraseC e0 eE
e1 initDivider @0 -> initDividerByTwo e1 @0
0E backToSharpZero @D -> backToSharpZero 0E @D
$& backToSharpZero @1 -> backToSharpZero $& @1
$X backToSharpOne @1 -> backToSharpOne $X @1
01 backToSharpZero eX -> backToSharpZero 01 eX
@D backToSharpZero e1 -> backToSharpZero @D e1
@1 backToD @1 -> backToD @1 @1
10 prepEraseC 00 -> prepEraseC 10 00
0C backToSharpZero eX -> backToSharpZero 0C eX
e0 eraseC 10 -> eraseC e0 1B
$E backToDFromLeft $& -> backToDFromLeft $E $&
$# eraseC 00 -> eraseC $# 0B
0# eraseC @1 -> eraseC 0# @B
1B backToDFromLeft eD -> searchNextBit 1B eD
$# searchOne e1 -> backToDFromLeft $# e&
e0 dec $1 -> gotoMark e0 $0
@% gotoDecC 10 -> gotoDecC @% 10
1C searchZero 11 -> restoreCD 1C 11
eX restoreCD 00 -> restoreCD eX 00
1D findZero $1 -> beginCopying 1D $1
$0 restoreCD @% -> restoreCD $0 @0
0C eraseC $C -> backToStart 0C $X
@E restoreCD @% -> restoreCD @E @0
0@ findBlank $B -> FINAL 0@ $B
@0 searchNextBit @0 -> searchNextBit @0 @0
$0 dec 11 -> gotoMark $0 10
$@ searchOne 11 -> backToDFromLeft $@ 1&
01 backToD 11 -> backToD 01 11
$X backToDFromRight 01 -> backToDFromRight $X 01
0E backToFirstC $0 -> backToFirstC 0E $0
0@ copyOne @B -> backToSharpOne 0@ @1
eD backToDFromLeft $1 -> backToDFromLeft eD $1
0$ findBlank @0 -> temp 0$ @0
@& eraseE eE -> prepEraseC @& eE
1% searchOne e0 -> restoreCD 1% e0
0X searchZero e1 -> restoreCD 0X e1
@$ findBlank 00 -> temp @$ 00
$1 backToDFromRight 0E -> backToDFromRight $1 0E
beginCopying e0 -> e0 beginCopying
$& gotoMark 1E -> gotoDecC $& 1E
0$ eraseC 11 -> eraseC 0$ 1B
0D prepEraseC $1 -> prepEraseC 0D $1
10 backToDFromRight 01 -> backToDFromRight 10 01
1B gotoDecC e0 -> gotoDecC 1B e0
11 dec $0 -> dec 11 $1
@& incD 01 -> incD @& 00
e1 dec 10 -> dec e1 11
@$ gotoMark $1 -> gotoMark @$ $1
1C backToDFromLeft 1D -> searchNextBit 1C 1D
$C eraseC 11 -> eraseC $C 1B
0X restoreCD e0 -> restoreCD 0X e0
eE FINAL -> FINAL e FINAL
dec @E -> @E replaceWithBlanks
1E restoreCD 11 -> restoreCD 1E 11
1D backToDFromLeft $% -> backToDFromLeft 1D $%
e0 backToFirstC $0 -> backToFirstC e0 $0
@& backToSharpZero @0 -> backToSharpZero @& @0
$& searchNextBit @0 -> searchNextBit $& @0
1$ searchNextBit 11 -> searchNextBit 1$ 11
1C incD $1 -> incD 1C $0
0D beginCopying @B -> backToStart 0D @C
$C backToDFromRight e0 -> backToDFromRight $C e0
e0 backToSharpZero 11 -> backToSharpZero e0 11
1& backToSharpOne $0 -> backToSharpOne 1& $0
@0 backToSharpOne 10 -> backToSharpOne @0 10
@B eraseE $1 -> eraseE @B $B
$C eraseC @0 -> eraseC $C @B
@& restoreCD 0& -> restoreCD @& 01
@% incD $1 -> incD @% $0
e# backToDFromLeft $D -> searchNextBit e# $D
1C findBlank @0 -> temp 1C @0
$C checkEForZero $B -> stop $C $B
e$ backToSharpZero 0C -> backToSharpZero e$ 0C
$1 backToSharpOne 01 -> backToSharpOne $1 01
@B searchOne @1 -> backToDFromLeft @B @&
0C restoreCD $& -> restoreCD 0C $1
$0 backToSharpOne $D -> backToSharpOne $0 $D
$B findZero @1 -> beginCopying $B @1
0B searchZero 10 -> backToDFromLeft 0B 1%
0C eraseE eE -> prepEraseC 0C eE
e@ restoreCD 10 -> restoreCD e@ 10
1E backToDFromLeft e1 -> backToDFromLeft 1E e1
1@ backToD 00 -> backToD 1@ 00
@@ eraseE 0E -> prepEraseC @@ 0E
0X beginCopying @B -> backToStart 0X @C
$D backToSharpOne eX -> backToSharpOne $D eX
$1 restoreCD e% -> restoreCD $1 e0
0@ beginCopying 1B -> backToStart 0@ 1C
@& temp e1 -> beginCopying @& e1
01 incD $1 -> incD 01 $0
eX gotoDecC eD -> dec eX eD
$E backToDFromLeft e0 -> backToDFromLeft $E e0
e1 backToDFromLeft 11 -> backToDFromLeft e1 11
@D gotoMark $1 -> gotoMark @D $1
0$ eraseE @0 -> eraseE 0$ @B
01 gotoDecC $D -> dec 01 $D
@# backToD 01 -> backToD @# 01
1$ beginCopying @B -> backToStart 1$ @C
1B incD 10 -> checkCD 1B 11
0@ backToSharpZero @1 -> backToSharpZero 0@ @1
00 backToSharpZero 0D -> backToSharpZero 00 0D
eC eraseC 00 -> eraseC eC 0B
01 backToStart e0 -> backToStart 01 e0
eC nullifier 1B -> initDivider eC 1E
$C backToSharpZero @C -> backToSharpZero $C @C
e% checkEForZero @B -> stop e% @B
$B backToDFromLeft e1 -> backToDFromLeft $B e1
@% checkCD @D -> checkCD @% @D
@D eraseC $1 -> eraseC @D $B
eX checkCD $1 -> checkCD eX $1
@# backToSharpZero @X -> backToSharpZero @# @X
$0 backToSharpZero 11 -> backToSharpZero $0 11
1E restoreCD 1& -> restoreCD 1E 11
11 gotoLastE 0@ -> dec 11 0@
1E eraseC 00 -> eraseC 1E 0B
$B eraseC @0 -> eraseC $B @B
$1 prepEraseC @0 -> prepEraseC $1 @0
@C temp 11 -> beginCopying @C 11
@X prepEraseC 00 -> prepEraseC @X 00
eD goToPlaceForDivider 1B -> backToFirstC eD 1D
eX searchZero 00 -> backToDFromLeft eX 0%
0X backToSharpZero eC -> backToSharpZero 0X eC
@B checkEForZero @B -> stop @B @B
@X eraseE 10 -> eraseE @X 1B
e0 findBlank 00 -> temp e0 00
0& backToSharpZero e1 -> backToSharpZero 0& e1
$% backToSharpOne $C -> backToSharpOne $% $C
0C backToDFromLeft e% -> backToDFromLeft 0C e%
01 eraseE $0 -> eraseE 01 $B
$% nullifier @B -> initDivider $% @E
0@ goToPlaceForDivider 1B -> backToFirstC 0@ 1D
0# copyZero eB -> backToSharpZero 0# e0
@B backToSharpOne $D -> backToSharpOne @B $D
@% incD 11 -> incD @% 10
eB temp @0 -> beginCopying eB @0
e& gotoLastE $@ -> dec e& $@
e% backToD $0 -> backToD e% $0
@B restoreCD 1D -> restoreCD @B 1D
$$ temp $1 -> beginCopying $$ $1
10 restoreCD 0D -> restoreCD 10 0D
e@ prepEraseC @0 -> prepEraseC e@ @0
00 backToSharpZero @D -> backToSharpZero 00 @D
@E checkCD $0 -> checkCD @E $0
@@ backToDFromLeft 1D -> searchNextBit @@ 1D
$B beginCopying $B -> backToStart $B $C
$# eraseC e1 -> eraseC $# eB
eD backToFirstC @0 -> backToFirstC eD @0
@E restoreCD 1D -> restoreCD @E 1D
0& checkCD 10 -> checkCD 0& 10
0$ backToDFromLeft 11 -> backToDFromLeft 0$ 11
$1 temp 11 -> beginCopying $1 11
@D backToSharpOne $D -> backToSharpOne @D $D
@1 backToSharpZero eX -> backToSharpZero @1 eX
e$ backToFirstC @1 -> backToFirstC e$ @1
$& backToDFromLeft e& -> backToDFromLeft $& e&
0B findZero @1 -> beginCopying 0B @1
10 backToStart $1 -> backToStart 10 $1
$$ eraseE $E -> prepEraseC $$ $E
$@ backToDFromRight $0 -> backToDFromRight $@ $0
@B copyZero 0B -> backToSharpZero @B 00
1% backToSharpZero eX -> backToSharpZero 1% eX
1D backToStart e1 -> backToStart 1D e1
$0 findZero 01 -> beginCopying $0 01
$# checkEForZero 1B -> stop $# 1B
e1 backToDFromLeft @0 -> backToDFromLeft e1 @0
01 replaceWithBlanks @@ -> backToDFromRight 01 @@
@X searchNextBit @1 -> searchNextBit @X @1
10 gotoMark 11 -> gotoMark 10 11
0B temp 10 -> beginCopying 0B 10
@D backToD @0 -> backToD @D @0
@1 backToSharpZero @0 -> backToSharpZero @1 @0
@X checkCD @D -> checkCD @X @D
$% restoreCD 0D -> restoreCD $% 0D
@E backToSharpOne 0E -> backToSharpOne @E 0E
$E massErase @@ -> eraseE $E @@
1X findZero $1 -> beginCopying 1X $1
$# backToDFromLeft $0 -> backToDFromLeft $# $0
@1 eraseE e1 -> eraseE @1 eB
1$ backToFirstC $1 -> backToFirstC 1$ $1
$X backToSharpZero 0D -> backToSharpZero $X 0D
@D eraseC @1 -> eraseC @D @B
1% temp e0 -> beginCopying 1% e0
e# initDivider 10 -> initDividerByTwo e# 10
1@ backToD @0 -> backToD 1@ @0
$D copyZero 1B -> backToSharpZero $D 10
@B beginCopying eB -> backToStart @B eC
0D backToSharpOne $X -> backToSharpOne 0D $X
$$ temp 00 -> beginCopying $$ 00
@E backToDFromRight 1B -> backToDFromRight @E 1B
1C backToSharpZero @0 -> backToSharpZero 1C @0
$D backToSharpOne 1D -> backToSharpOne $D 1D
0D backToSharpOne eE -> backToSharpOne 0D eE
1D backToSharpZero @1 -> backToSharpZero 1D @1
1B massErase $@ -> eraseE 1B $@
e0 restoreCD e0 -> restoreCD e0 e0
@& prepEraseC $0 -> prepEraseC @& $0
00 checkCD @1 -> checkCD 00 @1
@& restoreCD 01 -> restoreCD @& 01
0@ backToSharpOne 1X -> backToSharpOne 0@ 1X
$1 checkCD @D -> checkCD $1 @D
1X restoreCD 01 -> restoreCD 1X 01
11 restoreCD @D -> restoreCD 11 @D
@& forwardToLastD $E -> incD @& $E
1X backToSharpZero e0 -> backToSharpZero 1X e0
$B checkCD 10 -> checkCD $B 10
0& findBlank $1 -> temp 0& $1
1& incD 10 -> checkCD 1& 11
e1 findBlank 1B -> FINAL e1 1B
@X gotoDecC 00 -> gotoDecC @X 00
0# checkEForZero eB -> stop 0# eB
e& findBlank 11 -> temp e& 11
10 initDividerByTwo @0 -> backToD 10 @1
$@ backToDFromLeft e0 -> backToDFromLeft $@ e0
eB eraseE 0E -> prepEraseC eB 0E
00 backToDFromLeft 0% -> backToDFromLeft 00 0%
eD backToSharpZero e1 -> backToSharpZero eD e1
1# backToSharpZero $X -> backToSharpZero 1# $X
@% prepEraseC 00 -> prepEraseC @% 00
e1 backToDFromRight @B -> backToDFromRight e1 @B
0# backToSharpZero @0 -> backToSharpZero 0# @0
$X prepEraseC eD -> eraseC $X eD
e1 nullifier 0B -> initDivider e1 0E
1# backToStart 00 -> backToStart 1# 00
@B incD 10 -> checkCD @B 11
1# backToSharpOne @0 -> backToSharpOne 1# @0
@C eraseE @E -> prepEraseC @C @E
10 backToStart 11 -> backToStart 10 11
backToDFromRight 1D -> 1D createCopy
1@ searchZero @1 -> restoreCD 1@ @1
eB prepEraseC @1 -> prepEraseC eB @1
@& gotoDecC e1 -> gotoDecC @& e1
e@ eraseC 1C -> backToStart e@ 1X
$0 searchOne 11 -> backToDFromLeft $0 1&
1% backToSharpOne @0 -> backToSharpOne 1% @0
e% checkEForZero eB -> stop e% eB
@C massErase $@ -> eraseE @C $@
e# gotoMark $1 -> gotoMark e# $1
@C eraseE 01 -> eraseE @C 0B
@1 backToSharpZero e1 -> backToSharpZero @1 e1
e% backToSharpOne 1D -> backToSharpOne e% 1D
$# checkCD @D -> checkCD $# @D
@C gotoDecC 1D -> dec @C 1D
@$ backToSharpOne 10 -> backToSharpOne @$ 10
eE backToSharpZero eD -> backToSharpZero eE eD
eE findBlank eB -> FINAL eE eB
1E backToSharpOne 01 -> backToSharpOne 1E 01
$D forwardToLastD 0E -> incD $D 0E
$X eraseE 1E -> prepEraseC $X 1E
1C backToSharpOne $X -> backToSharpOne 1C $X
$# restoreCD 1% -> restoreCD $# 10
e0 searchNextBit 10 -> searchNextBit e0 10
1# backToSharpZero 1D -> backToSharpZero 1# 1D
eD eraseC e1 -> eraseC eD eB
0& checkEForZero 1B -> stop 0& 1B
11 backToSharpZero 01 -> backToSharpZero 11 01
0@ eraseE 1E -> prepEraseC 0@ 1E
eX searchNextBit $1 -> searchNextBit eX $1
0$ backToStart $0 -> backToStart 0$ $0
0E prepEraseC e0 -> prepEraseC 0E e0
@D gotoMark 10 -> gotoMark @D 10
0& findBlank $B -> FINAL 0& $B
0$ backToSharpOne $X -> backToSharpOne 0$ $X
e0 eraseE @E -> prepEraseC e0 @E
@$ dec 11 -> gotoMark @$ 10
$$ backToD 11 -> backToD $$ 11
eC searchZero $1 -> restoreCD eC $1
@% backToSharpZero $E -> backToSharpZero @% $E
$D backToFirstC @1 -> backToFirstC $D @1
eD backToDFromLeft e% -> backToDFromLeft eD e%
1@ backToSharpZero $X -> backToSharpZero 1@ $X
1& prepEraseC @1 -> prepEraseC 1& @1
@& checkCD 00 -> checkCD @& 00
@C findBlank eB -> FINAL @C eB
11 searchZero $1 -> restoreCD 11 $1
0E dec @0 -> dec 0E @1
1& temp $1 -> beginCopying 1& $1
e# prepEraseC eD -> eraseC e# eD
$X dec 11 -> gotoMark $X 10
1X temp @1 -> beginCopying 1X @1
0# replaceWithBlanks 0@ -> backToDFromRight 0# 0@
$# findBlank $B -> FINAL $# $B
$# searchNextBit 01 -> searchNextBit $# 01
eB checkEForZero eB -> stop eB eB
1X backToStart e1 -> backToStart 1X e1
$X eraseE $1 -> eraseE $X $B
$E incD e0 -> checkCD $E e1
e% backToSharpOne e0 -> backToSharpOne e% e0
e0 temp @0 -> beginCopying e0 @0
eD initDivider @0 -> initDividerByTwo eD @0
1D backToSharpOne 11 -> backToSharpOne 1D 11
11 copyZero 0B -> backToSharpZero 11 00
1@ massErase e@ -> eraseE 1@ e@
0B temp 11 -> beginCopying 0B 11
e& searchZero @0 -> backToDFromLeft e& @%
@C gotoMark e1 -> gotoMark @C e1
e1 temp $0 -> beginCopying e1 $0
1X gotoDecC e1 -> gotoDecC 1X e1
0& backToSharpZero 0C -> backToSharpZero 0& 0C
e0 restoreCD @& -> restoreCD e0 @1
1# forwardToLastD $E -> incD 1# $E
$& findBlank @B -> FINAL $& @B
0D backToSharpOne e0 -> backToSharpOne 0D e0
$# eraseC $0 -> eraseC $# $B
@@ searchOne e0 -> restoreCD @@ e0
eB gotoMark @E -> gotoDecC eB @E
@1 restoreCD e% -> restoreCD @1 e0
1% dec @0 -> dec 1% @1
0& backToSharpOne $D -> backToSharpOne 0& $D
@0 backToDFromLeft 01 -> backToDFromLeft @0 01
eD backToDFromRight @1 -> backToDFromRight eD @1
e$ eraseE @1 -> eraseE e$ @B
eB searchZero e1 -> restoreCD eB e1
eB replaceWithBlanks 0@ -> backToDFromRight eB 0@
e# backToSharpOne @0 -> backToSharpOne e# @0
$C restoreCD 1& -> restoreCD $C 11
eE forwardToLastD @E -> incD eE @E
1# checkCD $D -> checkCD 1# $D
$B copyOne eB -> backToSharpOne $B e1
$E eraseC @0 -> eraseC $E @B
eC gotoMark @1 -> gotoMark eC @1
01 backToDFromLeft e0 -> backToDFromLeft 01 e0
e0 restoreCD 1& -> restoreCD e0 11
eB prepEraseC 1D -> eraseC eB 1D
e0 checkCD @0 -> checkCD e0 @0
e% gotoDecC 0D -> dec e% 0D
e0 searchNextBit @0 -> searchNextBit e0 @0
1D backToDFromRight $1 -> backToDFromRight 1D $1
$$ backToSharpOne $0 -> backToSharpOne $$ $0
incD eD -> eD FINAL
10 eraseE @0 -> eraseE 10 @B
$C backToDFromRight 0B -> backToDFromRight $C 0B
0D nullifier eB -> initDivider 0D eE
$E eraseC e1 -> eraseC $E eB
$X backToDFromLeft 1& -> backToDFromLeft $X 1&
@1 restoreCD 01 -> restoreCD @1 01
$1 eraseC 11 -> eraseC $1 1B
$$ massErase e@ -> eraseE $$ e@
1% gotoLastE e@ -> dec 1% e@
$E incD $0 -> checkCD $E $1
1& backToStart @1 -> backToStart 1& @1
1# checkCD 00 -> checkCD 1# 00
e1 searchNextBit @1 -> searchNextBit e1 @1
1E gotoMark $0 -> gotoMark 1E $0
eD eraseC 00 -> eraseC eD 0B
$% incD @0 -> checkCD $% @1
1B temp $1 -> beginCopying 1B $1
$0 restoreCD $0 -> restoreCD $0 $0
1# eraseE 0E -> prepEraseC 1# 0E
0C restoreCD e% -> restoreCD 0C e0
1C backToDFromRight 1B -> backToDFromRight 1C 1B
0& backToFirstC 01 -> backToFirstC 0& 01
$& backToSharpZero 1D -> backToSharpZero $& 1D
1C restoreCD $1 -> restoreCD 1C $1
1E copyOne 1B -> backToSharpOne 1E 11
@C backToSharpZero 11 -> backToSharpZero @C 11
0X backToFirstC e1 -> backToFirstC 0X e1
@$ restoreCD 0% -> restoreCD @$ 00
@B gotoMark 11 -> gotoMark @B 11
@& searchZero 11 -> restoreCD @& 11
$$ eraseE eE -> prepEraseC $$ eE
copyOne 00 -> 00 copyOne
@C checkCD $D -> checkCD @C $D
@X backToDFromLeft 11 -> backToDFromLeft @X 11
01 backToDFromLeft e1 -> backToDFromLeft 01 e1
0# temp e0 -> beginCopying 0# e0
e& incD 10 -> checkCD e& 11
@E findBlank @0 -> temp @E @0
1E temp $0 -> beginCopying 1E $0
@B backToSharpOne e1 -> backToSharpOne @B e1
$0 incD e0 -> checkCD $0 e1
1B backToSharpOne $D -> backToSharpOne 1B $D
1D backToFirstC 10 -> backToFirstC 1D 10
@C backToDFromLeft $D -> searchNextBit @C $D
@X findBlank @1 -> temp @X @1
e$ copyOne 1B -> backToSharpOne e$ 11
1@ goToPlaceForDivider $B -> backToFirstC 1@ $D
eC nullifier eB -> initDivider eC eE
0$ dec 00 -> dec 0$ 01
0D searchOne 01 -> backToDFromLeft 0D 0&
$@ gotoMark 00 -> gotoMark $@ 00
@$ findBlank 0B -> FINAL @$ 0B
eX backToSharpZero 0C -> backToSharpZero eX 0C
eC temp 11 -> beginCopying eC 11
10 eraseC 0C -> backToStart 10 0X
@0 nullifier 1B -> initDivider @0 1E
@E backToSharpOne $E -> backToSharpOne @E $E
0@ backToSharpOne $0 -> backToSharpOne 0@ $0
@@ incD $1 -> incD @@ $0
eB backToSharpZero @X -> backToSharpZero eB @X
@# gotoMark $1 -> gotoMark @# $1
11 backToDFromRight eB -> backToDFromRight 11 eB
@& initDivider $0 -> initDividerByTwo @& $0
@% backToDFromRight 1B -> backToDFromRight @% 1B
1B beginCopying 0B -> backToStart 1B 0C
0@ temp 10 -> beginCopying 0@ 10
e0 backToSharpZero eE -> backToSharpZero e0 eE
@1 initDividerByTwo 00 -> backToD @1 01
e& initDivider e0 -> initDividerByTwo e& e0
1@ gotoDecC $0 -> gotoDecC 1@ $0
$B backToSharpOne $D -> backToSharpOne $B $D
11 gotoDecC e0 -> gotoDecC 11 e0
e1 gotoMark @1 -> gotoMark e1 @1
00 dec 00 -> dec 00 01
1E backToStart @1 -> backToStart 1E @1
searchOne e% -> e% searchOne
01 backToSharpZero 00 -> backToSharpZero 01 00
0E initDivider 00 -> initDividerByTwo 0E 00
@E restoreCD 11 -> restoreCD @E 11
1X incD e0 -> checkCD 1X e1
0C backToD $1 -> backToD 0C $1
10 backToSharpZero $X -> backToSharpZero 10 $X
e$ backToSharpZero 01 -> backToSharpZero e$ 01
eE prepEraseC @D -> eraseC eE @D
e0 backToSharpOne 0C -> backToSharpOne e0 0C
0& goToPlaceForDivider 1B -> backToFirstC 0& 1D
$C restoreCD $0 -> restoreCD $C $0
$& copyZero $B -> backToSharpZero $& $0
@C backToSharpOne 1X -> backToSharpOne @C 1X
0E backToDFromRight eB -> backToDFromRight 0E eB
$E eraseC $C -> backToStart $E $X
0D gotoMark @E -> gotoDecC 0D @E
$D findBlank 1B -> FINAL $D 1B
eC searchZero 01 -> restoreCD eC 01
0# backToDFromRight 10 -> backToDFromRight 0# 10
0# temp $0 -> beginCopying 0# $0
@B gotoMark 00 -> gotoMark @B 00
$0 forwardToLastD eE -> incD $0 eE
$E backToDFromRight 01 -> backToDFromRight $E 01
1D eraseE 01 -> eraseE 1D 0B
@$ backToDFromLeft 0% -> backToDFromLeft @$ 0%
$# massErase 0@ -> eraseE $# 0@
$& backToDFromRight e0 -> backToDFromRight $& e0
00 findBlank eB -> FINAL 00 eB
01 initDivider $0 -> initDividerByTwo 01 $0
0C eraseC @0 -> eraseC 0C @B
1$ gotoMark 11 -> gotoMark 1$ 11
1C backToDFromLeft @% -> backToDFromLeft 1C @%
0C restoreCD 0D -> restoreCD 0C 0D
@D backToSharpZero $X -> backToSharpZero @D $X
1B beginCopying 1B -> backToStart 1B 1C
00 restoreCD @0 -> restoreCD 00 @0
@@ backToD 10 -> backToD @@ 10
e& gotoMark $0 -> gotoMark e& $0
1@ searchZero @0 -> backToDFromLeft 1@ @%
0X searchOne $1 -> backToDFromLeft 0X $&
@0 prepEraseC 10 -> prepEraseC @0 10
@C backToDFromRight 0E -> backToDFromRight @C 0E
$0 forwardToLastD $E -> incD $0 $E
$$ checkCD 0D -> checkCD $$ 0D
@X incD e0 -> checkCD @X e1
00 backToStart 11 -> backToStart 00 11
0@ massErase 1@ -> eraseE 0@ 1@
1X backToSharpOne e1 -> backToSharpOne 1X e1
@E backToD 11 -> backToD @E 11
$$ restoreCD 11 -> restoreCD $$ 11
0% backToSharpZero eD -> backToSharpZero 0% eD
$& backToDFromLeft e1 -> backToDFromLeft $& e1
1C gotoMark 10 -> gotoMark 1C 10
$C forwardToLastD @E -> incD $C @E
1X backToSharpOne 0X -> backToSharpOne 1X 0X
eX eraseC $1 -> eraseC eX $B
@# massErase 1@ -> eraseE @# 1@
1X gotoMark eE -> gotoDecC 1X eE
@& checkCD @1 -> checkCD @& @1
e# prepEraseC 0D -> eraseC e# 0D
1D backToSharpZero e0 -> backToSharpZero 1D e0
@# gotoMark $E -> gotoDecC @# $E
1@ gotoDecC @1 -> gotoDecC 1@ @1
1@ searchOne 01 -> backToDFromLeft 1@ 0&
0X eraseC @C -> backToStart 0X @X
0$ massErase 0@ -> eraseE 0$ 0@
@E temp 00 -> beginCopying @E 00
e$ backToSharpOne @E -> backToSharpOne e$ @E
$0 backToSharpOne @1 -> backToSharpOne $0 @1
1B backToSharpOne @C -> backToSharpOne 1B @C
eD searchOne @1 -> backToDFromLeft eD @&
$0 prepEraseC $D -> eraseC $0 $D
@# beginCopying eB -> backToStart @# eC
eC findBlank 0B -> FINAL eC 0B
1D incD 11 -> incD 1D 10
@$ backToSharpOne 0C -> backToSharpOne @$ 0C
@X gotoMark 0E -> gotoDecC @X 0E
1X restoreCD 0& -> restoreCD 1X 01
e1 backToFirstC 11 -> backToFirstC e1 11
e0 findBlank e1 -> temp e0 e1
0X forwardToLastD $E -> incD 0X $E
e# gotoMark e0 -> gotoMark e# e0
eD eraseE e1 -> eraseE eD eB
0B massErase 1@ -> eraseE 0B 1@
e@ backToStart $1 -> backToStart e@ $1
0D gotoDecC e0 -> gotoDecC 0D e0
e@ findBlank e0 -> temp e@ e0
1% gotoLastE @@ -> dec 1% @@
1C backToSharpZero $1 -> backToSharpZero 1C $1
eC backToFirstC $0 -> backToFirstC eC $0
0# temp 01 -> beginCopying 0# 01
$C gotoMark 1E -> gotoDecC $C 1E
forwardToLastD @D -> @D forwardToLastD
@@ backToDFromRight 1B -> backToDFromRight @@ 1B
e# restoreCD $0 -> restoreCD e# $0
e& backToDFromRight 0B -> backToDFromRight e& 0B
$0 eraseE $1 -> eraseE $0 $B
FINAL e@ -> FINAL e FINAL
1& prepEraseC 01 -> prepEraseC 1& 01
$@ backToSharpOne e1 -> backToSharpOne $@ e1
$% prepEraseC $D -> eraseC $% $D
@D backToD e1 -> backToD @D e1
0% searchNextBit $0 -> searchNextBit 0% $0
10 searchNextBit 11 -> searchNextBit 10 11
1$ backToFirstC $0 -> backToFirstC 1$ $0
@D prepEraseC $D -> eraseC @D $D
1% eraseC 10 -> eraseC 1% 1B
1% backToDFromRight @E -> backToDFromRight 1% @E
0E backToSharpOne 1E -> backToSharpOne 0E 1E
e% gotoMark 10 -> gotoMark e% 10
1C findBlank 01 -> temp 1C 01
@# backToSharpZero 1X -> backToSharpZero @# 1X
$D backToSharpOne 1X -> backToSharpOne $D 1X
1C restoreCD 1% -> restoreCD 1C 10
e# backToSharpOne e1 -> backToSharpOne e# e1
e# initDivider 00 -> initDividerByTwo e# 00
@B gotoMark $E -> gotoDecC @B $E
$X searchZero $1 -> restoreCD $X $1
1X backToDFromRight 10 -> backToDFromRight 1X 10
$@ backToSharpZero 00 -> backToSharpZero $@ 00
11 backToDFromLeft 1D -> searchNextBit 11 1D
@C backToDFromLeft $% -> backToDFromLeft @C $%
e$ backToSharpOne 0X -> backToSharpOne e$ 0X
01 prepEraseC $D -> eraseC 01 $D
$$ backToSharpOne eC -> backToSharpOne $$ eC
0% eraseE 11 -> eraseE 0% 1B
0$ backToDFromRight $E -> backToDFromRight 0$ $E
@% beginCopying 1B -> backToStart @% 1C
@% copyOne $B -> backToSharpOne @% $1
eD copyOne 0B -> backToSharpOne eD 01
@@ eraseC 10 -> eraseC @@ 1B
eE backToSharpOne $1 -> backToSharpOne eE $1
1D searchZero @1 -> restoreCD 1D @1
0X checkCD e1 -> checkCD 0X e1
@# replaceWithBlanks 1@ -> backToDFromRight @# 1@
@1 restoreCD eD -> restoreCD @1 eD
e@ restoreCD $& -> restoreCD e@ $1
eX backToSharpZero 1E -> backToSharpZero eX 1E
1E gotoDecC $0 -> gotoDecC 1E $0
e0 incD 00 -> checkCD e0 01
0X searchNextBit @1 -> searchNextBit 0X @1
$& findBlank @0 -> temp $& @0
1# eraseE e1 -> eraseE 1# eB
0C searchOne $1 -> backToDFromLeft 0C $&
@D gotoMark 1E -> gotoDecC @D 1E
eB backToSharpOne 0C -> backToSharpOne eB 0C
1@ backToSharpZero @1 -> backToSharpZero 1@ @1
e% restoreCD $0 -> restoreCD e% $0
@$ backToD e0 -> backToD @$ e0
$% backToStart $1 -> backToStart $% $1
@0 backToStart 01 -> backToStart @0 01
0C beginCopying $B -> backToStart 0C $C
1@ backToSharpOne eX -> backToSharpOne 1@ eX
11 findBlank @1 -> temp 11 @1
@0 backToDFromRight 00 -> backToDFromRight @0 00
1X gotoMark 0E -> gotoDecC 1X 0E
$& searchOne @1 -> backToDFromLeft $& @&
eqCD 01 -> 0& checkOneD
eE checkCD 1D -> checkCD eE 1D
@0 checkEForZero eB -> stop @0 eB
1% temp 10 -> beginCopying 1% 10
e$ gotoDecC 1D -> dec e$ 1D
e@ backToSharpZero @C -> backToSharpZero e@ @C
backToFirstC 0C -> 0C createCopy
00 beginCopying 1B -> backToStart 00 1C
@@ gotoDecC e1 -> gotoDecC @@ e1
0D backToSharpZero 1D -> backToSharpZero 0D 1D
goToPlaceForDivider 01 -> 01 goToPlaceForDivider
@$ restoreCD eD -> restoreCD @$ eD
backToDAfterInc $1 -> $1 backToDAfterInc
$$ gotoMark 10 -> gotoMark $$ 10
1B backToSharpOne 01 -> backToSharpOne 1B 01
1@ backToSharpOne 1C -> backToSharpOne 1@ 1C
@B backToSharpZero @1 -> backToSharpZero @B @1
@1 gotoMark eE -> gotoDecC @1 eE
eB beginCopying @B -> backToStart eB @C
$D prepEraseC e1 -> prepEraseC $D e1
1@ incD @0 -> checkCD 1@ @1
1% incD 10 -> checkCD 1% 11
01 temp 10 -> beginCopying 01 10
0E backToSharpZero eC -> backToSharpZero 0E eC
e% backToFirstC @1 -> backToFirstC e% @1
@D restoreCD $% -> restoreCD @D $0
0B restoreCD 0D -> restoreCD 0B 0D
$1 forwardToLastD 0E -> incD $1 0E
e# findZero $1 -> beginCopying e# $1
@$ restoreCD @D -> restoreCD @$ @D
eX backToSharpOne @E -> backToSharpOne eX @E
@B backToDFromLeft e% -> backToDFromLeft @B e%
1% beginCopying 0B -> backToStart 1% 0C
e# backToD 11 -> backToD e# 11
@# backToSharpOne e0 -> backToSharpOne @# e0
@B backToSharpZero 1X -> backToSharpZero @B 1X
@@ eraseC $0 -> eraseC @@ $B
eE goToPlaceForDivider 1B -> backToFirstC eE 1D
$& backToDFromRight @0 -> backToDFromRight $& @0
e0 restoreCD $D -> restoreCD e0 $D
createCopy 1D -> 1D nullifier
$E backToSharpOne 0X -> backToSharpOne $E 0X
e$ backToD 11 -> backToD e$ 11
eB eraseE @0 -> eraseE eB @B
0X replaceWithBlanks $@ -> backToDFromRight 0X $@
@$ copyOne eB -> backToSharpOne @$ e1
copyZero @D -> @D copyZero
0C eraseE 00 -> eraseE 0C 0B
e0 backToD @0 -> backToD e0 @0
$% restoreCD 0% -> restoreCD $% 00
e# checkEForZero eB -> stop e# eB
@1 eraseC 10 -> eraseC @1 1B
@# gotoMark @0 -> gotoMark @# @0
0$ nullifier 0B -> initDivider 0$ 0E
$$ searchOne 01 -> backToDFromLeft $$ 0&
@D incD @0 -> checkCD @D @1
e% beginCopying eB -> backToStart e% eC
0% eraseC 00 -> eraseC 0% 0B
1# restoreCD 01 -> restoreCD 1# 01
@& backToDFromLeft e& -> backToDFromLeft @& e&
eD replaceWithBlanks 0@ -> backToDFromRight eD 0@
11 backToSharpZero 10 -> backToSharpZero 11 10
e@ restoreCD eD -> restoreCD e@ eD
11 restoreCD e& -> restoreCD 11 e1
1% eraseC @C -> backToStart 1% @X
$B eraseC 10 -> eraseC $B 1B
0D incD @1 -> incD 0D @0
@B backToDFromLeft @D -> searchNextBit @B @D
1C backToDFromRight $0 -> backToDFromRight 1C $0
1X gotoDecC @0 -> gotoDecC 1X @0
@X searchOne e1 -> backToDFromLeft @X e&
$C searchNextBit e0 -> searchNextBit $C e0
$C dec @0 -> dec $C @1
eB backToDFromRight $B -> backToDFromRight eB $B
@& backToDFromLeft $1 -> backToDFromLeft @& $1
1# backToDFromRight @E -> backToDFromRight 1# @E
0& backToDFromLeft @0 -> backToDFromLeft 0& @0
eE gotoDecC 1D -> dec eE 1D
eC checkEForZero @B -> stop eC @B
@0 backToSharpZero @C -> backToSharpZero @0 @C
eB backToFirstC $0 -> backToFirstC eB $0
1C backToSharpOne e0 -> backToSharpOne 1C e0
$% backToFirstC e0 -> backToFirstC $% e0
0# temp 11 -> beginCopying 0# 11
$E backToSharpOne eD -> backToSharpOne $E eD
0B forwardToLastD $E -> incD 0B $E
1$ gotoDecC 00 -> gotoDecC 1$ 00
0$ temp e1 -> beginCopying 0$ e1
1D backToD $1 -> backToD 1D $1
@% backToDFromRight 01 -> backToDFromRight @% 01
$0 searchNextBit e0 -> searchNextBit $0 e0
@% backToSharpOne $D -> backToSharpOne @% $D
@@ forwardToLastD $E -> incD @@ $E
@1 restoreCD $0 -> restoreCD @1 $0
e& prepEraseC 11 -> prepEraseC e& 11
0# backToDFromRight @B -> backToDFromRight 0# @B
$% incD 01 -> incD $% 00
$% gotoLastE $@ -> dec $% $@
e& restoreCD 1D -> restoreCD e& 1D
$X temp 10 -> beginCopying $X 10
@$ searchZero e1 -> restoreCD @$ e1
01 backToStart @1 -> backToStart 01 @1
1@ backToDFromLeft 01 -> backToDFromLeft 1@ 01
10 backToDFromRight 0E -> backToDFromRight 10 0E
01 eraseE 01 -> eraseE 01 0B
10 backToFirstC @0 -> backToFirstC 10 @0
e& backToDFromRight e1 -> backToDFromRight e& e1
eX restoreCD $1 -> restoreCD eX $1
1C backToDFromLeft e1 -> backToDFromLeft 1C e1
0@ copyOne eB -> backToSharpOne 0@ e1
0& gotoDecC e0 -> gotoDecC 0& e0
$D gotoDecC $1 -> gotoDecC $D $1
e# restoreCD 0D -> restoreCD e# 0D
@@ restoreCD 10 -> restoreCD @@ 10
0$ checkEForZero $B -> stop 0$ $B
e# backToDFromLeft $% -> backToDFromLeft e# $%
@% gotoDecC 01 -> gotoDecC @% 01
$% checkCD eD -> checkCD $% eD
1@ backToDFromRight 1B -> backToDFromRight 1@ 1B
1@ searchNextBit e1 -> searchNextBit 1@ e1
createCopy @X -> @C forwardToLastD
@0 backToSharpOne @1 -> backToSharpOne @0 @1
01 findZero 01 -> beginCopying 01 01
eB backToSharpOne 01 -> backToSharpOne eB 01
e1 incD $1 -> incD e1 $0
@% findBlank e0 -> temp @% e0
$E temp $1 -> beginCopying $E $1
0& backToStart @1 -> backToStart 0& @1
eC restoreCD eD -> restoreCD eC eD
1X backToDFromRight $0 -> backToDFromRight 1X $0
@@ initDivider @0 -> initDividerByTwo @@ @0
01 backToSharpZero $C -> backToSharpZero 01 $C
0B eraseC 11 -> eraseC 0B 1B
@1 searchOne e1 -> backToDFromLeft @1 e&
eC findZero 01 -> beginCopying eC 01
eB prepEraseC 00 -> prepEraseC eB 00
1& replaceWithBlanks e@ -> backToDFromRight 1& e@
$1 dec 00 -> dec $1 01
$& massErase 1@ -> eraseE $& 1@
createCopy e1 -> e# copyOne
@# restoreCD @% -> restoreCD @# @0
$1 backToSharpZero @C -> backToSharpZero $1 @C
$D backToSharpOne 10 -> backToSharpOne $D 10
10 eraseC e1 -> eraseC 10 eB
0X backToDFromLeft 10 -> backToDFromLeft 0X 10
e0 backToSharpOne 1E -> backToSharpOne e0 1E
$& eraseE 00 -> eraseE $& 0B
e& copyZero $B -> backToSharpZero e& $0
eC dec e1 -> gotoMark eC e0
0@ findZero e1 -> beginCopying 0@ e1
0B findZero 11 -> beginCopying 0B 11
@# checkEForZero 1B -> stop @# 1B
eD backToSharpOne 1E -> backToSharpOne eD 1E
@@ checkCD e0 -> checkCD @@ e0
e$ backToSharpOne 1E -> backToSharpOne e$ 1E
1@ searchZero e1 -> restoreCD 1@ e1
e$ backToDFromLeft 1& -> backToDFromLeft e$ 1&
$E forwardToLastD eE -> incD $E eE
11 dec 01 -> gotoMark 11 00
1E backToFirstC 01 -> backToFirstC 1E 01
@0 backToDFromLeft 1D -> searchNextBit @0 1D
00 copyZero eB -> backToSharpZero 00 e0
1D searchOne $1 -> backToDFromLeft 1D $&
$C temp 01 -> beginCopying $C 01
@0 searchZero e0 -> backToDFromLeft @0 e%
11 copyOne 1B -> backToSharpOne 11 11
1% forwardToLastD 1E -> incD 1% 1E
$$ gotoMark 0E -> gotoDecC $$ 0E
1E gotoLastE 0@ -> dec 1E 0@
1B gotoMark eE -> gotoDecC 1B eE
@% backToSharpOne 1E -> backToSharpOne @% 1E
replaceWithBlanks e0 -> eB replaceWithBlanks
$% prepEraseC 00 -> prepEraseC $% 00
0& backToSharpOne eC -> backToSharpOne 0& eC
1X findBlank 11 -> temp 1X 11
1& eraseE $1 -> eraseE 1& $B
$@ backToD 11 -> backToD $@ 11
@E findBlank 00 -> temp @E 00
@1 checkEForZero 1B -> stop @1 1B
0X gotoDecC eD -> dec 0X eD
1X incD @0 -> checkCD 1X @1
$B searchOne 10 -> restoreCD $B 10
$0 eraseC 11 -> eraseC $0 1B
@$ backToSharpOne $0 -> backToSharpOne @$ $0
$$ checkCD eD -> checkCD $$ eD
0E restoreCD 1% -> restoreCD 0E 10
e@ searchNextBit @0 -> searchNextBit e@ @0
eX eraseC e1 -> eraseC eX eB
$D checkCD @0 -> checkCD $D @0
e& initDivider @0 -> initDividerByTwo e& @0
start $1 -> $1 findZero
@& gotoMark @0 -> gotoMark @& @0
$X backToSharpZero 1C -> backToSharpZero $X 1C
eB backToSharpOne 11 -> backToSharpOne eB 11
0D findZero 11 -> beginCopying 0D 11
11 forwardToLastD eE -> incD 11 eE
e1 eraseE $E -> prepEraseC e1 $E
1$ findBlank 1B -> FINAL 1$ 1B
1X eraseE $1 -> eraseE 1X $B
0% checkCD e1 -> checkCD 0% e1
1$ searchNextBit 00 -> searchNextBit 1$ 00
1C prepEraseC 1D -> eraseC 1C 1D
1& searchZero e0 -> backToDFromLeft 1& e%
@B backToSharpOne 00 -> backToSharpOne @B 00
A3 -> eB A3
A3 -> e
$% eraseC eC -> backToStart $% eX
$% searchZero $1 -> restoreCD $% $1
$% findBlank 1B -> FINAL $% 1B
$@ searchOne @0 -> restoreCD $@ @0
$1 backToSharpOne eC -> backToSharpOne $1 eC
1E backToSharpOne 1X -> backToSharpOne 1E 1X
e@ massErase 0@ -> eraseE e@ 0@
@@ backToSharpOne 11 -> backToSharpOne @@ 11
$0 temp $0 -> beginCopying $0 $0
0@ eraseC $0 -> eraseC 0@ $B
10 backToStart 10 -> backToStart 10 10
1E restoreCD e1 -> restoreCD 1E e1
1E gotoDecC $D -> dec 1E $D
0C copyZero $B -> backToSharpZero 0C $0
e0 prepEraseC 00 -> prepEraseC e0 00
00 findBlank 11 -> temp 00 11
0C incD 00 -> checkCD 0C 01
$$ backToSharpZero 1X -> backToSharpZero $$ 1X
$$ backToD 01 -> backToD $$ 01
0D gotoDecC @1 -> gotoDecC 0D @1
1# restoreCD 1& -> restoreCD 1# 11
01 backToSharpZero eD -> backToSharpZero 01 eD
@E eraseE $E -> prepEraseC @E $E
$C copyOne $B -> backToSharpOne $C $1
1# searchNextBit @0 -> searchNextBit 1# @0
e@ backToSharpOne eX -> backToSharpOne e@ eX
eD backToSharpOne $X -> backToSharpOne eD $X
$E searchNextBit $0 -> searchNextBit $E $0
1% backToDFromRight 1B -> backToDFromRight 1% 1B
$0 eraseC @1 -> eraseC $0 @B
$D eraseC 00 -> eraseC $D 0B
$@ backToD e1 -> backToD $@ e1
1# backToFirstC 11 -> backToFirstC 1# 11
$1 backToSharpZero $E -> backToSharpZero $1 $E
1B eraseE $1 -> eraseE 1B $B
1% goToPlaceForDivider 0B -> backToFirstC 1% 0D
0% restoreCD $0 -> restoreCD 0% $0
@@ searchNextBit $0 -> searchNextBit @@ $0
e@ findBlank 0B -> FINAL e@ 0B
@@ backToSharpZero e1 -> backToSharpZero @@ e1
0E dec $1 -> gotoMark 0E $0
eE initDivider 00 -> initDividerByTwo eE 00
$$ backToDFromRight eB -> backToDFromRight $$ eB
$$ gotoDecC 0D -> dec $$ 0D
1& gotoDecC e0 -> gotoDecC 1& e0
$% beginCopying @B -> backToStart $% @C
0@ backToD e0 -> backToD 0@ e0
0$ backToSharpZero @1 -> backToSharpZero 0$ @1
0B gotoMark $E -> gotoDecC 0B $E
1$ findBlank @0 -> temp 1$ @0
@% initDivider $0 -> initDividerByTwo @% $0
@& backToSharpZero 11 -> backToSharpZero @& 11
11 findBlank e0 -> temp 11 e0
e# restoreCD @1 -> restoreCD e# @1
0B prepEraseC $0 -> prepEraseC 0B $0
@D backToSharpZero eE -> backToSharpZero @D eE
eC eraseC e1 -> eraseC eC eB
00 backToSharpZero 1D -> backToSharpZero 00 1D
$# backToSharpZero eE -> backToSharpZero $# eE
0E eraseE @1 -> eraseE 0E @B
backToDAfterInc $D -> $D createCopy
$X gotoDecC eD -> dec $X eD
eD gotoDecC 0D -> dec eD 0D
e# backToD @1 -> backToD e# @1
$& eraseC @C -> backToStart $& @X
$@ temp 10 -> beginCopying $@ 10
1B backToSharpZero 11 -> backToSharpZero 1B 11
$E eraseC e0 -> eraseC $E eB
1$ nullifier 1B -> initDivider 1$ 1E
0B checkCD @D -> checkCD 0B @D
$C findBlank eB -> FINAL $C eB
11 backToSharpZero eE -> backToSharpZero 11 eE
e$ initDividerByTwo 10 -> backToD e$ 11
1$ incD @1 -> incD 1$ @0
11 backToD $1 -> backToD 11 $1
1@ searchZero 11 -> restoreCD 1@ 11
$X backToDFromRight eE -> backToDFromRight $X eE
1C eraseC 10 -> eraseC 1C 1B
@D gotoMark 00 -> gotoMark @D 00
@1 backToDFromLeft e1 -> backToDFromLeft @1 e1
@D backToFirstC e1 -> backToFirstC @D e1
$$ searchOne $1 -> backToDFromLeft $$ $&
1X findBlank eB -> FINAL 1X eB
1B eraseC 11 -> eraseC 1B 1B
1E gotoMark 00 -> gotoMark 1E 00
FINAL 1D -> FINAL 1 FINAL
$0 gotoMark 00 -> gotoMark $0 00
$# backToSharpZero $X -> backToSharpZero $# $X
0% restoreCD 00 -> restoreCD 0% 00
$@ gotoDecC 11 -> gotoDecC $@ 11
@D backToSharpZero 1C -> backToSharpZero @D 1C
@X gotoDecC @1 -> gotoDecC @X @1
@% massErase e@ -> eraseE @% e@
$0 restoreCD @1 -> restoreCD $0 @1
0% gotoMark $1 -> gotoMark 0% $1
e0 nullifier $B -> initDivider e0 $E
1$ backToDFromRight 1B -> backToDFromRight 1$ 1B
@X nullifier 1B -> initDivider @X 1E
eE backToSharpOne 01 -> backToSharpOne eE 01
01 gotoDecC @D -> dec 01 @D
@$ backToDFromLeft 0& -> backToDFromLeft @$ 0&
e% searchNextBit @1 -> searchNextBit e% @1
@E gotoLastE 1@ -> dec @E 1@
@X backToFirstC $0 -> backToFirstC @X $0
1@ backToFirstC e0 -> backToFirstC 1@ e0
$B backToDFromRight 1E -> backToDFromRight $B 1E
1% gotoMark $E -> gotoDecC 1% $E
0$ eraseC 00 -> eraseC 0$ 0B
1# temp 11 -> beginCopying 1# 11
@@ temp $0 -> beginCopying @@ $0
1& backToSharpOne $E -> backToSharpOne 1& $E
$X backToSharpZero 1D -> backToSharpZero $X 1D
0X backToSharpZero $C -> backToSharpZero 0X $C
0$ backToDFromRight e1 -> backToDFromRight 0$ e1
0& initDivider 10 -> initDividerByTwo 0& 10
@% backToSharpZero $D -> backToSharpZero @% $D
@C findBlank $B -> FINAL @C $B
1# nullifier eB -> initDivider 1# eE
$& backToDFromRight 11 -> backToDFromRight $& 11
0D backToSharpZero $X -> backToSharpZero 0D $X
@@ backToSharpZero eC -> backToSharpZero @@ eC
$D backToSharpZero 0X -> backToSharpZero $D 0X
1$ backToDFromRight @B -> backToDFromRight 1$ @B
eD backToSharpOne @C -> backToSharpOne eD @C
@B backToDFromLeft 1& -> backToDFromLeft @B 1&
e% searchZero e1 -> restoreCD e% e1
e1 backToDFromLeft 0% -> backToDFromLeft e1 0%
eD searchZero $0 -> backToDFromLeft eD $%
1D prepEraseC 01 -> prepEraseC 1D 01
eC backToSharpOne 01 -> backToSharpOne eC 01
1@ backToStart 10 -> backToStart 1@ 10
$D findBlank $B -> FINAL $D $B
$0 prepEraseC 11 -> prepEraseC $0 11
$X restoreCD 0D -> restoreCD $X 0D
0D backToDFromLeft $0 -> backToDFromLeft 0D $0
e$ eraseC 0C -> backToStart e$ 0X
0$ checkEForZero @B -> stop 0$ @B
@D searchZero $0 -> backToDFromLeft @D $%
$1 eraseE @E -> prepEraseC $1 @E
0D incD 10 -> checkCD 0D 11
0$ copyZero eB -> backToSharpZero 0$ e0
eC prepEraseC e1 -> prepEraseC eC e1
1& beginCopying @B -> backToStart 1& @C
1X eraseC 11 -> eraseC 1X 1B
e@ goToPlaceForDivider eB -> backToFirstC e@ eD
$% backToFirstC @1 -> backToFirstC $% @1
0$ restoreCD e1 -> restoreCD 0$ e1
1D backToStart @1 -> backToStart 1D @1
$# initDivider $0 -> initDividerByTwo $# $0
@B nullifier @B -> initDivider @B @E
eE backToD 11 -> backToD eE 11
01 forwardToLastD @E -> incD 01 @E
00 beginCopying 0B -> backToStart 00 0C
$1 gotoDecC 0D -> dec $1 0D
0@ backToStart $1 -> backToStart 0@ $1
11 backToFirstC e0 -> backToFirstC 11 e0
1$ eraseC $C -> backToStart 1$ $X
1E backToDFromRight @E -> backToDFromRight 1E @E
e$ searchZero 01 -> restoreCD e$ 01
e$ incD 11 -> incD e$ 10
@D backToDFromLeft 0% -> backToDFromLeft @D 0%
copyZero @X -> @X copyZero
@& findBlank $1 -> temp @& $1
11 temp 00 -> beginCopying 11 00
@0 eraseE 11 -> eraseE @0 1B
e% backToSharpZero 1C -> backToSharpZero e% 1C
e0 checkCD e0 -> checkCD e0 e0
11 backToD e0 -> backToD 11 e0
1D findBlank @0 -> temp 1D @0
1X findBlank @1 -> temp 1X @1
1$ temp 01 -> beginCopying 1$ 01
10 eraseC 11 -> eraseC 10 1B
$D backToSharpOne 11 -> backToSharpOne $D 11
1D backToD $0 -> backToD 1D $0
@0 searchZero 11 -> restoreCD @0 11
1B copyZero eB -> backToSharpZero 1B e0
0# backToDFromLeft 1% -> backToDFromLeft 0# 1%
eX FINAL -> FINAL e FINAL
e0 backToStart e0 -> backToStart e0 e0
$% gotoMark 11 -> gotoMark $% 11
eC incD $1 -> incD eC $0
$B gotoMark @1 -> gotoMark $B @1
1% copyZero $B -> backToSharpZero 1% $0
1X backToD @0 -> backToD 1X @0
@1 temp @0 -> beginCopying @1 @0
1X backToDFromLeft e& -> backToDFromLeft 1X e&
@0 dec 11 -> gotoMark @0 10
1B searchZero $1 -> restoreCD 1B $1
$0 searchOne 00 -> restoreCD $0 00
$& checkCD @0 -> checkCD $& @0
@B backToSharpZero 0E -> backToSharpZero @B 0E
e% findZero $1 -> beginCopying e% $1
0C eraseE @E -> prepEraseC 0C @E
@1 backToDFromLeft 1& -> backToDFromLeft @1 1&
0B backToSharpOne 1X -> backToSharpOne 0B 1X
1C checkEForZero eB -> stop 1C eB
1# restoreCD 0& -> restoreCD 1# 01
1% incD @1 -> incD 1% @0
0@ copyZero @B -> backToSharpZero 0@ @0
$& eraseC $C -> backToStart $& $X
eE backToDFromRight 1E -> backToDFromRight eE 1E
eB backToStart 01 -> backToStart eB 01
@B eraseE 0E -> prepEraseC @B 0E
$X gotoMark $1 -> gotoMark $X $1
$@ prepEraseC 10 -> prepEraseC $@ 10
0B backToSharpZero 01 -> backToSharpZero 0B 01
e$ eraseE 0E -> prepEraseC e$ 0E
0X copyZero $B -> backToSharpZero 0X $0
eX backToSharpOne 1C -> backToSharpOne eX 1C
$C backToDFromLeft $& -> backToDFromLeft $C $&
0@ gotoDecC 11 -> gotoDecC 0@ 11
0D eraseC $1 -> eraseC 0D $B
1& searchOne e1 -> backToDFromLeft 1& e&
0# copyZero $B -> backToSharpZero 0# $0
@1 findBlank 11 -> temp @1 11
e@ backToSharpZero 0E -> backToSharpZero e@ 0E
0$ backToSharpZero 1D -> backToSharpZero 0$ 1D
1% backToDFromLeft 1% -> backToDFromLeft 1% 1%
$E restoreCD e& -> restoreCD $E e1
e& dec @1 -> gotoMark e& @0
0C searchZero 01 -> restoreCD 0C 01
eB gotoDecC 01 -> gotoDecC eB 01
e1 dec $1 -> gotoMark e1 $0
e1 findZero $1 -> beginCopying e1 $1
1B nullifier 1B -> initDivider 1B 1E
0@ copyOne 1B -> backToSharpOne 0@ 11
1X gotoMark 01 -> gotoMark 1X 01
@D restoreCD 0& -> restoreCD @D 01
11 eraseE 1E -> prepEraseC 11 1E
1E gotoMark 01 -> gotoMark 1E 01
1# checkEForZero 1B -> stop 1# 1B
eD restoreCD @% -> restoreCD eD @0
@$ backToSharpZero $E -> backToSharpZero @$ $E
1X restoreCD e1 -> restoreCD 1X e1
@X initDividerByTwo e0 -> backToD @X e1
@E eraseE $1 -> eraseE @E $B
0X replaceWithBlanks @@ -> backToDFromRight 0X @@
10 backToSharpZero @X -> backToSharpZero 10 @X
eX checkCD @1 -> checkCD eX @1
eE forwardToLastD eE -> incD eE eE
0& restoreCD @0 -> restoreCD 0& @0
$1 backToDFromLeft 1D -> searchNextBit $1 1D
@B prepEraseC 0D -> eraseC @B 0D
e# searchOne e0 -> restoreCD e# e0
@E gotoDecC e1 -> gotoDecC @E e1
@& findBlank 01 -> temp @& 01
e0 searchOne @1 -> backToDFromLeft e0 @&
0% restoreCD 0D -> restoreCD 0% 0D
00 gotoLastE 1@ -> dec 00 1@
$E backToSharpOne @1 -> backToSharpOne $E @1
0# checkCD $D -> checkCD 0# $D
$D incD @1 -> incD $D @0
@# backToDFromLeft eD -> searchNextBit @# eD
e$ gotoMark @E -> gotoDecC e$ @E
@@ backToDFromLeft @& -> backToDFromLeft @@ @&
0E searchNextBit 01 -> searchNextBit 0E 01
0@ temp @1 -> beginCopying 0@ @1
0C backToDFromRight 01 -> backToDFromRight 0C 01
1B backToStart 00 -> backToStart 1B 00
$# findBlank e1 -> temp $# e1
@# gotoDecC $1 -> gotoDecC @# $1
$B gotoMark 10 -> gotoMark $B 10
0% backToSharpOne eX -> backToSharpOne 0% eX
$$ backToFirstC e1 -> backToFirstC $$ e1
0@ checkCD 00 -> checkCD 0@ 00
@D backToDFromRight e1 -> backToDFromRight @D e1
1# backToSharpZero eX -> backToSharpZero 1# eX
0D temp $0 -> beginCopying 0D $0
@& backToDFromLeft @% -> backToDFromLeft @& @%
@1 eraseC 11 -> eraseC @1 1B
1$ backToDFromLeft 0% -> backToDFromLeft 1$ 0%
@# dec 00 -> dec @# 01
0X checkEForZero eB -> stop 0X eB
@C backToD @0 -> backToD @C @0
1& temp e1 -> beginCopying 1& e1
1C gotoMark 01 -> gotoMark 1C 01
@1 backToDFromLeft $D -> searchNextBit @1 $D
@0 gotoLastE $@ -> dec @0 $@
1% gotoDecC @0 -> gotoDecC 1% @0
e% incD e0 -> checkCD e% e1
eC backToStart 10 -> backToStart eC 10
1# prepEraseC e1 -> prepEraseC 1# e1
01 dec 10 -> dec 01 11
eC copyZero eB -> backToSharpZero eC e0
e% gotoDecC @D -> dec e% @D
1& checkCD 0D -> checkCD 1& 0D
@C checkCD 11 -> checkCD @C 11
$& copyOne 0B -> backToSharpOne $& 01
0C backToSharpOne 0D -> backToSharpOne 0C 0D
@0 checkCD @1 -> checkCD @0 @1
@1 prepEraseC @1 -> prepEraseC @1 @1
e1 eraseC 11 -> eraseC e1 1B
@1 backToFirstC 10 -> backToFirstC @1 10
$& nullifier @B -> initDivider $& @E
$E backToSharpOne 1C -> backToSharpOne $E 1C
$X checkEForZero $B -> stop $X $B
e1 temp 00 -> beginCopying e1 00
e$ backToSharpOne $X -> backToSharpOne e$ $X
@1 initDividerByTwo $0 -> backToD @1 $1
eE backToSharpOne @0 -> backToSharpOne eE @0
1& backToFirstC e1 -> backToFirstC 1& e1
e& findBlank @0 -> temp e& @0
$$ beginCopying @B -> backToStart $$ @C
1D replaceWithBlanks 1@ -> backToDFromRight 1D 1@
0X searchOne 00 -> restoreCD 0X 00
@% backToDFromLeft $% -> backToDFromLeft @% $%
0E backToStart e1 -> backToStart 0E e1
00 findBlank $B -> FINAL 00 $B
e$ gotoMark $1 -> gotoMark e$ $1
0@ backToSharpZero 1X -> backToSharpZero 0@ 1X
0# beginCopying @B -> backToStart 0# @C
0B eraseC @C -> backToStart 0B @X
@B gotoMark eE -> gotoDecC @B eE
1E copyZero @B -> backToSharpZero 1E @0
10 restoreCD @0 -> restoreCD 10 @0
@1 searchZero 10 -> backToDFromLeft @1 1%
$X gotoMark 1E -> gotoDecC $X 1E
0X replaceWithBlanks 1@ -> backToDFromRight 0X 1@
$X dec e1 -> gotoMark $X e0
$@ gotoMark $1 -> gotoMark $@ $1
0D eraseC 00 -> eraseC 0D 0B
0$ backToSharpZero @E -> backToSharpZero 0$ @E
@@ backToDFromRight $0 -> backToDFromRight @@ $0
checkOneD eD -> eD searchOne
FINAL @B -> FINAL @ FINAL
ifZero @0 -> @0 ifZero
$# gotoDecC 01 -> gotoDecC $# 01
$E backToDFromRight @1 -> backToDFromRight $E @1
eB initDivider @0 -> initDividerByTwo eB @0
@# backToSharpOne 0D -> backToSharpOne @# 0D
1B goToPlaceForDivider 0B -> backToFirstC 1B 0D
1% backToD e1 -> backToD 1% e1
$B backToSharpZero eD -> backToSharpZero $B eD
@& backToSharpOne e0 -> backToSharpOne @& e0
0X backToSharpZero eD -> backToSharpZero 0X eD
@C backToDFromRight @E -> backToDFromRight @C @E
1$ backToSharpOne @X -> backToSharpOne 1$ @X
@% backToSharpZero eX -> backToSharpZero @% eX
eX eraseE e0 -> eraseE eX eB
$C prepEraseC 00 -> prepEraseC $C 00
$0 backToSharpZero eX -> backToSharpZero $0 eX
$0 searchNextBit $1 -> searchNextBit $0 $1
@X backToStart @0 -> backToStart @X @0
$C restoreCD 0% -> restoreCD $C 00
@@ prepEraseC e1 -> prepEraseC @@ e1
1@ temp @1 -> beginCopying 1@ @1
@# restoreCD $0 -> restoreCD @# $0
@% searchZero 01 -> restoreCD @% 01
1X searchOne e0 -> restoreCD 1X e0
$1 backToSharpOne @0 -> backToSharpOne $1 @0
1& eraseC $0 -> eraseC 1& $B
FINAL @0 -> FINAL @ FINAL
1@ gotoDecC 10 -> gotoDecC 1@ 10
1X backToDFromLeft e% -> backToDFromLeft 1X e%
e# eraseC $1 -> eraseC e# $B
1D backToSharpZero 0X -> backToSharpZero 1D 0X
@X gotoLastE $@ -> dec @X $@
@1 backToFirstC @1 -> backToFirstC @1 @1
$B restoreCD $1 -> restoreCD $B $1
@E backToSharpOne @X -> backToSharpOne @E @X
e# checkEForZero 0B -> stop e# 0B
@# backToD $0 -> backToD @# $0
e0 backToDFromLeft $1 -> backToDFromLeft e0 $1
1@ temp $0 -> beginCopying 1@ $0
e& nullifier @B -> initDivider e& @E
1X replaceWithBlanks $@ -> backToDFromRight 1X $@
$@ gotoLastE 0@ -> dec $@ 0@
eE nullifier 1B -> initDivider eE 1E
@B findBlank e1 -> temp @B e1
@X goToPlaceForDivider 0B -> backToFirstC @X 0D
@B prepEraseC 10 -> prepEraseC @B 10
$% backToDFromRight 10 -> backToDFromRight $% 10
0# backToStart 10 -> backToStart 0# 10
@& backToDFromLeft 10 -> backToDFromLeft @& 10
@% replaceWithBlanks $@ -> backToDFromRight @% $@
eB forwardToLastD $E -> incD eB $E
e1 backToDFromLeft $% -> backToDFromLeft e1 $%
0D backToSharpOne 11 -> backToSharpOne 0D 11
0E backToFirstC @1 -> backToFirstC 0E @1
@1 backToSharpZero $0 -> backToSharpZero @1 $0
0# massErase $@ -> eraseE 0# $@
e0 massErase e@ -> eraseE e0 e@
e% backToFirstC $0 -> backToFirstC e% $0
$B backToSharpOne 0X -> backToSharpOne $B 0X
0% backToSharpZero @E -> backToSharpZero 0% @E
0E searchOne $0 -> restoreCD 0E $0
1X restoreCD @D -> restoreCD 1X @D
0& backToD 01 -> backToD 0& 01
$0 nullifier eB -> initDivider $0 eE
$C beginCopying @B -> backToStart $C @C
0X massErase 1@ -> eraseE 0X 1@
0X prepEraseC $1 -> prepEraseC 0X $1
10 searchNextBit e0 -> searchNextBit 10 e0
$0 searchNextBit 01 -> searchNextBit $0 01
@1 backToStart e1 -> backToStart @1 e1
1D backToDFromRight 0E -> backToDFromRight 1D 0E
@X temp 00 -> beginCopying @X 00
$% gotoMark 10 -> gotoMark $% 10
e1 backToDFromRight $B -> backToDFromRight e1 $B
1@ backToFirstC $0 -> backToFirstC 1@ $0
1$ checkCD 11 -> checkCD 1$ 11
$$ initDivider $0 -> initDividerByTwo $$ $0
e0 gotoDecC 10 -> gotoDecC e0 10
eB dec e0 -> dec eB e1
$0 backToDFromLeft $& -> backToDFromLeft $0 $&
1X searchNextBit @1 -> searchNextBit 1X @1
1% replaceWithBlanks 1@ -> backToDFromRight 1% 1@
0E eraseC $1 -> eraseC 0E $B
checkEForZero 01 -> 01 massErase
1@ backToSharpOne @0 -> backToSharpOne 1@ @0
0% initDividerByTwo $0 -> backToD 0% $1
eE backToD $1 -> backToD eE $1
replaceWithBlanks @0 -> @B replaceWithBlanks
e$ incD 00 -> checkCD e$ 01
0$ searchOne $1 -> backToDFromLeft 0$ $&
$0 backToStart 11 -> backToStart $0 11
@B restoreCD @1 -> restoreCD @B @1
0B searchZero @1 -> restoreCD 0B @1
searchNextBit 1% -> 1% eqCD
$@ backToDFromRight 1B -> backToDFromRight $@ 1B
1& temp 01 -> beginCopying 1& 01
0% findBlank 0B -> FINAL 0% 0B
0D searchNextBit $1 -> searchNextBit 0D $1
@B backToDFromRight 11 -> backToDFromRight @B 11
e0 backToDFromRight e0 -> backToDFromRight e0 e0
@D checkEForZero $B -> stop @D $B
0X initDivider 10 -> initDividerByTwo 0X 10
$% gotoMark @E -> gotoDecC $% @E
0$ searchZero e0 -> backToDFromLeft 0$ e%
$D goToPlaceForDivider $B -> backToFirstC $D $D
eD backToDFromRight $1 -> backToDFromRight eD $1
1# gotoDecC @D -> dec 1# @D
@X backToSharpOne @1 -> backToSharpOne @X @1
0B gotoDecC $D -> dec 0B $D
0B searchOne 01 -> backToDFromLeft 0B 0&
0C FINAL -> FINAL 0 FINAL
@1 backToD 11 -> backToD @1 11
1& backToSharpZero $1 -> backToSharpZero 1& $1
0C backToDFromLeft 10 -> backToDFromLeft 0C 10
@X restoreCD e0 -> restoreCD @X e0
e1 prepEraseC $D -> eraseC e1 $D
0E forwardToLastD $E -> incD 0E $E
0B gotoMark 00 -> gotoMark 0B 00
1E findBlank eB -> FINAL 1E eB
1$ backToDFromLeft @1 -> backToDFromLeft 1$ @1
1# beginCopying 0B -> backToStart 1# 0C
0% eraseE $0 -> eraseE 0% $B
1X restoreCD e& -> restoreCD 1X e1
$0 dec $1 -> gotoMark $0 $0
1E searchNextBit $1 -> searchNextBit 1E $1
e1 eraseC @C -> backToStart e1 @X
1$ gotoMark 1E -> gotoDecC 1$ 1E
1E findBlank @0 -> temp 1E @0
$% checkCD 0D -> checkCD $% 0D
1% backToDFromLeft 0D -> searchNextBit 1% 0D
1D nullifier @B -> initDivider 1D @E
10 checkCD eD -> checkCD 10 eD
$B temp 10 -> beginCopying $B 10
1$ eraseE 01 -> eraseE 1$ 0B
@C eraseE 11 -> eraseE @C 1B
eqCD @1 -> @& checkOneD
e@ backToSharpZero $1 -> backToSharpZero e@ $1
$X backToSharpOne 1D -> backToSharpOne $X 1D
$# massErase e@ -> eraseE $# e@
$D eraseC 01 -> eraseC $D 0B
@$ dec 10 -> dec @$ 11
e& forwardToLastD eE -> incD e& eE
0$ restoreCD 10 -> restoreCD 0$ 10
@$ restoreCD $% -> restoreCD @$ $0
0$ temp 11 -> beginCopying 0$ 11
1X nullifier 0B -> initDivider 1X 0E
0@ dec @0 -> dec 0@ @1
@% backToSharpZero 0D -> backToSharpZero @% 0D
eX backToSharpOne $D -> backToSharpOne eX $D
0# checkCD 0D -> checkCD 0# 0D
$E goToPlaceForDivider eB -> backToFirstC $E eD
$& gotoMark @0 -> gotoMark $& @0
0$ prepEraseC 00 -> prepEraseC 0$ 00
e# gotoDecC e1 -> gotoDecC e# e1
0E copyZero 1B -> backToSharpZero 0E 10
e% prepEraseC @0 -> prepEraseC e% @0
$$ incD e0 -> checkCD $$ e1
eE eraseE 1E -> prepEraseC eE 1E
@# dec $0 -> dec @# $1
0C backToDFromRight 1B -> backToDFromRight 0C 1B
@X replaceWithBlanks 0@ -> backToDFromRight @X 0@
@0 restoreCD e% -> restoreCD @0 e0
@0 eraseC 10 -> eraseC @0 1B
01 findBlank 1B -> FINAL 01 1B
1% backToSharpZero $C -> backToSharpZero 1% $C
1& incD e0 -> checkCD 1& e1
e# backToFirstC @1 -> backToFirstC e# @1
0$ findZero 11 -> beginCopying 0$ 11
0$ backToSharpZero $E -> backToSharpZero 0$ $E
0& restoreCD @& -> restoreCD 0& @1
0# replaceWithBlanks 1@ -> backToDFromRight 0# 1@
1$ searchNextBit e0 -> searchNextBit 1$ e0
eX eraseE eE -> prepEraseC eX eE
e1 prepEraseC 00 -> prepEraseC e1 00
$X gotoDecC 0D -> dec $X 0D
e% copyZero @B -> backToSharpZero e% @0
0$ forwardToLastD 1E -> incD 0$ 1E
@D findBlank $B -> FINAL @D $B
$% eraseC $0 -> eraseC $% $B
0C findBlank eB -> FINAL 0C eB
$C searchNextBit 00 -> searchNextBit $C 00
$B backToDFromLeft 01 -> backToDFromLeft $B 01
$1 backToSharpZero e0 -> backToSharpZero $1 e0
$B backToDFromLeft $& -> backToDFromLeft $B $&
0& searchNextBit @0 -> searchNextBit 0& @0
$# eraseE 01 -> eraseE $# 0B
1D backToFirstC e1 -> backToFirstC 1D e1
0% backToDFromLeft e% -> backToDFromLeft 0% e%
1@ eraseE 01 -> eraseE 1@ 0B
@1 backToDFromRight e0 -> backToDFromRight @1 e0
e$ backToD e0 -> backToD e$ e0
0$ backToD 11 -> backToD 0$ 11
@0 gotoMark @0 -> gotoMark @0 @0
@@ backToSharpZero @X -> backToSharpZero @@ @X
$E gotoDecC @D -> dec $E @D
0@ backToD e1 -> backToD 0@ e1
e& backToSharpZero eE -> backToSharpZero e& eE
1B eraseC 1C -> backToStart 1B 1X
1C searchZero @1 -> restoreCD 1C @1
1$ gotoDecC 01 -> gotoDecC 1$ 01
0# backToFirstC 00 -> backToFirstC 0# 00
e0 restoreCD eD -> restoreCD e0 eD
@D eraseC @C -> backToStart @D @X
eC backToSharpOne @D -> backToSharpOne eC @D
e0 backToD 10 -> backToD e0 10
$@ backToSharpZero 0X -> backToSharpZero $@ 0X
1@ backToFirstC e1 -> backToFirstC 1@ e1
@X massErase 1@ -> eraseE @X 1@
eD searchNextBit $0 -> searchNextBit eD $0
00 backToSharpOne $0 -> backToSharpOne 00 $0
@% temp e0 -> beginCopying @% e0
$B searchZero 00 -> backToDFromLeft $B 0%
$B findZero e1 -> beginCopying $B e1
1E backToDFromLeft 0% -> backToDFromLeft 1E 0%
0% eraseC e0 -> eraseC 0% eB
e0 backToSharpOne $1 -> backToSharpOne e0 $1
$& gotoDecC 11 -> gotoDecC $& 11
0C findZero 01 -> beginCopying 0C 01
e1 prepEraseC e0 -> prepEraseC e1 e0
@0 backToDFromLeft @1 -> backToDFromLeft @0 @1
e& gotoMark @E -> gotoDecC e& @E
@C backToSharpOne @X -> backToSharpOne @C @X
0$ backToDFromRight 0B -> backToDFromRight 0$ 0B
@0 eraseC $1 -> eraseC @0 $B
1B dec e1 -> gotoMark 1B e0
@E findBlank e0 -> temp @E e0
0# beginCopying $B -> backToStart 0# $C
$% dec 10 -> dec $% 11
$C gotoMark e0 -> gotoMark $C e0
e& checkEForZero @B -> stop e& @B
$% backToFirstC $0 -> backToFirstC $% $0
e% restoreCD @0 -> restoreCD e% @0
@& backToStart e1 -> backToStart @& e1
$# checkCD @1 -> checkCD $# @1
$C backToFirstC $1 -> backToFirstC $C $1
$B eraseC 01 -> eraseC $B 0B
$D backToSharpOne eE -> backToSharpOne $D eE
@$ findZero @1 -> beginCopying @$ @1
$# backToDFromRight $1 -> backToDFromRight $# $1
0# backToSharpOne $D -> backToSharpOne 0# $D
@0 backToD @0 -> backToD @0 @0
@C backToDFromRight 11 -> backToDFromRight @C 11
eD backToSharpZero 10 -> backToSharpZero eD 10
10 backToSharpOne @C -> backToSharpOne 10 @C
@B backToStart 10 -> backToStart @B 10
eC replaceWithBlanks $@ -> backToDFromRight eC $@
$0 backToDFromLeft @1 -> backToDFromLeft $0 @1
1D checkCD @1 -> checkCD 1D @1
eD backToSharpZero $E -> backToSharpZero eD $E
@X gotoMark $0 -> gotoMark @X $0
@C incD @1 -> incD @C @0
e0 findBlank 10 -> temp e0 10
e# prepEraseC 10 -> prepEraseC e# 10
$@ temp 01 -> beginCopying $@ 01
@1 initDivider 00 -> initDividerByTwo @1 00
0& incD $0 -> checkCD 0& $1
0E searchZero $1 -> restoreCD 0E $1
@D backToSharpOne @X -> backToSharpOne @D @X
$1 searchZero e0 -> backToDFromLeft $1 e%
1% backToFirstC 01 -> backToFirstC 1% 01
eX backToSharpZero 1D -> backToSharpZero eX 1D
@0 backToDFromLeft e1 -> backToDFromLeft @0 e1
0& prepEraseC $0 -> prepEraseC 0& $0
e& findBlank $1 -> temp e& $1
$$ incD 00 -> checkCD $$ 01
copyOne @0 -> @0 copyOne
01 findBlank @1 -> temp 01 @1
0& beginCopying 1B -> backToStart 0& 1C
1$ restoreCD e1 -> restoreCD 1$ e1
@E initDivider @0 -> initDividerByTwo @E @0
1X backToSharpOne 11 -> backToSharpOne 1X 11
eD backToDFromLeft eD -> searchNextBit eD eD
0$ checkEForZero 1B -> stop 0$ 1B
1# restoreCD e0 -> restoreCD 1# e0
e$ searchZero 10 -> backToDFromLeft e$ 1%
e# backToDFromRight eE -> backToDFromRight e# eE
1& restoreCD e1 -> restoreCD 1& e1
e% backToSharpZero $E -> backToSharpZero e% $E
$@ goToPlaceForDivider 0B -> backToFirstC $@ 0D
0X backToDFromRight e1 -> backToDFromRight 0X e1
e& incD $0 -> checkCD e& $1
1B backToSharpOne @1 -> backToSharpOne 1B @1
$0 gotoMark e1 -> gotoMark $0 e1
0# searchOne $1 -> backToDFromLeft 0# $&
eD prepEraseC @1 -> prepEraseC eD @1
0E eraseC 00 -> eraseC 0E 0B
0@ incD 01 -> incD 0@ 00
eD gotoLastE 1@ -> dec eD 1@
e# gotoDecC $1 -> gotoDecC e# $1
$% backToDFromLeft @1 -> backToDFromLeft $% @1
@& backToDFromRight @E -> backToDFromRight @& @E
0$ searchOne $0 -> restoreCD 0$ $0
1C backToSharpZero 00 -> backToSharpZero 1C 00
dec $E -> $E replaceWithBlanks
eB massErase 1@ -> eraseE eB 1@
0X backToDFromRight $E -> backToDFromRight 0X $E
backToFirstC @C -> @C createCopy
1# searchNextBit 11 -> searchNextBit 1# 11
@@ backToSharpOne e1 -> backToSharpOne @@ e1
createCopy @E -> @E gotoLastE
$$ backToFirstC 00 -> backToFirstC $$ 00
1E initDivider @0 -> initDividerByTwo 1E @0
0# dec 10 -> dec 0# 11
0E backToDFromRight 01 -> backToDFromRight 0E 01
copyZero e0 -> e0 copyZero
@% backToSharpZero 1C -> backToSharpZero @% 1C
0@ backToSharpZero @0 -> backToSharpZero 0@ @0
0@ gotoMark 1E -> gotoDecC 0@ 1E
$1 replaceWithBlanks $@ -> backToDFromRight $1 $@
@@ gotoMark 01 -> gotoMark @@ 01
0@ backToSharpOne e0 -> backToSharpOne 0@ e0
1$ backToFirstC e0 -> backToFirstC 1$ e0
$# gotoDecC 0D -> dec $# 0D
@# searchOne 10 -> restoreCD @# 10
00 gotoDecC $D -> dec 00 $D
eC eraseE $E -> prepEraseC eC $E
@C initDivider 00 -> initDividerByTwo @C 00
1B findBlank eB -> FINAL 1B eB
11 backToSharpOne 1C -> backToSharpOne 11 1C
@% prepEraseC 10 -> prepEraseC @% 10
$1 backToSharpZero $D -> backToSharpZero $1 $D
10 checkCD e1 -> checkCD 10 e1
0% findBlank eB -> FINAL 0% eB
01 backToSharpOne e1 -> backToSharpOne 01 e1
e# findZero 11 -> beginCopying e# 11
$@ eraseC e0 -> eraseC $@ eB
1C checkCD $0 -> checkCD 1C $0
1# backToSharpOne eE -> backToSharpOne 1# eE
$# checkCD $D -> checkCD $# $D
$# backToD $0 -> backToD $# $0
e0 backToSharpOne 1X -> backToSharpOne e0 1X
$@ gotoDecC @0 -> gotoDecC $@ @0
e% prepEraseC $D -> eraseC e% $D
e@ backToDFromLeft eD -> searchNextBit e@ eD
$@ incD 00 -> checkCD $@ 01
00 searchNextBit 00 -> searchNextBit 00 00
01 eraseC eC -> backToStart 01 eX
@# backToDFromLeft @1 -> backToDFromLeft @# @1
1% searchZero 00 -> backToDFromLeft 1% 0%
$C gotoMark $1 -> gotoMark $C $1
@D beginCopying 1B -> backToStart @D 1C
11 gotoMark 11 -> gotoMark 11 11
0& backToDFromRight e0 -> backToDFromRight 0& e0
e1 prepEraseC 0D -> eraseC e1 0D
0E backToSharpOne $C -> backToSharpOne 0E $C
$X copyOne 0B -> backToSharpOne $X 01
e& backToSharpZero 0C -> backToSharpZero e& 0C
@0 searchOne @0 -> restoreCD @0 @0
0X backToDFromLeft 1D -> searchNextBit 0X 1D
@& eraseE @0 -> eraseE @& @B
checkOneD $0 -> $0 checkOneD
e@ prepEraseC $D -> eraseC e@ $D
1B findBlank 1B -> FINAL 1B 1B
0$ backToD e0 -> backToD 0$ e0
0& forwardToLastD 0E -> incD 0& 0E
0E searchZero e0 -> backToDFromLeft 0E e%
1% backToSharpOne eX -> backToSharpOne 1% eX
$D searchZero $1 -> restoreCD $D $1
eD checkCD @1 -> checkCD eD @1
@C dec 00 -> dec @C 01
e1 prepEraseC e1 -> prepEraseC e1 e1
1# searchNextBit e1 -> searchNextBit 1# e1
@# backToDFromLeft 01 -> backToDFromLeft @# 01
$D replaceWithBlanks @@ -> backToDFromRight $D @@
eB gotoMark @0 -> gotoMark eB @0
eB goToPlaceForDivider @B -> backToFirstC eB @D
$1 gotoMark 10 -> gotoMark $1 10
1@ gotoDecC 00 -> gotoDecC 1@ 00
1$ prepEraseC 00 -> prepEraseC 1$ 00
e% backToDFromLeft e0 -> backToDFromLeft e% e0
@C backToFirstC @0 -> backToFirstC @C @0
@X eraseE $E -> prepEraseC @X $E
1B restoreCD @D -> restoreCD 1B @D
$@ beginCopying @B -> backToStart $@ @C
$& backToDFromRight 10 -> backToDFromRight $& 10
@& backToDFromLeft $% -> backToDFromLeft @& $%
$C searchZero @1 -> restoreCD $C @1
@1 findBlank 00 -> temp @1 00
0# temp e1 -> beginCopying 0# e1
@1 copyZero $B -> backToSharpZero @1 $0
00 eraseC 01 -> eraseC 00 0B
1D backToSharpZero 1C -> backToSharpZero 1D 1C
0E searchNextBit @0 -> searchNextBit 0E @0
e# searchOne $1 -> backToDFromLeft e# $&
$E backToSharpOne e0 -> backToSharpOne $E e0
@X beginCopying @B -> backToStart @X @C
@B restoreCD e& -> restoreCD @B e1
0# forwardToLastD 0E -> incD 0# 0E
1E initDividerByTwo 10 -> backToD 1E 11
@B gotoDecC 1D -> dec @B 1D
@D gotoDecC @D -> dec @D @D
$0 incD @0 -> checkCD $0 @1
@D backToDFromLeft @1 -> backToDFromLeft @D @1
1@ initDividerByTwo 10 -> backToD 1@ 11
$1 restoreCD $1 -> restoreCD $1 $1
@# searchNextBit e1 -> searchNextBit @# e1
$1 gotoDecC @0 -> gotoDecC $1 @0
11 backToDFromLeft @& -> backToDFromLeft 11 @&
1& gotoLastE @@ -> dec 1& @@
1B searchNextBit e0 -> searchNextBit 1B e0
$B searchOne $1 -> backToDFromLeft $B $&
e# backToD 01 -> backToD e# 01
0B searchZero 11 -> restoreCD 0B 11
eX eraseE $1 -> eraseE eX $B
e0 checkCD $0 -> checkCD e0 $0
@$ backToStart $1 -> backToStart @$ $1
0$ prepEraseC @0 -> prepEraseC 0$ @0
1$ findBlank $1 -> temp 1$ $1
@% checkCD eD -> checkCD @% eD
eD backToSharpOne 11 -> backToSharpOne eD 11
1& searchOne $1 -> backToDFromLeft 1& $&
1X nullifier 1B -> initDivider 1X 1E
$$ backToDFromLeft 0D -> searchNextBit $$ 0D
$% copyOne 1B -> backToSharpOne $% 11
00 temp e1 -> beginCopying 00 e1
e& backToFirstC $1 -> backToFirstC e& $1
0E nullifier 0B -> initDivider 0E 0E
eX backToDFromRight 0B -> backToDFromRight eX 0B
$$ gotoMark e1 -> gotoMark $$ e1
1X replaceWithBlanks @@ -> backToDFromRight 1X @@
@E backToDFromRight 1E -> backToDFromRight @E 1E
$@ temp $0 -> beginCopying $@ $0
$D backToStart 00 -> backToStart $D 00
@$ backToD 00 -> backToD @$ 00
$% findBlank eB -> FINAL $% eB
$E temp 10 -> beginCopying $E 10
1B gotoLastE @@ -> dec 1B @@
0E backToDFromRight e0 -> backToDFromRight 0E e0
e0 restoreCD @D -> restoreCD e0 @D
@@ beginCopying 0B -> backToStart @@ 0C
$# eraseC 01 -> eraseC $# 0B
$@ backToDFromLeft $% -> backToDFromLeft $@ $%
0X checkEForZero 1B -> stop 0X 1B
$C massErase @@ -> eraseE $C @@
01 searchZero $1 -> restoreCD 01 $1
eC gotoMark 10 -> gotoMark eC 10
0& searchZero @0 -> backToDFromLeft 0& @%
eX backToSharpZero eE -> backToSharpZero eX eE
$D backToSharpOne 0X -> backToSharpOne $D 0X
$% eraseC @1 -> eraseC $% @B
@0 backToDFromLeft $0 -> backToDFromLeft @0 $0
1B backToD @1 -> backToD 1B @1
1& eraseE $E -> prepEraseC 1& $E
$@ copyOne 1B -> backToSharpOne $@ 11
@X backToSharpZero 01 -> backToSharpZero @X 01
01 eraseC 10 -> eraseC 01 1B
e1 backToSharpZero $1 -> backToSharpZero e1 $1
$# initDividerByTwo @0 -> backToD $# @1
1% backToDFromLeft $& -> backToDFromLeft 1% $&
e1 checkCD $1 -> checkCD e1 $1
00 forwardToLastD 0E -> incD 00 0E
e# backToSharpOne @C -> backToSharpOne e# @C
1# initDividerByTwo 00 -> backToD 1# 01
$# backToSharpOne $1 -> backToSharpOne $# $1
1E gotoDecC 0D -> dec 1E 0D
$# backToSharpZero 11 -> backToSharpZero $# 11
01 backToSharpOne 0D -> backToSharpOne 01 0D
$1 backToSharpZero $1 -> backToSharpZero $1 $1
@# backToDFromRight 1E -> backToDFromRight @# 1E
e# backToSharpOne 1E -> backToSharpOne e# 1E
@# beginCopying 1B -> backToStart @# 1C
0E backToSharpZero 10 -> backToSharpZero 0E 10
@C initDividerByTwo 00 -> backToD @C 01
eX incD 01 -> incD eX 00
$$ dec 10 -> dec $$ 11
0& gotoDecC 0D -> dec 0& 0D
$% eraseE 10 -> eraseE $% 1B
@X backToDFromLeft $& -> backToDFromLeft @X $&
1@ copyOne eB -> backToSharpOne 1@ e1
0B gotoDecC @D -> dec 0B @D
$D backToDFromLeft @D -> searchNextBit $D @D
$X gotoDecC @0 -> gotoDecC $X @0
eB gotoMark e1 -> gotoMark eB e1
$X prepEraseC e1 -> prepEraseC $X e1
01 forwardToLastD 1E -> incD 01 1E
0C backToDFromLeft $D -> searchNextBit 0C $D
0# eraseE 10 -> eraseE 0# 1B
$D eraseC $0 -> eraseC $D $B
e# backToDFromLeft 1% -> backToDFromLeft e# 1%
@D backToDFromRight $B -> backToDFromRight @D $B
1$ initDivider @0 -> initDividerByTwo 1$ @0
0% findBlank 1B -> FINAL 0% 1B
$0 backToSharpOne @E -> backToSharpOne $0 @E
@0 massErase 0@ -> eraseE @0 0@
00 backToDFromLeft e& -> backToDFromLeft 00 e&
$% nullifier 1B -> initDivider $% 1E
0% restoreCD @1 -> restoreCD 0% @1
$C searchNextBit 11 -> searchNextBit $C 11
@C checkCD $0 -> checkCD @C $0
@C gotoDecC $D -> dec @C $D
eE searchNextBit @0 -> searchNextBit eE @0
@$ backToDFromLeft e% -> backToDFromLeft @$ e%
$& backToDFromLeft 01 -> backToDFromLeft $& 01
@C restoreCD e0 -> restoreCD @C e0
$X goToPlaceForDivider @B -> backToFirstC $X @D
1@ backToDFromRight @0 -> backToDFromRight 1@ @0
$& checkCD 11 -> checkCD $& 11
$D backToDFromLeft @0 -> backToDFromLeft $D @0
$& eraseC 10 -> eraseC $& 1B
1D prepEraseC e0 -> prepEraseC 1D e0
0@ searchOne 01 -> backToDFromLeft 0@ 0&
0% checkCD 11 -> checkCD 0% 11
@0 restoreCD $0 -> restoreCD @0 $0
e# checkCD 0D -> checkCD e# 0D
eB findBlank @1 -> temp eB @1
$X forwardToLastD 1E -> incD $X 1E
0E restoreCD 01 -> restoreCD 0E 01
eC backToSharpZero 1X -> backToSharpZero eC 1X
@B prepEraseC e0 -> prepEraseC @B e0
$$ prepEraseC 11 -> prepEraseC $$ 11
0D gotoDecC $1 -> gotoDecC 0D $1
11 forwardToLastD 1E -> incD 11 1E
$# backToDFromLeft 11 -> backToDFromLeft $# 11
@X backToSharpZero 0C -> backToSharpZero @X 0C
$X backToDFromRight 00 -> backToDFromRight $X 00
e$ beginCopying 1B -> backToStart e$ 1C
0# backToSharpZero e0 -> backToSharpZero 0# e0
$& searchOne 11 -> backToDFromLeft $& 1&
@B gotoDecC 11 -> gotoDecC @B 11
$D gotoLastE 1@ -> dec $D 1@
@B prepEraseC @1 -> prepEraseC @B @1
$% backToD e0 -> backToD $% e0
1D backToSharpZero 00 -> backToSharpZero 1D 00
e# temp 10 -> beginCopying e# 10
$0 backToDFromRight 11 -> backToDFromRight $0 11
$D findBlank 01 -> temp $D 01
@@ backToDFromRight 01 -> backToDFromRight @@ 01
$D backToFirstC $0 -> backToFirstC $D $0
@# gotoDecC 0D -> dec @# 0D
$E backToSharpOne 1D -> backToSharpOne $E 1D
eB backToFirstC e1 -> backToFirstC eB e1
1B incD $1 -> incD 1B $0
e$ checkCD @0 -> checkCD e$ @0
0@ eraseC 10 -> eraseC 0@ 1B
0% backToSharpOne @C -> backToSharpOne 0% @C
eD backToDFromLeft 10 -> backToDFromLeft eD 10
0$ copyOne @B -> backToSharpOne 0$ @1
0@ restoreCD 1% -> restoreCD 0@ 10
0# findBlank e1 -> temp 0# e1
$C checkEForZero 0B -> stop $C 0B
0& backToFirstC 11 -> backToFirstC 0& 11
e0 restoreCD 0% -> restoreCD e0 00
eD backToDFromRight 11 -> backToDFromRight eD 11
eX findBlank $0 -> temp eX $0
11 beginCopying $B -> backToStart 11 $C
e$ backToFirstC e0 -> backToFirstC e$ e0
e$ initDivider e0 -> initDividerByTwo e$ e0
1% gotoDecC $0 -> gotoDecC 1% $0
@0 eraseE $E -> prepEraseC @0 $E
e% backToSharpZero $C -> backToSharpZero e% $C
$D initDividerByTwo 10 -> backToD $D 11
e1 eraseE eE -> prepEraseC e1 eE
$1 backToDFromLeft $1 -> backToDFromLeft $1 $1
10 initDivider 10 -> initDividerByTwo 10 10
$B backToStart 10 -> backToStart $B 10
0% restoreCD 1% -> restoreCD 0% 10
e% backToSharpOne eX -> backToSharpOne e% eX
e@ gotoDecC 0D -> dec e@ 0D
0@ backToSharpOne @E -> backToSharpOne 0@ @E
$E beginCopying 0B -> backToStart $E 0C
0$ searchZero @1 -> restoreCD 0$ @1
$X backToSharpZero 1X -> backToSharpZero $X 1X
@E backToSharpOne 0X -> backToSharpOne @E 0X
$B restoreCD 11 -> restoreCD $B 11
e# backToSharpOne @E -> backToSharpOne e# @E
@# backToSharpOne @1 -> backToSharpOne @# @1
eX backToFirstC $0 -> backToFirstC eX $0
$% backToDFromRight $B -> backToDFromRight $% $B
$C eraseE @1 -> eraseE $C @B
11 prepEraseC @1 -> prepEraseC 11 @1
e$ backToDFromRight @E -> backToDFromRight e$ @E
$E checkCD 01 -> checkCD $E 01
eD findBlank @1 -> temp eD @1
@B gotoDecC 0D -> dec @B 0D
0E prepEraseC 00 -> prepEraseC 0E 00
$1 searchZero $0 -> backToDFromLeft $1 $%
$1 backToFirstC $1 -> backToFirstC $1 $1
@X gotoDecC $0 -> gotoDecC @X $0
e% backToFirstC e0 -> backToFirstC e% e0
eE eraseE 11 -> eraseE eE 1B
11 backToDFromLeft 0D -> searchNextBit 11 0D
0E backToDFromRight 11 -> backToDFromRight 0E 11
e0 temp 00 -> beginCopying e0 00
@@ backToDFromRight 0E -> backToDFromRight @@ 0E
$0 backToDFromLeft @0 -> backToDFromLeft $0 @0
0X backToDFromLeft $& -> backToDFromLeft 0X $&
$1 backToSharpOne @E -> backToSharpOne $1 @E
1X dec 01 -> gotoMark 1X 00
$0 gotoMark @E -> gotoDecC $0 @E
0% backToDFromRight 0E -> backToDFromRight 0% 0E
e$ incD $1 -> incD e$ $0
$1 searchOne 01 -> backToDFromLeft $1 0&
01 backToSharpZero @1 -> backToSharpZero 01 @1
1D checkCD 10 -> checkCD 1D 10
@% restoreCD 11 -> restoreCD @% 11
e0 backToSharpOne $X -> backToSharpOne e0 $X
1D nullifier eB -> initDivider 1D eE
11 copyOne eB -> backToSharpOne 11 e1
1& searchZero 00 -> backToDFromLeft 1& 0%
e% backToDFromLeft $D -> searchNextBit e% $D
eD backToSharpOne e1 -> backToSharpOne eD e1
0X backToD 11 -> backToD 0X 11
$C gotoDecC @D -> dec $C @D
$B searchNextBit e1 -> searchNextBit $B e1
1X findBlank 01 -> temp 1X 01
01 checkEForZero 0B -> stop 01 0B
$X prepEraseC $D -> eraseC $X $D
@0 massErase $@ -> eraseE @0 $@
0& backToSharpOne 0C -> backToSharpOne 0& 0C
0# initDividerByTwo e0 -> backToD 0# e1
0B backToDFromLeft 0% -> backToDFromLeft 0B 0%
00 checkCD e0 -> checkCD 00 e0
1C backToStart 10 -> backToStart 1C 10
1$ backToSharpZero $E -> backToSharpZero 1$ $E
1$ backToD @1 -> backToD 1$ @1
0X backToFirstC $0 -> backToFirstC 0X $0
1C eraseC e1 -> eraseC 1C eB
$& temp $1 -> beginCopying $& $1
$B findBlank @B -> FINAL $B @B
@C backToFirstC 01 -> backToFirstC @C 01
eB backToSharpZero 1E -> backToSharpZero eB 1E
$# backToStart 01 -> backToStart $# 01
$1 restoreCD eD -> restoreCD $1 eD
$% gotoDecC $D -> dec $% $D
$1 backToSharpZero $0 -> backToSharpZero $1 $0
1$ searchZero 00 -> backToDFromLeft 1$ 0%
@& eraseC 11 -> eraseC @& 1B
0B prepEraseC e0 -> prepEraseC 0B e0
$D temp 11 -> beginCopying $D 11
@@ backToSharpOne @1 -> backToSharpOne @@ @1
10 prepEraseC 1D -> eraseC 10 1D
$D searchNextBit 00 -> searchNextBit $D 00
$0 goToPlaceForDivider 1B -> backToFirstC $0 1D
10 backToSharpZero 00 -> backToSharpZero 10 00
0% massErase $@ -> eraseE 0% $@
$B backToSharpOne @E -> backToSharpOne $B @E
1E incD @0 -> checkCD 1E @1
0D gotoDecC e1 -> gotoDecC 0D e1
e% copyZero 1B -> backToSharpZero e% 10
0# dec $1 -> gotoMark 0# $0
$D backToDFromLeft 0% -> backToDFromLeft $D 0%
e# eraseC @0 -> eraseC e# @B
@X backToDFromLeft $D -> searchNextBit @X $D
0# checkCD eD -> checkCD 0# eD
e@ backToDFromLeft 1& -> backToDFromLeft e@ 1&
eB findBlank 1B -> FINAL eB 1B
1E eraseE e1 -> eraseE 1E eB
@B temp 01 -> beginCopying @B 01
1B backToDFromLeft 1& -> backToDFromLeft 1B 1&
e% restoreCD 01 -> restoreCD e% 01
1X backToStart @0 -> backToStart 1X @0
1% copyOne 0B -> backToSharpOne 1% 01
@@ checkCD eD -> checkCD @@ eD
@X backToDFromRight 10 -> backToDFromRight @X 10
1# temp 00 -> beginCopying 1# 00
$$ backToDFromLeft $1 -> backToDFromLeft $$ $1
1% backToDFromLeft @% -> backToDFromLeft 1% @%
1@ backToSharpZero 0D -> backToSharpZero 1@ 0D
0C backToSharpZero $C -> backToSharpZero 0C $C
$@ backToDFromLeft 1& -> backToDFromLeft $@ 1&
1C nullifier 1B -> initDivider 1C 1E
1% searchNextBit @0 -> searchNextBit 1% @0
1@ backToD 10 -> backToD 1@ 10
@0 checkCD $1 -> checkCD @0 $1
@0 eraseC 00 -> eraseC @0 0B
$0 restoreCD e% -> restoreCD $0 e0
1E incD 10 -> checkCD 1E 11
$D copyOne eB -> backToSharpOne $D e1
@& dec $0 -> dec @& $1
0@ findBlank $0 -> temp 0@ $0
$# backToDFromRight $0 -> backToDFromRight $# $0
@# backToDFromRight 0B -> backToDFromRight @# 0B
0C searchOne e0 -> restoreCD 0C e0
e1 temp $1 -> beginCopying e1 $1
$% backToSharpZero 0E -> backToSharpZero $% 0E
1X gotoLastE $@ -> dec 1X $@
1B backToSharpOne 0X -> backToSharpOne 1B 0X
00 beginCopying @B -> backToStart 00 @C
e& gotoDecC e1 -> gotoDecC e& e1
1% searchNextBit $0 -> searchNextBit 1% $0
0E backToSharpZero 0D -> backToSharpZero 0E 0D
@E backToD 00 -> backToD @E 00
1# backToSharpOne 1D -> backToSharpOne 1# 1D
@D checkCD eD -> checkCD @D eD
$B backToD @0 -> backToD $B @0
@X checkCD e0 -> checkCD @X e0
createCopy $0 -> $# copyZero
11 backToD 01 -> backToD 11 01
e@ gotoMark @1 -> gotoMark e@ @1
1D backToDFromRight e0 -> backToDFromRight 1D e0
11 backToStart e0 -> backToStart 11 e0
1& backToSharpZero 10 -> backToSharpZero 1& 10
@$ copyOne 1B -> backToSharpOne @$ 11
@1 searchZero @1 -> restoreCD @1 @1
1C findZero 11 -> beginCopying 1C 11
0& restoreCD @1 -> restoreCD 0& @1
0B goToPlaceForDivider @B -> backToFirstC 0B @D
1C findBlank e0 -> temp 1C e0
1@ backToSharpZero $D -> backToSharpZero 1@ $D
@& backToSharpZero 0C -> backToSharpZero @& 0C
$E gotoDecC 01 -> gotoDecC $E 01
eC searchZero @1 -> restoreCD eC @1
$X initDividerByTwo 10 -> backToD $X 11
1& forwardToLastD 0E -> incD 1& 0E
e% backToDFromLeft @0 -> backToDFromLeft e% @0
@1 dec e0 -> dec @1 e1
@E findBlank 10 -> temp @E 10
1$ backToSharpZero $D -> backToSharpZero 1$ $D
$% restoreCD 0& -> restoreCD $% 01
00 checkCD e1 -> checkCD 00 e1
$% gotoLastE e@ -> dec $% e@
1B eraseE @0 -> eraseE 1B @B
0@ backToSharpZero e1 -> backToSharpZero 0@ e1
0& findBlank eB -> FINAL 0& eB
@1 backToFirstC 01 -> backToFirstC @1 01
eB incD 11 -> incD eB 10
e1 backToSharpZero @X -> backToSharpZero e1 @X
eC backToDFromRight 01 -> backToDFromRight eC 01
1D incD @1 -> incD 1D @0
@B incD @1 -> incD @B @0
1% backToSharpZero eE -> backToSharpZero 1% eE
eE backToDFromRight $1 -> backToDFromRight eE $1
eB checkCD e1 -> checkCD eB e1
0& backToSharpOne 01 -> backToSharpOne 0& 01
eX incD e1 -> incD eX e0
0# backToSharpZero @D -> backToSharpZero 0# @D
0C restoreCD $D -> restoreCD 0C $D
11 prepEraseC 10 -> prepEraseC 11 10
1@ gotoMark e1 -> gotoMark 1@ e1
@$ eraseC eC -> backToStart @$ eX
0B backToFirstC 01 -> backToFirstC 0B 01
1$ backToStart 10 -> backToStart 1$ 10
@X dec @1 -> gotoMark @X @0
1% eraseE 10 -> eraseE 1% 1B
0% forwardToLastD 0E -> incD 0% 0E
1% backToD 11 -> backToD 1% 11
@C backToFirstC 11 -> backToFirstC @C 11
@B goToPlaceForDivider 0B -> backToFirstC @B 0D
1D backToDFromRight 11 -> backToDFromRight 1D 11
1@ backToStart e1 -> backToStart 1@ e1
$# findBlank $0 -> temp $# $0
1E initDivider 10 -> initDividerByTwo 1E 10
eX prepEraseC 10 -> prepEraseC eX 10
10 backToSharpOne 1C -> backToSharpOne 10 1C
e0 backToDFromLeft $0 -> backToDFromLeft e0 $0
0& searchNextBit 10 -> searchNextBit 0& 10
$X checkCD @1 -> checkCD $X @1
10 eraseC @1 -> eraseC 10 @B
00 gotoMark 0E -> gotoDecC 00 0E
$C backToDFromLeft e& -> backToDFromLeft $C e&
$% backToFirstC @0 -> backToFirstC $% @0
0E initDividerByTwo 00 -> backToD 0E 01
@$ searchOne 01 -> backToDFromLeft @$ 0&
$# backToFirstC @1 -> backToFirstC $# @1
0# incD e1 -> incD 0# e0
$$ restoreCD @D -> restoreCD $$ @D
$& gotoDecC $1 -> gotoDecC $& $1
1# nullifier $B -> initDivider 1# $E
@& backToD e1 -> backToD @& e1
$B backToDFromLeft @D -> searchNextBit $B @D
$& backToSharpZero eD -> backToSharpZero $& eD
@X searchZero e0 -> backToDFromLeft @X e%
$1 restoreCD e0 -> restoreCD $1 e0
1D backToSharpOne 1E -> backToSharpOne 1D 1E
1D searchNextBit 01 -> searchNextBit 1D 01
$D backToSharpZero @E -> backToSharpZero $D @E
1@ nullifier 1B -> initDivider 1@ 1E
$B eraseE 11 -> eraseE $B 1B
$X searchZero 01 -> restoreCD $X 01
0X checkEForZero @B -> stop 0X @B
1X eraseE 11 -> eraseE 1X 1B
$1 searchOne e0 -> restoreCD $1 e0
1# dec 00 -> dec 1# 01
@D forwardToLastD 0E -> incD @D 0E
@@ gotoDecC 10 -> gotoDecC @@ 10
1@ gotoMark $1 -> gotoMark 1@ $1
@0 eraseC 01 -> eraseC @0 0B
@D backToD @1 -> backToD @D @1
$& eraseC $0 -> eraseC $& $B
gotoMark 0C -> 0C ifZero
$@ backToDFromRight @E -> backToDFromRight $@ @E
1$ gotoMark @1 -> gotoMark 1$ @1
eC backToSharpOne $E -> backToSharpOne eC $E
@E backToFirstC 01 -> backToFirstC @E 01
$E backToFirstC $0 -> backToFirstC $E $0
e0 dec 01 -> gotoMark e0 00
@# restoreCD e1 -> restoreCD @# e1
0% gotoMark 1E -> gotoDecC 0% 1E
e0 backToDFromRight e1 -> backToDFromRight e0 e1
@D findBlank $1 -> temp @D $1
1@ restoreCD @1 -> restoreCD 1@ @1
1B gotoDecC 10 -> gotoDecC 1B 10
eC searchZero 11 -> restoreCD eC 11
$C dec 11 -> gotoMark $C 10
0B backToD 10 -> backToD 0B 10
@& dec 10 -> dec @& 11
e$ gotoDecC @0 -> gotoDecC e$ @0
1& gotoDecC 11 -> gotoDecC 1& 11
e0 backToDFromRight $1 -> backToDFromRight e0 $1
@X backToDFromRight 1B -> backToDFromRight @X 1B
1@ searchNextBit 01 -> searchNextBit 1@ 01
@0 backToD $0 -> backToD @0 $0
$X searchZero e0 -> backToDFromLeft $X e%
e& prepEraseC @D -> eraseC e& @D
@C backToFirstC e1 -> backToFirstC @C e1
0# backToDFromRight 0E -> backToDFromRight 0# 0E
e0 eraseE $1 -> eraseE e0 $B
e& prepEraseC @0 -> prepEraseC e& @0
e% nullifier $B -> initDivider e% $E
@B eraseE 1E -> prepEraseC @B 1E
eX backToDFromLeft $1 -> backToDFromLeft eX $1
0@ gotoMark eE -> gotoDecC 0@ eE
e& dec 10 -> dec e& 11
$% backToDFromRight e0 -> backToDFromRight $% e0
e% gotoMark 00 -> gotoMark e% 00
e$ searchNextBit @0 -> searchNextBit e$ @0
1@ backToSharpOne 01 -> backToSharpOne 1@ 01
@& checkCD 0D -> checkCD @& 0D
1D backToSharpOne @X -> backToSharpOne 1D @X
$% findZero e1 -> beginCopying $% e1
0E backToSharpOne 11 -> backToSharpOne 0E 11
e# backToStart @1 -> backToStart e# @1
e0 findBlank $B -> FINAL e0 $B
e& eraseE 10 -> eraseE e& 1B
@D beginCopying 0B -> backToStart @D 0C
$D eraseC eC -> backToStart $D eX
e& initDividerByTwo 00 -> backToD e& 01
@C backToDFromRight 01 -> backToDFromRight @C 01
10 searchOne $1 -> backToDFromLeft 10 $&
0% backToSharpOne $X -> backToSharpOne 0% $X
e& backToDFromLeft e1 -> backToDFromLeft e& e1
$$ backToDFromLeft 01 -> backToDFromLeft $$ 01
01 searchOne 00 -> restoreCD 01 00
e& backToSharpOne 10 -> backToSharpOne e& 10
e0 searchOne 10 -> restoreCD e0 10
@@ beginCopying $B -> backToStart @@ $C
1$ searchOne @1 -> backToDFromLeft 1$ @&
1B searchNextBit @0 -> searchNextBit 1B @0
e1 backToSharpZero eX -> backToSharpZero e1 eX
11 backToSharpZero 1C -> backToSharpZero 11 1C
0& backToSharpOne @C -> backToSharpOne 0& @C
@& copyZero eB -> backToSharpZero @& e0
1X checkCD @D -> checkCD 1X @D
1C backToSharpOne 01 -> backToSharpOne 1C 01
eC findBlank @B -> FINAL eC @B
0$ searchNextBit @0 -> searchNextBit 0$ @0
@0 backToSharpZero e0 -> backToSharpZero @0 e0
1D temp 10 -> beginCopying 1D 10
0# goToPlaceForDivider eB -> backToFirstC 0# eD
1@ eraseE e1 -> eraseE 1@ eB
01 searchOne $0 -> restoreCD 01 $0
$B backToFirstC 11 -> backToFirstC $B 11
1X findBlank e1 -> temp 1X e1
$0 backToDFromRight @1 -> backToDFromRight $0 @1
10 backToDFromRight $B -> backToDFromRight 10 $B
@@ backToSharpOne $X -> backToSharpOne @@ $X
1$ backToSharpZero $X -> backToSharpZero 1$ $X
$% gotoMark e1 -> gotoMark $% e1
@& backToSharpZero @C -> backToSharpZero @& @C
0X beginCopying eB -> backToStart 0X eC
1& restoreCD @0 -> restoreCD 1& @0
@D backToSharpZero @1 -> backToSharpZero @D @1
FINAL $# -> FINAL $ FINAL
$1 incD @0 -> checkCD $1 @1
$# checkEForZero eB -> stop $# eB
FINAL 0D -> FINAL 0 FINAL
@$ backToDFromRight 01 -> backToDFromRight @$ 01
$$ backToDFromRight @B -> backToDFromRight $$ @B
@$ nullifier 0B -> initDivider @$ 0E
e@ copyZero @B -> backToSharpZero e@ @0
eE temp $1 -> beginCopying eE $1
1@ eraseE $E -> prepEraseC 1@ $E
$D backToDFromRight 11 -> backToDFromRight $D 11
1D searchZero 01 -> restoreCD 1D 01
e& gotoMark @0 -> gotoMark e& @0
e# nullifier @B -> initDivider e# @E
@D backToDFromLeft e% -> backToDFromLeft @D e%
0$ prepEraseC e1 -> prepEraseC 0$ e1
1E searchZero $0 -> backToDFromLeft 1E $%
1# backToSharpZero e0 -> backToSharpZero 1# e0
1B backToSharpOne @D -> backToSharpOne 1B @D
$E backToSharpZero e1 -> backToSharpZero $E e1
0# findBlank 0B -> FINAL 0# 0B
0# eraseE 01 -> eraseE 0# 0B
0$ backToSharpZero $X -> backToSharpZero 0$ $X
e& searchOne $1 -> backToDFromLeft e& $&
e1 backToDFromLeft $0 -> backToDFromLeft e1 $0
1C gotoMark 11 -> gotoMark 1C 11
@X backToSharpOne $X -> backToSharpOne @X $X
1@ eraseC 00 -> eraseC 1@ 0B
01 restoreCD $D -> restoreCD 01 $D
$D backToSharpOne 1E -> backToSharpOne $D 1E
@0 eraseE eE -> prepEraseC @0 eE
eX incD 11 -> incD eX 10
$1 backToDFromRight 0B -> backToDFromRight $1 0B
$D searchOne 11 -> backToDFromLeft $D 1&
1# backToD @1 -> backToD 1# @1
01 backToSharpZero @E -> backToSharpZero 01 @E
1B restoreCD 1& -> restoreCD 1B 11
0D searchZero 01 -> restoreCD 0D 01
eX backToDFromRight 11 -> backToDFromRight eX 11
10 backToSharpZero eX -> backToSharpZero 10 eX
eX initDividerByTwo e0 -> backToD eX e1
$D backToDFromLeft 0D -> searchNextBit $D 0D
$0 temp e1 -> beginCopying $0 e1
eC backToSharpOne 00 -> backToSharpOne eC 00
1D restoreCD $& -> restoreCD 1D $1
01 backToSharpZero 11 -> backToSharpZero 01 11
eB initDividerByTwo 10 -> backToD eB 11
0$ restoreCD e% -> restoreCD 0$ e0
e$ backToDFromRight $E -> backToDFromRight e$ $E
@E restoreCD 0& -> restoreCD @E 01
1$ backToSharpOne 1E -> backToSharpOne 1$ 1E
$D restoreCD 10 -> restoreCD $D 10
eD dec @1 -> gotoMark eD @0
@# backToSharpZero 1C -> backToSharpZero @# 1C
eD backToSharpZero $0 -> backToSharpZero eD $0
$@ backToSharpOne 0E -> backToSharpOne $@ 0E
1E backToDFromLeft 0& -> backToDFromLeft 1E 0&
@X backToSharpOne 00 -> backToSharpOne @X 00
1& goToPlaceForDivider @B -> backToFirstC 1& @D
e% backToSharpOne @D -> backToSharpOne e% @D
0D prepEraseC eD -> eraseC 0D eD
e& prepEraseC 0D -> eraseC e& 0D
eD searchOne $1 -> backToDFromLeft eD $&
e1 backToStart 10 -> backToStart e1 10
1& gotoDecC @1 -> gotoDecC 1& @1
1@ backToSharpZero 0C -> backToSharpZero 1@ 0C
$E goToPlaceForDivider 1B -> backToFirstC $E 1D
1D backToSharpOne eX -> backToSharpOne 1D eX
0$ eraseE 00 -> eraseE 0$ 0B
$1 backToD 01 -> backToD $1 01
e% copyZero $B -> backToSharpZero e% $0
00 backToSharpOne eX -> backToSharpOne 00 eX
1& backToDFromRight e1 -> backToDFromRight 1& e1
e& eraseC 10 -> eraseC e& 1B
1$ copyZero 1B -> backToSharpZero 1$ 10
$0 restoreCD @0 -> restoreCD $0 @0
0E nullifier 1B -> initDivider 0E 1E
0% dec 00 -> dec 0% 01
0$ backToSharpZero 01 -> backToSharpZero 0$ 01
$@ findZero @1 -> beginCopying $@ @1
10 gotoDecC $0 -> gotoDecC 10 $0
0E backToStart @0 -> backToStart 0E @0
eD restoreCD 1% -> restoreCD eD 10
eC gotoDecC @D -> dec eC @D
1B nullifier $B -> initDivider 1B $E
0D checkCD 10 -> checkCD 0D 10
@@ backToDFromRight e1 -> backToDFromRight @@ e1
1B eraseE $0 -> eraseE 1B $B
eE copyOne 1B -> backToSharpOne eE 11
$# gotoMark 0E -> gotoDecC $# 0E
@0 eraseE e0 -> eraseE @0 eB
0D eraseE @E -> prepEraseC 0D @E
$@ backToSharpZero @X -> backToSharpZero $@ @X
0@ goToPlaceForDivider $B -> backToFirstC 0@ $D
$X prepEraseC $0 -> prepEraseC $X $0
e@ initDivider 10 -> initDividerByTwo e@ 10
@E restoreCD @& -> restoreCD @E @1
$B backToD $0 -> backToD $B $0
eD searchZero $1 -> restoreCD eD $1
eX beginCopying $B -> backToStart eX $C
0E incD $1 -> incD 0E $0
1% checkCD $D -> checkCD 1% $D
@0 backToSharpZero 0C -> backToSharpZero @0 0C
e1 findZero 01 -> beginCopying e1 01
$% backToSharpZero @C -> backToSharpZero $% @C
@@ restoreCD 01 -> restoreCD @@ 01
@D nullifier $B -> initDivider @D $E
e0 backToDFromLeft 1% -> backToDFromLeft e0 1%
$% restoreCD 1& -> restoreCD $% 11
0D prepEraseC $D -> eraseC 0D $D
$X checkCD 11 -> checkCD $X 11
@% forwardToLastD $E -> incD @% $E
eC restoreCD e% -> restoreCD eC e0
0% checkCD 00 -> checkCD 0% 00
e% eraseC $0 -> eraseC e% $B
$B gotoMark 11 -> gotoMark $B 11
11 backToFirstC e1 -> backToFirstC 11 e1
e@ eraseC 10 -> eraseC e@ 1B
$& checkCD $1 -> checkCD $& $1
forwardToLastD e0 -> e0 forwardToLastD
@% backToFirstC 10 -> backToFirstC @% 10
@& backToStart 01 -> backToStart @& 01
1& restoreCD $& -> restoreCD 1& $1
1@ eraseE $1 -> eraseE 1@ $B
e@ initDivider 00 -> initDividerByTwo e@ 00
$$ eraseC @C -> backToStart $$ @X
e$ searchOne 11 -> backToDFromLeft e$ 1&
e% incD $1 -> incD e% $0
01 restoreCD 0% -> restoreCD 01 00
00 backToDFromRight @B -> backToDFromRight 00 @B
@1 backToSharpZero eC -> backToSharpZero @1 eC
e& backToDFromLeft e& -> backToDFromLeft e& e&
@# backToSharpOne 1E -> backToSharpOne @# 1E
e0 backToDFromLeft 0% -> backToDFromLeft e0 0%
$D backToDFromRight @E -> backToDFromRight $D @E
1$ backToSharpZero e1 -> backToSharpZero 1$ e1
0D incD $1 -> incD 0D $0
$B restoreCD eD -> restoreCD $B eD
1@ prepEraseC $D -> eraseC 1@ $D
$1 backToSharpOne 1C -> backToSharpOne $1 1C
@D gotoDecC 00 -> gotoDecC @D 00
e@ searchNextBit @1 -> searchNextBit e@ @1
1% backToDFromRight $1 -> backToDFromRight 1% $1
@X incD @1 -> incD @X @0
$C gotoLastE $@ -> dec $C $@
00 checkCD @0 -> checkCD 00 @0
@$ checkEForZero $B -> stop @$ $B
eX gotoMark 00 -> gotoMark eX 00
@C initDivider $0 -> initDividerByTwo @C $0
1& backToStart e0 -> backToStart 1& e0
$C temp $0 -> beginCopying $C $0
0B eraseE 00 -> eraseE 0B 0B
0# dec @0 -> dec 0# @1
0B searchNextBit 00 -> searchNextBit 0B 00
$0 checkCD 01 -> checkCD $0 01
@# gotoDecC 10 -> gotoDecC @# 10
@1 searchOne 11 -> backToDFromLeft @1 1&
@% restoreCD $% -> restoreCD @% $0
0# replaceWithBlanks @@ -> backToDFromRight 0# @@
$& initDividerByTwo @0 -> backToD $& @1
0E restoreCD $1 -> restoreCD 0E $1
$@ backToDFromRight 10 -> backToDFromRight $@ 10
$$ backToSharpOne @X -> backToSharpOne $$ @X
@@ findBlank 10 -> temp @@ 10
e% restoreCD @& -> restoreCD e% @1
10 backToDFromRight eB -> backToDFromRight 10 eB
1C eraseC 11 -> eraseC 1C 1B
@X backToSharpZero $E -> backToSharpZero @X $E
e% searchOne 10 -> restoreCD e% 10
e% gotoMark 0E -> gotoDecC e% 0E
0C gotoDecC eD -> dec 0C eD
1E goToPlaceForDivider @B -> backToFirstC 1E @D
eB eraseC 11 -> eraseC eB 1B
0% eraseC @1 -> eraseC 0% @B
e% dec @0 -> dec e% @1
1& eraseC 00 -> eraseC 1& 0B
e@ copyZero 0B -> backToSharpZero e@ 00
@0 prepEraseC 0D -> eraseC @0 0D
eC searchZero @0 -> backToDFromLeft eC @%
11 incD 01 -> incD 11 00
0X backToDFromLeft e0 -> backToDFromLeft 0X e0
$# checkCD @0 -> checkCD $# @0
@C backToFirstC $1 -> backToFirstC @C $1
$B restoreCD 0% -> restoreCD $B 00
11 backToStart 01 -> backToStart 11 01
10 backToD e0 -> backToD 10 e0
0C backToDFromLeft @0 -> backToDFromLeft 0C @0
0@ backToSharpOne e1 -> backToSharpOne 0@ e1
@% replaceWithBlanks 1@ -> backToDFromRight @% 1@
e@ gotoDecC $0 -> gotoDecC e@ $0
@E gotoDecC 0D -> dec @E 0D
@D eraseE e0 -> eraseE @D eB
10 nullifier eB -> initDivider 10 eE
@E restoreCD 10 -> restoreCD @E 10
0B incD @1 -> incD 0B @0
$E checkCD 11 -> checkCD $E 11
1B beginCopying eB -> backToStart 1B eC
$& backToStart 10 -> backToStart $& 10
1B checkCD 11 -> checkCD 1B 11
@B searchOne @0 -> restoreCD @B @0
1C searchOne @0 -> restoreCD 1C @0
e% gotoMark @0 -> gotoMark e% @0
$0 restoreCD $D -> restoreCD $0 $D
@# eraseE eE -> prepEraseC @# eE
e@ backToSharpZero 0D -> backToSharpZero e@ 0D
eX backToSharpOne 0D -> backToSharpOne eX 0D
1@ backToSharpOne $C -> backToSharpOne 1@ $C
0& copyOne @B -> backToSharpOne 0& @1
eB restoreCD 10 -> restoreCD eB 10
1$ backToD 01 -> backToD 1$ 01
1# backToDFromLeft 10 -> backToDFromLeft 1# 10
1$ prepEraseC eD -> eraseC 1$ eD
1# prepEraseC @1 -> prepEraseC 1# @1
$1 temp @1 -> beginCopying $1 @1
1# copyZero 0B -> backToSharpZero 1# 00
@% backToSharpOne @E -> backToSharpOne @% @E
01 eraseC 00 -> eraseC 01 0B
00 searchNextBit 11 -> searchNextBit 00 11
1C gotoLastE 1@ -> dec 1C 1@
searchNextBit $% -> $% eqCD
0% backToStart 10 -> backToStart 0% 10
1C backToDFromRight 10 -> backToDFromRight 1C 10
e0 backToSharpOne eD -> backToSharpOne e0 eD
e@ backToSharpOne eE -> backToSharpOne e@ eE
eE findBlank 10 -> temp eE 10
@# backToDFromRight 0E -> backToDFromRight @# 0E
0X nullifier eB -> initDivider 0X eE
$$ backToSharpOne 0E -> backToSharpOne $$ 0E
eE backToDFromLeft @0 -> backToDFromLeft eE @0
restoreCD 0C -> 0C backToDAfterInc
0& beginCopying 0B -> backToStart 0& 0C
0E backToDFromRight 0E -> backToDFromRight 0E 0E
@0 findZero $1 -> beginCopying @0 $1
1B eraseC 0C -> backToStart 1B 0X
00 restoreCD $1 -> restoreCD 00 $1
@1 backToDFromRight 01 -> backToDFromRight @1 01
eC nullifier 0B -> initDivider eC 0E
eB dec e1 -> gotoMark eB e0
$X searchNextBit 10 -> searchNextBit $X 10
@X findBlank 1B -> FINAL @X 1B
1E initDivider $0 -> initDividerByTwo 1E $0
10 backToSharpOne @X -> backToSharpOne 10 @X
@% incD $0 -> checkCD @% $1
e@ backToSharpZero 1X -> backToSharpZero e@ 1X
@0 replaceWithBlanks 0@ -> backToDFromRight @0 0@
$X backToSharpOne $0 -> backToSharpOne $X $0
$C prepEraseC $0 -> prepEraseC $C $0
@% gotoMark @0 -> gotoMark @% @0
1D backToDFromLeft $& -> backToDFromLeft 1D $&
@1 restoreCD 0& -> restoreCD @1 01
1X backToSharpOne @D -> backToSharpOne 1X @D
e0 gotoLastE @@ -> dec e0 @@
1E findZero e1 -> beginCopying 1E e1
@B gotoMark e0 -> gotoMark @B e0
1E backToSharpZero @E -> backToSharpZero 1E @E
1X temp $1 -> beginCopying 1X $1
$0 backToSharpZero $E -> backToSharpZero $0 $E
$B backToDFromRight $1 -> backToDFromRight $B $1
1B FINAL -> FINAL 1 FINAL
eC searchNextBit 00 -> searchNextBit eC 00
eD eraseC 11 -> eraseC eD 1B
e% eraseC @C -> backToStart e% @X
1$ restoreCD 0& -> restoreCD 1$ 01
@1 gotoMark $0 -> gotoMark @1 $0
@@ eraseE $1 -> eraseE @@ $B
eC gotoLastE $@ -> dec eC $@
$E backToSharpOne $C -> backToSharpOne $E $C
1D findBlank eB -> FINAL 1D eB
@# searchNextBit $1 -> searchNextBit @# $1
e0 findBlank 0B -> FINAL e0 0B
$@ backToFirstC e0 -> backToFirstC $@ e0
@D backToSharpZero eX -> backToSharpZero @D eX
@1 eraseC $C -> backToStart @1 $X
eB backToSharpOne 1X -> backToSharpOne eB 1X
eD incD 10 -> checkCD eD 11
1E gotoDecC @D -> dec 1E @D
1X backToFirstC 10 -> backToFirstC 1X 10
11 backToSharpZero 0X -> backToSharpZero 11 0X
e$ searchNextBit $1 -> searchNextBit e$ $1
$B backToDFromRight eB -> backToDFromRight $B eB
e% gotoLastE 0@ -> dec e% 0@
0E replaceWithBlanks $@ -> backToDFromRight 0E $@
10 backToD 01 -> backToD 10 01
@& backToSharpZero $D -> backToSharpZero @& $D
$E checkCD $0 -> checkCD $E $0
$% gotoMark $1 -> gotoMark $% $1
@1 backToSharpOne 00 -> backToSharpOne @1 00
0E nullifier eB -> initDivider 0E eE
$B eraseE @0 -> eraseE $B @B
0& gotoDecC 1D -> dec 0& 1D
11 searchNextBit e0 -> searchNextBit 11 e0
1& backToStart 10 -> backToStart 1& 10
0# backToDFromLeft eD -> searchNextBit 0# eD
eX massErase 0@ -> eraseE eX 0@
e$ backToSharpZero $E -> backToSharpZero e$ $E
@E eraseE e1 -> eraseE @E eB
1& initDivider 00 -> initDividerByTwo 1& 00
0# eraseE @E -> prepEraseC 0# @E
1$ gotoLastE e@ -> dec 1$ e@
@E gotoMark 10 -> gotoMark @E 10
10 backToDFromRight $E -> backToDFromRight 10 $E
$1 gotoMark @1 -> gotoMark $1 @1
1% backToFirstC @0 -> backToFirstC 1% @0
goToPlaceForDivider 10 -> 10 goToPlaceForDivider
@& searchOne e1 -> backToDFromLeft @& e&
@& backToDFromRight e0 -> backToDFromRight @& e0
@D backToSharpZero 0X -> backToSharpZero @D 0X
1& backToDFromLeft @1 -> backToDFromLeft 1& @1
@# searchOne 11 -> backToDFromLeft @# 1&
0# gotoDecC e0 -> gotoDecC 0# e0
@$ backToSharpOne eD -> backToSharpOne @$ eD
e$ backToDFromRight 1B -> backToDFromRight e$ 1B
eC backToFirstC 01 -> backToFirstC eC 01
0C restoreCD e1 -> restoreCD 0C e1
@# checkCD 11 -> checkCD @# 11
@0 forwardToLastD @E -> incD @0 @E
$0 backToD @0 -> backToD $0 @0
$X backToD 11 -> backToD $X 11
@X massErase e@ -> eraseE @X e@
e# eraseC 01 -> eraseC e# 0B
0X restoreCD $& -> restoreCD 0X $1
1E checkCD e1 -> checkCD 1E e1
@$ copyOne @B -> backToSharpOne @$ @1
1$ prepEraseC 0D -> eraseC 1$ 0D
$% backToStart @1 -> backToStart $% @1
1B backToSharpZero 0X -> backToSharpZero 1B 0X
0E initDivider @0 -> initDividerByTwo 0E @0
e$ findBlank 00 -> temp e$ 00
$$ nullifier @B -> initDivider $$ @E
@C searchZero @0 -> backToDFromLeft @C @%
@B restoreCD 0& -> restoreCD @B 01
@E initDivider 10 -> initDividerByTwo @E 10
1@ incD 01 -> incD 1@ 00
e% dec @1 -> gotoMark e% @0
@D gotoLastE e@ -> dec @D e@
@% checkCD $D -> checkCD @% $D
$E findBlank $B -> FINAL $E $B
1@ gotoDecC e0 -> gotoDecC 1@ e0
@& searchNextBit @1 -> searchNextBit @& @1
0@ backToSharpZero @C -> backToSharpZero 0@ @C
1X incD 11 -> incD 1X 10
e# eraseC 11 -> eraseC e# 1B
1D backToDFromLeft 01 -> backToDFromLeft 1D 01
0@ backToSharpOne $1 -> backToSharpOne 0@ $1
0D eraseC @1 -> eraseC 0D @B
eD copyZero 1B -> backToSharpZero eD 10
$# prepEraseC e0 -> prepEraseC $# e0
11 incD $0 -> checkCD 11 $1
@@ backToSharpZero 1C -> backToSharpZero @@ 1C
$C backToSharpZero $E -> backToSharpZero $C $E
@$ eraseE $0 -> eraseE @$ $B
e& backToSharpOne @D -> backToSharpOne e& @D
eD gotoDecC e0 -> gotoDecC eD e0
@& initDivider @0 -> initDividerByTwo @& @0
0% initDivider 10 -> initDividerByTwo 0% 10
e% backToSharpZero @0 -> backToSharpZero e% @0
e0 searchZero e0 -> backToDFromLeft e0 e%
0C backToSharpOne 1X -> backToSharpOne 0C 1X
eC FINAL -> FINAL e FINAL
@1 restoreCD $& -> restoreCD @1 $1
10 backToDFromLeft 00 -> backToDFromLeft 10 00
1C nullifier eB -> initDivider 1C eE
0X eraseE 0E -> prepEraseC 0X 0E
0B copyOne 1B -> backToSharpOne 0B 11
1E backToSharpOne $C -> backToSharpOne 1E $C
0& backToDFromRight $1 -> backToDFromRight 0& $1
@$ temp @1 -> beginCopying @$ @1
0& backToDFromLeft 1% -> backToDFromLeft 0& 1%
@X gotoDecC eD -> dec @X eD
1X backToDFromRight e0 -> backToDFromRight 1X e0
e$ searchNextBit @1 -> searchNextBit e$ @1
@& gotoLastE 1@ -> dec @& 1@
1C backToSharpOne $E -> backToSharpOne 1C $E
@D eraseE @1 -> eraseE @D @B
0D gotoDecC 10 -> gotoDecC 0D 10
$# restoreCD 0D -> restoreCD $# 0D
@& searchOne $0 -> restoreCD @& $0
$% findBlank 10 -> temp $% 10
@D dec e0 -> dec @D e1
@C nullifier $B -> initDivider @C $E
1B backToDFromLeft 1% -> backToDFromLeft 1B 1%
@D backToD 10 -> backToD @D 10
0X gotoMark eE -> gotoDecC 0X eE
e& restoreCD @% -> restoreCD e& @0
11 backToD 11 -> backToD 11 11
@D initDivider $0 -> initDividerByTwo @D $0
$& initDivider @0 -> initDividerByTwo $& @0
0X searchZero $0 -> backToDFromLeft 0X $%
$1 initDividerByTwo $0 -> backToD $1 $1
$$ restoreCD $% -> restoreCD $$ $0
$% backToSharpZero $C -> backToSharpZero $% $C
$& backToDFromLeft e% -> backToDFromLeft $& e%
$1 backToDFromLeft $% -> backToDFromLeft $1 $%
0# backToFirstC 10 -> backToFirstC 0# 10
@$ backToSharpOne eC -> backToSharpOne @$ eC
$C eraseE $1 -> eraseE $C $B
1@ searchNextBit e0 -> searchNextBit 1@ e0
e1 gotoMark e0 -> gotoMark e1 e0
00 backToSharpZero 0C -> backToSharpZero 00 0C
@% backToDFromRight e0 -> backToDFromRight @% e0
@@ eraseE 01 -> eraseE @@ 0B
0E gotoLastE 0@ -> dec 0E 0@
$0 checkCD 1D -> checkCD $0 1D
@X temp $0 -> beginCopying @X $0
@B backToSharpZero eD -> backToSharpZero @B eD
$% backToDFromLeft $% -> backToDFromLeft $% $%
00 backToDFromRight 1E -> backToDFromRight 00 1E
0$ eraseE 1E -> prepEraseC 0$ 1E
0B searchOne 10 -> restoreCD 0B 10
00 searchOne @1 -> backToDFromLeft 00 @&
1% eraseC 01 -> eraseC 1% 0B
$E searchOne $1 -> backToDFromLeft $E $&
@& searchOne @1 -> backToDFromLeft @& @&
@$ gotoLastE @@ -> dec @$ @@
e$ backToSharpOne eX -> backToSharpOne e$ eX
@& goToPlaceForDivider eB -> backToFirstC @& eD
e& replaceWithBlanks 1@ -> backToDFromRight e& 1@
e1 eraseC $0 -> eraseC e1 $B
@@ findBlank 1B -> FINAL @@ 1B
@C searchOne 10 -> restoreCD @C 10
@B temp 10 -> beginCopying @B 10
1# backToDFromLeft e1 -> backToDFromLeft 1# e1
1B backToSharpOne eE -> backToSharpOne 1B eE
1& goToPlaceForDivider 0B -> backToFirstC 1& 0D
$D gotoMark 1E -> gotoDecC $D 1E
0$ backToSharpZero @X -> backToSharpZero 0$ @X
@X backToSharpZero 1C -> backToSharpZero @X 1C
e1 backToDFromLeft 0& -> backToDFromLeft e1 0&
@& findBlank $B -> FINAL @& $B
@# backToDFromRight 1B -> backToDFromRight @# 1B
11 restoreCD 1D -> restoreCD 11 1D
11 backToDFromLeft eD -> searchNextBit 11 eD
@% eraseC $1 -> eraseC @% $B
10 backToSharpOne $E -> backToSharpOne 10 $E
@1 findBlank eB -> FINAL @1 eB
e@ backToStart 11 -> backToStart e@ 11
eE eraseE @1 -> eraseE eE @B
1$ backToDFromLeft 1& -> backToDFromLeft 1$ 1&
1$ backToD $0 -> backToD 1$ $0
$C searchNextBit @0 -> searchNextBit $C @0
@D backToSharpOne e1 -> backToSharpOne @D e1
0% searchOne $0 -> restoreCD 0% $0
eE eraseC @C -> backToStart eE @X
@E restoreCD @1 -> restoreCD @E @1
0# backToStart 11 -> backToStart 0# 11
$D backToDFromRight eE -> backToDFromRight $D eE
10 gotoMark @E -> gotoDecC 10 @E
1E prepEraseC eD -> eraseC 1E eD
$0 searchNextBit e1 -> searchNextBit $0 e1
0X backToDFromLeft 11 -> backToDFromLeft 0X 11
$X checkCD $1 -> checkCD $X $1
0C prepEraseC 00 -> prepEraseC 0C 00
eX backToDFromLeft @& -> backToDFromLeft eX @&
@# restoreCD 01 -> restoreCD @# 01
$$ eraseC e1 -> eraseC $$ eB
@@ incD 01 -> incD @@ 00
$X incD 11 -> incD $X 10
0# gotoMark @E -> gotoDecC 0# @E
$@ dec @1 -> gotoMark $@ @0
0B findBlank e0 -> temp 0B e0
1D gotoDecC 00 -> gotoDecC 1D 00
$@ prepEraseC eD -> eraseC $@ eD
$& nullifier $B -> initDivider $& $E
$@ gotoDecC 1D -> dec $@ 1D
@@ backToSharpOne $1 -> backToSharpOne @@ $1
eC gotoDecC 10 -> gotoDecC eC 10
@@ checkCD @D -> checkCD @@ @D
@C backToSharpZero @0 -> backToSharpZero @C @0
@& eraseC $1 -> eraseC @& $B
$C backToFirstC 10 -> backToFirstC $C 10
0$ backToDFromRight @0 -> backToDFromRight 0$ @0
1B backToD @0 -> backToD 1B @0
@X backToSharpOne eD -> backToSharpOne @X eD
$0 backToSharpZero 1E -> backToSharpZero $0 1E
0& backToD @0 -> backToD 0& @0
$@ eraseE @0 -> eraseE $@ @B
$X backToDFromLeft e0 -> backToDFromLeft $X e0
@% backToFirstC @1 -> backToFirstC @% @1
e# findBlank 11 -> temp e# 11
0& searchOne e1 -> backToDFromLeft 0& e&
1$ restoreCD e& -> restoreCD 1$ e1
1D restoreCD @D -> restoreCD 1D @D
@@ findZero 11 -> beginCopying @@ 11
eB backToDFromLeft $& -> backToDFromLeft eB $&
0B backToDFromRight 00 -> backToDFromRight 0B 00
1D eraseE e1 -> eraseE 1D eB
$# restoreCD 1D -> restoreCD $# 1D
@& forwardToLastD 0E -> incD @& 0E
@X dec e0 -> dec @X e1
1X beginCopying 1B -> backToStart 1X 1C
@X incD @0 -> checkCD @X @1
1& searchOne e0 -> restoreCD 1& e0
$# searchOne $1 -> backToDFromLeft $# $&
1X backToSharpOne $D -> backToSharpOne 1X $D
1@ backToD @1 -> backToD 1@ @1
$D incD 01 -> incD $D 00
copyZero $X -> $X copyZero
1C backToDFromLeft @& -> backToDFromLeft 1C @&
@$ eraseC 01 -> eraseC @$ 0B
0% dec 10 -> dec 0% 11
eX searchNextBit @0 -> searchNextBit eX @0
$# backToDFromRight 10 -> backToDFromRight $# 10
1E temp 00 -> beginCopying 1E 00
0& backToDFromLeft 00 -> backToDFromLeft 0& 00
0E eraseC 10 -> eraseC 0E 1B
eB checkCD 0D -> checkCD eB 0D
0$ backToSharpZero 10 -> backToSharpZero 0$ 10
@# restoreCD @0 -> restoreCD @# @0
$X backToDFromLeft e% -> backToDFromLeft $X e%
@@ prepEraseC $1 -> prepEraseC @@ $1
e# backToSharpZero 0E -> backToSharpZero e# 0E
e$ backToDFromLeft e& -> backToDFromLeft e$ e&
e@ backToD 00 -> backToD e@ 00
eE backToDFromLeft e% -> backToDFromLeft eE e%
$# gotoDecC 11 -> gotoDecC $# 11
10 backToStart 01 -> backToStart 10 01
@@ gotoDecC $0 -> gotoDecC @@ $0
1# backToDFromLeft 0& -> backToDFromLeft 1# 0&
$# backToDFromLeft 0% -> backToDFromLeft $# 0%
$1 gotoDecC eD -> dec $1 eD
$@ gotoMark 1E -> gotoDecC $@ 1E
e& restoreCD e1 -> restoreCD e& e1
$B eraseC 11 -> eraseC $B 1B
1$ prepEraseC 01 -> prepEraseC 1$ 01
@B dec e1 -> gotoMark @B e0
@& replaceWithBlanks e@ -> backToDFromRight @& e@
1# backToDFromLeft $& -> backToDFromLeft 1# $&
0@ backToDFromRight $B -> backToDFromRight 0@ $B
$D eraseC e1 -> eraseC $D eB
e@ gotoMark eE -> gotoDecC e@ eE
e@ prepEraseC $1 -> prepEraseC e@ $1
$@ initDividerByTwo 10 -> backToD $@ 11
1% searchOne @0 -> restoreCD 1% @0
e@ backToSharpZero eE -> backToSharpZero e@ eE
0D backToD e0 -> backToD 0D e0
e& prepEraseC eD -> eraseC e& eD
0# gotoMark e1 -> gotoMark 0# e1
eC backToD 11 -> backToD eC 11
0# gotoDecC e1 -> gotoDecC 0# e1
@C backToDFromLeft 0D -> searchNextBit @C 0D
0C gotoDecC @0 -> gotoDecC 0C @0
01 dec $1 -> gotoMark 01 $0
1C backToSharpZero eD -> backToSharpZero 1C eD
$% beginCopying 1B -> backToStart $% 1C
0D restoreCD $0 -> restoreCD 0D $0
$% backToDFromRight 11 -> backToDFromRight $% 11
@# backToSharpZero @C -> backToSharpZero @# @C
1X replaceWithBlanks 0@ -> backToDFromRight 1X 0@
0B forwardToLastD 0E -> incD 0B 0E
copyZero 11 -> 11 copyZero
1& searchOne 11 -> backToDFromLeft 1& 1&
$0 eraseC $C -> backToStart $0 $X
eX backToDFromRight $0 -> backToDFromRight eX $0
$& backToSharpZero eX -> backToSharpZero $& eX
1C findZero @1 -> beginCopying 1C @1
$B checkEForZero 0B -> stop $B 0B
1C backToD $1 -> backToD 1C $1
1# backToDFromLeft @& -> backToDFromLeft 1# @&
@E backToD @0 -> backToD @E @0
@$ backToSharpZero eE -> backToSharpZero @$ eE
1E backToDFromRight @0 -> backToDFromRight 1E @0
0X backToSharpOne 0C -> backToSharpOne 0X 0C
0C gotoDecC e1 -> gotoDecC 0C e1
1@ checkCD 00 -> checkCD 1@ 00
$E gotoDecC $0 -> gotoDecC $E $0
$# copyOne $B -> backToSharpOne $# $1
restoreCD 1C -> 1C backToDAfterInc
1B backToStart e0 -> backToStart 1B e0
1E eraseC 10 -> eraseC 1E 1B
10 checkEForZero 1B -> stop 10 1B
0B backToDFromLeft $& -> backToDFromLeft 0B $&
$$ prepEraseC @0 -> prepEraseC $$ @0
@1 incD e1 -> incD @1 e0
e& searchNextBit @1 -> searchNextBit e& @1
@@ prepEraseC eD -> eraseC @@ eD
$% nullifier 0B -> initDivider $% 0E
1$ prepEraseC @1 -> prepEraseC 1$ @1
e% gotoLastE e@ -> dec e% e@
$X backToDFromRight e0 -> backToDFromRight $X e0
$% findBlank 11 -> temp $% 11
$& backToSharpOne 1D -> backToSharpOne $& 1D
eB beginCopying 0B -> backToStart eB 0C
$1 backToDFromLeft @D -> searchNextBit $1 @D
00 dec @0 -> dec 00 @1
1@ backToStart @0 -> backToStart 1@ @0
@X backToFirstC 11 -> backToFirstC @X 11
$X nullifier eB -> initDivider $X eE
0E backToSharpOne $1 -> backToSharpOne 0E $1
e% backToSharpOne $D -> backToSharpOne e% $D
e@ gotoDecC @0 -> gotoDecC e@ @0
00 checkCD 00 -> checkCD 00 00
e% checkCD 00 -> checkCD e% 00
1E backToDFromLeft $1 -> backToDFromLeft 1E $1
$& checkCD 01 -> checkCD $& 01
$1 incD e1 -> incD $1 e0
@X initDivider e0 -> initDividerByTwo @X e0
01 dec 11 -> gotoMark 01 10
@1 backToSharpOne eD -> backToSharpOne @1 eD
eD backToSharpOne 0D -> backToSharpOne eD 0D
1& eraseC eC -> backToStart 1& eX
eC eraseE $0 -> eraseE eC $B
1% searchZero e1 -> restoreCD 1% e1
e# gotoMark @1 -> gotoMark e# @1
$D temp @1 -> beginCopying $D @1
eE searchNextBit $1 -> searchNextBit eE $1
0D findBlank 1B -> FINAL 0D 1B
@E restoreCD e& -> restoreCD @E e1
createCopy $C -> $C goToPlaceForDivider
1& gotoDecC eD -> dec 1& eD
$0 eraseE @1 -> eraseE $0 @B
e& backToDFromRight @E -> backToDFromRight e& @E
00 restoreCD 1D -> restoreCD 00 1D
$1 prepEraseC 11 -> prepEraseC $1 11
$C searchOne 00 -> restoreCD $C 00
@$ backToDFromLeft @0 -> backToDFromLeft @$ @0
01 backToDFromLeft @0 -> backToDFromLeft 01 @0
@& massErase 0@ -> eraseE @& 0@
@E backToSharpOne eC -> backToSharpOne @E eC
@0 backToSharpOne eC -> backToSharpOne @0 eC
@@ dec @1 -> gotoMark @@ @0
e1 restoreCD 00 -> restoreCD e1 00
1& findBlank @B -> FINAL 1& @B
e$ backToSharpZero eC -> backToSharpZero e$ eC
0$ checkCD 0D -> checkCD 0$ 0D
$% backToDFromLeft 11 -> backToDFromLeft $% 11
@1 gotoLastE $@ -> dec @1 $@
@& eraseC $C -> backToStart @& $X
$1 forwardToLastD eE -> incD $1 eE
@C checkEForZero eB -> stop @C eB
0& backToD $0 -> backToD 0& $0
0B backToSharpOne e1 -> backToSharpOne 0B e1
$X gotoDecC 00 -> gotoDecC $X 00
e1 incD e0 -> checkCD e1 e1
eE backToDFromRight @1 -> backToDFromRight eE @1
@D restoreCD @D -> restoreCD @D @D
1D gotoDecC 1D -> dec 1D 1D
e$ backToDFromRight $0 -> backToDFromRight e$ $0
$X searchZero $0 -> backToDFromLeft $X $%
$1 backToDFromLeft $& -> backToDFromLeft $1 $&
0@ copyZero $B -> backToSharpZero 0@ $0
eD gotoMark @0 -> gotoMark eD @0
@E dec e0 -> dec @E e1
$$ massErase @@ -> eraseE $$ @@
$$ backToSharpOne @C -> backToSharpOne $$ @C
@$ backToFirstC $0 -> backToFirstC @$ $0
eC backToStart $1 -> backToStart eC $1
0& searchZero 01 -> restoreCD 0& 01
eC prepEraseC $D -> eraseC eC $D
e# backToSharpOne 00 -> backToSharpOne e# 00
eE prepEraseC e0 -> prepEraseC eE e0
$@ backToDFromRight $E -> backToDFromRight $@ $E
1B checkEForZero 0B -> stop 1B 0B
1B searchZero e0 -> backToDFromLeft 1B e%
$E copyZero 1B -> backToSharpZero $E 10
0B temp e0 -> beginCopying 0B e0
@# searchZero 01 -> restoreCD @# 01
$1 dec $1 -> gotoMark $1 $0
1& backToDFromLeft e0 -> backToDFromLeft 1& e0
@0 backToDFromLeft $& -> backToDFromLeft @0 $&
0D searchNextBit 10 -> searchNextBit 0D 10
e1 backToSharpZero 11 -> backToSharpZero e1 11
$% beginCopying 0B -> backToStart $% 0C
@B findZero 01 -> beginCopying @B 01
1C nullifier $B -> initDivider 1C $E
e# backToSharpZero $D -> backToSharpZero e# $D
0& restoreCD e1 -> restoreCD 0& e1
eqCD 10 -> 1% checkZeroD
@X backToDFromLeft $0 -> backToDFromLeft @X $0
$% findBlank @0 -> temp $% @0
0E restoreCD eD -> restoreCD 0E eD
0% gotoMark $0 -> gotoMark 0% $0
@B backToD 00 -> backToD @B 00
e$ incD @0 -> checkCD e$ @1
00 prepEraseC $0 -> prepEraseC 00 $0
$C gotoDecC 00 -> gotoDecC $C 00
eC dec 10 -> dec eC 11
eX incD $1 -> incD eX $0
eB checkCD @0 -> checkCD eB @0
@B gotoDecC $0 -> gotoDecC @B $0
@C backToSharpOne $C -> backToSharpOne @C $C
$X restoreCD $% -> restoreCD $X $0
0D checkEForZero $B -> stop 0D $B
eD massErase e@ -> eraseE eD e@
@C gotoLastE @@ -> dec @C @@
$@ restoreCD $0 -> restoreCD $@ $0
e% backToDFromLeft e& -> backToDFromLeft e% e&
$$ backToStart 00 -> backToStart $$ 00
00 incD e0 -> checkCD 00 e1
$@ copyZero $B -> backToSharpZero $@ $0
@& dec $1 -> gotoMark @& $0
eD eraseC 0C -> backToStart eD 0X
e@ checkCD 11 -> checkCD e@ 11
e# temp 01 -> beginCopying e# 01
$B eraseC e0 -> eraseC $B eB
eX dec 10 -> dec eX 11
0D checkCD 0D -> checkCD 0D 0D
@D findZero e1 -> beginCopying @D e1
0$ backToSharpOne 0C -> backToSharpOne 0$ 0C
1% dec 11 -> gotoMark 1% 10
eE searchNextBit @1 -> searchNextBit eE @1
1% massErase @@ -> eraseE 1% @@
1& searchNextBit $1 -> searchNextBit 1& $1
$1 searchNextBit $0 -> searchNextBit $1 $0
@1 gotoDecC 1D -> dec @1 1D
eE checkEForZero 0B -> stop eE 0B
@B eraseC 00 -> eraseC @B 0B
$E backToSharpZero 0X -> backToSharpZero $E 0X
0@ checkEForZero @B -> stop 0@ @B
@E backToSharpZero @0 -> backToSharpZero @E @0
1@ eraseC eC -> backToStart 1@ eX
$B backToSharpOne @0 -> backToSharpOne $B @0
e& backToSharpOne eC -> backToSharpOne e& eC
$@ backToDFromLeft eD -> searchNextBit $@ eD
eC backToSharpZero 0X -> backToSharpZero eC 0X
$& backToSharpOne $E -> backToSharpOne $& $E
e$ dec @0 -> dec e$ @1
$% backToSharpZero 00 -> backToSharpZero $% 00
$% backToSharpOne 10 -> backToSharpOne $% 10
$$ replaceWithBlanks 0@ -> backToDFromRight $$ 0@
$& checkCD 1D -> checkCD $& 1D
e1 dec @0 -> dec e1 @1
eC prepEraseC @D -> eraseC eC @D
$0 forwardToLastD 1E -> incD $0 1E
eX backToStart 01 -> backToStart eX 01
@E backToSharpOne $X -> backToSharpOne @E $X
0# copyOne 1B -> backToSharpOne 0# 11
0@ gotoDecC @0 -> gotoDecC 0@ @0
11 initDividerByTwo $0 -> backToD 11 $1
e& backToSharpZero @C -> backToSharpZero e& @C
01 backToD $0 -> backToD 01 $0
$C backToFirstC @1 -> backToFirstC $C @1
e0 backToSharpOne $0 -> backToSharpOne e0 $0
$C searchNextBit e1 -> searchNextBit $C e1
@# backToSharpOne eX -> backToSharpOne @# eX
@# dec @0 -> dec @# @1
checkEForZero @0 -> @0 checkEForZero
0% backToSharpZero @X -> backToSharpZero 0% @X
0D copyZero @B -> backToSharpZero 0D @0
0% forwardToLastD $E -> incD 0% $E
eB backToSharpOne eX -> backToSharpOne eB eX
$X restoreCD e% -> restoreCD $X e0
e& searchNextBit $0 -> searchNextBit e& $0
11 searchOne $0 -> restoreCD 11 $0
eC findBlank 1B -> FINAL eC 1B
1D backToDFromLeft @% -> backToDFromLeft 1D @%
@& forwardToLastD 1E -> incD @& 1E
@D eraseC e1 -> eraseC @D eB
0C gotoLastE 0@ -> dec 0C 0@
1@ checkCD @0 -> checkCD 1@ @0
0C backToSharpZero $0 -> backToSharpZero 0C $0
eD findZero e1 -> beginCopying eD e1
eE incD @0 -> checkCD eE @1
00 backToDFromLeft $0 -> backToDFromLeft 00 $0
0D checkCD @1 -> checkCD 0D @1
e% backToDFromRight $E -> backToDFromRight e% $E
01 backToStart 01 -> backToStart 01 01
@X eraseC e1 -> eraseC @X eB
01 checkCD 01 -> checkCD 01 01
$B backToSharpZero e0 -> backToSharpZero $B e0
1$ restoreCD @1 -> restoreCD 1$ @1
1B backToDFromRight e1 -> backToDFromRight 1B e1
@D checkEForZero 1B -> stop @D 1B
$& restoreCD @0 -> restoreCD $& @0
e& searchNextBit e0 -> searchNextBit e& e0
0C searchZero 00 -> backToDFromLeft 0C 0%
0% gotoDecC @0 -> gotoDecC 0% @0
@B backToFirstC @1 -> backToFirstC @B @1
eX searchNextBit 10 -> searchNextBit eX 10
0B gotoLastE $@ -> dec 0B $@
1$ temp 11 -> beginCopying 1$ 11
$X backToDFromLeft @1 -> backToDFromLeft $X @1
0@ backToStart e1 -> backToStart 0@ e1
replaceWithBlanks $0 -> $B replaceWithBlanks
checkOneD 0D -> 0D searchOne
@@ restoreCD 1& -> restoreCD @@ 11
e1 backToSharpOne 1C -> backToSharpOne e1 1C
$E restoreCD 01 -> restoreCD $E 01
@@ backToSharpZero $0 -> backToSharpZero @@ $0
0C searchNextBit 01 -> searchNextBit 0C 01
$0 restoreCD 00 -> restoreCD $0 00
$& searchZero $0 -> backToDFromLeft $& $%
1D prepEraseC 0D -> eraseC 1D 0D
@& backToD 00 -> backToD @& 00
$C backToDFromRight eB -> backToDFromRight $C eB
0$ backToDFromLeft e% -> backToDFromLeft 0$ e%
@& checkCD 10 -> checkCD @& 10
0% backToFirstC 11 -> backToFirstC 0% 11
1@ backToDFromLeft @& -> backToDFromLeft 1@ @&
$# restoreCD 00 -> restoreCD $# 00
$C beginCopying 1B -> backToStart $C 1C
e0 backToDFromLeft e& -> backToDFromLeft e0 e&
1$ backToDFromRight 11 -> backToDFromRight 1$ 11
eD backToDFromRight eB -> backToDFromRight eD eB
0E backToFirstC 10 -> backToFirstC 0E 10
0% initDividerByTwo @0 -> backToD 0% @1
$1 backToDFromRight $E -> backToDFromRight $1 $E
e& restoreCD e% -> restoreCD e& e0
eC backToSharpOne 1X -> backToSharpOne eC 1X
@B findBlank 00 -> temp @B 00
0& backToDFromLeft 0D -> searchNextBit 0& 0D
e# gotoDecC 1D -> dec e# 1D
$C backToSharpZero eC -> backToSharpZero $C eC
1& backToSharpOne eX -> backToSharpOne 1& eX
$@ beginCopying $B -> backToStart $@ $C
1B backToStart 11 -> backToStart 1B 11
@C dec $0 -> dec @C $1
1C searchZero 01 -> restoreCD 1C 01
@0 backToSharpOne 0C -> backToSharpOne @0 0C
$# backToSharpZero eX -> backToSharpZero $# eX
1& checkCD eD -> checkCD 1& eD
checkZeroD $D -> $D searchZero
$X searchZero 10 -> backToDFromLeft $X 1%
$% temp $1 -> beginCopying $% $1
1X searchNextBit 11 -> searchNextBit 1X 11
eD backToSharpZero 0X -> backToSharpZero eD 0X
$$ searchNextBit 00 -> searchNextBit $$ 00
$D checkCD $0 -> checkCD $D $0
11 findBlank 00 -> temp 11 00
e% eraseC 01 -> eraseC e% 0B
$& beginCopying eB -> backToStart $& eC
1% backToSharpOne 00 -> backToSharpOne 1% 00
eqCD $1 -> $& checkOneD
$D restoreCD @0 -> restoreCD $D @0
$D goToPlaceForDivider 1B -> backToFirstC $D 1D
$X backToD 10 -> backToD $X 10
e0 copyOne 1B -> backToSharpOne e0 11
e1 backToDFromLeft 01 -> backToDFromLeft e1 01
eB checkCD eD -> checkCD eB eD
$C prepEraseC 1D -> eraseC $C 1D
10 gotoMark 10 -> gotoMark 10 10
1E searchOne 01 -> backToDFromLeft 1E 0&
@# forwardToLastD @E -> incD @# @E
e$ searchNextBit e1 -> searchNextBit e$ e1
@1 massErase $@ -> eraseE @1 $@
e% backToD 10 -> backToD e% 10
@$ dec @1 -> gotoMark @$ @0
e& initDividerByTwo $0 -> backToD e& $1
0B backToSharpOne 1E -> backToSharpOne 0B 1E
@1 backToDFromLeft $0 -> backToDFromLeft @1 $0
e& checkCD @0 -> checkCD e& @0
$X incD e1 -> incD $X e0
eX temp @0 -> beginCopying eX @0
10 backToDFromLeft 11 -> backToDFromLeft 10 11
1# eraseE 00 -> eraseE 1# 0B
$0 nullifier 1B -> initDivider $0 1E
@& backToSharpOne 1C -> backToSharpOne @& 1C
e1 backToDFromLeft 1& -> backToDFromLeft e1 1&
1E backToSharpZero 1C -> backToSharpZero 1E 1C
eB checkCD 01 -> checkCD eB 01
@0 gotoDecC eD -> dec @0 eD
@$ eraseC 10 -> eraseC @$ 1B
0@ searchOne @0 -> restoreCD 0@ @0
$D backToSharpZero e1 -> backToSharpZero $D e1
1# backToDFromLeft $0 -> backToDFromLeft 1# $0
1D gotoMark @0 -> gotoMark 1D @0
0X backToDFromRight @1 -> backToDFromRight 0X @1
@# backToStart $1 -> backToStart @# $1
@B restoreCD @0 -> restoreCD @B @0
$X backToDFromRight $E -> backToDFromRight $X $E
$B restoreCD 1& -> restoreCD $B 11
@D backToFirstC e0 -> backToFirstC @D e0
e& backToSharpZero eC -> backToSharpZero e& eC
0B findZero 01 -> beginCopying 0B 01
e& backToFirstC 01 -> backToFirstC e& 01
0X backToSharpOne $C -> backToSharpOne 0X $C
1E prepEraseC e0 -> prepEraseC 1E e0
$X prepEraseC @1 -> prepEraseC $X @1
@0 backToDFromLeft $% -> backToDFromLeft @0 $%
00 backToSharpZero $D -> backToSharpZero 00 $D
eX gotoDecC 11 -> gotoDecC eX 11
$# temp 00 -> beginCopying $# 00
e$ backToSharpOne $0 -> backToSharpOne e$ $0
0D backToSharpZero $1 -> backToSharpZero 0D $1
0E initDividerByTwo e0 -> backToD 0E e1
e# findBlank $0 -> temp e# $0
$& restoreCD @D -> restoreCD $& @D
e@ backToStart e1 -> backToStart e@ e1
0& backToSharpZero 1X -> backToSharpZero 0& 1X
00 replaceWithBlanks $@ -> backToDFromRight 00 $@
e& eraseC $0 -> eraseC e& $B
1@ restoreCD 0D -> restoreCD 1@ 0D
01 checkCD e0 -> checkCD 01 e0
0X incD @0 -> checkCD 0X @1
00 backToStart e0 -> backToStart 00 e0
0E backToSharpOne e1 -> backToSharpOne 0E e1
0% backToSharpOne eC -> backToSharpOne 0% eC
@% checkEForZero @B -> stop @% @B
1$ backToSharpZero 0C -> backToSharpZero 1$ 0C
$B backToSharpZero @0 -> backToSharpZero $B @0
0$ backToSharpOne @E -> backToSharpOne 0$ @E
$$ backToSharpOne 1X -> backToSharpOne $$ 1X
10 eraseE 00 -> eraseE 10 0B
eX backToSharpOne e1 -> backToSharpOne eX e1
1C backToDFromRight @B -> backToDFromRight 1C @B
eB eraseE $1 -> eraseE eB $B
eX backToD 11 -> backToD eX 11
e& searchOne e0 -> restoreCD e& e0
0B searchNextBit e0 -> searchNextBit 0B e0
e$ backToSharpOne 1D -> backToSharpOne e$ 1D
1E restoreCD 1% -> restoreCD 1E 10
0B backToSharpZero 1D -> backToSharpZero 0B 1D
@# gotoMark @1 -> gotoMark @# @1
$% backToSharpZero 01 -> backToSharpZero $% 01
1C eraseC @1 -> eraseC 1C @B
e% initDivider $0 -> initDividerByTwo e% $0
eE gotoMark $1 -> gotoMark eE $1
eC backToSharpOne 0X -> backToSharpOne eC 0X
0D backToSharpOne 00 -> backToSharpOne 0D 00
copyOne 1C -> 1C copyOne
$@ goToPlaceForDivider eB -> backToFirstC $@ eD
$B searchNextBit $0 -> searchNextBit $B $0
@$ restoreCD 1D -> restoreCD @$ 1D
e$ prepEraseC eD -> eraseC e$ eD
1X backToDFromRight @B -> backToDFromRight 1X @B
0C checkCD @1 -> checkCD 0C @1
0E checkCD @0 -> checkCD 0E @0
e0 findZero 01 -> beginCopying e0 01
eE searchOne @0 -> restoreCD eE @0
@$ backToDFromRight 11 -> backToDFromRight @$ 11
$C backToDFromRight 00 -> backToDFromRight $C 00
@% eraseC 11 -> eraseC @% 1B
$C findBlank 1B -> FINAL $C 1B
01 prepEraseC $0 -> prepEraseC 01 $0
eC initDivider $0 -> initDividerByTwo eC $0
0$ gotoMark 10 -> gotoMark 0$ 10
@1 goToPlaceForDivider eB -> backToFirstC @1 eD
0E backToSharpZero $X -> backToSharpZero 0E $X
@% findBlank @0 -> temp @% @0
e0 gotoDecC 01 -> gotoDecC e0 01
$D eraseE 00 -> eraseE $D 0B
00 gotoDecC e1 -> gotoDecC 00 e1
1$ temp 10 -> beginCopying 1$ 10
@& eraseC $0 -> eraseC @& $B
eE backToSharpOne @X -> backToSharpOne eE @X
$% backToDFromLeft 01 -> backToDFromLeft $% 01
1C gotoLastE 0@ -> dec 1C 0@
@1 backToSharpZero $1 -> backToSharpZero @1 $1
1$ eraseE $0 -> eraseE 1$ $B
$C restoreCD 11 -> restoreCD $C 11
$X eraseE 0E -> prepEraseC $X 0E
eB backToSharpZero 0C -> backToSharpZero eB 0C
1X checkCD 1D -> checkCD 1X 1D
eD eraseE @1 -> eraseE eD @B
1B backToDFromLeft @& -> backToDFromLeft 1B @&
@$ backToFirstC 11 -> backToFirstC @$ 11
e1 backToSharpOne @0 -> backToSharpOne e1 @0
$# backToDFromLeft 00 -> backToDFromLeft $# 00
@B checkCD $0 -> checkCD @B $0
1X temp e0 -> beginCopying 1X e0
@E restoreCD 01 -> restoreCD @E 01
00 eraseC $C -> backToStart 00 $X
$@ backToSharpOne eC -> backToSharpOne $@ eC
10 backToSharpZero e1 -> backToSharpZero 10 e1
$X backToDFromLeft 1% -> backToDFromLeft $X 1%
1@ backToDFromRight eB -> backToDFromRight 1@ eB
@D backToDFromRight e0 -> backToDFromRight @D e0
0# prepEraseC 11 -> prepEraseC 0# 11
0D goToPlaceForDivider @B -> backToFirstC 0D @D
1D checkCD $D -> checkCD 1D $D
$& forwardToLastD 1E -> incD $& 1E
eX restoreCD $% -> restoreCD eX $0
0$ findBlank $B -> FINAL 0$ $B
1$ gotoDecC eD -> dec 1$ eD
@@ checkCD @0 -> checkCD @@ @0
1D prepEraseC $D -> eraseC 1D $D
eC searchOne @0 -> restoreCD eC @0
@C temp e1 -> beginCopying @C e1
@D incD 10 -> checkCD @D 11
0% backToDFromLeft 0& -> backToDFromLeft 0% 0&
@E nullifier @B -> initDivider @E @E
0X copyOne 1B -> backToSharpOne 0X 11
1# backToFirstC 01 -> backToFirstC 1# 01
eD backToDFromRight 01 -> backToDFromRight eD 01
$B gotoDecC 10 -> gotoDecC $B 10
eX replaceWithBlanks e@ -> backToDFromRight eX e@
1X eraseE e0 -> eraseE 1X eB
@C prepEraseC @D -> eraseC @C @D
0# searchNextBit e1 -> searchNextBit 0# e1
$D backToSharpZero $D -> backToSharpZero $D $D
@C backToSharpOne 1C -> backToSharpOne @C 1C
1D initDivider e0 -> initDividerByTwo 1D e0
@& prepEraseC 10 -> prepEraseC @& 10
@@ copyOne eB -> backToSharpOne @@ e1
eX backToDFromLeft eD -> searchNextBit eX eD
1# prepEraseC @D -> eraseC 1# @D
01 gotoMark 0E -> gotoDecC 01 0E
eB gotoMark 1E -> gotoDecC eB 1E
backToSharpOne $# -> $1 createCopy
$B gotoMark $E -> gotoDecC $B $E
@& replaceWithBlanks @@ -> backToDFromRight @& @@
eE backToSharpOne @D -> backToSharpOne eE @D
0E eraseE 10 -> eraseE 0E 1B
0# backToSharpOne 1C -> backToSharpOne 0# 1C
$D dec 10 -> dec $D 11
@B findZero e1 -> beginCopying @B e1
e# backToSharpOne $C -> backToSharpOne e# $C
eC backToDFromLeft $& -> backToDFromLeft eC $&
$0 findBlank e0 -> temp $0 e0
10 backToD e1 -> backToD 10 e1
0B backToSharpOne $D -> backToSharpOne 0B $D
e& searchZero 11 -> restoreCD e& 11
1$ eraseE @0 -> eraseE 1$ @B
$% checkEForZero 1B -> stop $% 1B
0C findBlank $1 -> temp 0C $1
10 initDividerByTwo 10 -> backToD 10 11
$X backToDFromLeft 1D -> searchNextBit $X 1D
0# backToSharpOne 1D -> backToSharpOne 0# 1D
1X checkCD e1 -> checkCD 1X e1
@B findBlank 0B -> FINAL @B 0B
0@ checkCD 01 -> checkCD 0@ 01
eX findBlank e0 -> temp eX e0
0B checkCD 00 -> checkCD 0B 00
e& replaceWithBlanks @@ -> backToDFromRight e& @@
@@ backToSharpOne 0C -> backToSharpOne @@ 0C
@1 backToDFromLeft 0% -> backToDFromLeft @1 0%
@$ backToSharpZero @E -> backToSharpZero @$ @E
eD prepEraseC $D -> eraseC eD $D
@1 backToSharpOne 10 -> backToSharpOne @1 10
1C backToSharpOne 00 -> backToSharpOne 1C 00
e0 nullifier 0B -> initDivider e0 0E
@C backToFirstC 00 -> backToFirstC @C 00
e% findBlank e1 -> temp e% e1
01 backToDFromRight eE -> backToDFromRight 01 eE
10 backToSharpOne $X -> backToSharpOne 10 $X
@@ gotoDecC @D -> dec @@ @D
$0 dec @1 -> gotoMark $0 @0
eE backToDFromLeft $D -> searchNextBit eE $D
1# findBlank @1 -> temp 1# @1
eD replaceWithBlanks @@ -> backToDFromRight eD @@
@X backToDFromLeft @0 -> backToDFromLeft @X @0
1& searchNextBit @1 -> searchNextBit 1& @1
@0 backToSharpOne 00 -> backToSharpOne @0 00
@# backToStart 01 -> backToStart @# 01
@D backToDFromLeft 00 -> backToDFromLeft @D 00
@1 eraseE @0 -> eraseE @1 @B
1# restoreCD e% -> restoreCD 1# e0
1# searchOne 01 -> backToDFromLeft 1# 0&
moveToE $0 -> $0 moveToE
@$ copyZero 1B -> backToSharpZero @$ 10
0@ restoreCD 1D -> restoreCD 0@ 1D
1% backToSharpOne @C -> backToSharpOne 1% @C
e# gotoLastE 1@ -> dec e# 1@
1X temp e1 -> beginCopying 1X e1
@1 restoreCD @0 -> restoreCD @1 @0
@1 backToDFromLeft @1 -> backToDFromLeft @1 @1
11 backToDFromLeft $1 -> backToDFromLeft 11 $1
$$ massErase $@ -> eraseE $$ $@
10 checkCD e0 -> checkCD 10 e0
@& findBlank 10 -> temp @& 10
eE forwardToLastD 0E -> incD eE 0E
@% backToDFromLeft 0% -> backToDFromLeft @% 0%
@C backToSharpZero 01 -> backToSharpZero @C 01
0X eraseC $0 -> eraseC 0X $B
eB backToDFromLeft @1 -> backToDFromLeft eB @1
0E restoreCD 10 -> restoreCD 0E 10
0& dec 00 -> dec 0& 01
eX dec 01 -> gotoMark eX 00
0# backToDFromLeft @D -> searchNextBit 0# @D
1# nullifier 0B -> initDivider 1# 0E
@D backToSharpOne 0E -> backToSharpOne @D 0E
$C dec 01 -> gotoMark $C 00
0B backToSharpOne @X -> backToSharpOne 0B @X
1@ backToSharpOne 0D -> backToSharpOne 1@ 0D
1C gotoDecC 1D -> dec 1C 1D
$C backToSharpOne 1D -> backToSharpOne $C 1D
$X backToSharpZero 11 -> backToSharpZero $X 11
e$ backToStart 11 -> backToStart e$ 11
e1 restoreCD @& -> restoreCD e1 @1
0C eraseE $E -> prepEraseC 0C $E
0% eraseE @E -> prepEraseC 0% @E
1E backToDFromRight $B -> backToDFromRight 1E $B
@E massErase e@ -> eraseE @E e@
1# backToSharpOne eC -> backToSharpOne 1# eC
@& dec e0 -> dec @& e1
0E backToDFromRight $B -> backToDFromRight 0E $B
$D gotoDecC $D -> dec $D $D
$B prepEraseC e1 -> prepEraseC $B e1
10 backToSharpOne 0C -> backToSharpOne 10 0C
$0 prepEraseC 0D -> eraseC $0 0D
eD searchZero @1 -> restoreCD eD @1
e& gotoMark 01 -> gotoMark e& 01
0C gotoDecC 10 -> gotoDecC 0C 10
eD backToDFromRight 10 -> backToDFromRight eD 10
@@ gotoMark 10 -> gotoMark @@ 10
eB restoreCD 0& -> restoreCD eB 01
$% dec @0 -> dec $% @1
$$ initDivider 00 -> initDividerByTwo $$ 00
11 backToD 10 -> backToD 11 10
11 eraseE e1 -> eraseE 11 eB
@# dec 10 -> dec @# 11
1$ gotoMark $E -> gotoDecC 1$ $E
@0 incD 11 -> incD @0 10
$D findBlank $0 -> temp $D $0
0D backToStart @1 -> backToStart 0D @1
1B backToSharpZero eD -> backToSharpZero 1B eD
0& backToStart e0 -> backToStart 0& e0
e0 searchNextBit e0 -> searchNextBit e0 e0
$% eraseC $1 -> eraseC $% $B
eB backToSharpZero @0 -> backToSharpZero eB @0
1E searchZero 11 -> restoreCD 1E 11
$D searchOne $1 -> backToDFromLeft $D $&
$C beginCopying eB -> backToStart $C eC
0& temp 01 -> beginCopying 0& 01
1% incD 00 -> checkCD 1% 01
0% incD e0 -> checkCD 0% e1
1# backToDFromRight 1B -> backToDFromRight 1# 1B
@X massErase 0@ -> eraseE @X 0@
$B gotoLastE e@ -> dec $B e@
1D dec 01 -> gotoMark 1D 00
1# eraseE @0 -> eraseE 1# @B
$E gotoLastE 0@ -> dec $E 0@
0@ forwardToLastD @E -> incD 0@ @E
1% backToStart 00 -> backToStart 1% 00
eE massErase 0@ -> eraseE eE 0@
0C backToSharpOne eC -> backToSharpOne 0C eC
eE backToSharpZero 01 -> backToSharpZero eE 01
e@ backToDFromLeft 00 -> backToDFromLeft e@ 00
eD backToDFromRight $B -> backToDFromRight eD $B
eX initDividerByTwo 10 -> backToD eX 11
0& prepEraseC 01 -> prepEraseC 0& 01
e0 prepEraseC $D -> eraseC e0 $D
e& eraseE @E -> prepEraseC e& @E
@E searchOne 11 -> backToDFromLeft @E 1&
e0 gotoDecC 11 -> gotoDecC e0 11
e# backToDFromLeft $1 -> backToDFromLeft e# $1
e@ dec 00 -> dec e@ 01
$1 restoreCD 1D -> restoreCD $1 1D
@& backToDFromLeft 01 -> backToDFromLeft @& 01
e& goToPlaceForDivider 0B -> backToFirstC e& 0D
11 gotoLastE e@ -> dec 11 e@
0D eraseC @0 -> eraseC 0D @B
1& restoreCD $D -> restoreCD 1& $D
eC copyZero @B -> backToSharpZero eC @0
@# backToStart e1 -> backToStart @# e1
$E backToDFromLeft 0& -> backToDFromLeft $E 0&
eE backToD $0 -> backToD eE $0
0E backToDFromLeft e0 -> backToDFromLeft 0E e0
e$ restoreCD 00 -> restoreCD e$ 00
0& copyOne $B -> backToSharpOne 0& $1
@B dec $0 -> dec @B $1
@D copyOne 1B -> backToSharpOne @D 11
$& goToPlaceForDivider 1B -> backToFirstC $& 1D
e0 eraseC $0 -> eraseC e0 $B
0C backToSharpZero 0D -> backToSharpZero 0C 0D
$% incD @1 -> incD $% @0
e# backToD 10 -> backToD e# 10
e& temp 01 -> beginCopying e& 01
1C dec 11 -> gotoMark 1C 10
1B gotoMark e1 -> gotoMark 1B e1
0$ findBlank 0B -> FINAL 0$ 0B
$X eraseE $E -> prepEraseC $X $E
e0 backToDFromLeft $D -> searchNextBit e0 $D
e1 findBlank $B -> FINAL e1 $B
$C restoreCD $% -> restoreCD $C $0
e$ gotoMark 1E -> gotoDecC e$ 1E
gotoMark eC -> eC ifZero
FINAL eX -> FINAL e FINAL
1E backToDFromLeft @1 -> backToDFromLeft 1E @1
@E searchZero 01 -> restoreCD @E 01
0B backToD @1 -> backToD 0B @1
$% gotoDecC $0 -> gotoDecC $% $0
@$ backToSharpZero 11 -> backToSharpZero @$ 11
0# searchNextBit 11 -> searchNextBit 0# 11
0% backToStart e1 -> backToStart 0% e1
$@ restoreCD 01 -> restoreCD $@ 01
$E backToStart e0 -> backToStart $E e0
1# prepEraseC 11 -> prepEraseC 1# 11
e$ backToFirstC $1 -> backToFirstC e$ $1
0D checkCD 01 -> checkCD 0D 01
01 backToDFromLeft $D -> searchNextBit 01 $D
1& backToSharpZero 1E -> backToSharpZero 1& 1E
@# searchNextBit 00 -> searchNextBit @# 00
e& gotoDecC 0D -> dec e& 0D
@B backToSharpZero 01 -> backToSharpZero @B 01
e@ searchNextBit 10 -> searchNextBit e@ 10
$& prepEraseC 11 -> prepEraseC $& 11
eC backToD @0 -> backToD eC @0
@B forwardToLastD $E -> incD @B $E
A1 -> $$ start A2
eB restoreCD e0 -> restoreCD eB e0
0& temp e0 -> beginCopying 0& e0
0X backToSharpZero @C -> backToSharpZero 0X @C
0# gotoMark $1 -> gotoMark 0# $1
@D eraseC @0 -> eraseC @D @B
$# backToDFromRight @1 -> backToDFromRight $# @1
1# eraseC 0C -> backToStart 1# 0X
0& backToSharpZero 0E -> backToSharpZero 0& 0E
0% backToDFromRight eB -> backToDFromRight 0% eB
$C gotoDecC $D -> dec $C $D
$# dec $0 -> dec $# $1
$@ findBlank e1 -> temp $@ e1
00 restoreCD 1& -> restoreCD 00 11
@X backToSharpZero $X -> backToSharpZero @X $X
0X backToFirstC e0 -> backToFirstC 0X e0
e1 backToDFromRight 0E -> backToDFromRight e1 0E
0C backToSharpZero $1 -> backToSharpZero 0C $1
@# copyOne 1B -> backToSharpOne @# 11
@E searchOne 00 -> restoreCD @E 00
@1 searchOne @0 -> restoreCD @1 @0
0C searchNextBit @1 -> searchNextBit 0C @1
0C nullifier eB -> initDivider 0C eE
$X eraseC @1 -> eraseC $X @B
eE backToSharpZero e0 -> backToSharpZero eE e0
eX gotoMark @0 -> gotoMark eX @0
eX backToDFromLeft 11 -> backToDFromLeft eX 11
11 backToDFromRight $E -> backToDFromRight 11 $E
0C nullifier $B -> initDivider 0C $E
$E eraseE 0E -> prepEraseC $E 0E
$@ backToD @0 -> backToD $@ @0
eB backToDFromRight @E -> backToDFromRight eB @E
e1 backToFirstC 00 -> backToFirstC e1 00
e# searchZero $0 -> backToDFromLeft e# $%
@E massErase $@ -> eraseE @E $@
$C backToSharpOne $C -> backToSharpOne $C $C
1D backToDFromLeft 0D -> searchNextBit 1D 0D
$C searchNextBit $0 -> searchNextBit $C $0
$C backToDFromRight @B -> backToDFromRight $C @B
0C checkCD @0 -> checkCD 0C @0
@% backToDFromLeft 0D -> searchNextBit @% 0D
e0 backToDFromRight $B -> backToDFromRight e0 $B
0@ backToSharpOne $C -> backToSharpOne 0@ $C
$# backToDFromLeft $1 -> backToDFromLeft $# $1
@$ backToDFromRight @B -> backToDFromRight @$ @B
0& gotoDecC @0 -> gotoDecC 0& @0
@C searchZero 00 -> backToDFromLeft @C 0%
e0 incD @1 -> incD e0 @0
0$ backToSharpZero @C -> backToSharpZero 0$ @C
0@ backToSharpZero 0E -> backToSharpZero 0@ 0E
0$ restoreCD 1& -> restoreCD 0$ 11
$$ backToSharpOne 0C -> backToSharpOne $$ 0C
1$ backToSharpOne @E -> backToSharpOne 1$ @E
0D restoreCD 1& -> restoreCD 0D 11
eE prepEraseC 1D -> eraseC eE 1D
@@ gotoDecC @1 -> gotoDecC @@ @1
01 prepEraseC $1 -> prepEraseC 01 $1
e@ backToSharpOne 0D -> backToSharpOne e@ 0D
0X searchNextBit @0 -> searchNextBit 0X @0
@X gotoMark $E -> gotoDecC @X $E
$@ initDividerByTwo e0 -> backToD $@ e1
e# restoreCD @0 -> restoreCD e# @0
0& initDividerByTwo $0 -> backToD 0& $1
1$ backToSharpOne $1 -> backToSharpOne 1$ $1
1# backToD $1 -> backToD 1# $1
0D eraseC 11 -> eraseC 0D 1B
@# eraseC @0 -> eraseC @# @B
e@ dec $1 -> gotoMark e@ $0
e# eraseC e1 -> eraseC e# eB
1# findBlank 01 -> temp 1# 01
$& initDividerByTwo e0 -> backToD $& e1
@1 initDivider @0 -> initDividerByTwo @1 @0
1@ eraseC @0 -> eraseC 1@ @B
eX backToDFromLeft 1& -> backToDFromLeft eX 1&
$D gotoMark $E -> gotoDecC $D $E
e$ backToStart 01 -> backToStart e$ 01
@@ gotoLastE @@ -> dec @@ @@
1C dec $0 -> dec 1C $1
1& gotoDecC 0D -> dec 1& 0D
@& backToSharpZero 00 -> backToSharpZero @& 00
@D backToDFromLeft 1& -> backToDFromLeft @D 1&
e% backToDFromRight e0 -> backToDFromRight e% e0
@0 findZero e1 -> beginCopying @0 e1
e& massErase $@ -> eraseE e& $@
@0 incD e0 -> checkCD @0 e1
1X eraseC @0 -> eraseC 1X @B
11 copyOne $B -> backToSharpOne 11 $1
1B restoreCD @1 -> restoreCD 1B @1
eE prepEraseC e1 -> prepEraseC eE e1
@X copyZero eB -> backToSharpZero @X e0
0C checkCD 1D -> checkCD 0C 1D
0C gotoDecC @1 -> gotoDecC 0C @1
0E backToDFromLeft $1 -> backToDFromLeft 0E $1
$1 findBlank eB -> FINAL $1 eB
@1 findBlank $1 -> temp @1 $1
$C checkEForZero eB -> stop $C eB
eD restoreCD 0% -> restoreCD eD 00
e# prepEraseC $1 -> prepEraseC e# $1
0D backToDFromRight 0B -> backToDFromRight 0D 0B
$E findZero 01 -> beginCopying $E 01
@@ restoreCD @0 -> restoreCD @@ @0
searchOne @% -> @% searchOne
e0 dec @0 -> dec e0 @1
0C backToSharpOne @0 -> backToSharpOne 0C @0
e# findBlank 0B -> FINAL e# 0B
@% backToDFromLeft 1D -> searchNextBit @% 1D
0D backToFirstC 00 -> backToFirstC 0D 00
e% eraseE $0 -> eraseE e% $B
$& dec 01 -> gotoMark $& 00
1$ eraseC 00 -> eraseC 1$ 0B
eB nullifier eB -> initDivider eB eE
$E backToSharpOne 0C -> backToSharpOne $E 0C
0E restoreCD e0 -> restoreCD 0E e0
$1 incD 00 -> checkCD $1 01
1$ gotoDecC @1 -> gotoDecC 1$ @1
$% backToDFromLeft e& -> backToDFromLeft $% e&
e% checkEForZero $B -> stop e% $B
$@ backToDFromRight 11 -> backToDFromRight $@ 11
0B backToDFromLeft $1 -> backToDFromLeft 0B $1
1% backToStart @0 -> backToStart 1% @0
0E backToSharpZero $C -> backToSharpZero 0E $C
0# gotoDecC 11 -> gotoDecC 0# 11
@# gotoDecC eD -> dec @# eD
e@ backToDFromLeft e0 -> backToDFromLeft e@ e0
10 searchNextBit 10 -> searchNextBit 10 10
eD eraseE 01 -> eraseE eD 0B
$1 backToFirstC 11 -> backToFirstC $1 11
$D checkCD e0 -> checkCD $D e0
1E gotoDecC 10 -> gotoDecC 1E 10
0E backToDFromRight @E -> backToDFromRight 0E @E
@E checkCD @1 -> checkCD @E @1
0& eraseE 0E -> prepEraseC 0& 0E
@E dec @0 -> dec @E @1
@D eraseE $0 -> eraseE @D $B
$1 replaceWithBlanks e@ -> backToDFromRight $1 e@
0C backToSharpZero e1 -> backToSharpZero 0C e1
e1 forwardToLastD eE -> incD e1 eE
01 prepEraseC 0D -> eraseC 01 0D
1$ nullifier 0B -> initDivider 1$ 0E
eC backToStart @1 -> backToStart eC @1
@C initDividerByTwo 10 -> backToD @C 11
1& backToSharpOne 0E -> backToSharpOne 1& 0E
0& searchNextBit e1 -> searchNextBit 0& e1
10 gotoMark $E -> gotoDecC 10 $E
e% gotoDecC 01 -> gotoDecC e% 01
e# backToSharpOne 1D -> backToSharpOne e# 1D
eC searchNextBit 01 -> searchNextBit eC 01
eD backToSharpZero 11 -> backToSharpZero eD 11
eD copyZero eB -> backToSharpZero eD e0
$X incD 00 -> checkCD $X 01
1C findZero e1 -> beginCopying 1C e1
11 checkCD 10 -> checkCD 11 10
0X prepEraseC @D -> eraseC 0X @D
$D gotoDecC 0D -> dec $D 0D
e0 replaceWithBlanks @@ -> backToDFromRight e0 @@
10 findZero @1 -> beginCopying 10 @1
1% backToFirstC 00 -> backToFirstC 1% 00
$B restoreCD 1D -> restoreCD $B 1D
@1 dec @1 -> gotoMark @1 @0
0& eraseE 11 -> eraseE 0& 1B
0$ backToSharpZero @D -> backToSharpZero 0$ @D
@& checkEForZero 0B -> stop @& 0B
@D initDividerByTwo @0 -> backToD @D @1
01 copyZero $B -> backToSharpZero 01 $0
@B dec 10 -> dec @B 11
$1 massErase $@ -> eraseE $1 $@
@@ gotoMark $0 -> gotoMark @@ $0
0D beginCopying 0B -> backToStart 0D 0C
$# eraseC $1 -> eraseC $# $B
e& backToSharpZero 0X -> backToSharpZero e& 0X
1E replaceWithBlanks 0@ -> backToDFromRight 1E 0@
$0 replaceWithBlanks $@ -> backToDFromRight $0 $@
1$ backToFirstC e1 -> backToFirstC 1$ e1
0E prepEraseC eD -> eraseC 0E eD
$D backToDFromLeft $& -> backToDFromLeft $D $&
e0 forwardToLastD eE -> incD e0 eE
$# backToSharpZero 1X -> backToSharpZero $# 1X
0X backToDFromLeft 1% -> backToDFromLeft 0X 1%
$# massErase @@ -> eraseE $# @@
eX eraseE @E -> prepEraseC eX @E
1@ forwardToLastD 0E -> incD 1@ 0E
@D copyZero 1B -> backToSharpZero @D 10
eB findBlank 11 -> temp eB 11
0C findZero 11 -> beginCopying 0C 11
1X findBlank 1B -> FINAL 1X 1B
0E backToDFromRight $E -> backToDFromRight 0E $E
e$ eraseC $C -> backToStart e$ $X
e$ backToD $1 -> backToD e$ $1
$1 backToStart @0 -> backToStart $1 @0
10 eraseE @E -> prepEraseC 10 @E
$$ backToD 00 -> backToD $$ 00
0D backToSharpOne eC -> backToSharpOne 0D eC
$D eraseC 11 -> eraseC $D 1B
eB dec 10 -> dec eB 11
0E searchOne 10 -> restoreCD 0E 10
0B backToD e1 -> backToD 0B e1
e& forwardToLastD $E -> incD e& $E
eC eraseC $1 -> eraseC eC $B
$@ restoreCD @D -> restoreCD $@ @D
0C backToSharpOne $E -> backToSharpOne 0C $E
1# searchNextBit e0 -> searchNextBit 1# e0
$$ searchOne e0 -> restoreCD $$ e0
e% backToSharpOne eD -> backToSharpOne e% eD
$# searchZero 10 -> backToDFromLeft $# 1%
e0 eraseC @1 -> eraseC e0 @B
1C forwardToLastD eE -> incD 1C eE
00 backToSharpOne $E -> backToSharpOne 00 $E
$E prepEraseC $1 -> prepEraseC $E $1
e0 prepEraseC 11 -> prepEraseC e0 11
1X massErase 1@ -> eraseE 1X 1@
e& searchNextBit @0 -> searchNextBit e& @0
1E searchNextBit 10 -> searchNextBit 1E 10
1D checkCD @0 -> checkCD 1D @0
@X temp 01 -> beginCopying @X 01
e0 gotoMark 00 -> gotoMark e0 00
@C incD e1 -> incD @C e0
$E forwardToLastD $E -> incD $E $E
checkZeroD 01 -> 01 checkZeroD
e& copyOne 1B -> backToSharpOne e& 11
$X checkCD 00 -> checkCD $X 00
$D backToSharpZero 0D -> backToSharpZero $D 0D
createCopy $1 -> $# copyOne
1D checkCD 0D -> checkCD 1D 0D
1E backToSharpOne 0C -> backToSharpOne 1E 0C
1$ initDividerByTwo @0 -> backToD 1$ @1
1@ backToD $1 -> backToD 1@ $1
e0 eraseE e0 -> eraseE e0 eB
@@ eraseC e1 -> eraseC @@ eB
$E backToDFromLeft @% -> backToDFromLeft $E @%
@D backToSharpOne eE -> backToSharpOne @D eE
$# backToSharpZero $1 -> backToSharpZero $# $1
00 FINAL -> FINAL 0 FINAL
@$ backToD @0 -> backToD @$ @0
$B restoreCD @% -> restoreCD $B @0
$B initDivider @0 -> initDividerByTwo $B @0
1B backToSharpZero $C -> backToSharpZero 1B $C
$E temp 11 -> beginCopying $E 11
@0 backToSharpOne eX -> backToSharpOne @0 eX
0E backToSharpZero @1 -> backToSharpZero 0E @1
$1 eraseE e1 -> eraseE $1 eB
0% backToSharpZero 0X -> backToSharpZero 0% 0X
1X backToDFromLeft @0 -> backToDFromLeft 1X @0
@# backToFirstC 01 -> backToFirstC @# 01
$E backToDFromRight $B -> backToDFromRight $E $B
0X initDivider e0 -> initDividerByTwo 0X e0
e@ beginCopying $B -> backToStart e@ $C
$# backToFirstC e1 -> backToFirstC $# e1
1& initDividerByTwo 00 -> backToD 1& 01
$$ temp @1 -> beginCopying $$ @1
$B restoreCD @D -> restoreCD $B @D
0% eraseE e1 -> eraseE 0% eB
@# prepEraseC @0 -> prepEraseC @# @0
@& checkEForZero @B -> stop @& @B
$$ backToDFromLeft 00 -> backToDFromLeft $$ 00
$B searchOne $0 -> restoreCD $B $0
@$ backToSharpZero @X -> backToSharpZero @$ @X
$& restoreCD @& -> restoreCD $& @1
10 prepEraseC eD -> eraseC 10 eD
e1 copyOne @B -> backToSharpOne e1 @1
$# dec 11 -> gotoMark $# 10
eE gotoDecC $0 -> gotoDecC eE $0
01 goToPlaceForDivider 1B -> backToFirstC 01 1D
1D backToDFromLeft $0 -> backToDFromLeft 1D $0
@X searchNextBit $0 -> searchNextBit @X $0
$0 backToSharpOne 0D -> backToSharpOne $0 0D
1% checkCD $0 -> checkCD 1% $0
e0 incD e1 -> incD e0 e0
@C gotoMark 00 -> gotoMark @C 00
$C gotoLastE 0@ -> dec $C 0@
1X gotoMark 10 -> gotoMark 1X 10
@& nullifier @B -> initDivider @& @E
eE beginCopying $B -> backToStart eE $C
e% backToSharpZero 0X -> backToSharpZero e% 0X
eX forwardToLastD eE -> incD eX eE
e# searchNextBit 10 -> searchNextBit e# 10
eD backToSharpOne @X -> backToSharpOne eD @X
e% backToDFromRight @B -> backToDFromRight e% @B
@D initDividerByTwo $0 -> backToD @D $1
1$ eraseE 1E -> prepEraseC 1$ 1E
01 backToDFromRight eB -> backToDFromRight 01 eB
@C restoreCD eD -> restoreCD @C eD
1B backToSharpZero @X -> backToSharpZero 1B @X
1& initDividerByTwo $0 -> backToD 1& $1
@# findZero e1 -> beginCopying @# e1
e@ checkCD $0 -> checkCD e@ $0
$$ backToSharpZero eC -> backToSharpZero $$ eC
0@ searchNextBit 00 -> searchNextBit 0@ 00
@% massErase @@ -> eraseE @% @@
$$ beginCopying 0B -> backToStart $$ 0C
$@ temp 00 -> beginCopying $@ 00
$$ findBlank 1B -> FINAL $$ 1B
1$ findBlank $0 -> temp 1$ $0
e$ backToD 10 -> backToD e$ 10
0C backToFirstC 00 -> backToFirstC 0C 00
0# backToSharpZero $0 -> backToSharpZero 0# $0
e& massErase 0@ -> eraseE e& 0@
@# restoreCD @1 -> restoreCD @# @1
0$ prepEraseC $D -> eraseC 0$ $D
0@ eraseE e1 -> eraseE 0@ eB
$0 checkCD @D -> checkCD $0 @D
eC backToSharpOne 0D -> backToSharpOne eC 0D
eD backToFirstC @1 -> backToFirstC eD @1
10 copyZero @B -> backToSharpZero 10 @0
0B backToSharpZero eE -> backToSharpZero 0B eE
e& incD @1 -> incD e& @0
1$ backToSharpZero e0 -> backToSharpZero 1$ e0
@% backToSharpZero eD -> backToSharpZero @% eD
1C restoreCD 0D -> restoreCD 1C 0D
eB backToDFromRight eE -> backToDFromRight eB eE
0C backToDFromRight 1E -> backToDFromRight 0C 1E
1& nullifier eB -> initDivider 1& eE
e1 findBlank 01 -> temp e1 01
1# restoreCD 00 -> restoreCD 1# 00
@@ backToFirstC $1 -> backToFirstC @@ $1
eB backToDFromRight $0 -> backToDFromRight eB $0
eE eraseE 00 -> eraseE eE 0B
11 copyOne @B -> backToSharpOne 11 @1
10 checkCD 00 -> checkCD 10 00
0% backToDFromRight $E -> backToDFromRight 0% $E
1$ temp e0 -> beginCopying 1$ e0
e% checkCD e1 -> checkCD e% e1
copyZero e1 -> e1 copyZero
1$ backToSharpOne 11 -> backToSharpOne 1$ 11
@& backToFirstC 11 -> backToFirstC @& 11
@& incD @1 -> incD @& @0
0% gotoDecC 00 -> gotoDecC 0% 00
$% restoreCD $1 -> restoreCD $% $1
$1 backToSharpZero 11 -> backToSharpZero $1 11
$@ eraseC 0C -> backToStart $@ 0X
0B gotoDecC e1 -> gotoDecC 0B e1
0$ restoreCD @1 -> restoreCD 0$ @1
eD backToD 10 -> backToD eD 10
1$ temp $1 -> beginCopying 1$ $1
0X eraseE $1 -> eraseE 0X $B
@& checkEForZero 1B -> stop @& 1B
0E searchOne 01 -> backToDFromLeft 0E 0&
0D massErase @@ -> eraseE 0D @@
0% prepEraseC 10 -> prepEraseC 0% 10
0D backToStart e0 -> backToStart 0D e0
eB gotoMark e0 -> gotoMark eB e0
0C initDivider $0 -> initDividerByTwo 0C $0
0E gotoDecC 10 -> gotoDecC 0E 10
$E beginCopying 1B -> backToStart $E 1C
$1 gotoMark @0 -> gotoMark $1 @0
FINAL @$ -> FINAL @ FINAL
e1 goToPlaceForDivider $B -> backToFirstC e1 $D
e@ gotoLastE $@ -> dec e@ $@
11 checkCD 0D -> checkCD 11 0D
$C backToSharpOne e1 -> backToSharpOne $C e1
@B backToSharpOne 1E -> backToSharpOne @B 1E
0# incD $1 -> incD 0# $0
@C backToSharpZero 1D -> backToSharpZero @C 1D
$X prepEraseC 1D -> eraseC $X 1D
@% temp e1 -> beginCopying @% e1
@# prepEraseC $D -> eraseC @# $D
0E checkCD @D -> checkCD 0E @D
e# backToSharpZero @E -> backToSharpZero e# @E
@B backToDFromLeft 10 -> backToDFromLeft @B 10
0% dec e1 -> gotoMark 0% e0
$% goToPlaceForDivider eB -> backToFirstC $% eD
$@ incD 10 -> checkCD $@ 11
eX backToSharpZero 1C -> backToSharpZero eX 1C
e% backToDFromRight 1B -> backToDFromRight e% 1B
e@ backToFirstC 10 -> backToFirstC e@ 10
1$ nullifier @B -> initDivider 1$ @E
01 eraseE eE -> prepEraseC 01 eE
1X forwardToLastD @E -> incD 1X @E
1# backToD e0 -> backToD 1# e0
@$ restoreCD 0D -> restoreCD @$ 0D
11 initDivider $0 -> initDividerByTwo 11 $0
e# backToDFromRight eB -> backToDFromRight e# eB
@1 forwardToLastD 0E -> incD @1 0E
e$ restoreCD @D -> restoreCD e$ @D
@$ searchNextBit e1 -> searchNextBit @$ e1
eC backToSharpZero @D -> backToSharpZero eC @D
$B backToSharpOne $E -> backToSharpOne $B $E
1# backToDFromLeft @1 -> backToDFromLeft 1# @1
0% prepEraseC $1 -> prepEraseC 0% $1
1% prepEraseC eD -> eraseC 1% eD
0C copyOne @B -> backToSharpOne 0C @1
e$ checkEForZero $B -> stop e$ $B
0X searchZero 11 -> restoreCD 0X 11
$D eraseC $C -> backToStart $D $X
0D incD @0 -> checkCD 0D @1
goToPlaceForDivider $1 -> $1 goToPlaceForDivider
0B backToDFromRight 10 -> backToDFromRight 0B 10
1D backToSharpZero e1 -> backToSharpZero 1D e1
eD backToSharpZero eC -> backToSharpZero eD eC
0B copyOne 0B -> backToSharpOne 0B 01
0C dec $0 -> dec 0C $1
0D backToSharpZero @D -> backToSharpZero 0D @D
1% checkCD eD -> checkCD 1% eD
11 restoreCD @0 -> restoreCD 11 @0
0E backToDFromLeft @D -> searchNextBit 0E @D
$0 backToDFromRight @B -> backToDFromRight $0 @B
@$ goToPlaceForDivider 0B -> backToFirstC @$ 0D
0C eraseE $1 -> eraseE 0C $B
@% searchOne 01 -> backToDFromLeft @% 0&
$1 backToSharpZero $C -> backToSharpZero $1 $C
0E gotoLastE 1@ -> dec 0E 1@
1B backToDFromRight $B -> backToDFromRight 1B $B
0B searchZero @0 -> backToDFromLeft 0B @%
11 beginCopying eB -> backToStart 11 eC
0$ backToSharpZero $1 -> backToSharpZero 0$ $1
0D checkCD eD -> checkCD 0D eD
@C restoreCD 1& -> restoreCD @C 11
@D nullifier 1B -> initDivider @D 1E
e@ incD 01 -> incD e@ 00
1$ backToSharpZero @X -> backToSharpZero 1$ @X
@E searchOne 01 -> backToDFromLeft @E 0&
@B searchNextBit 01 -> searchNextBit @B 01
@% backToSharpOne $1 -> backToSharpOne @% $1
0E backToDFromLeft eD -> searchNextBit 0E eD
$% gotoMark $0 -> gotoMark $% $0
0& findBlank 1B -> FINAL 0& 1B
1D searchZero 10 -> backToDFromLeft 1D 1%
e0 searchOne 11 -> backToDFromLeft e0 1&
$0 backToDFromRight 1B -> backToDFromRight $0 1B
eD prepEraseC 10 -> prepEraseC eD 10
$E checkCD $1 -> checkCD $E $1
0# searchNextBit e0 -> searchNextBit 0# e0
0C checkCD $D -> checkCD 0C $D
10 backToDFromRight @B -> backToDFromRight 10 @B
eD replaceWithBlanks e@ -> backToDFromRight eD e@
0C findBlank @B -> FINAL 0C @B
e@ backToDFromLeft @& -> backToDFromLeft e@ @&
e# dec 00 -> dec e# 01
$E gotoMark 10 -> gotoMark $E 10
@# incD e0 -> checkCD @# e1
@$ backToStart 11 -> backToStart @$ 11
$$ gotoDecC e0 -> gotoDecC $$ e0
eE backToDFromLeft $0 -> backToDFromLeft eE $0
@B searchZero 11 -> restoreCD @B 11
eC forwardToLastD 1E -> incD eC 1E
1@ goToPlaceForDivider 0B -> backToFirstC 1@ 0D
e% backToSharpOne 0X -> backToSharpOne e% 0X
@X backToD e1 -> backToD @X e1
0@ backToDFromRight eE -> backToDFromRight 0@ eE
10 backToSharpZero 0X -> backToSharpZero 10 0X
1D copyOne $B -> backToSharpOne 1D $1
0E backToSharpZero 1X -> backToSharpZero 0E 1X
e0 massErase 0@ -> eraseE e0 0@
1D backToDFromLeft e0 -> backToDFromLeft 1D e0
$& findBlank e1 -> temp $& e1
@D backToSharpOne 1X -> backToSharpOne @D 1X
0@ copyZero eB -> backToSharpZero 0@ e0
e0 checkCD @1 -> checkCD e0 @1
@C searchOne @1 -> backToDFromLeft @C @&
1# beginCopying 1B -> backToStart 1# 1C
0E gotoMark e0 -> gotoMark 0E e0
$@ incD @0 -> checkCD $@ @1
FINAL $X -> FINAL $ FINAL
@0 restoreCD 0D -> restoreCD @0 0D
00 eraseE @0 -> eraseE 00 @B
e@ backToSharpOne @E -> backToSharpOne e@ @E
1C backToDFromLeft e0 -> backToDFromLeft 1C e0
0@ searchOne e0 -> restoreCD 0@ e0
0@ eraseC 0C -> backToStart 0@ 0X
@E backToDFromRight eB -> backToDFromRight @E eB
01 backToSharpZero e1 -> backToSharpZero 01 e1
@X initDividerByTwo $0 -> backToD @X $1
1E restoreCD @% -> restoreCD 1E @0
$# restoreCD @D -> restoreCD $# @D
e$ copyOne @B -> backToSharpOne e$ @1
$X beginCopying 1B -> backToStart $X 1C
1B backToDFromLeft e0 -> backToDFromLeft 1B e0
e0 copyZero $B -> backToSharpZero e0 $0
1@ backToDFromRight e1 -> backToDFromRight 1@ e1
$& findZero e1 -> beginCopying $& e1
1@ temp 10 -> beginCopying 1@ 10
0# backToDFromRight eE -> backToDFromRight 0# eE
e@ checkEForZero @B -> stop e@ @B
00 copyZero $B -> backToSharpZero 00 $0
eX restoreCD e% -> restoreCD eX e0
0C checkCD e0 -> checkCD 0C e0
copyZero $1 -> $1 copyZero
e$ backToSharpOne @0 -> backToSharpOne e$ @0
1# backToFirstC $1 -> backToFirstC 1# $1
e1 prepEraseC 10 -> prepEraseC e1 10
1C backToSharpZero 0D -> backToSharpZero 1C 0D
$E dec 00 -> dec $E 01
e$ checkCD 01 -> checkCD e$ 01
e# searchZero 10 -> backToDFromLeft e# 1%
@X backToSharpZero $D -> backToSharpZero @X $D
1% gotoDecC e1 -> gotoDecC 1% e1
0% searchOne @1 -> backToDFromLeft 0% @&
1E backToSharpZero 10 -> backToSharpZero 1E 10
1% replaceWithBlanks $@ -> backToDFromRight 1% $@
0$ backToSharpOne 10 -> backToSharpOne 0$ 10
1X backToSharpZero @1 -> backToSharpZero 1X @1
0# backToSharpOne $0 -> backToSharpOne 0# $0
1E gotoMark 0E -> gotoDecC 1E 0E
1@ gotoMark 01 -> gotoMark 1@ 01
$0 gotoMark 01 -> gotoMark $0 01
0E restoreCD e% -> restoreCD 0E e0
e& temp 10 -> beginCopying e& 10
e$ goToPlaceForDivider eB -> backToFirstC e$ eD
1C backToSharpOne 0D -> backToSharpOne 1C 0D
e0 gotoMark @E -> gotoDecC e0 @E
0E searchZero 11 -> restoreCD 0E 11
1# eraseE $E -> prepEraseC 1# $E
1& prepEraseC e1 -> prepEraseC 1& e1
@D searchNextBit 00 -> searchNextBit @D 00
$1 checkEForZero $B -> stop $1 $B
0@ searchNextBit 11 -> searchNextBit 0@ 11
$# backToSharpOne 1D -> backToSharpOne $# 1D
$# backToSharpOne 01 -> backToSharpOne $# 01
@% backToD 00 -> backToD @% 00
e@ prepEraseC 00 -> prepEraseC e@ 00
@& backToDFromLeft $& -> backToDFromLeft @& $&
$0 backToDFromLeft @% -> backToDFromLeft $0 @%
0& restoreCD 00 -> restoreCD 0& 00
eX backToFirstC e0 -> backToFirstC eX e0
e# eraseC 0C -> backToStart e# 0X
@@ incD @0 -> checkCD @@ @1
1@ backToSharpOne $0 -> backToSharpOne 1@ $0
1X eraseE eE -> prepEraseC 1X eE
1E backToSharpOne @1 -> backToSharpOne 1E @1
$% dec $0 -> dec $% $1
eD backToSharpZero 1C -> backToSharpZero eD 1C
e# replaceWithBlanks @@ -> backToDFromRight e# @@
1X copyZero eB -> backToSharpZero 1X e0
@B searchOne e0 -> restoreCD @B e0
@% backToDFromRight @E -> backToDFromRight @% @E
1X backToSharpZero @E -> backToSharpZero 1X @E
$1 backToSharpZero 1E -> backToSharpZero $1 1E
eB backToDFromRight 01 -> backToDFromRight eB 01
0C checkEForZero 0B -> stop 0C 0B
@C backToStart $1 -> backToStart @C $1
0D searchNextBit 11 -> searchNextBit 0D 11
0E gotoDecC 11 -> gotoDecC 0E 11
1B backToFirstC 01 -> backToFirstC 1B 01
$D backToSharpOne 0C -> backToSharpOne $D 0C
@@ searchNextBit 01 -> searchNextBit @@ 01
1B backToSharpZero e1 -> backToSharpZero 1B e1
$0 restoreCD 1& -> restoreCD $0 11
eD dec $1 -> gotoMark eD $0
$X prepEraseC 10 -> prepEraseC $X 10
0% restoreCD @% -> restoreCD 0% @0
@@ prepEraseC $D -> eraseC @@ $D
@& backToSharpZero eC -> backToSharpZero @& eC
1B backToD e0 -> backToD 1B e0
e@ checkCD 10 -> checkCD e@ 10
0@ gotoMark @1 -> gotoMark 0@ @1
backToDAfterInc @D -> @D createCopy
$E findBlank 10 -> temp $E 10
@1 backToSharpZero 01 -> backToSharpZero @1 01
0& checkCD e1 -> checkCD 0& e1
1% findZero e1 -> beginCopying 1% e1
0@ temp e0 -> beginCopying 0@ e0
10 gotoLastE 0@ -> dec 10 0@
@& eraseE e0 -> eraseE @& eB
eD backToDFromRight 1B -> backToDFromRight eD 1B
$& searchNextBit 01 -> searchNextBit $& 01
@@ backToD e1 -> backToD @@ e1
$$ massErase 0@ -> eraseE $$ 0@
0E findZero $1 -> beginCopying 0E $1
0E findBlank 1B -> FINAL 0E 1B
@C eraseC e1 -> eraseC @C eB
$B eraseC e1 -> eraseC $B eB
eD backToDFromLeft e1 -> backToDFromLeft eD e1
eX backToSharpZero e0 -> backToSharpZero eX e0
$X restoreCD 1& -> restoreCD $X 11
@X searchZero 01 -> restoreCD @X 01
1& checkCD $1 -> checkCD 1& $1
0% gotoDecC $D -> dec 0% $D
e# backToDFromRight @1 -> backToDFromRight e# @1
$# backToSharpOne eE -> backToSharpOne $# eE
1& temp 11 -> beginCopying 1& 11
@& searchZero 01 -> restoreCD @& 01
eE prepEraseC 01 -> prepEraseC eE 01
$X backToSharpZero $X -> backToSharpZero $X $X
@@ restoreCD 0D -> restoreCD @@ 0D
1$ incD 10 -> checkCD 1$ 11
0B restoreCD 00 -> restoreCD 0B 00
1D searchOne 01 -> backToDFromLeft 1D 0&
@B backToD e1 -> backToD @B e1
0$ backToFirstC e1 -> backToFirstC 0$ e1
@@ backToDFromLeft @0 -> backToDFromLeft @@ @0
1% gotoMark 10 -> gotoMark 1% 10
$% searchOne $1 -> backToDFromLeft $% $&
@1 eraseE 0E -> prepEraseC @1 0E
$C backToStart e0 -> backToStart $C e0
0$ backToSharpZero 00 -> backToSharpZero 0$ 00
e1 restoreCD 1D -> restoreCD e1 1D
eX dec e0 -> dec eX e1
1@ nullifier eB -> initDivider 1@ eE
0E searchZero @1 -> restoreCD 0E @1
0$ searchOne 00 -> restoreCD 0$ 00
@# backToSharpOne 1D -> backToSharpOne @# 1D
0X backToSharpZero @1 -> backToSharpZero 0X @1
eE restoreCD @% -> restoreCD eE @0
@& eraseC e1 -> eraseC @& eB
e@ temp e1 -> beginCopying e@ e1
$@ backToSharpOne $C -> backToSharpOne $@ $C
1C checkCD 11 -> checkCD 1C 11
1& prepEraseC 10 -> prepEraseC 1& 10
$E eraseC 0C -> backToStart $E 0X
0@ backToDFromRight 00 -> backToDFromRight 0@ 00
eE gotoDecC @1 -> gotoDecC eE @1
$@ backToSharpOne $D -> backToSharpOne $@ $D
$0 eraseC @0 -> eraseC $0 @B
@1 eraseE eE -> prepEraseC @1 eE
1C temp 10 -> beginCopying 1C 10
1E backToD 00 -> backToD 1E 00
eX restoreCD 1& -> restoreCD eX 11
eD prepEraseC 01 -> prepEraseC eD 01
1X dec 00 -> dec 1X 01
e# backToFirstC 00 -> backToFirstC e# 00
1% backToSharpOne 1C -> backToSharpOne 1% 1C
e@ findBlank e1 -> temp e@ e1
0@ backToDFromRight @1 -> backToDFromRight 0@ @1
$D gotoMark 0E -> gotoDecC $D 0E
1$ incD e0 -> checkCD 1$ e1
@X backToSharpZero $C -> backToSharpZero @X $C
0E gotoDecC e0 -> gotoDecC 0E e0
1$ backToDFromRight 10 -> backToDFromRight 1$ 10
$& incD e1 -> incD $& e0
1C backToDFromRight e0 -> backToDFromRight 1C e0
e0 backToStart 00 -> backToStart e0 00
e0 forwardToLastD $E -> incD e0 $E
e% eraseE 1E -> prepEraseC e% 1E
@X restoreCD $D -> restoreCD @X $D
$% searchZero e0 -> backToDFromLeft $% e%
1B findBlank @1 -> temp 1B @1
1X nullifier eB -> initDivider 1X eE
$& initDividerByTwo 00 -> backToD $& 01
@X backToSharpZero $1 -> backToSharpZero @X $1
0@ backToFirstC $1 -> backToFirstC 0@ $1
0E backToSharpOne $D -> backToSharpOne 0E $D
0X backToSharpOne @X -> backToSharpOne 0X @X
1B backToStart @1 -> backToStart 1B @1
$@ backToD e0 -> backToD $@ e0
e@ backToDFromRight 01 -> backToDFromRight e@ 01
eD massErase @@ -> eraseE eD @@
$D backToFirstC @0 -> backToFirstC $D @0
10 backToSharpZero $0 -> backToSharpZero 10 $0
e0 backToSharpOne e1 -> backToSharpOne e0 e1
@& searchNextBit 01 -> searchNextBit @& 01
eE gotoMark eE -> gotoDecC eE eE
0D backToSharpOne @C -> backToSharpOne 0D @C
1& backToD $1 -> backToD 1& $1
@% gotoMark $E -> gotoDecC @% $E
1& backToDFromRight $B -> backToDFromRight 1& $B
e@ incD 10 -> checkCD e@ 11
$X temp 01 -> beginCopying $X 01
@C eraseC 10 -> eraseC @C 1B
@$ searchZero 10 -> backToDFromLeft @$ 1%
0E dec e1 -> gotoMark 0E e0
@C backToSharpZero $0 -> backToSharpZero @C $0
1X findBlank $B -> FINAL 1X $B
eD gotoLastE @@ -> dec eD @@
e& checkEForZero eB -> stop e& eB
0% backToDFromRight e0 -> backToDFromRight 0% e0
e$ goToPlaceForDivider 1B -> backToFirstC e$ 1D
eC checkCD 10 -> checkCD eC 10
@B restoreCD 00 -> restoreCD @B 00
$E restoreCD $0 -> restoreCD $E $0
$X temp e1 -> beginCopying $X e1
$1 temp e1 -> beginCopying $1 e1
e$ checkCD 1D -> checkCD e$ 1D
@0 nullifier 0B -> initDivider @0 0E
0% initDivider 00 -> initDividerByTwo 0% 00
$X gotoLastE 0@ -> dec $X 0@
$% eraseC e1 -> eraseC $% eB
$# backToSharpOne 1E -> backToSharpOne $# 1E
1$ backToSharpOne 01 -> backToSharpOne 1$ 01
$B backToSharpZero @X -> backToSharpZero $B @X
0X restoreCD 01 -> restoreCD 0X 01
@% restoreCD @0 -> restoreCD @% @0
$0 findBlank $1 -> temp $0 $1
0B backToSharpOne 00 -> backToSharpOne 0B 00
@& checkCD @0 -> checkCD @& @0
@1 backToSharpOne $D -> backToSharpOne @1 $D
01 searchZero e1 -> restoreCD 01 e1
@0 backToSharpZero @E -> backToSharpZero @0 @E
0B eraseC @1 -> eraseC 0B @B
$C checkCD @0 -> checkCD $C @0
1E prepEraseC @D -> eraseC 1E @D
FINAL e# -> FINAL e FINAL
1$ beginCopying 1B -> backToStart 1$ 1C
0C beginCopying 1B -> backToStart 0C 1C
eE backToDFromRight $B -> backToDFromRight eE $B
eX temp @1 -> beginCopying eX @1
0$ copyZero $B -> backToSharpZero 0$ $0
e$ searchOne e1 -> backToDFromLeft e$ e&
0# backToDFromRight @E -> backToDFromRight 0# @E
0# restoreCD 00 -> restoreCD 0# 00
1B backToDFromLeft $% -> backToDFromLeft 1B $%
$@ backToStart e0 -> backToStart $@ e0
$@ restoreCD 1D -> restoreCD $@ 1D
eC backToSharpOne @0 -> backToSharpOne eC @0
$& backToSharpZero $D -> backToSharpZero $& $D
copyZero 0D -> 0D copyZero
e$ copyZero @B -> backToSharpZero e$ @0
$# backToDFromLeft e% -> backToDFromLeft $# e%
0$ findBlank @1 -> temp 0$ @1
$$ backToStart 11 -> backToStart $$ 11
eB checkCD $D -> checkCD eB $D
eD forwardToLastD 1E -> incD eD 1E
0$ backToDFromLeft $% -> backToDFromLeft 0$ $%
@B forwardToLastD @E -> incD @B @E
@& backToSharpOne 01 -> backToSharpOne @& 01
00 backToStart $1 -> backToStart 00 $1
0@ copyOne 0B -> backToSharpOne 0@ 01
@E findZero e1 -> beginCopying @E e1
eD goToPlaceForDivider eB -> backToFirstC eD eD
e$ backToDFromRight $1 -> backToDFromRight e$ $1
0D searchOne $1 -> backToDFromLeft 0D $&
e& gotoMark 1E -> gotoDecC e& 1E
e$ backToD @0 -> backToD e$ @0
e$ backToDFromLeft $% -> backToDFromLeft e$ $%
@E backToSharpOne 1D -> backToSharpOne @E 1D
@C eraseC 01 -> eraseC @C 0B
$C initDivider @0 -> initDividerByTwo $C @0
@% incD e0 -> checkCD @% e1
@@ gotoDecC 01 -> gotoDecC @@ 01
$D searchZero $0 -> backToDFromLeft $D $%
1D searchOne 00 -> restoreCD 1D 00
@0 findBlank eB -> FINAL @0 eB
$C restoreCD $& -> restoreCD $C $1
1E backToDFromLeft $D -> searchNextBit 1E $D
1& backToStart 11 -> backToStart 1& 11
1B checkCD e1 -> checkCD 1B e1
eC beginCopying @B -> backToStart eC @C
@E backToSharpZero 0C -> backToSharpZero @E 0C
@% backToStart @1 -> backToStart @% @1
$X backToDFromLeft $1 -> backToDFromLeft $X $1
0$ backToDFromRight $B -> backToDFromRight 0$ $B
0B checkCD e1 -> checkCD 0B e1
$C restoreCD 10 -> restoreCD $C 10
eE restoreCD @D -> restoreCD eE @D
11 searchNextBit 11 -> searchNextBit 11 11
@X backToSharpOne $0 -> backToSharpOne @X $0
1C backToStart $1 -> backToStart 1C $1
$0 backToDFromLeft 00 -> backToDFromLeft $0 00
1# incD $1 -> incD 1# $0
11 checkCD e1 -> checkCD 11 e1
@$ restoreCD 01 -> restoreCD @$ 01
@0 restoreCD @0 -> restoreCD @0 @0
0$ findBlank 00 -> temp 0$ 00
$0 gotoMark $1 -> gotoMark $0 $1
0X backToSharpZero eE -> backToSharpZero 0X eE
eB checkEForZero @B -> stop eB @B
0C nullifier 1B -> initDivider 0C 1E
1X checkCD $1 -> checkCD 1X $1
1E restoreCD eD -> restoreCD 1E eD
0D checkCD e1 -> checkCD 0D e1
00 restoreCD e% -> restoreCD 00 e0
e@ temp $1 -> beginCopying e@ $1
0& checkCD e0 -> checkCD 0& e0
$B findBlank 00 -> temp $B 00
$C eraseE $0 -> eraseE $C $B
@% findBlank $0 -> temp @% $0
@B searchNextBit e0 -> searchNextBit @B e0
@% forwardToLastD 1E -> incD @% 1E
@B searchOne $1 -> backToDFromLeft @B $&
11 copyZero @B -> backToSharpZero 11 @0
@X restoreCD 0& -> restoreCD @X 01
$D prepEraseC $0 -> prepEraseC $D $0
eX checkCD e0 -> checkCD eX e0
@$ searchZero 01 -> restoreCD @$ 01
$0 backToSharpOne $E -> backToSharpOne $0 $E
@$ backToSharpZero 00 -> backToSharpZero @$ 00
0E incD @0 -> checkCD 0E @1
e0 backToSharpZero @1 -> backToSharpZero e0 @1
@% findBlank e1 -> temp @% e1
eX backToSharpOne 01 -> backToSharpOne eX 01
@0 initDividerByTwo 00 -> backToD @0 01
1@ findBlank eB -> FINAL 1@ eB
$1 findZero @1 -> beginCopying $1 @1
1& backToDFromLeft 1& -> backToDFromLeft 1& 1&
0X backToD 01 -> backToD 0X 01
$B backToFirstC e1 -> backToFirstC $B e1
0# backToSharpOne @C -> backToSharpOne 0# @C
10 backToSharpOne eE -> backToSharpOne 10 eE
@& eraseC 1C -> backToStart @& 1X
$% incD 10 -> checkCD $% 11
11 dec @1 -> gotoMark 11 @0
@D gotoDecC 0D -> dec @D 0D
e1 eraseC @0 -> eraseC e1 @B
$X findBlank e0 -> temp $X e0
$% backToSharpZero @1 -> backToSharpZero $% @1
0% backToDFromRight 00 -> backToDFromRight 0% 00
1X checkCD eD -> checkCD 1X eD
1C incD 10 -> checkCD 1C 11
eB backToDFromRight 1B -> backToDFromRight eB 1B
1% searchZero 01 -> restoreCD 1% 01
$# temp e0 -> beginCopying $# e0
1X restoreCD $% -> restoreCD 1X $0
$1 goToPlaceForDivider 0B -> backToFirstC $1 0D
@B backToStart 01 -> backToStart @B 01
e0 backToDFromLeft 0& -> backToDFromLeft e0 0&
1$ eraseE 10 -> eraseE 1$ 1B
00 gotoDecC @1 -> gotoDecC 00 @1
$B beginCopying 1B -> backToStart $B 1C
$E searchZero @1 -> restoreCD $E @1
0% backToSharpZero 1C -> backToSharpZero 0% 1C
01 replaceWithBlanks $@ -> backToDFromRight 01 $@
1X gotoMark @E -> gotoDecC 1X @E
01 backToDFromLeft 0% -> backToDFromLeft 01 0%
0# searchOne e0 -> restoreCD 0# e0
$B backToDFromLeft @0 -> backToDFromLeft $B @0
11 eraseC e0 -> eraseC 11 eB
$B findBlank $1 -> temp $B $1
$X backToDFromRight 0B -> backToDFromRight $X 0B
$X backToSharpZero $1 -> backToSharpZero $X $1
e@ nullifier @B -> initDivider e@ @E
$@ gotoDecC e1 -> gotoDecC $@ e1
@# prepEraseC 11 -> prepEraseC @# 11
0E gotoDecC @1 -> gotoDecC 0E @1
$1 copyZero 0B -> backToSharpZero $1 00
$1 checkCD 0D -> checkCD $1 0D
0X dec 11 -> gotoMark 0X 10
e1 eraseE 1E -> prepEraseC e1 1E
e0 restoreCD 10 -> restoreCD e0 10
0B eraseE 10 -> eraseE 0B 1B
0$ eraseC 01 -> eraseC 0$ 0B
@% backToSharpOne @X -> backToSharpOne @% @X
$B prepEraseC @D -> eraseC $B @D
0E eraseE 01 -> eraseE 0E 0B
0@ eraseC e0 -> eraseC 0@ eB
@E copyOne eB -> backToSharpOne @E e1
0E findBlank $1 -> temp 0E $1
eD restoreCD @0 -> restoreCD eD @0
e0 temp e1 -> beginCopying e0 e1
@$ eraseE $E -> prepEraseC @$ $E
0D backToDFromLeft 01 -> backToDFromLeft 0D 01
0C backToSharpOne 0X -> backToSharpOne 0C 0X
1D forwardToLastD 0E -> incD 1D 0E
1C backToSharpZero 0C -> backToSharpZero 1C 0C
$1 backToDFromRight eE -> backToDFromRight $1 eE
0& restoreCD 1& -> restoreCD 0& 11
01 backToSharpOne 11 -> backToSharpOne 01 11
eD initDividerByTwo e0 -> backToD eD e1
@$ backToSharpZero @0 -> backToSharpZero @$ @0
@& dec 11 -> gotoMark @& 10
0& searchZero 11 -> restoreCD 0& 11
$@ backToSharpZero 1D -> backToSharpZero $@ 1D
$& checkCD e0 -> checkCD $& e0
@0 searchZero @1 -> restoreCD @0 @1
e1 backToStart 11 -> backToStart e1 11
1C backToSharpOne @E -> backToSharpOne 1C @E
0& massErase 0@ -> eraseE 0& 0@
0$ backToDFromRight 1E -> backToDFromRight 0$ 1E
e$ eraseE 11 -> eraseE e$ 1B
0$ backToFirstC $0 -> backToFirstC 0$ $0
$1 restoreCD @D -> restoreCD $1 @D
@& prepEraseC @D -> eraseC @& @D
0& checkCD 1D -> checkCD 0& 1D
1% prepEraseC $D -> eraseC 1% $D
$& findBlank eB -> FINAL $& eB
10 beginCopying @B -> backToStart 10 @C
e1 eraseC eC -> backToStart e1 eX
@X backToD $0 -> backToD @X $0
$$ FINAL -> FINAL $ FINAL
eB backToSharpZero 1C -> backToSharpZero eB 1C
@# findBlank @0 -> temp @# @0
$% backToDFromRight @B -> backToDFromRight $% @B
e1 incD @1 -> incD e1 @0
01 backToSharpZero 1E -> backToSharpZero 01 1E
eX gotoDecC @D -> dec eX @D
@X gotoLastE 0@ -> dec @X 0@
@1 restoreCD 0D -> restoreCD @1 0D
$% backToDFromRight 0B -> backToDFromRight $% 0B
1@ gotoMark $0 -> gotoMark 1@ $0
@C searchNextBit 10 -> searchNextBit @C 10
$@ gotoMark 10 -> gotoMark $@ 10
0% eraseC @C -> backToStart 0% @X
$# findZero 11 -> beginCopying $# 11
e0 restoreCD $& -> restoreCD e0 $1
0B backToSharpZero eD -> backToSharpZero 0B eD
$$ dec e1 -> gotoMark $$ e0
eD restoreCD e0 -> restoreCD eD e0
$@ backToDFromRight 0B -> backToDFromRight $@ 0B
eB backToSharpOne $0 -> backToSharpOne eB $0
$E temp 01 -> beginCopying $E 01
$1 backToDFromRight @1 -> backToDFromRight $1 @1
$@ findZero 11 -> beginCopying $@ 11
11 gotoDecC @1 -> gotoDecC 11 @1
0@ backToDFromLeft e0 -> backToDFromLeft 0@ e0
1@ findBlank @0 -> temp 1@ @0
@E searchNextBit 01 -> searchNextBit @E 01
11 backToDFromRight @0 -> backToDFromRight 11 @0
@& backToDFromLeft 0% -> backToDFromLeft @& 0%
@D eraseC e0 -> eraseC @D eB
0@ backToSharpOne @D -> backToSharpOne 0@ @D
$& backToStart e1 -> backToStart $& e1
0X backToSharpZero $1 -> backToSharpZero 0X $1
eB backToDFromLeft 11 -> backToDFromLeft eB 11
1% backToFirstC 11 -> backToFirstC 1% 11
0# copyZero 0B -> backToSharpZero 0# 00
0& backToSharpZero 1C -> backToSharpZero 0& 1C
e$ searchZero $1 -> restoreCD e$ $1
0B checkCD $1 -> checkCD 0B $1
@E prepEraseC @D -> eraseC @E @D
0E findZero e1 -> beginCopying 0E e1
10 backToDFromLeft 1& -> backToDFromLeft 10 1&
0% gotoDecC @D -> dec 0% @D
1D gotoDecC eD -> dec 1D eD
$1 eraseC 00 -> eraseC $1 0B
@$ backToSharpOne e1 -> backToSharpOne @$ e1
11 searchOne e0 -> restoreCD 11 e0
0X gotoLastE @@ -> dec 0X @@
FINAL $B -> FINAL $ FINAL
@E backToDFromLeft $& -> backToDFromLeft @E $&
0& prepEraseC 1D -> eraseC 0& 1D
$% backToDFromLeft @0 -> backToDFromLeft $% @0
$& eraseE @1 -> eraseE $& @B
eB searchZero 10 -> backToDFromLeft eB 1%
1& backToDFromLeft 10 -> backToDFromLeft 1& 10
$1 prepEraseC e1 -> prepEraseC $1 e1
@X backToSharpOne eE -> backToSharpOne @X eE
e$ backToSharpOne $D -> backToSharpOne e$ $D
@0 prepEraseC $0 -> prepEraseC @0 $0
@$ gotoDecC 11 -> gotoDecC @$ 11
1E restoreCD $0 -> restoreCD 1E $0
e$ checkCD 00 -> checkCD e$ 00
0B searchNextBit e1 -> searchNextBit 0B e1
1B checkCD @D -> checkCD 1B @D
1& backToDFromLeft e% -> backToDFromLeft 1& e%
$1 prepEraseC 0D -> eraseC $1 0D
e1 eraseC $1 -> eraseC e1 $B
$C findBlank $0 -> temp $C $0
1D beginCopying 1B -> backToStart 1D 1C
@# backToStart @0 -> backToStart @# @0
0& goToPlaceForDivider $B -> backToFirstC 0& $D
$% eraseE e0 -> eraseE $% eB
0E backToSharpZero @C -> backToSharpZero 0E @C
e# temp 11 -> beginCopying e# 11
01 backToSharpOne $C -> backToSharpOne 01 $C
e$ dec 10 -> dec e$ 11
1# backToDFromRight 0B -> backToDFromRight 1# 0B
$% backToD 01 -> backToD $% 01
$E gotoDecC e1 -> gotoDecC $E e1
0C prepEraseC $D -> eraseC 0C $D
$X checkCD @D -> checkCD $X @D
$1 backToFirstC 00 -> backToFirstC $1 00
01 incD e1 -> incD 01 e0
$0 backToDFromRight e0 -> backToDFromRight $0 e0
0@ eraseC @0 -> eraseC 0@ @B
00 findBlank 0B -> FINAL 00 0B
@& backToSharpZero $1 -> backToSharpZero @& $1
eC backToDFromLeft 0D -> searchNextBit eC 0D
$C initDivider 00 -> initDividerByTwo $C 00
e@ backToSharpOne $C -> backToSharpOne e@ $C
@E backToSharpOne $C -> backToSharpOne @E $C
e$ backToFirstC $0 -> backToFirstC e$ $0
$% eraseE $0 -> eraseE $% $B
eX temp e1 -> beginCopying eX e1
1@ gotoMark 11 -> gotoMark 1@ 11
$D backToDFromRight $1 -> backToDFromRight $D $1
1# beginCopying @B -> backToStart 1# @C
1E backToD e1 -> backToD 1E e1
eB backToDFromLeft 10 -> backToDFromLeft eB 10
1D backToDFromLeft 11 -> backToDFromLeft 1D 11
$# eraseC eC -> backToStart $# eX
eD copyOne @B -> backToSharpOne eD @1
eD backToSharpZero @X -> backToSharpZero eD @X
@B restoreCD @% -> restoreCD @B @0
0@ backToSharpOne 1D -> backToSharpOne 0@ 1D
1% eraseE e1 -> eraseE 1% eB
10 eraseC @C -> backToStart 10 @X
$@ backToSharpOne 10 -> backToSharpOne $@ 10
e$ restoreCD 0D -> restoreCD e$ 0D
$D forwardToLastD $E -> incD $D $E
@$ restoreCD @& -> restoreCD @$ @1
0B backToDFromRight @1 -> backToDFromRight 0B @1
0& prepEraseC 00 -> prepEraseC 0& 00
$% checkCD $1 -> checkCD $% $1
1@ incD e1 -> incD 1@ e0
1@ searchNextBit $0 -> searchNextBit 1@ $0
@X gotoDecC 0D -> dec @X 0D
e& initDividerByTwo @0 -> backToD e& @1
$D gotoDecC eD -> dec $D eD
@@ restoreCD 0& -> restoreCD @@ 01
@& backToSharpOne eE -> backToSharpOne @& eE
1C temp @0 -> beginCopying 1C @0
e# restoreCD e% -> restoreCD e# e0
@B backToDFromLeft $D -> searchNextBit @B $D
eD prepEraseC 11 -> prepEraseC eD 11
eX goToPlaceForDivider eB -> backToFirstC eX eD
0D incD 11 -> incD 0D 10
0# backToSharpZero 1X -> backToSharpZero 0# 1X
0D searchZero @0 -> backToDFromLeft 0D @%
@1 checkCD $D -> checkCD @1 $D
e& backToD $1 -> backToD e& $1
1E backToFirstC 00 -> backToFirstC 1E 00
1C backToSharpZero 1D -> backToSharpZero 1C 1D
1C backToD $0 -> backToD 1C $0
0D goToPlaceForDivider eB -> backToFirstC 0D eD
$D dec @0 -> dec $D @1
0# findZero @1 -> beginCopying 0# @1
$0 dec $0 -> dec $0 $1
eE restoreCD 0% -> restoreCD eE 00
e1 copyZero eB -> backToSharpZero e1 e0
1& findBlank $1 -> temp 1& $1
$B backToDFromRight 01 -> backToDFromRight $B 01
@$ gotoMark 00 -> gotoMark @$ 00
@0 restoreCD 00 -> restoreCD @0 00
@@ gotoDecC 0D -> dec @@ 0D
$X backToStart 10 -> backToStart $X 10
@B eraseC 11 -> eraseC @B 1B
$C backToD e0 -> backToD $C e0
e1 forwardToLastD $E -> incD e1 $E
$1 incD 10 -> checkCD $1 11
0& copyZero 0B -> backToSharpZero 0& 00
1C initDividerByTwo 00 -> backToD 1C 01
$# backToDFromLeft eD -> searchNextBit $# eD
0B dec $1 -> gotoMark 0B $0
$$ backToSharpZero 0X -> backToSharpZero $$ 0X
@1 temp e1 -> beginCopying @1 e1
@1 backToStart @0 -> backToStart @1 @0
00 copyZero 0B -> backToSharpZero 00 00
eE backToFirstC $0 -> backToFirstC eE $0
@& searchZero @1 -> restoreCD @& @1
$E searchOne @1 -> backToDFromLeft $E @&
$$ backToDFromRight @E -> backToDFromRight $$ @E
0@ eraseE e0 -> eraseE 0@ eB
1$ backToDFromLeft 10 -> backToDFromLeft 1$ 10
0C copyZero 1B -> backToSharpZero 0C 10
@0 backToSharpOne 1C -> backToSharpOne @0 1C
@D backToDFromRight 00 -> backToDFromRight @D 00
@% dec e0 -> dec @% e1
@% backToDFromLeft e& -> backToDFromLeft @% e&
0@ checkCD eD -> checkCD 0@ eD
1& beginCopying eB -> backToStart 1& eC
0% gotoLastE 0@ -> dec 0% 0@
eD searchZero 10 -> backToDFromLeft eD 1%
0# forwardToLastD 1E -> incD 0# 1E
@& eraseE $E -> prepEraseC @& $E
0$ backToSharpOne 0E -> backToSharpOne 0$ 0E
1& searchZero $0 -> backToDFromLeft 1& $%
10 dec $0 -> dec 10 $1
$X prepEraseC 01 -> prepEraseC $X 01
@X backToSharpOne $1 -> backToSharpOne @X $1
@D backToSharpOne @1 -> backToSharpOne @D @1
0& restoreCD 1D -> restoreCD 0& 1D
0@ backToD 01 -> backToD 0@ 01
e0 incD 10 -> checkCD e0 11
0$ backToFirstC 01 -> backToFirstC 0$ 01
$# backToDFromRight @0 -> backToDFromRight $# @0
e$ findBlank $0 -> temp e$ $0
@0 searchNextBit 10 -> searchNextBit @0 10
0$ dec 01 -> gotoMark 0$ 00
0@ backToSharpZero eE -> backToSharpZero 0@ eE
$C dec e1 -> gotoMark $C e0
e@ checkCD e0 -> checkCD e@ e0
1B backToDFromRight 10 -> backToDFromRight 1B 10
@C eraseE e1 -> eraseE @C eB
@1 restoreCD 00 -> restoreCD @1 00
$B checkEForZero $B -> stop $B $B
$& massErase $@ -> eraseE $& $@
eD searchZero 11 -> restoreCD eD 11
11 backToSharpZero 11 -> backToSharpZero 11 11
00 gotoLastE @@ -> dec 00 @@
@1 gotoMark $E -> gotoDecC @1 $E
0C checkCD $0 -> checkCD 0C $0
e@ backToDFromLeft $% -> backToDFromLeft e@ $%
@% backToSharpOne 11 -> backToSharpOne @% 11
@& restoreCD 0D -> restoreCD @& 0D
1D eraseC @1 -> eraseC 1D @B
1E backToStart 10 -> backToStart 1E 10
00 gotoLastE 0@ -> dec 00 0@
eC backToSharpOne $0 -> backToSharpOne eC $0
$X backToStart e1 -> backToStart $X e1
1# backToSharpZero e1 -> backToSharpZero 1# e1
e0 massErase $@ -> eraseE e0 $@
@1 searchZero @0 -> backToDFromLeft @1 @%
@E eraseC 11 -> eraseC @E 1B
10 findZero $1 -> beginCopying 10 $1
1C checkCD @D -> checkCD 1C @D
0@ massErase 0@ -> eraseE 0@ 0@
massErase @1 -> @1 massErase
@D gotoLastE 0@ -> dec @D 0@
e% restoreCD e0 -> restoreCD e% e0
1$ backToSharpZero @E -> backToSharpZero 1$ @E
eC searchOne $1 -> backToDFromLeft eC $&
e% searchZero e0 -> backToDFromLeft e% e%
$$ findBlank 11 -> temp $$ 11
0E backToDFromLeft 1& -> backToDFromLeft 0E 1&
@E initDividerByTwo 00 -> backToD @E 01
eX backToDFromRight 1B -> backToDFromRight eX 1B
1% prepEraseC 11 -> prepEraseC 1% 11
e0 goToPlaceForDivider eB -> backToFirstC e0 eD
eB copyZero @B -> backToSharpZero eB @0
e@ temp 00 -> beginCopying e@ 00
$# backToSharpZero 10 -> backToSharpZero $# 10
1@ replaceWithBlanks @@ -> backToDFromRight 1@ @@
eX prepEraseC @1 -> prepEraseC eX @1
0X findBlank e0 -> temp 0X e0
$0 gotoLastE 1@ -> dec $0 1@
0D searchNextBit @0 -> searchNextBit 0D @0
@& checkCD $D -> checkCD @& $D
createCopy eC -> eC goToPlaceForDivider
eC gotoDecC $1 -> gotoDecC eC $1
@X gotoMark 1E -> gotoDecC @X 1E
e# backToDFromRight 11 -> backToDFromRight e# 11
e$ copyZero $B -> backToSharpZero e$ $0
eD initDivider 00 -> initDividerByTwo eD 00
1D gotoMark 00 -> gotoMark 1D 00
@# eraseC 00 -> eraseC @# 0B
$1 backToFirstC 10 -> backToFirstC $1 10
0D forwardToLastD eE -> incD 0D eE
0E backToSharpZero 1E -> backToSharpZero 0E 1E
eD nullifier @B -> initDivider eD @E
0B findZero $1 -> beginCopying 0B $1
checkZeroD 0D -> 0D searchZero
@E searchOne e1 -> backToDFromLeft @E e&
1# dec 10 -> dec 1# 11
$# backToDFromLeft $% -> backToDFromLeft $# $%
$0 forwardToLastD 0E -> incD $0 0E
$B gotoDecC $0 -> gotoDecC $B $0
1X prepEraseC @D -> eraseC 1X @D
0X eraseE e0 -> eraseE 0X eB
@% forwardToLastD @E -> incD @% @E
e% checkCD @0 -> checkCD e% @0
$B backToSharpOne 0C -> backToSharpOne $B 0C
0D restoreCD $D -> restoreCD 0D $D
1D incD 01 -> incD 1D 00
e# backToSharpZero 0C -> backToSharpZero e# 0C
eE backToDFromRight e1 -> backToDFromRight eE e1
1& copyOne eB -> backToSharpOne 1& e1
1# searchNextBit 01 -> searchNextBit 1# 01
@E checkEForZero 0B -> stop @E 0B
e1 nullifier $B -> initDivider e1 $E
e$ gotoMark $E -> gotoDecC e$ $E
$1 temp $0 -> beginCopying $1 $0
eD backToDFromLeft @% -> backToDFromLeft eD @%
0# backToDFromLeft 01 -> backToDFromLeft 0# 01
eE backToSharpOne @E -> backToSharpOne eE @E
@C searchOne e1 -> backToDFromLeft @C e&
1C backToFirstC 01 -> backToFirstC 1C 01
1X searchZero 00 -> backToDFromLeft 1X 0%
eC massErase 0@ -> eraseE eC 0@
checkEForZero 11 -> 11 massErase
1D restoreCD e1 -> restoreCD 1D e1
1B restoreCD e1 -> restoreCD 1B e1
00 backToSharpOne $1 -> backToSharpOne 00 $1
@% findZero @1 -> beginCopying @% @1
eD replaceWithBlanks $@ -> backToDFromRight eD $@
0E gotoMark 1E -> gotoDecC 0E 1E
1& backToSharpZero 00 -> backToSharpZero 1& 00
@% backToSharpZero 01 -> backToSharpZero @% 01
1E findBlank 10 -> temp 1E 10
e% backToDFromRight 0B -> backToDFromRight e% 0B
@B backToSharpZero 1E -> backToSharpZero @B 1E
1D restoreCD 0D -> restoreCD 1D 0D
$E replaceWithBlanks e@ -> backToDFromRight $E e@
$1 backToFirstC 01 -> backToFirstC $1 01
$$ findZero 01 -> beginCopying $$ 01
$E backToSharpOne @D -> backToSharpOne $E @D
0& dec e0 -> dec 0& e1
@0 restoreCD @D -> restoreCD @0 @D
1B searchOne e1 -> backToDFromLeft 1B e&
$@ temp $1 -> beginCopying $@ $1
e0 goToPlaceForDivider 0B -> backToFirstC e0 0D
0% gotoLastE e@ -> dec 0% e@
e1 backToSharpZero 0X -> backToSharpZero e1 0X
0B beginCopying $B -> backToStart 0B $C
e$ gotoDecC $D -> dec e$ $D
eX restoreCD $D -> restoreCD eX $D
@# backToDFromRight @B -> backToDFromRight @# @B
e$ eraseC 00 -> eraseC e$ 0B
1$ dec 11 -> gotoMark 1$ 10
$C temp $1 -> beginCopying $C $1
@X checkCD @1 -> checkCD @X @1
$B backToDFromLeft 0% -> backToDFromLeft $B 0%
@@ restoreCD $% -> restoreCD @@ $0
11 backToSharpOne 00 -> backToSharpOne 11 00
ifZero eD -> eD moveToE
e1 eraseE @1 -> eraseE e1 @B
0B prepEraseC 11 -> prepEraseC 0B 11
@X nullifier $B -> initDivider @X $E
10 copyOne 0B -> backToSharpOne 10 01
@1 searchNextBit e0 -> searchNextBit @1 e0
beginCopying 00 -> 00 beginCopying
@$ searchOne @1 -> backToDFromLeft @$ @&
eE backToSharpOne $E -> backToSharpOne eE $E
@D backToSharpZero 11 -> backToSharpZero @D 11
0& prepEraseC @1 -> prepEraseC 0& @1
0% backToSharpOne @D -> backToSharpOne 0% @D
FINAL e& -> FINAL e FINAL
1@ backToSharpZero 1D -> backToSharpZero 1@ 1D
1B backToSharpOne 0D -> backToSharpOne 1B 0D
@& gotoMark @1 -> gotoMark @& @1
@E forwardToLastD 1E -> incD @E 1E
1E gotoMark @0 -> gotoMark 1E @0
1X eraseC 1C -> backToStart 1X 1X
eD restoreCD @& -> restoreCD eD @1
$B backToSharpZero $1 -> backToSharpZero $B $1
@$ backToDFromRight $1 -> backToDFromRight @$ $1
eX searchOne $1 -> backToDFromLeft eX $&
$X checkCD 01 -> checkCD $X 01
@E backToSharpZero 0D -> backToSharpZero @E 0D
0& searchZero $1 -> restoreCD 0& $1
@C backToDFromRight eE -> backToDFromRight @C eE
1X backToSharpOne 1D -> backToSharpOne 1X 1D
eD temp 00 -> beginCopying eD 00
@X eraseE $0 -> eraseE @X $B
0D backToSharpZero 0C -> backToSharpZero 0D 0C
e@ backToSharpZero 1D -> backToSharpZero e@ 1D
e$ eraseC 1C -> backToStart e$ 1X
@% backToDFromRight @B -> backToDFromRight @% @B
e1 backToDFromRight 0B -> backToDFromRight e1 0B
@C backToD 01 -> backToD @C 01
$E copyZero 0B -> backToSharpZero $E 00
0B restoreCD @0 -> restoreCD 0B @0
$X restoreCD $0 -> restoreCD $X $0
e# restoreCD e1 -> restoreCD e# e1
0B checkEForZero eB -> stop 0B eB
eB searchZero 00 -> backToDFromLeft eB 0%
1C searchOne $1 -> backToDFromLeft 1C $&
e% goToPlaceForDivider eB -> backToFirstC e% eD
e& backToSharpOne $X -> backToSharpOne e& $X
eB restoreCD $0 -> restoreCD eB $0
1E backToSharpZero eE -> backToSharpZero 1E eE
1& dec 01 -> gotoMark 1& 00
1# incD e0 -> checkCD 1# e1
10 gotoMark e0 -> gotoMark 10 e0
0# backToFirstC $0 -> backToFirstC 0# $0
0# backToDFromLeft 1D -> searchNextBit 0# 1D
@0 checkEForZero 0B -> stop @0 0B
@$ replaceWithBlanks @@ -> backToDFromRight @$ @@
@$ incD $0 -> checkCD @$ $1
eB prepEraseC 10 -> prepEraseC eB 10
@1 backToSharpOne 0C -> backToSharpOne @1 0C
eB searchOne @1 -> backToDFromLeft eB @&
$& incD 11 -> incD $& 10
0D backToFirstC e1 -> backToFirstC 0D e1
0# backToSharpZero 0E -> backToSharpZero 0# 0E
e1 nullifier @B -> initDivider e1 @E
$% checkCD $D -> checkCD $% $D
@& gotoDecC 1D -> dec @& 1D
0X dec @0 -> dec 0X @1
0D searchOne 00 -> restoreCD 0D 00
eD copyOne eB -> backToSharpOne eD e1
e& restoreCD 1% -> restoreCD e& 10
11 gotoMark 1E -> gotoDecC 11 1E
eC backToSharpZero @C -> backToSharpZero eC @C
0% searchOne 01 -> backToDFromLeft 0% 0&
@C backToDFromRight e0 -> backToDFromRight @C e0
eB searchNextBit e1 -> searchNextBit eB e1
eC incD 00 -> checkCD eC 01
00 backToSharpZero eX -> backToSharpZero 00 eX
1@ backToSharpOne e0 -> backToSharpOne 1@ e0
1$ backToDFromLeft 1% -> backToDFromLeft 1$ 1%
@@ gotoMark @0 -> gotoMark @@ @0
$X backToDFromLeft 0D -> searchNextBit $X 0D
1& checkCD e1 -> checkCD 1& e1
11 searchNextBit @0 -> searchNextBit 11 @0
0E backToSharpOne e0 -> backToSharpOne 0E e0
$& replaceWithBlanks @@ -> backToDFromRight $& @@
e1 checkCD @1 -> checkCD e1 @1
@X searchNextBit 00 -> searchNextBit @X 00
1% backToDFromLeft 1& -> backToDFromLeft 1% 1&
$D prepEraseC 00 -> prepEraseC $D 00
$1 gotoMark eE -> gotoDecC $1 eE
@E backToDFromLeft 1% -> backToDFromLeft @E 1%
1$ massErase e@ -> eraseE 1$ e@
@@ restoreCD e0 -> restoreCD @@ e0
0% eraseE eE -> prepEraseC 0% eE
$& backToDFromLeft e0 -> backToDFromLeft $& e0
1C backToSharpZero $E -> backToSharpZero 1C $E
eX nullifier eB -> initDivider eX eE
@@ checkCD $D -> checkCD @@ $D
$# prepEraseC 0D -> eraseC $# 0D
0$ prepEraseC 11 -> prepEraseC 0$ 11
$C restoreCD e0 -> restoreCD $C e0
1# backToDFromLeft e& -> backToDFromLeft 1# e&
1$ copyOne @B -> backToSharpOne 1$ @1
e$ gotoMark 00 -> gotoMark e$ 00
0B temp $0 -> beginCopying 0B $0
eC gotoDecC $0 -> gotoDecC eC $0
1% massErase $@ -> eraseE 1% $@
1C restoreCD eD -> restoreCD 1C eD
copyOne 0E -> 0E copyOne
e0 backToDFromRight 00 -> backToDFromRight e0 00
@& nullifier 1B -> initDivider @& 1E
@E forwardToLastD @E -> incD @E @E
0@ prepEraseC @1 -> prepEraseC 0@ @1
01 backToDFromRight @E -> backToDFromRight 01 @E
1& checkCD 11 -> checkCD 1& 11
e% backToDFromLeft 1D -> searchNextBit e% 1D
gotoLastE @E -> @E gotoLastE
0X prepEraseC $D -> eraseC 0X $D
eB temp 11 -> beginCopying eB 11
0@ searchNextBit $1 -> searchNextBit 0@ $1
01 searchZero @1 -> restoreCD 01 @1
eX searchNextBit 00 -> searchNextBit eX 00
1% backToDFromLeft e& -> backToDFromLeft 1% e&
@# backToSharpZero $X -> backToSharpZero @# $X
e1 forwardToLastD 0E -> incD e1 0E
@% backToFirstC 01 -> backToFirstC @% 01
0X goToPlaceForDivider @B -> backToFirstC 0X @D
e& backToDFromLeft 01 -> backToDFromLeft e& 01
$E backToSharpZero e0 -> backToSharpZero $E e0
@C backToDFromLeft $1 -> backToDFromLeft @C $1
0& checkCD $0 -> checkCD 0& $0
0% backToDFromLeft @& -> backToDFromLeft 0% @&
1D backToDFromRight 0B -> backToDFromRight 1D 0B
@D searchOne 01 -> backToDFromLeft @D 0&
eC backToDFromRight $E -> backToDFromRight eC $E
0& restoreCD 0% -> restoreCD 0& 00
0B restoreCD $% -> restoreCD 0B $0
10 gotoDecC e1 -> gotoDecC 10 e1
$0 searchNextBit @1 -> searchNextBit $0 @1
0B findBlank eB -> FINAL 0B eB
1B backToFirstC $1 -> backToFirstC 1B $1
@@ backToFirstC 01 -> backToFirstC @@ 01
0& gotoMark $0 -> gotoMark 0& $0
@B gotoDecC $D -> dec @B $D
$X forwardToLastD 0E -> incD $X 0E
$X searchZero @0 -> backToDFromLeft $X @%
1C backToSharpZero 1E -> backToSharpZero 1C 1E
0C backToSharpOne @C -> backToSharpOne 0C @C
e& searchZero e0 -> backToDFromLeft e& e%
1E gotoMark 1E -> gotoDecC 1E 1E
1D gotoDecC 11 -> gotoDecC 1D 11
0@ dec 00 -> dec 0@ 01
eC beginCopying 0B -> backToStart eC 0C
$# eraseE e0 -> eraseE $# eB
00 backToSharpOne 0D -> backToSharpOne 00 0D
0X replaceWithBlanks 0@ -> backToDFromRight 0X 0@
1@ copyOne $B -> backToSharpOne 1@ $1
1% backToSharpOne e1 -> backToSharpOne 1% e1
1D findBlank 1B -> FINAL 1D 1B
@& gotoDecC 10 -> gotoDecC @& 10
@1 backToSharpZero @1 -> backToSharpZero @1 @1
@& checkCD @D -> checkCD @& @D
10 backToDFromLeft eD -> searchNextBit 10 eD
e@ dec 01 -> gotoMark e@ 00
0X checkCD e0 -> checkCD 0X e0
1% prepEraseC 10 -> prepEraseC 1% 10
@% searchOne e0 -> restoreCD @% e0
1& eraseC e0 -> eraseC 1& eB
e$ searchOne e0 -> restoreCD e$ e0
@% copyOne 0B -> backToSharpOne @% 01
eE backToDFromLeft 1% -> backToDFromLeft eE 1%
eX backToFirstC 11 -> backToFirstC eX 11
@$ backToD 10 -> backToD @$ 10
e$ massErase e@ -> eraseE e$ e@
$@ backToSharpZero $X -> backToSharpZero $@ $X
0@ gotoMark 11 -> gotoMark 0@ 11
eC restoreCD 01 -> restoreCD eC 01
$B backToStart $0 -> backToStart $B $0
$X backToSharpZero @1 -> backToSharpZero $X @1
$B searchZero e1 -> restoreCD $B e1
11 backToDFromLeft e% -> backToDFromLeft 11 e%
@& gotoDecC $D -> dec @& $D
00 backToSharpOne 0X -> backToSharpOne 00 0X
$E backToFirstC e0 -> backToFirstC $E e0
1$ backToSharpZero 01 -> backToSharpZero 1$ 01
0E searchOne e0 -> restoreCD 0E e0
@@ eraseC eC -> backToStart @@ eX
00 massErase 1@ -> eraseE 00 1@
$C backToDFromLeft 0% -> backToDFromLeft $C 0%
e# searchOne 01 -> backToDFromLeft e# 0&
e@ checkEForZero 0B -> stop e@ 0B
$E backToDFromRight 0B -> backToDFromRight $E 0B
0E findBlank $B -> FINAL 0E $B
@1 temp 01 -> beginCopying @1 01
0% backToSharpOne $C -> backToSharpOne 0% $C
1# findBlank 1B -> FINAL 1# 1B
e& replaceWithBlanks $@ -> backToDFromRight e& $@
11 eraseE @1 -> eraseE 11 @B
@@ checkEForZero 0B -> stop @@ 0B
1B findBlank 11 -> temp 1B 11
@0 backToDFromRight 10 -> backToDFromRight @0 10
1@ gotoMark 10 -> gotoMark 1@ 10
@0 backToSharpOne @E -> backToSharpOne @0 @E
1X copyZero 1B -> backToSharpZero 1X 10
0B beginCopying 1B -> backToStart 0B 1C
0X gotoMark @1 -> gotoMark 0X @1
backToD eD -> eD createCopy
$$ restoreCD $0 -> restoreCD $$ $0
1$ dec 10 -> dec 1$ 11
0X backToSharpZero eX -> backToSharpZero 0X eX
e0 searchOne e0 -> restoreCD e0 e0
0X copyZero 0B -> backToSharpZero 0X 00
1@ backToStart 01 -> backToStart 1@ 01
0D backToFirstC 10 -> backToFirstC 0D 10
1& copyZero 0B -> backToSharpZero 1& 00
0D dec $1 -> gotoMark 0D $0
@# backToStart 11 -> backToStart @# 11
1C initDividerByTwo $0 -> backToD 1C $1
0X backToDFromLeft 0D -> searchNextBit 0X 0D
e0 backToD e0 -> backToD e0 e0
e0 gotoDecC @1 -> gotoDecC e0 @1
eX gotoMark 0E -> gotoDecC eX 0E
01 initDivider 00 -> initDividerByTwo 01 00
e& eraseE $1 -> eraseE e& $B
e# gotoDecC @1 -> gotoDecC e# @1
0C goToPlaceForDivider eB -> backToFirstC 0C eD
0% beginCopying eB -> backToStart 0% eC
1$ backToDFromLeft @0 -> backToDFromLeft 1$ @0
@E backToSharpOne 10 -> backToSharpOne @E 10
00 gotoDecC 00 -> gotoDecC 00 00
e# searchZero 00 -> backToDFromLeft e# 0%
1@ backToStart $0 -> backToStart 1@ $0
eB backToDFromRight $1 -> backToDFromRight eB $1
@0 backToFirstC e1 -> backToFirstC @0 e1
$X findZero @1 -> beginCopying $X @1
01 backToStart $0 -> backToStart 01 $0
1# forwardToLastD @E -> incD 1# @E
0% gotoMark e1 -> gotoMark 0% e1
e1 restoreCD 11 -> restoreCD e1 11
$D gotoMark 10 -> gotoMark $D 10
0& backToDFromRight 0B -> backToDFromRight 0& 0B
e1 restoreCD @D -> restoreCD e1 @D
1E searchZero e0 -> backToDFromLeft 1E e%
FINAL 10 -> FINAL 1 FINAL
massErase 01 -> 01 massErase
eB restoreCD 1D -> restoreCD eB 1D
eD eraseC @C -> backToStart eD @X
11 backToSharpOne $X -> backToSharpOne 11 $X
$# prepEraseC 00 -> prepEraseC $# 00
@# goToPlaceForDivider eB -> backToFirstC @# eD
$0 copyZero eB -> backToSharpZero $0 e0
1E prepEraseC @1 -> prepEraseC 1E @1
1C searchZero 00 -> backToDFromLeft 1C 0%
$@ copyOne eB -> backToSharpOne $@ e1
@# backToDFromRight e0 -> backToDFromRight @# e0
e% backToDFromLeft $& -> backToDFromLeft e% $&
@E backToD e1 -> backToD @E e1
0D searchZero 00 -> backToDFromLeft 0D 0%
11 backToSharpZero @E -> backToSharpZero 11 @E
1E restoreCD @1 -> restoreCD 1E @1
@X checkCD 0D -> checkCD @X 0D
$# eraseC $C -> backToStart $# $X
@B temp @0 -> beginCopying @B @0
$$ gotoDecC $0 -> gotoDecC $$ $0
1C restoreCD 01 -> restoreCD 1C 01
$1 backToSharpOne $1 -> backToSharpOne $1 $1
0C forwardToLastD 0E -> incD 0C 0E
0E eraseC eC -> backToStart 0E eX
@B findZero 11 -> beginCopying @B 11
e1 restoreCD eD -> restoreCD e1 eD
0% backToD 11 -> backToD 0% 11
$0 gotoMark 0E -> gotoDecC $0 0E
$$ backToDFromRight e0 -> backToDFromRight $$ e0
01 eraseC @1 -> eraseC 01 @B
1E gotoLastE 1@ -> dec 1E 1@
eB temp e1 -> beginCopying eB e1
$X backToSharpOne eC -> backToSharpOne $X eC
1@ prepEraseC eD -> eraseC 1@ eD
@1 backToSharpZero $E -> backToSharpZero @1 $E
e$ findZero e1 -> beginCopying e$ e1
0$ backToDFromRight 1B -> backToDFromRight 0$ 1B
@@ backToStart @1 -> backToStart @@ @1
0E eraseC @0 -> eraseC 0E @B
@& backToDFromLeft 1% -> backToDFromLeft @& 1%
@@ searchZero 10 -> backToDFromLeft @@ 1%
@B searchNextBit @0 -> searchNextBit @B @0
0B backToD $1 -> backToD 0B $1
$% backToDFromLeft e1 -> backToDFromLeft $% e1
1E prepEraseC e1 -> prepEraseC 1E e1
$1 backToDFromRight @E -> backToDFromRight $1 @E
1B backToSharpOne eC -> backToSharpOne 1B eC
1E initDivider e0 -> initDividerByTwo 1E e0
$0 temp @0 -> beginCopying $0 @0
@# gotoDecC $0 -> gotoDecC @# $0
@X searchNextBit $1 -> searchNextBit @X $1
$1 gotoLastE e@ -> dec $1 e@
00 checkEForZero 1B -> stop 00 1B
$B restoreCD 0& -> restoreCD $B 01
@% searchNextBit e0 -> searchNextBit @% e0
0E prepEraseC $D -> eraseC 0E $D
0@ gotoLastE @@ -> dec 0@ @@
e0 prepEraseC @D -> eraseC e0 @D
0C backToDFromRight 00 -> backToDFromRight 0C 00
$D checkCD 10 -> checkCD $D 10
0$ backToDFromLeft 0D -> searchNextBit 0$ 0D
$X searchOne 11 -> backToDFromLeft $X 1&
$E gotoMark $E -> gotoDecC $E $E
eD nullifier 1B -> initDivider eD 1E
1X restoreCD $0 -> restoreCD 1X $0
@& backToSharpOne eC -> backToSharpOne @& eC
00 incD $1 -> incD 00 $0
@% backToDFromLeft @% -> backToDFromLeft @% @%
$B gotoMark $0 -> gotoMark $B $0
0B backToDFromRight $B -> backToDFromRight 0B $B
0@ searchZero 10 -> backToDFromLeft 0@ 1%
$E backToDFromLeft 1& -> backToDFromLeft $E 1&
$$ eraseC $0 -> eraseC $$ $B
0X backToDFromLeft e& -> backToDFromLeft 0X e&
@D checkCD 1D -> checkCD @D 1D
$1 copyOne eB -> backToSharpOne $1 e1
@D searchZero @0 -> backToDFromLeft @D @%
1X searchNextBit @0 -> searchNextBit 1X @0
@C backToSharpZero 0X -> backToSharpZero @C 0X
$$ incD $1 -> incD $$ $0
@1 gotoMark $1 -> gotoMark @1 $1
e% searchZero $0 -> backToDFromLeft e% $%
1D incD 10 -> checkCD 1D 11
@0 massErase e@ -> eraseE @0 e@
@# backToFirstC 10 -> backToFirstC @# 10
0B searchOne e0 -> restoreCD 0B e0
eD backToSharpZero 01 -> backToSharpZero eD 01
eD goToPlaceForDivider @B -> backToFirstC eD @D
1@ backToSharpZero 1X -> backToSharpZero 1@ 1X
eB massErase e@ -> eraseE eB e@
@$ massErase @@ -> eraseE @$ @@
eE backToStart @0 -> backToStart eE @0
1% findBlank 01 -> temp 1% 01
1D backToDFromRight @0 -> backToDFromRight 1D @0
$1 backToSharpOne 0X -> backToSharpOne $1 0X
0@ backToSharpZero $D -> backToSharpZero 0@ $D
searchZero 1& -> 1& searchZero
0X backToSharpZero 0C -> backToSharpZero 0X 0C
1& backToDFromLeft $D -> searchNextBit 1& $D
1X gotoMark 11 -> gotoMark 1X 11
0# backToDFromLeft $0 -> backToDFromLeft 0# $0
0% checkCD 01 -> checkCD 0% 01
10 backToSharpZero 0C -> backToSharpZero 10 0C
1X prepEraseC e1 -> prepEraseC 1X e1
@# findZero @1 -> beginCopying @# @1
1% restoreCD e% -> restoreCD 1% e0
$# searchZero $1 -> restoreCD $# $1
$E backToFirstC 01 -> backToFirstC $E 01
@1 eraseC 0C -> backToStart @1 0X
$1 eraseE $E -> prepEraseC $1 $E
e$ searchZero $0 -> backToDFromLeft e$ $%
1$ findZero e1 -> beginCopying 1$ e1
eX eraseE @0 -> eraseE eX @B
eB incD e1 -> incD eB e0
dec 0E -> 0E replaceWithBlanks
eE incD 00 -> checkCD eE 01
@C prepEraseC $1 -> prepEraseC @C $1
1D restoreCD e% -> restoreCD 1D e0
10 backToSharpOne 1X -> backToSharpOne 10 1X
$B backToDFromLeft 00 -> backToDFromLeft $B 00
$D searchNextBit $1 -> searchNextBit $D $1
1D nullifier $B -> initDivider 1D $E
@0 findBlank 01 -> temp @0 01
0$ restoreCD eD -> restoreCD 0$ eD
$% eraseE $E -> prepEraseC $% $E
e# findBlank e0 -> temp e# e0
0# checkCD @1 -> checkCD 0# @1
$B backToSharpZero $D -> backToSharpZero $B $D
0@ goToPlaceForDivider eB -> backToFirstC 0@ eD
0$ checkCD 01 -> checkCD 0$ 01
eB backToSharpOne eE -> backToSharpOne eB eE
nullifier 11 -> 10 nullifier
11 backToSharpOne @0 -> backToSharpOne 11 @0
@E searchNextBit e1 -> searchNextBit @E e1
$E backToDFromRight 0E -> backToDFromRight $E 0E
1& initDividerByTwo @0 -> backToD 1& @1
$1 checkCD $1 -> checkCD $1 $1
@B eraseE $E -> prepEraseC @B $E
$B backToSharpOne 1X -> backToSharpOne $B 1X
$D eraseC @C -> backToStart $D @X
eE backToDFromLeft $% -> backToDFromLeft eE $%
0# beginCopying eB -> backToStart 0# eC
e1 backToSharpOne 1E -> backToSharpOne e1 1E
createCopy e0 -> e# copyZero
@% findZero e1 -> beginCopying @% e1
0E dec $0 -> dec 0E $1
e0 checkEForZero 0B -> stop e0 0B
eD findBlank 00 -> temp eD 00
@% findBlank 0B -> FINAL @% 0B
$% restoreCD @D -> restoreCD $% @D
0C beginCopying eB -> backToStart 0C eC
$% searchOne e0 -> restoreCD $% e0
eC findBlank @1 -> temp eC @1
@@ temp 10 -> beginCopying @@ 10
1# backToDFromRight @0 -> backToDFromRight 1# @0
1C searchNextBit e0 -> searchNextBit 1C e0
1X restoreCD 00 -> restoreCD 1X 00
0@ FINAL -> FINAL 0 FINAL
1@ gotoDecC e1 -> gotoDecC 1@ e1
e@ checkCD e1 -> checkCD e@ e1
$1 searchNextBit @0 -> searchNextBit $1 @0
0% restoreCD @& -> restoreCD 0% @1
@$ backToStart $0 -> backToStart @$ $0
ifZero 11 -> 11 gotoLastE
0D restoreCD 0D -> restoreCD 0D 0D
0% goToPlaceForDivider $B -> backToFirstC 0% $D
@B backToSharpOne 1X -> backToSharpOne @B 1X
$# prepEraseC 1D -> eraseC $# 1D
0% backToSharpOne 01 -> backToSharpOne 0% 01
$$ backToSharpZero e0 -> backToSharpZero $$ e0
1X gotoDecC @D -> dec 1X @D
e$ restoreCD e0 -> restoreCD e$ e0
$# gotoMark @0 -> gotoMark $# @0
1C beginCopying 1B -> backToStart 1C 1C
1C replaceWithBlanks @@ -> backToDFromRight 1C @@
1D copyZero $B -> backToSharpZero 1D $0
@C replaceWithBlanks 1@ -> backToDFromRight @C 1@
@D eraseE 11 -> eraseE @D 1B
@D restoreCD 0D -> restoreCD @D 0D
0X backToDFromLeft $D -> searchNextBit 0X $D
eE searchZero e0 -> backToDFromLeft eE e%
1# backToSharpOne @C -> backToSharpOne 1# @C
0& searchZero 10 -> backToDFromLeft 0& 1%
copyZero 0E -> 0E copyZero
e$ restoreCD e% -> restoreCD e$ e0
e@ backToDFromRight 1E -> backToDFromRight e@ 1E
0# checkCD 00 -> checkCD 0# 00
0$ dec @0 -> dec 0$ @1
1@ backToFirstC @0 -> backToFirstC 1@ @0
00 restoreCD e1 -> restoreCD 00 e1
@% gotoMark @E -> gotoDecC @% @E
$0 searchOne e0 -> restoreCD $0 e0
$B nullifier 0B -> initDivider $B 0E
11 searchNextBit $0 -> searchNextBit 11 $0
moveToE @0 -> @0 moveToE
1& backToSharpZero $0 -> backToSharpZero 1& $0
0% checkCD 1D -> checkCD 0% 1D
@% eraseC @C -> backToStart @% @X
@C prepEraseC e1 -> prepEraseC @C e1
e0 copyOne $B -> backToSharpOne e0 $1
@X backToSharpZero 0D -> backToSharpZero @X 0D
1@ searchNextBit 10 -> searchNextBit 1@ 10
1B backToSharpOne @E -> backToSharpOne 1B @E
e1 gotoDecC 00 -> gotoDecC e1 00
@% backToD e1 -> backToD @% e1
@X backToSharpZero 10 -> backToSharpZero @X 10
1C eraseC $0 -> eraseC 1C $B
@D searchOne 10 -> restoreCD @D 10
@$ backToDFromLeft 1& -> backToDFromLeft @$ 1&
eC initDividerByTwo e0 -> backToD eC e1
0C backToFirstC $0 -> backToFirstC 0C $0
1E backToDFromLeft e& -> backToDFromLeft 1E e&
$@ gotoDecC $1 -> gotoDecC $@ $1
1% backToSharpZero $E -> backToSharpZero 1% $E
@X checkEForZero $B -> stop @X $B
$0 initDividerByTwo 00 -> backToD $0 01
@1 backToDFromLeft @& -> backToDFromLeft @1 @&
eX gotoLastE @@ -> dec eX @@
e% prepEraseC 01 -> prepEraseC e% 01
1E copyOne 0B -> backToSharpOne 1E 01
e% restoreCD 1% -> restoreCD e% 10
$1 findBlank @0 -> temp $1 @0
1@ findZero @1 -> beginCopying 1@ @1
@0 eraseE @E -> prepEraseC @0 @E
0E backToSharpZero eD -> backToSharpZero 0E eD
@& goToPlaceForDivider @B -> backToFirstC @& @D
0& temp @0 -> beginCopying 0& @0
$E restoreCD 0D -> restoreCD $E 0D
0D backToSharpZero 10 -> backToSharpZero 0D 10
$E backToSharpZero @C -> backToSharpZero $E @C
eC backToDFromLeft @% -> backToDFromLeft eC @%
eD checkEForZero @B -> stop eD @B
e1 backToD e0 -> backToD e1 e0
@E backToDFromRight eE -> backToDFromRight @E eE
0B eraseE 11 -> eraseE 0B 1B
e% backToSharpOne @1 -> backToSharpOne e% @1
$0 backToDFromLeft $0 -> backToDFromLeft $0 $0
0C backToFirstC e1 -> backToFirstC 0C e1
@E gotoDecC @0 -> gotoDecC @E @0
1% backToStart 10 -> backToStart 1% 10
@C backToD $0 -> backToD @C $0
$E backToSharpZero 00 -> backToSharpZero $E 00
1# temp $1 -> beginCopying 1# $1
e@ incD @0 -> checkCD e@ @1
eB backToDFromLeft 0& -> backToDFromLeft eB 0&
1@ eraseC @1 -> eraseC 1@ @B
eB goToPlaceForDivider $B -> backToFirstC eB $D
01 incD 11 -> incD 01 10
1# restoreCD eD -> restoreCD 1# eD
$C backToDFromLeft 10 -> backToDFromLeft $C 10
@D findBlank 11 -> temp @D 11
@& checkCD $1 -> checkCD @& $1
1# prepEraseC 1D -> eraseC 1# 1D
10 findZero e1 -> beginCopying 10 e1
10 backToDFromLeft $1 -> backToDFromLeft 10 $1
eE searchZero 00 -> backToDFromLeft eE 0%
0@ backToSharpZero 1D -> backToSharpZero 0@ 1D
$X backToSharpOne eE -> backToSharpOne $X eE
eE findBlank $1 -> temp eE $1
@$ findZero 01 -> beginCopying @$ 01
$$ backToSharpOne e1 -> backToSharpOne $$ e1
e$ forwardToLastD $E -> incD e$ $E
@& backToFirstC 00 -> backToFirstC @& 00
e@ findZero 01 -> beginCopying e@ 01
@B eraseC @0 -> eraseC @B @B
$C incD $1 -> incD $C $0
$& backToSharpOne 1X -> backToSharpOne $& 1X
$B searchOne 00 -> restoreCD $B 00
1B incD @1 -> incD 1B @0
e# incD e1 -> incD e# e0
1$ eraseE 11 -> eraseE 1$ 1B
@@ backToSharpZero $C -> backToSharpZero @@ $C
0& backToDFromRight $E -> backToDFromRight 0& $E
1C copyZero 1B -> backToSharpZero 1C 10
eX backToStart $1 -> backToStart eX $1
$% backToStart 10 -> backToStart $% 10
nullifier 01 -> 00 nullifier
$X replaceWithBlanks 1@ -> backToDFromRight $X 1@
0E backToDFromLeft @1 -> backToDFromLeft 0E @1
$B replaceWithBlanks @@ -> backToDFromRight $B @@
eB backToStart @1 -> backToStart eB @1
1% gotoMark $1 -> gotoMark 1% $1
$# dec @0 -> dec $# @1
backToDAfterInc @1 -> @1 backToDAfterInc
0# checkCD @D -> checkCD 0# @D
0# backToSharpOne 0X -> backToSharpOne 0# 0X
1C replaceWithBlanks 0@ -> backToDFromRight 1C 0@
1E searchZero @0 -> backToDFromLeft 1E @%
@% backToSharpZero $C -> backToSharpZero @% $C
eX gotoDecC @0 -> gotoDecC eX @0
$X copyZero 0B -> backToSharpZero $X 00
e@ incD $1 -> incD e@ $0
1B copyOne @B -> backToSharpOne 1B @1
0X backToSharpZero @0 -> backToSharpZero 0X @0
1$ checkCD eD -> checkCD 1$ eD
00 eraseC 10 -> eraseC 00 1B
$E backToSharpZero 1C -> backToSharpZero $E 1C
@C backToDFromLeft e& -> backToDFromLeft @C e&
1# searchZero $1 -> restoreCD 1# $1
$1 replaceWithBlanks @@ -> backToDFromRight $1 @@
@B dec @0 -> dec @B @1
0D goToPlaceForDivider 1B -> backToFirstC 0D 1D
1& incD e1 -> incD 1& e0
$$ beginCopying $B -> backToStart $$ $C
@1 incD e0 -> checkCD @1 e1
$E backToStart 11 -> backToStart $E 11
1X backToSharpZero @X -> backToSharpZero 1X @X
$# backToDFromLeft e0 -> backToDFromLeft $# e0
@C eraseC eC -> backToStart @C eX
@E backToSharpOne @0 -> backToSharpOne @E @0
$$ findBlank $0 -> temp $$ $0
$B backToSharpOne eX -> backToSharpOne $B eX
@D initDividerByTwo 10 -> backToD @D 11
01 searchZero 00 -> backToDFromLeft 01 0%
1E backToSharpZero 0E -> backToSharpZero 1E 0E
1C eraseE 11 -> eraseE 1C 1B
1E eraseE $0 -> eraseE 1E $B
e$ gotoDecC @1 -> gotoDecC e$ @1
0D backToDFromLeft 00 -> backToDFromLeft 0D 00
e# dec @1 -> gotoMark e# @0
10 restoreCD 1D -> restoreCD 10 1D
0C backToSharpOne @1 -> backToSharpOne 0C @1
1E temp 11 -> beginCopying 1E 11
1% findBlank 1B -> FINAL 1% 1B
e# backToDFromLeft @D -> searchNextBit e# @D
eC backToSharpZero 1E -> backToSharpZero eC 1E
eE eraseE $E -> prepEraseC eE $E
e$ findBlank e0 -> temp e$ e0
@1 backToSharpZero e0 -> backToSharpZero @1 e0
@@ nullifier eB -> initDivider @@ eE
$D eraseC e0 -> eraseC $D eB
$D gotoMark 11 -> gotoMark $D 11
@0 searchNextBit 11 -> searchNextBit @0 11
@& temp 10 -> beginCopying @& 10
eC findBlank e0 -> temp eC e0
@D searchNextBit $1 -> searchNextBit @D $1
0X restoreCD 1& -> restoreCD 0X 11
0B FINAL -> FINAL 0 FINAL
0% dec @0 -> dec 0% @1
$$ backToFirstC $1 -> backToFirstC $$ $1
$B massErase @@ -> eraseE $B @@
@B nullifier eB -> initDivider @B eE
0E backToDFromLeft $& -> backToDFromLeft 0E $&
0# backToDFromRight 00 -> backToDFromRight 0# 00
10 searchZero e1 -> restoreCD 10 e1
1& searchNextBit e1 -> searchNextBit 1& e1
1@ backToDFromLeft e% -> backToDFromLeft 1@ e%
0@ incD 11 -> incD 0@ 10
0D forwardToLastD 1E -> incD 0D 1E
e% searchZero 00 -> backToDFromLeft e% 0%
@& backToDFromRight e1 -> backToDFromRight @& e1
1% restoreCD $% -> restoreCD 1% $0
$D findBlank e1 -> temp $D e1
$1 restoreCD @0 -> restoreCD $1 @0
eB backToSharpZero $D -> backToSharpZero eB $D
10 forwardToLastD eE -> incD 10 eE
@% backToSharpZero e1 -> backToSharpZero @% e1
@& goToPlaceForDivider 0B -> backToFirstC @& 0D
$$ backToSharpZero 11 -> backToSharpZero $$ 11
1E initDividerByTwo 00 -> backToD 1E 01
11 backToSharpZero @1 -> backToSharpZero 11 @1
e# gotoDecC eD -> dec e# eD
$C gotoMark $0 -> gotoMark $C $0
@# backToSharpZero 0C -> backToSharpZero @# 0C
0% backToFirstC e1 -> backToFirstC 0% e1
forwardToLastD $0 -> $0 forwardToLastD
$B initDividerByTwo e0 -> backToD $B e1
0B initDividerByTwo 00 -> backToD 0B 01
@B backToSharpOne 01 -> backToSharpOne @B 01
@@ gotoMark 1E -> gotoDecC @@ 1E
@& backToStart $0 -> backToStart @& $0
1$ backToSharpZero 1X -> backToSharpZero 1$ 1X
@# eraseC $1 -> eraseC @# $B
1E backToDFromLeft $0 -> backToDFromLeft 1E $0
e1 gotoDecC @0 -> gotoDecC e1 @0
e1 initDividerByTwo 10 -> backToD e1 11
e1 checkEForZero 1B -> stop e1 1B
e$ searchZero @0 -> backToDFromLeft e$ @%
$% temp e0 -> beginCopying $% e0
@B findZero $1 -> beginCopying @B $1
1% replaceWithBlanks 0@ -> backToDFromRight 1% 0@
eE backToSharpZero eE -> backToSharpZero eE eE
@1 eraseC 1C -> backToStart @1 1X
0C gotoLastE e@ -> dec 0C e@
1& dec @1 -> gotoMark 1& @0
e# restoreCD 0% -> restoreCD e# 00
0B searchOne 11 -> backToDFromLeft 0B 1&
eC searchOne e1 -> backToDFromLeft eC e&
0C backToSharpOne 0E -> backToSharpOne 0C 0E
eE prepEraseC 11 -> prepEraseC eE 11
@@ dec $0 -> dec @@ $1
1$ backToDFromRight @E -> backToDFromRight 1$ @E
e$ backToStart 10 -> backToStart e$ 10
eD copyZero $B -> backToSharpZero eD $0
1% backToDFromLeft $0 -> backToDFromLeft 1% $0
@B initDividerByTwo e0 -> backToD @B e1
e% dec $0 -> dec e% $1
1D backToSharpZero @X -> backToSharpZero 1D @X
eD backToSharpZero @D -> backToSharpZero eD @D
1$ gotoMark $1 -> gotoMark 1$ $1
1B backToDFromLeft 0& -> backToDFromLeft 1B 0&
@@ backToSharpZero 00 -> backToSharpZero @@ 00
0# copyOne @B -> backToSharpOne 0# @1
e# backToSharpZero eE -> backToSharpZero e# eE
1B backToD 00 -> backToD 1B 00
1@ backToDFromRight 01 -> backToDFromRight 1@ 01
@X backToDFromRight e1 -> backToDFromRight @X e1
1E gotoDecC 01 -> gotoDecC 1E 01
e@ eraseE $E -> prepEraseC e@ $E
1D checkCD $1 -> checkCD 1D $1
e@ goToPlaceForDivider @B -> backToFirstC e@ @D
$& initDivider 00 -> initDividerByTwo $& 00
1B eraseE e0 -> eraseE 1B eB
0C backToDFromLeft @& -> backToDFromLeft 0C @&
@@ restoreCD 00 -> restoreCD @@ 00
0B temp e1 -> beginCopying 0B e1
$X gotoMark 10 -> gotoMark $X 10
@# backToSharpOne 00 -> backToSharpOne @# 00
$B backToDFromLeft e0 -> backToDFromLeft $B e0
eC gotoMark @0 -> gotoMark eC @0
1E backToSharpOne 11 -> backToSharpOne 1E 11
e@ findBlank @B -> FINAL e@ @B
@1 gotoLastE e@ -> dec @1 e@
$B prepEraseC 11 -> prepEraseC $B 11
@D gotoDecC $1 -> gotoDecC @D $1
eX checkCD 1D -> checkCD eX 1D
$E copyZero eB -> backToSharpZero $E e0
1E incD 01 -> incD 1E 00
$X backToDFromLeft eD -> searchNextBit $X eD
1# replaceWithBlanks 0@ -> backToDFromRight 1# 0@
0% restoreCD $% -> restoreCD 0% $0
$B backToDFromLeft $0 -> backToDFromLeft $B $0
eE prepEraseC $1 -> prepEraseC eE $1
1@ backToDFromLeft $% -> backToDFromLeft 1@ $%
$& temp @0 -> beginCopying $& @0
eC temp e1 -> beginCopying eC e1
eE backToFirstC e0 -> backToFirstC eE e0
0X restoreCD e1 -> restoreCD 0X e1
$# checkCD 01 -> checkCD $# 01
forwardToLastD 11 -> 11 forwardToLastD
0# findZero $1 -> beginCopying 0# $1
$& backToFirstC e0 -> backToFirstC $& e0
1E backToSharpOne $X -> backToSharpOne 1E $X
$X backToSharpOne 01 -> backToSharpOne $X 01
1X restoreCD e% -> restoreCD 1X e0
$E backToFirstC 10 -> backToFirstC $E 10
0@ massErase @@ -> eraseE 0@ @@
$1 backToDFromRight e1 -> backToDFromRight $1 e1
@& dec e1 -> gotoMark @& e0
@@ findBlank 0B -> FINAL @@ 0B
@C gotoDecC $0 -> gotoDecC @C $0
1& restoreCD @D -> restoreCD 1& @D
1C incD @1 -> incD 1C @0
$1 backToD 00 -> backToD $1 00
$0 goToPlaceForDivider eB -> backToFirstC $0 eD
0$ searchOne e0 -> restoreCD 0$ e0
eE backToDFromRight @0 -> backToDFromRight eE @0
$X backToD e1 -> backToD $X e1
0E backToDFromLeft @% -> backToDFromLeft 0E @%
0$ findBlank e0 -> temp 0$ e0
e1 eraseE 00 -> eraseE e1 0B
@B incD 00 -> checkCD @B 01
1@ restoreCD $% -> restoreCD 1@ $0
@% checkEForZero 0B -> stop @% 0B
$@ eraseE @E -> prepEraseC $@ @E
@1 backToFirstC 11 -> backToFirstC @1 11
@D eraseE 0E -> prepEraseC @D 0E
$& searchZero @0 -> backToDFromLeft $& @%
1# backToDFromLeft 1D -> searchNextBit 1# 1D
$C backToDFromLeft e1 -> backToDFromLeft $C e1
$1 backToSharpZero @D -> backToSharpZero $1 @D
0% backToDFromLeft @0 -> backToDFromLeft 0% @0
1# checkCD 1D -> checkCD 1# 1D
$0 checkCD @1 -> checkCD $0 @1
e& eraseE 1E -> prepEraseC e& 1E
eC incD 10 -> checkCD eC 11
0@ gotoLastE 0@ -> dec 0@ 0@
@% goToPlaceForDivider eB -> backToFirstC @% eD
createCopy $X -> $C forwardToLastD
01 replaceWithBlanks 0@ -> backToDFromRight 01 0@
$$ gotoDecC @0 -> gotoDecC $$ @0
0E prepEraseC @0 -> prepEraseC 0E @0
1@ backToSharpOne $D -> backToSharpOne 1@ $D
e& backToSharpZero eD -> backToSharpZero e& eD
@% prepEraseC 1D -> eraseC @% 1D
eD eraseE $1 -> eraseE eD $B
1B nullifier @B -> initDivider 1B @E
$E nullifier $B -> initDivider $E $E
@0 backToStart e1 -> backToStart @0 e1
$1 eraseC 1C -> backToStart $1 1X
$& backToDFromRight $1 -> backToDFromRight $& $1
$& incD @0 -> checkCD $& @1
@0 backToStart $0 -> backToStart @0 $0
0E forwardToLastD @E -> incD 0E @E
1$ gotoDecC @D -> dec 1$ @D
$E eraseC 01 -> eraseC $E 0B
@% searchNextBit 01 -> searchNextBit @% 01
eB checkEForZero $B -> stop eB $B
1& searchOne 01 -> backToDFromLeft 1& 0&
eD backToDFromRight @B -> backToDFromRight eD @B
$$ dec 01 -> gotoMark $$ 00
1& initDivider @0 -> initDividerByTwo 1& @0
01 eraseE $E -> prepEraseC 01 $E
@D backToSharpOne @D -> backToSharpOne @D @D
@X searchNextBit e0 -> searchNextBit @X e0
1# prepEraseC $0 -> prepEraseC 1# $0
$$ copyZero eB -> backToSharpZero $$ e0
e& gotoDecC 1D -> dec e& 1D
1# restoreCD e1 -> restoreCD 1# e1
@1 replaceWithBlanks 1@ -> backToDFromRight @1 1@
$0 backToSharpZero 0C -> backToSharpZero $0 0C
eD backToDFromRight 0B -> backToDFromRight eD 0B
e% eraseE @0 -> eraseE e% @B
$B restoreCD @1 -> restoreCD $B @1
e# backToStart e1 -> backToStart e# e1
$& backToDFromLeft 00 -> backToDFromLeft $& 00
$C backToSharpOne 1C -> backToSharpOne $C 1C
0C copyOne 0B -> backToSharpOne 0C 01
@@ backToStart $1 -> backToStart @@ $1
$X eraseC 01 -> eraseC $X 0B
@D checkCD 0D -> checkCD @D 0D
e# backToSharpZero 01 -> backToSharpZero e# 01
$C backToStart 00 -> backToStart $C 00
@B backToDFromLeft 11 -> backToDFromLeft @B 11
1# initDivider @0 -> initDividerByTwo 1# @0
$$ eraseC 10 -> eraseC $$ 1B
01 backToDFromRight e1 -> backToDFromRight 01 e1
@X backToSharpZero 1E -> backToSharpZero @X 1E
$0 backToStart $0 -> backToStart $0 $0
@& backToSharpZero 10 -> backToSharpZero @& 10
0C backToStart @0 -> backToStart 0C @0
01 backToFirstC 10 -> backToFirstC 01 10
0B backToFirstC $0 -> backToFirstC 0B $0
1B searchNextBit 01 -> searchNextBit 1B 01
1$ gotoDecC $D -> dec 1$ $D
0$ backToSharpZero eE -> backToSharpZero 0$ eE
1X incD @1 -> incD 1X @0
eE eraseE e1 -> eraseE eE eB
@1 forwardToLastD $E -> incD @1 $E
0@ backToDFromRight 0E -> backToDFromRight 0@ 0E
@0 backToSharpZero $X -> backToSharpZero @0 $X
@C eraseC @0 -> eraseC @C @B
$E prepEraseC 11 -> prepEraseC $E 11
0C backToDFromRight 10 -> backToDFromRight 0C 10
0B backToSharpZero @D -> backToSharpZero 0B @D
@C searchOne $1 -> backToDFromLeft @C $&
0E massErase e@ -> eraseE 0E e@
1C checkCD @1 -> checkCD 1C @1
0D backToSharpOne @E -> backToSharpOne 0D @E
$D backToSharpOne @0 -> backToSharpOne $D @0
e& initDivider $0 -> initDividerByTwo e& $0
1% backToSharpZero eC -> backToSharpZero 1% eC
@# prepEraseC e1 -> prepEraseC @# e1
0% backToSharpZero 1D -> backToSharpZero 0% 1D
$@ initDividerByTwo 00 -> backToD $@ 01
@& searchZero e1 -> restoreCD @& e1
@0 findBlank 10 -> temp @0 10
$X backToFirstC 01 -> backToFirstC $X 01
backToFirstC eC -> eC createCopy
0C backToStart e0 -> backToStart 0C e0
eE restoreCD e0 -> restoreCD eE e0
0& prepEraseC e0 -> prepEraseC 0& e0
01 backToDFromRight 00 -> backToDFromRight 01 00
$% backToSharpZero 11 -> backToSharpZero $% 11
e& gotoDecC 11 -> gotoDecC e& 11
FINAL 1# -> FINAL 1 FINAL
@$ backToDFromRight @0 -> backToDFromRight @$ @0
$X eraseE 10 -> eraseE $X 1B
@% goToPlaceForDivider $B -> backToFirstC @% $D
$0 checkCD 10 -> checkCD $0 10
findZero 00 -> 00 findBlank
1D backToDFromLeft e% -> backToDFromLeft 1D e%
$B dec $1 -> gotoMark $B $0
e& backToSharpOne 1D -> backToSharpOne e& 1D
eB gotoDecC e1 -> gotoDecC eB e1
eC backToDFromLeft @D -> searchNextBit eC @D
1E backToSharpZero $C -> backToSharpZero 1E $C
@@ restoreCD e1 -> restoreCD @@ e1
@B backToSharpOne @C -> backToSharpOne @B @C
@& goToPlaceForDivider $B -> backToFirstC @& $D
0C backToD e1 -> backToD 0C e1
eX searchNextBit e1 -> searchNextBit eX e1
@% backToSharpOne @C -> backToSharpOne @% @C
0# backToSharpOne e0 -> backToSharpOne 0# e0
e& backToDFromRight @0 -> backToDFromRight e& @0
e% backToDFromLeft 1& -> backToDFromLeft e% 1&
$@ replaceWithBlanks @@ -> backToDFromRight $@ @@
e@ eraseE 00 -> eraseE e@ 0B
@0 replaceWithBlanks $@ -> backToDFromRight @0 $@
0% backToSharpZero 01 -> backToSharpZero 0% 01
0$ restoreCD e& -> restoreCD 0$ e1
eX restoreCD 01 -> restoreCD eX 01
@1 searchOne @1 -> backToDFromLeft @1 @&
0# backToStart 01 -> backToStart 0# 01
$E gotoDecC 1D -> dec $E 1D
eD incD $0 -> checkCD eD $1
@& copyOne eB -> backToSharpOne @& e1
01 searchNextBit 00 -> searchNextBit 01 00
$D prepEraseC 01 -> prepEraseC $D 01
01 eraseC e0 -> eraseC 01 eB
$D restoreCD e0 -> restoreCD $D e0
0# backToFirstC @0 -> backToFirstC 0# @0
e& findBlank @B -> FINAL e& @B
1% initDivider @0 -> initDividerByTwo 1% @0
eD gotoDecC $1 -> gotoDecC eD $1
@E beginCopying 1B -> backToStart @E 1C
@B checkCD @D -> checkCD @B @D
@C dec 10 -> dec @C 11
$C eraseC $1 -> eraseC $C $B
0D backToDFromRight e0 -> backToDFromRight 0D e0
0$ gotoDecC 1D -> dec 0$ 1D
e& temp e0 -> beginCopying e& e0
e# backToSharpOne 01 -> backToSharpOne e# 01
@X backToDFromRight 00 -> backToDFromRight @X 00
0E eraseE $0 -> eraseE 0E $B
$0 checkEForZero @B -> stop $0 @B
e@ backToStart 10 -> backToStart e@ 10
eE copyOne 0B -> backToSharpOne eE 01
e$ findBlank 1B -> FINAL e$ 1B
0E backToSharpZero $1 -> backToSharpZero 0E $1
@D backToStart e1 -> backToStart @D e1
eB incD 00 -> checkCD eB 01
0% gotoMark 10 -> gotoMark 0% 10
eB backToDFromLeft 1D -> searchNextBit eB 1D
@1 copyZero 0B -> backToSharpZero @1 00
$X backToSharpZero @C -> backToSharpZero $X @C
$D restoreCD e% -> restoreCD $D e0
0# backToStart $0 -> backToStart 0# $0
e% backToStart $1 -> backToStart e% $1
@@ backToDFromLeft eD -> searchNextBit @@ eD
$C backToSharpZero @D -> backToSharpZero $C @D
$X searchOne $0 -> restoreCD $X $0
@C checkCD @1 -> checkCD @C @1
1D prepEraseC @0 -> prepEraseC 1D @0
0@ backToSharpZero 11 -> backToSharpZero 0@ 11
1% restoreCD @0 -> restoreCD 1% @0
@# initDividerByTwo 00 -> backToD @# 01
$% searchOne $0 -> restoreCD $% $0
gotoMark 1C -> 1C ifZero
1D dec $1 -> gotoMark 1D $0
0# restoreCD 10 -> restoreCD 0# 10
01 restoreCD 0& -> restoreCD 01 01
$% checkEForZero $B -> stop $% $B
0E searchNextBit $0 -> searchNextBit 0E $0
@& backToDFromLeft e% -> backToDFromLeft @& e%
@# forwardToLastD $E -> incD @# $E
0D backToFirstC e0 -> backToFirstC 0D e0
@0 backToSharpOne eE -> backToSharpOne @0 eE
$D backToDFromRight 01 -> backToDFromRight $D 01
$C backToSharpZero eE -> backToSharpZero $C eE
0E prepEraseC @1 -> prepEraseC 0E @1
@0 searchOne e1 -> backToDFromLeft @0 e&
0% backToSharpZero @1 -> backToSharpZero 0% @1
1# gotoLastE $@ -> dec 1# $@
10 prepEraseC 01 -> prepEraseC 10 01
$D backToSharpOne 1C -> backToSharpOne $D 1C
@& backToDFromLeft @D -> searchNextBit @& @D
e% beginCopying 0B -> backToStart e% 0C
1@ nullifier 0B -> initDivider 1@ 0E
e$ eraseE $E -> prepEraseC e$ $E
$% dec 01 -> gotoMark $% 00
e& backToSharpOne $D -> backToSharpOne e& $D
e1 gotoMark 00 -> gotoMark e1 00
10 backToSharpZero @0 -> backToSharpZero 10 @0
eE backToDFromRight $0 -> backToDFromRight eE $0
1@ eraseE 00 -> eraseE 1@ 0B
@B backToFirstC 01 -> backToFirstC @B 01
1% backToDFromLeft 0% -> backToDFromLeft 1% 0%
0% eraseE 1E -> prepEraseC 0% 1E
e@ backToSharpOne 11 -> backToSharpOne e@ 11
$0 goToPlaceForDivider @B -> backToFirstC $0 @D
eD backToSharpOne $1 -> backToSharpOne eD $1
$& checkCD 10 -> checkCD $& 10
$X backToFirstC 11 -> backToFirstC $X 11
1& prepEraseC eD -> eraseC 1& eD
0# backToSharpZero 01 -> backToSharpZero 0# 01
eX backToDFromLeft e0 -> backToDFromLeft eX e0
$@ backToSharpOne 1X -> backToSharpOne $@ 1X
1X searchOne 11 -> backToDFromLeft 1X 1&
$B backToSharpOne 1D -> backToSharpOne $B 1D
$$ temp $0 -> beginCopying $$ $0
0% eraseC e1 -> eraseC 0% eB
@# temp 10 -> beginCopying @# 10
$@ backToDFromLeft e1 -> backToDFromLeft $@ e1
@B eraseE 01 -> eraseE @B 0B
@E gotoDecC @1 -> gotoDecC @E @1
0X gotoMark 11 -> gotoMark 0X 11
$C findZero e1 -> beginCopying $C e1
1C eraseE e0 -> eraseE 1C eB
@C searchNextBit $0 -> searchNextBit @C $0
eX backToSharpOne 1X -> backToSharpOne eX 1X
1C restoreCD e& -> restoreCD 1C e1
e$ eraseE @0 -> eraseE e$ @B
e0 gotoMark 10 -> gotoMark e0 10
e1 backToSharpZero 0D -> backToSharpZero e1 0D
1$ dec @1 -> gotoMark 1$ @0
e$ backToDFromLeft 11 -> backToDFromLeft e$ 11
1& findZero @1 -> beginCopying 1& @1
e@ findZero 11 -> beginCopying e@ 11
@& backToSharpZero 0X -> backToSharpZero @& 0X
@X findBlank @0 -> temp @X @0
0% checkCD $D -> checkCD 0% $D
@& restoreCD e% -> restoreCD @& e0
@$ backToStart @1 -> backToStart @$ @1
@# backToDFromLeft $0 -> backToDFromLeft @# $0
@E backToD e0 -> backToD @E e0
11 searchOne e1 -> backToDFromLeft 11 e&
0D backToDFromRight 0E -> backToDFromRight 0D 0E
@0 forwardToLastD 1E -> incD @0 1E
1B incD e1 -> incD 1B e0
@B backToSharpZero 00 -> backToSharpZero @B 00
$@ prepEraseC @1 -> prepEraseC $@ @1
@% copyOne eB -> backToSharpOne @% e1
@X backToStart e1 -> backToStart @X e1
0C gotoDecC 01 -> gotoDecC 0C 01
01 findBlank $0 -> temp 01 $0
@0 backToSharpZero 00 -> backToSharpZero @0 00
@0 backToSharpOne 01 -> backToSharpOne @0 01
@& backToFirstC e1 -> backToFirstC @& e1
@% goToPlaceForDivider 1B -> backToFirstC @% 1D
1D backToSharpOne eD -> backToSharpOne 1D eD
e$ searchOne 00 -> restoreCD e$ 00
1@ backToSharpOne eD -> backToSharpOne 1@ eD
1D prepEraseC 1D -> eraseC 1D 1D
$C backToSharpOne e0 -> backToSharpOne $C e0
0# copyOne 0B -> backToSharpOne 0# 01
e0 massErase @@ -> eraseE e0 @@
1X checkEForZero eB -> stop 1X eB
0D backToDFromRight $B -> backToDFromRight 0D $B
e0 prepEraseC e1 -> prepEraseC e0 e1
@C backToDFromRight 00 -> backToDFromRight @C 00
e% replaceWithBlanks e@ -> backToDFromRight e% e@
@B backToDFromRight 01 -> backToDFromRight @B 01
0% backToDFromLeft $0 -> backToDFromLeft 0% $0
eE gotoLastE 1@ -> dec eE 1@
10 backToSharpOne $C -> backToSharpOne 10 $C
$E eraseC $0 -> eraseC $E $B
1@ eraseC 10 -> eraseC 1@ 1B
0& gotoMark $E -> gotoDecC 0& $E
$C restoreCD 00 -> restoreCD $C 00
@& replaceWithBlanks 1@ -> backToDFromRight @& 1@
1& dec 11 -> gotoMark 1& 10
@1 backToDFromLeft $% -> backToDFromLeft @1 $%
0@ checkCD 11 -> checkCD 0@ 11
$# backToDFromLeft 10 -> backToDFromLeft $# 10
00 gotoDecC 0D -> dec 00 0D
@B backToDFromRight eB -> backToDFromRight @B eB
1E massErase @@ -> eraseE 1E @@
1$ eraseE 0E -> prepEraseC 1$ 0E
$E searchZero @0 -> backToDFromLeft $E @%
1$ backToSharpZero $1 -> backToSharpZero 1$ $1
0$ gotoLastE 0@ -> dec 0$ 0@
1D findBlank e0 -> temp 1D e0
$E incD 01 -> incD $E 00
0& goToPlaceForDivider eB -> backToFirstC 0& eD
1C backToD e0 -> backToD 1C e0
@& backToSharpOne 0D -> backToSharpOne @& 0D
e@ temp $0 -> beginCopying e@ $0
eB checkCD @1 -> checkCD eB @1
10 backToDFromLeft 1D -> searchNextBit 10 1D
0% backToSharpZero 0D -> backToSharpZero 0% 0D
$0 backToSharpZero 0X -> backToSharpZero $0 0X
$0 beginCopying 1B -> backToStart $0 1C
0E backToSharpZero @0 -> backToSharpZero 0E @0
1% backToSharpOne 1D -> backToSharpOne 1% 1D
eB backToDFromRight 00 -> backToDFromRight eB 00
$# incD 11 -> incD $# 10
@$ eraseE 10 -> eraseE @$ 1B
0# massErase @@ -> eraseE 0# @@
e0 gotoMark 11 -> gotoMark e0 11
1X massErase e@ -> eraseE 1X e@
e@ eraseC 01 -> eraseC e@ 0B
0B backToSharpZero 11 -> backToSharpZero 0B 11
1B incD @0 -> checkCD 1B @1
eX backToSharpOne $C -> backToSharpOne eX $C
0D gotoLastE $@ -> dec 0D $@
0E copyZero $B -> backToSharpZero 0E $0
e& eraseC 01 -> eraseC e& 0B
@X incD 10 -> checkCD @X 11
eC backToD 00 -> backToD eC 00
1$ prepEraseC 10 -> prepEraseC 1$ 10
0# copyZero @B -> backToSharpZero 0# @0
$0 backToDFromRight e1 -> backToDFromRight $0 e1
@0 copyOne @B -> backToSharpOne @0 @1
0& searchOne $1 -> backToDFromLeft 0& $&
1B gotoLastE 1@ -> dec 1B 1@
$0 backToDFromLeft 0% -> backToDFromLeft $0 0%
$B initDividerByTwo $0 -> backToD $B $1
$C beginCopying 0B -> backToStart $C 0C
0D searchZero e0 -> backToDFromLeft 0D e%
@E backToSharpZero eX -> backToSharpZero @E eX
0B backToFirstC 10 -> backToFirstC 0B 10
0% checkCD eD -> checkCD 0% eD
0D backToD @0 -> backToD 0D @0
@C backToSharpOne 10 -> backToSharpOne @C 10
1% restoreCD 11 -> restoreCD 1% 11
$# findBlank 10 -> temp $# 10
0X backToDFromLeft @1 -> backToDFromLeft 0X @1
@0 restoreCD 0& -> restoreCD @0 01
checkZeroD 00 -> 00 checkZeroD
1% checkCD 1D -> checkCD 1% 1D
eB searchNextBit 00 -> searchNextBit eB 00
01 checkCD e1 -> checkCD 01 e1
@1 gotoMark @1 -> gotoMark @1 @1
eC prepEraseC $0 -> prepEraseC eC $0
1X incD 01 -> incD 1X 00
0X backToSharpOne eC -> backToSharpOne 0X eC
@X initDivider @0 -> initDividerByTwo @X @0
1E backToDFromRight 1B -> backToDFromRight 1E 1B
1B searchOne 10 -> restoreCD 1B 10
eC eraseC @C -> backToStart eC @X
0D backToSharpZero $D -> backToSharpZero 0D $D
@0 searchNextBit $0 -> searchNextBit @0 $0
1% prepEraseC e1 -> prepEraseC 1% e1
11 gotoDecC 10 -> gotoDecC 11 10
@0 prepEraseC 11 -> prepEraseC @0 11
$& dec $0 -> dec $& $1
0& backToFirstC @1 -> backToFirstC 0& @1
@E backToDFromLeft @0 -> backToDFromLeft @E @0
$@ restoreCD 0% -> restoreCD $@ 00
$D copyZero @B -> backToSharpZero $D @0
$X prepEraseC 11 -> prepEraseC $X 11
00 backToFirstC @1 -> backToFirstC 00 @1
$& initDividerByTwo 10 -> backToD $& 11
0% prepEraseC e0 -> prepEraseC 0% e0
@X backToDFromLeft 1D -> searchNextBit @X 1D
@X nullifier eB -> initDivider @X eE
0# dec 11 -> gotoMark 0# 10
1X findBlank $1 -> temp 1X $1
$@ initDividerByTwo $0 -> backToD $@ $1
$C searchOne $0 -> restoreCD $C $0
1D backToDFromLeft e1 -> backToDFromLeft 1D e1
0$ findBlank 11 -> temp 0$ 11
1C gotoDecC $1 -> gotoDecC 1C $1
$X restoreCD eD -> restoreCD $X eD
1B findBlank $1 -> temp 1B $1
0C checkCD @D -> checkCD 0C @D
$D backToDFromRight e1 -> backToDFromRight $D e1
1B backToDFromLeft 10 -> backToDFromLeft 1B 10
01 searchNextBit $0 -> searchNextBit 01 $0
@% backToSharpOne e1 -> backToSharpOne @% e1
@# eraseE e0 -> eraseE @# eB
10 copyZero $B -> backToSharpZero 10 $0
1& searchZero 10 -> backToDFromLeft 1& 1%
@B backToSharpOne 0E -> backToSharpOne @B 0E
0$ searchNextBit e1 -> searchNextBit 0$ e1
0% backToSharpZero $E -> backToSharpZero 0% $E
0C goToPlaceForDivider 0B -> backToFirstC 0C 0D
1E backToStart 11 -> backToStart 1E 11
1@ gotoDecC @0 -> gotoDecC 1@ @0
$$ findZero $1 -> beginCopying $$ $1
@E backToSharpZero 1C -> backToSharpZero @E 1C
$& gotoMark $1 -> gotoMark $& $1
0C findBlank e1 -> temp 0C e1
@E prepEraseC 0D -> eraseC @E 0D
eX backToFirstC 00 -> backToFirstC eX 00
1& backToSharpOne @D -> backToSharpOne 1& @D
$% backToSharpOne eX -> backToSharpOne $% eX
11 incD $1 -> incD 11 $0
$D eraseE $0 -> eraseE $D $B
@D gotoMark e0 -> gotoMark @D e0
$@ restoreCD 11 -> restoreCD $@ 11
$X eraseC @0 -> eraseC $X @B
e# restoreCD $& -> restoreCD e# $1
e& eraseC $1 -> eraseC e& $B
@B backToDFromRight 00 -> backToDFromRight @B 00
e0 searchNextBit 01 -> searchNextBit e0 01
@% backToDFromLeft 11 -> backToDFromLeft @% 11
@D prepEraseC @D -> eraseC @D @D
e# eraseE 11 -> eraseE e# 1B
eE backToSharpOne @1 -> backToSharpOne eE @1
$E backToSharpOne eX -> backToSharpOne $E eX
0@ dec 11 -> gotoMark 0@ 10
1% backToDFromLeft $% -> backToDFromLeft 1% $%
1E backToDFromLeft @% -> backToDFromLeft 1E @%
0# backToDFromRight 1E -> backToDFromRight 0# 1E
@C restoreCD @D -> restoreCD @C @D
@1 FINAL -> FINAL @ FINAL
00 dec e0 -> dec 00 e1
1C restoreCD @0 -> restoreCD 1C @0
00 backToSharpOne 1C -> backToSharpOne 00 1C
0# replaceWithBlanks e@ -> backToDFromRight 0# e@
0E restoreCD @0 -> restoreCD 0E @0
eB copyZero 1B -> backToSharpZero eB 10
$$ prepEraseC 0D -> eraseC $$ 0D
e# checkCD $0 -> checkCD e# $0
@D backToFirstC $0 -> backToFirstC @D $0
10 backToSharpZero 01 -> backToSharpZero 10 01
$@ prepEraseC 1D -> eraseC $@ 1D
1C prepEraseC e1 -> prepEraseC 1C e1
01 dec e0 -> dec 01 e1
$$ searchOne e1 -> backToDFromLeft $$ e&
e# backToSharpZero eC -> backToSharpZero e# eC
@1 searchZero 00 -> backToDFromLeft @1 0%
$X backToSharpOne 1E -> backToSharpOne $X 1E
@% backToSharpOne $E -> backToSharpOne @% $E
@% eraseE $1 -> eraseE @% $B
e# backToDFromRight 0E -> backToDFromRight e# 0E
@D searchOne @0 -> restoreCD @D @0
0E initDividerByTwo 10 -> backToD 0E 11
10 replaceWithBlanks e@ -> backToDFromRight 10 e@
eE massErase $@ -> eraseE eE $@
0D searchZero $1 -> restoreCD 0D $1
$# prepEraseC e1 -> prepEraseC $# e1
0% backToDFromRight $B -> backToDFromRight 0% $B
1B backToDFromLeft 1D -> searchNextBit 1B 1D
$X backToStart $1 -> backToStart $X $1
$# forwardToLastD $E -> incD $# $E
@$ restoreCD 10 -> restoreCD @$ 10
1B checkCD $D -> checkCD 1B $D
@# backToDFromLeft e1 -> backToDFromLeft @# e1
1B backToSharpZero 1C -> backToSharpZero 1B 1C
$X backToSharpOne $X -> backToSharpOne $X $X
e1 dec 00 -> dec e1 01
10 copyOne eB -> backToSharpOne 10 e1
1% eraseE e0 -> eraseE 1% eB
1D initDivider 10 -> initDividerByTwo 1D 10
01 gotoMark @1 -> gotoMark 01 @1
@B gotoLastE e@ -> dec @B e@
0$ eraseE 10 -> eraseE 0$ 1B
eE checkCD @D -> checkCD eE @D
10 dec @1 -> gotoMark 10 @0
0# initDividerByTwo 00 -> backToD 0# 01
1$ eraseC e1 -> eraseC 1$ eB
$C incD 11 -> incD $C 10
$D backToD e0 -> backToD $D e0
0E temp e1 -> beginCopying 0E e1
@@ prepEraseC @D -> eraseC @@ @D
$D prepEraseC 10 -> prepEraseC $D 10
e0 massErase 1@ -> eraseE e0 1@
e& gotoMark 0E -> gotoDecC e& 0E
0E gotoMark $E -> gotoDecC 0E $E
00 prepEraseC 11 -> prepEraseC 00 11
$@ backToSharpZero 0E -> backToSharpZero $@ 0E
$E searchOne e0 -> restoreCD $E e0
0$ backToSharpOne eD -> backToSharpOne 0$ eD
0D backToSharpOne eD -> backToSharpOne 0D eD
@0 gotoMark eE -> gotoDecC @0 eE
checkEForZero e0 -> e0 checkEForZero
$B backToDFromLeft $D -> searchNextBit $B $D
eB findBlank 01 -> temp eB 01
e0 dec e0 -> dec e0 e1
@@ backToFirstC 11 -> backToFirstC @@ 11
@# backToD e0 -> backToD @# e0
eD incD e0 -> checkCD eD e1
$D searchOne @1 -> backToDFromLeft $D @&
1D backToSharpOne $E -> backToSharpOne 1D $E
@# searchNextBit @1 -> searchNextBit @# @1
FINAL 0# -> FINAL 0 FINAL
1$ checkCD 01 -> checkCD 1$ 01
0X backToD @1 -> backToD 0X @1
$X initDivider $0 -> initDividerByTwo $X $0
$& backToFirstC $1 -> backToFirstC $& $1
eE restoreCD @& -> restoreCD eE @1
e0 checkCD eD -> checkCD e0 eD
$B temp @0 -> beginCopying $B @0
1% backToDFromLeft @0 -> backToDFromLeft 1% @0
e$ checkCD eD -> checkCD e$ eD
$E findBlank 00 -> temp $E 00
$D dec $1 -> gotoMark $D $0
eqCD 11 -> 1& checkOneD
0% temp $0 -> beginCopying 0% $0
1# searchZero e0 -> backToDFromLeft 1# e%
$1 searchOne $0 -> restoreCD $1 $0
eC gotoMark $1 -> gotoMark eC $1
$0 backToDFromLeft 0& -> backToDFromLeft $0 0&
eB backToD @0 -> backToD eB @0
$@ findBlank 0B -> FINAL $@ 0B
0$ gotoDecC $1 -> gotoDecC 0$ $1
$C backToD @1 -> backToD $C @1
$@ searchNextBit 10 -> searchNextBit $@ 10
1@ dec e0 -> dec 1@ e1
1C eraseC 01 -> eraseC 1C 0B
$0 backToD $1 -> backToD $0 $1
@@ findZero 01 -> beginCopying @@ 01
$D eraseC $1 -> eraseC $D $B
@& backToD $1 -> backToD @& $1
$$ findBlank 00 -> temp $$ 00
1# gotoLastE @@ -> dec 1# @@
0# gotoLastE 1@ -> dec 0# 1@
1$ searchNextBit 10 -> searchNextBit 1$ 10
@@ searchZero $0 -> backToDFromLeft @@ $%
e% checkCD 10 -> checkCD e% 10
$X restoreCD @& -> restoreCD $X @1
1& checkEForZero 0B -> stop 1& 0B
1D findBlank 10 -> temp 1D 10
@B eraseC @1 -> eraseC @B @B
01 searchOne 11 -> backToDFromLeft 01 1&
1E dec 01 -> gotoMark 1E 00
$C checkCD 00 -> checkCD $C 00
$@ searchOne $0 -> restoreCD $@ $0
e1 backToFirstC 10 -> backToFirstC e1 10
0X backToFirstC $1 -> backToFirstC 0X $1
$B findBlank e1 -> temp $B e1
eB temp 10 -> beginCopying eB 10
@$ forwardToLastD 1E -> incD @$ 1E
1E incD $0 -> checkCD 1E $1
0C massErase 1@ -> eraseE 0C 1@
1@ checkCD 11 -> checkCD 1@ 11
@E eraseC $C -> backToStart @E $X
$1 eraseE 11 -> eraseE $1 1B
@$ searchNextBit 11 -> searchNextBit @$ 11
0B dec e0 -> dec 0B e1
1C eraseC @0 -> eraseC 1C @B
1E backToFirstC e1 -> backToFirstC 1E e1
$E eraseC 1C -> backToStart $E 1X
eD backToSharpOne eC -> backToSharpOne eD eC
0$ backToSharpZero 11 -> backToSharpZero 0$ 11
$0 replaceWithBlanks 1@ -> backToDFromRight $0 1@
@@ gotoMark 00 -> gotoMark @@ 00
$0 dec e0 -> dec $0 e1
e@ backToSharpOne 0C -> backToSharpOne e@ 0C
0D nullifier $B -> initDivider 0D $E
$D findBlank eB -> FINAL $D eB
01 checkCD 10 -> checkCD 01 10
0% backToSharpZero e0 -> backToSharpZero 0% e0
eB eraseC eC -> backToStart eB eX
0D restoreCD @& -> restoreCD 0D @1
@# gotoDecC @1 -> gotoDecC @# @1
1$ backToDFromRight e0 -> backToDFromRight 1$ e0
@B temp @1 -> beginCopying @B @1
$C backToSharpOne @0 -> backToSharpOne $C @0
0C gotoDecC 00 -> gotoDecC 0C 00
0% checkCD $1 -> checkCD 0% $1
@% searchNextBit e1 -> searchNextBit @% e1
@C gotoDecC e1 -> gotoDecC @C e1
@# backToDFromRight @0 -> backToDFromRight @# @0
0& backToStart 11 -> backToStart 0& 11
e# backToSharpZero 10 -> backToSharpZero e# 10
$X eraseE @0 -> eraseE $X @B
0B prepEraseC $1 -> prepEraseC 0B $1
@% gotoLastE 1@ -> dec @% 1@
$@ backToSharpOne $1 -> backToSharpOne $@ $1
e$ backToDFromLeft 0& -> backToDFromLeft e$ 0&
1C backToFirstC $0 -> backToFirstC 1C $0
@$ findZero e1 -> beginCopying @$ e1
0D checkCD @D -> checkCD 0D @D
11 restoreCD e1 -> restoreCD 11 e1
e% searchNextBit 10 -> searchNextBit e% 10
e1 gotoDecC e1 -> gotoDecC e1 e1
@C temp e0 -> beginCopying @C e0
0% restoreCD 10 -> restoreCD 0% 10
@# gotoLastE 1@ -> dec @# 1@
e1 checkCD e0 -> checkCD e1 e0
@0 backToSharpZero 0E -> backToSharpZero @0 0E
1B gotoDecC $1 -> gotoDecC 1B $1
1& backToSharpOne @X -> backToSharpOne 1& @X
$C backToSharpOne 0E -> backToSharpOne $C 0E
0$ goToPlaceForDivider eB -> backToFirstC 0$ eD
$@ gotoMark $0 -> gotoMark $@ $0
@B searchZero @0 -> backToDFromLeft @B @%
$@ eraseC e1 -> eraseC $@ eB
1E dec e0 -> dec 1E e1
e$ backToSharpOne eE -> backToSharpOne e$ eE
@C backToSharpOne e1 -> backToSharpOne @C e1
eB checkEForZero 1B -> stop eB 1B
e$ incD @1 -> incD e$ @0
10 eraseC 1C -> backToStart 10 1X
eE temp 00 -> beginCopying eE 00
e& backToDFromLeft 1& -> backToDFromLeft e& 1&
0& backToSharpZero $1 -> backToSharpZero 0& $1
e$ findZero 11 -> beginCopying e$ 11
0% backToDFromLeft @% -> backToDFromLeft 0% @%
e% searchZero 01 -> restoreCD e% 01
eE backToDFromLeft 00 -> backToDFromLeft eE 00
eE dec e1 -> gotoMark eE e0
e0 eraseE @0 -> eraseE e0 @B
1D checkCD eD -> checkCD 1D eD
0& gotoDecC $0 -> gotoDecC 0& $0
$$ initDivider 10 -> initDividerByTwo $$ 10
$C searchOne e0 -> restoreCD $C e0
@C eraseE e0 -> eraseE @C eB
@B backToStart @0 -> backToStart @B @0
0@ nullifier $B -> initDivider 0@ $E
e$ FINAL -> FINAL e FINAL
0D replaceWithBlanks 0@ -> backToDFromRight 0D 0@
$B goToPlaceForDivider @B -> backToFirstC $B @D
$% forwardToLastD 0E -> incD $% 0E
eE findZero @1 -> beginCopying eE @1
1C nullifier @B -> initDivider 1C @E
@& backToSharpOne e1 -> backToSharpOne @& e1
0@ temp $0 -> beginCopying 0@ $0
@# checkCD 00 -> checkCD @# 00
0C findBlank $0 -> temp 0C $0
1X gotoDecC @1 -> gotoDecC 1X @1
eE backToSharpOne eX -> backToSharpOne eE eX
0# backToD 11 -> backToD 0# 11
0& searchOne @0 -> restoreCD 0& @0
1C backToSharpZero eX -> backToSharpZero 1C eX
e1 incD @0 -> checkCD e1 @1
@@ forwardToLastD 1E -> incD @@ 1E
@@ backToDFromRight $B -> backToDFromRight @@ $B
@1 backToSharpZero @D -> backToSharpZero @1 @D
$E gotoDecC 00 -> gotoDecC $E 00
$$ findBlank 0B -> FINAL $$ 0B
01 restoreCD 10 -> restoreCD 01 10
@X backToDFromLeft e1 -> backToDFromLeft @X e1
11 eraseC @1 -> eraseC 11 @B
00 temp $1 -> beginCopying 00 $1
$0 searchNextBit 00 -> searchNextBit $0 00
1$ forwardToLastD eE -> incD 1$ eE
@X backToSharpOne e1 -> backToSharpOne @X e1
1@ eraseE 1E -> prepEraseC 1@ 1E
e# beginCopying eB -> backToStart e# eC
$# backToDFromLeft 1% -> backToDFromLeft $# 1%
$# checkCD 1D -> checkCD $# 1D
$1 gotoDecC e1 -> gotoDecC $1 e1
@B dec 11 -> gotoMark @B 10
$B backToDFromRight e0 -> backToDFromRight $B e0
eE restoreCD 1D -> restoreCD eE 1D
e0 backToSharpOne $C -> backToSharpOne e0 $C
@C searchNextBit $1 -> searchNextBit @C $1
$0 initDividerByTwo 10 -> backToD $0 11
@@ checkCD $0 -> checkCD @@ $0
1C restoreCD 1& -> restoreCD 1C 11
10 incD 00 -> checkCD 10 01
eB restoreCD 0D -> restoreCD eB 0D
e0 findBlank $1 -> temp e0 $1
e% backToFirstC @0 -> backToFirstC e% @0
@D restoreCD @0 -> restoreCD @D @0
@D initDivider e0 -> initDividerByTwo @D e0
1B checkEForZero $B -> stop 1B $B
e1 gotoMark @0 -> gotoMark e1 @0
1# backToSharpZero 0D -> backToSharpZero 1# 0D
0% gotoDecC eD -> dec 0% eD
0@ prepEraseC 00 -> prepEraseC 0@ 00
1X gotoMark e0 -> gotoMark 1X e0
eX restoreCD 10 -> restoreCD eX 10
e# gotoMark $E -> gotoDecC e# $E
$D searchNextBit 01 -> searchNextBit $D 01
1% backToDFromLeft 01 -> backToDFromLeft 1% 01
$0 findZero @1 -> beginCopying $0 @1
e@ dec @0 -> dec e@ @1
e% gotoDecC e0 -> gotoDecC e% e0
11 backToDFromRight 00 -> backToDFromRight 11 00
1B beginCopying $B -> backToStart 1B $C
eC gotoDecC e1 -> gotoDecC eC e1
0E backToSharpOne $X -> backToSharpOne 0E $X
ifZero 01 -> 01 gotoLastE
0@ eraseE @0 -> eraseE 0@ @B
@% dec @0 -> dec @% @1
1& backToSharpZero @0 -> backToSharpZero 1& @0
e@ replaceWithBlanks $@ -> backToDFromRight e@ $@
e0 checkCD 0D -> checkCD e0 0D
0% prepEraseC 11 -> prepEraseC 0% 11
1C searchNextBit 01 -> searchNextBit 1C 01
1# restoreCD $% -> restoreCD 1# $0
e1 backToSharpOne 1D -> backToSharpOne e1 1D
e1 massErase e@ -> eraseE e1 e@
0X initDividerByTwo 00 -> backToD 0X 01
1$ findZero 01 -> beginCopying 1$ 01
1E backToDFromLeft 0D -> searchNextBit 1E 0D
$$ backToSharpOne $C -> backToSharpOne $$ $C
$% backToSharpZero e1 -> backToSharpZero $% e1
0X eraseE e1 -> eraseE 0X eB
0@ gotoDecC eD -> dec 0@ eD
@C prepEraseC 1D -> eraseC @C 1D
eE incD e1 -> incD eE e0
$0 searchOne @1 -> backToDFromLeft $0 @&
eX temp 00 -> beginCopying eX 00
@$ beginCopying @B -> backToStart @$ @C
1B restoreCD 10 -> restoreCD 1B 10
$E findZero 11 -> beginCopying $E 11
0B backToDFromRight 0B -> backToDFromRight 0B 0B
$E checkCD 1D -> checkCD $E 1D
1& checkEForZero 1B -> stop 1& 1B
0# goToPlaceForDivider @B -> backToFirstC 0# @D
eD findBlank 11 -> temp eD 11
@X massErase @@ -> eraseE @X @@
@% eraseC eC -> backToStart @% eX
eE restoreCD eD -> restoreCD eE eD
$# backToDFromLeft 01 -> backToDFromLeft $# 01
$$ backToDFromLeft e& -> backToDFromLeft $$ e&
eX gotoMark $1 -> gotoMark eX $1
$% restoreCD $& -> restoreCD $% $1
@1 findBlank 1B -> FINAL @1 1B
10 massErase e@ -> eraseE 10 e@
@0 dec e1 -> gotoMark @0 e0
$C findBlank e0 -> temp $C e0
01 backToSharpOne 00 -> backToSharpOne 01 00
1$ backToDFromLeft @% -> backToDFromLeft 1$ @%
@C backToSharpOne 0C -> backToSharpOne @C 0C
@C prepEraseC @0 -> prepEraseC @C @0
@% checkCD @0 -> checkCD @% @0
@X initDivider $0 -> initDividerByTwo @X $0
eD backToDFromLeft 1& -> backToDFromLeft eD 1&
e# findBlank 00 -> temp e# 00
$1 gotoDecC 01 -> gotoDecC $1 01
$X gotoMark @0 -> gotoMark $X @0
01 findZero @1 -> beginCopying 01 @1
$0 massErase 1@ -> eraseE $0 1@
0@ findZero @1 -> beginCopying 0@ @1
0C backToSharpZero 0E -> backToSharpZero 0C 0E
$D checkCD eD -> checkCD $D eD
@0 gotoMark 01 -> gotoMark @0 01
$0 prepEraseC e1 -> prepEraseC $0 e1
eD massErase 1@ -> eraseE eD 1@
0$ prepEraseC 0D -> eraseC 0$ 0D
1% searchZero 11 -> restoreCD 1% 11
$$ findZero 11 -> beginCopying $$ 11
@% backToDFromLeft @D -> searchNextBit @% @D
1@ restoreCD e0 -> restoreCD 1@ e0
@D prepEraseC e0 -> prepEraseC @D e0
1C gotoMark $E -> gotoDecC 1C $E
0C initDivider @0 -> initDividerByTwo 0C @0
$B backToDFromLeft 10 -> backToDFromLeft $B 10
1B restoreCD $% -> restoreCD 1B $0
$@ restoreCD 1% -> restoreCD $@ 10
$X nullifier @B -> initDivider $X @E
0D backToStart @0 -> backToStart 0D @0
0@ searchOne e1 -> backToDFromLeft 0@ e&
$# gotoDecC @0 -> gotoDecC $# @0
eC copyOne @B -> backToSharpOne eC @1
0X dec 10 -> dec 0X 11
1C searchOne 00 -> restoreCD 1C 00
01 backToSharpOne 1E -> backToSharpOne 01 1E
11 backToDFromLeft 10 -> backToDFromLeft 11 10
eD checkCD @0 -> checkCD eD @0
e1 searchOne @1 -> backToDFromLeft e1 @&
01 beginCopying @B -> backToStart 01 @C
eE backToDFromLeft 0D -> searchNextBit eE 0D
$B findBlank $0 -> temp $B $0
$$ prepEraseC $0 -> prepEraseC $$ $0
$1 restoreCD 0D -> restoreCD $1 0D
$# checkEForZero $B -> stop $# $B
$# findBlank eB -> FINAL $# eB
@X dec 10 -> dec @X 11
eD backToDFromLeft $& -> backToDFromLeft eD $&
e$ backToSharpZero 11 -> backToSharpZero e$ 11
1B prepEraseC 11 -> prepEraseC 1B 11
e# backToSharpOne @D -> backToSharpOne e# @D
$D backToFirstC 01 -> backToFirstC $D 01
@% massErase 0@ -> eraseE @% 0@
0X backToSharpOne 1D -> backToSharpOne 0X 1D
1$ searchZero 10 -> backToDFromLeft 1$ 1%
1E findBlank 1B -> FINAL 1E 1B
@1 restoreCD $% -> restoreCD @1 $0
e% gotoDecC 10 -> gotoDecC e% 10
11 backToSharpOne 0D -> backToSharpOne 11 0D
11 restoreCD $0 -> restoreCD 11 $0
e# restoreCD 0& -> restoreCD e# 01
$X backToDFromRight @B -> backToDFromRight $X @B
@D backToSharpOne 11 -> backToSharpOne @D 11
$% backToDFromRight $1 -> backToDFromRight $% $1
0E backToDFromRight eE -> backToDFromRight 0E eE
@0 restoreCD $% -> restoreCD @0 $0
e1 backToDFromLeft $& -> backToDFromLeft e1 $&
$1 backToDFromLeft @0 -> backToDFromLeft $1 @0
@1 initDividerByTwo 10 -> backToD @1 11
$1 backToStart e1 -> backToStart $1 e1
0C prepEraseC $0 -> prepEraseC 0C $0
0@ searchZero @1 -> restoreCD 0@ @1
e& beginCopying 0B -> backToStart e& 0C
00 backToDFromRight $0 -> backToDFromRight 00 $0
$0 backToSharpZero 0D -> backToSharpZero $0 0D
e@ backToD 11 -> backToD e@ 11
e@ restoreCD $0 -> restoreCD e@ $0
0& backToStart e1 -> backToStart 0& e1
00 temp @0 -> beginCopying 00 @0
$D backToSharpOne @E -> backToSharpOne $D @E
e0 goToPlaceForDivider $B -> backToFirstC e0 $D
@B temp $0 -> beginCopying @B $0
$# forwardToLastD 1E -> incD $# 1E
e% restoreCD $D -> restoreCD e% $D
$D eraseE 1E -> prepEraseC $D 1E
e1 findBlank eB -> FINAL e1 eB
1$ nullifier eB -> initDivider 1$ eE
0B eraseC 0C -> backToStart 0B 0X
1X backToDFromRight e1 -> backToDFromRight 1X e1
$X searchOne @1 -> backToDFromLeft $X @&
e& checkCD 1D -> checkCD e& 1D
0# backToSharpZero 1C -> backToSharpZero 0# 1C
$B backToSharpZero 01 -> backToSharpZero $B 01
e# backToD $0 -> backToD e# $0
@D backToSharpOne @0 -> backToSharpOne @D @0
e@ restoreCD 01 -> restoreCD e@ 01
@C findBlank $0 -> temp @C $0
eE restoreCD e1 -> restoreCD eE e1
eE checkEForZero 1B -> stop eE 1B
1# eraseC 1C -> backToStart 1# 1X
eD initDividerByTwo $0 -> backToD eD $1
@0 prepEraseC 01 -> prepEraseC @0 01
@D backToDFromRight $0 -> backToDFromRight @D $0
$E searchOne @0 -> restoreCD $E @0
$B prepEraseC eD -> eraseC $B eD
0X backToSharpZero 00 -> backToSharpZero 0X 00
1$ findBlank e1 -> temp 1$ e1
e@ gotoDecC 00 -> gotoDecC e@ 00
eX findZero @1 -> beginCopying eX @1
$& backToSharpZero $X -> backToSharpZero $& $X
1C temp e1 -> beginCopying 1C e1
eB incD @1 -> incD eB @0
1X backToFirstC 11 -> backToFirstC 1X 11
0B backToStart $0 -> backToStart 0B $0
@0 checkCD eD -> checkCD @0 eD
$@ checkCD 1D -> checkCD $@ 1D
massErase 00 -> 00 massErase
1C findBlank $0 -> temp 1C $0
01 backToDFromLeft @D -> searchNextBit 01 @D
@# backToDFromRight 11 -> backToDFromRight @# 11
eD searchOne $0 -> restoreCD eD $0
@% restoreCD 0& -> restoreCD @% 01
$$ backToDFromRight $E -> backToDFromRight $$ $E
$D forwardToLastD eE -> incD $D eE
$B searchZero 10 -> backToDFromLeft $B 1%
e$ gotoDecC $0 -> gotoDecC e$ $0
$$ eraseE 11 -> eraseE $$ 1B
11 checkCD @D -> checkCD 11 @D
1X restoreCD @0 -> restoreCD 1X @0
1& eraseC e1 -> eraseC 1& eB
e& backToSharpOne 1E -> backToSharpOne e& 1E
0C gotoMark 0E -> gotoDecC 0C 0E
$X eraseE e0 -> eraseE $X eB
e@ eraseE e1 -> eraseE e@ eB
e% backToSharpOne @X -> backToSharpOne e% @X
$0 incD $1 -> incD $0 $0
0D backToSharpZero 1E -> backToSharpZero 0D 1E
@@ gotoMark 11 -> gotoMark @@ 11
$B nullifier $B -> initDivider $B $E
00 prepEraseC $D -> eraseC 00 $D
1D restoreCD 1& -> restoreCD 1D 11
$B initDivider $0 -> initDividerByTwo $B $0
@# restoreCD 1& -> restoreCD @# 11
@$ backToSharpOne $X -> backToSharpOne @$ $X
0B dec e1 -> gotoMark 0B e0
@@ backToSharpOne e0 -> backToSharpOne @@ e0
e& backToDFromLeft 1D -> searchNextBit e& 1D
0$ backToFirstC 10 -> backToFirstC 0$ 10
0& gotoMark eE -> gotoDecC 0& eE
e% copyOne @B -> backToSharpOne e% @1
10 backToFirstC @1 -> backToFirstC 10 @1
0E backToDFromLeft 0& -> backToDFromLeft 0E 0&
0E searchZero 00 -> backToDFromLeft 0E 0%
e@ backToDFromRight $1 -> backToDFromRight e@ $1
11 backToFirstC @1 -> backToFirstC 11 @1
e% replaceWithBlanks @@ -> backToDFromRight e% @@
1X restoreCD 1& -> restoreCD 1X 11
0D copyZero 0B -> backToSharpZero 0D 00
1B backToDFromRight 1B -> backToDFromRight 1B 1B
e$ backToSharpZero $1 -> backToSharpZero e$ $1
@% eraseE $E -> prepEraseC @% $E
0X backToDFromRight e0 -> backToDFromRight 0X e0
1& backToDFromRight 0E -> backToDFromRight 1& 0E
@0 backToSharpOne @D -> backToSharpOne @0 @D
01 restoreCD @& -> restoreCD 01 @1
0E prepEraseC 1D -> eraseC 0E 1D
FINAL 0E -> FINAL 0 FINAL
$1 temp $1 -> beginCopying $1 $1
@# backToSharpZero $C -> backToSharpZero @# $C
@# prepEraseC $0 -> prepEraseC @# $0
$B eraseE e0 -> eraseE $B eB
1X backToStart 01 -> backToStart 1X 01
e$ backToSharpOne 1X -> backToSharpOne e$ 1X
1C backToSharpZero $C -> backToSharpZero 1C $C
ifZero 00 -> 00 ifZero
11 eraseC $C -> backToStart 11 $X
@D gotoMark @0 -> gotoMark @D @0
1& gotoDecC $0 -> gotoDecC 1& $0
01 backToD 00 -> backToD 01 00
1X backToSharpZero @D -> backToSharpZero 1X @D
10 backToSharpOne $D -> backToSharpOne 10 $D
$D dec 00 -> dec $D 01
@0 temp 00 -> beginCopying @0 00
@E eraseE 00 -> eraseE @E 0B
$C copyOne 1B -> backToSharpOne $C 11
1& searchOne @0 -> restoreCD 1& @0
@X eraseC e0 -> eraseC @X eB
gotoLastE 01 -> 01 gotoLastE
$0 prepEraseC eD -> eraseC $0 eD
0@ restoreCD @0 -> restoreCD 0@ @0
@% beginCopying eB -> backToStart @% eC
$% gotoMark $E -> gotoDecC $% $E
0D findZero $1 -> beginCopying 0D $1
e& backToDFromRight 00 -> backToDFromRight e& 00
@E backToSharpOne @E -> backToSharpOne @E @E
$1 backToDFromRight 1E -> backToDFromRight $1 1E
e# gotoMark 00 -> gotoMark e# 00
$@ gotoMark eE -> gotoDecC $@ eE
0& backToDFromLeft 0& -> backToDFromLeft 0& 0&
@% searchZero @1 -> restoreCD @% @1
11 searchOne $1 -> backToDFromLeft 11 $&
0C eraseC 00 -> eraseC 0C 0B
1X restoreCD e0 -> restoreCD 1X e0
e@ searchZero e1 -> restoreCD e@ e1
e& eraseC 1C -> backToStart e& 1X
@C findZero $1 -> beginCopying @C $1
eD backToStart @1 -> backToStart eD @1
0& checkEForZero eB -> stop 0& eB
1D goToPlaceForDivider 1B -> backToFirstC 1D 1D
eX gotoDecC 00 -> gotoDecC eX 00
0X prepEraseC e1 -> prepEraseC 0X e1
0X checkCD $1 -> checkCD 0X $1
0@ backToDFromLeft 0& -> backToDFromLeft 0@ 0&
e& backToDFromRight 1B -> backToDFromRight e& 1B
0X backToDFromRight 1E -> backToDFromRight 0X 1E
@# backToFirstC $0 -> backToFirstC @# $0
e% backToSharpOne eC -> backToSharpOne e% eC
$0 backToD 10 -> backToD $0 10
0C copyZero eB -> backToSharpZero 0C e0
$B backToDFromLeft 0& -> backToDFromLeft $B 0&
@0 initDivider $0 -> initDividerByTwo @0 $0
1D eraseE eE -> prepEraseC 1D eE
0@ restoreCD e1 -> restoreCD 0@ e1
@# temp 11 -> beginCopying @# 11
eD copyOne $B -> backToSharpOne eD $1
0B backToD $0 -> backToD 0B $0
0D backToDFromLeft $D -> searchNextBit 0D $D
1$ restoreCD 0% -> restoreCD 1$ 00
@# eraseE $1 -> eraseE @# $B
0@ backToDFromLeft 11 -> backToDFromLeft 0@ 11
@0 gotoLastE @@ -> dec @0 @@
$% gotoMark @1 -> gotoMark $% @1
1E dec 00 -> dec 1E 01
e% backToStart $0 -> backToStart e% $0
0E prepEraseC 10 -> prepEraseC 0E 10
1# gotoDecC $D -> dec 1# $D
0# initDivider @0 -> initDividerByTwo 0# @0
@C searchZero $1 -> restoreCD @C $1
$& restoreCD 10 -> restoreCD $& 10
@1 backToDFromRight eE -> backToDFromRight @1 eE
$# prepEraseC @D -> eraseC $# @D
eX backToSharpOne eE -> backToSharpOne eX eE
@D backToSharpOne $E -> backToSharpOne @D $E
@$ backToDFromRight e0 -> backToDFromRight @$ e0
e0 gotoDecC @D -> dec e0 @D
1E nullifier 1B -> initDivider 1E 1E
1B searchZero $0 -> backToDFromLeft 1B $%
0C backToSharpOne $D -> backToSharpOne 0C $D
1D restoreCD e0 -> restoreCD 1D e0
0& copyZero 1B -> backToSharpZero 0& 10
@@ backToSharpOne 00 -> backToSharpOne @@ 00
$C gotoDecC e0 -> gotoDecC $C e0
1& backToFirstC @0 -> backToFirstC 1& @0
@% prepEraseC @D -> eraseC @% @D
1D backToDFromRight @1 -> backToDFromRight 1D @1
eX findBlank 01 -> temp eX 01
e% gotoDecC $1 -> gotoDecC e% $1
@X backToDFromRight $1 -> backToDFromRight @X $1
0B findBlank @B -> FINAL 0B @B
1C searchZero 10 -> backToDFromLeft 1C 1%
@E gotoLastE 0@ -> dec @E 0@
0D backToD $0 -> backToD 0D $0
@0 backToDFromLeft 1% -> backToDFromLeft @0 1%
e0 backToDFromRight 1E -> backToDFromRight e0 1E
@B backToSharpOne @1 -> backToSharpOne @B @1
e& backToDFromLeft $1 -> backToDFromLeft e& $1
01 backToSharpOne $X -> backToSharpOne 01 $X
eX searchZero @0 -> backToDFromLeft eX @%
eB prepEraseC @0 -> prepEraseC eB @0
1C checkCD e0 -> checkCD 1C e0
@& findBlank 00 -> temp @& 00
0E eraseC $C -> backToStart 0E $X
1B searchZero 00 -> backToDFromLeft 1B 0%
0@ backToSharpZero $1 -> backToSharpZero 0@ $1
eX prepEraseC eD -> eraseC eX eD
00 dec 11 -> gotoMark 00 10
eD backToSharpZero @1 -> backToSharpZero eD @1
0E searchNextBit e1 -> searchNextBit 0E e1
$D backToDFromLeft 00 -> backToDFromLeft $D 00
1D backToSharpOne 1X -> backToSharpOne 1D 1X
@D forwardToLastD eE -> incD @D eE
$C searchNextBit 10 -> searchNextBit $C 10
$X backToSharpZero 01 -> backToSharpZero $X 01
eD searchOne 01 -> backToDFromLeft eD 0&
$& backToD 11 -> backToD $& 11
@$ backToDFromLeft @% -> backToDFromLeft @$ @%
eB eraseC @C -> backToStart eB @X
@# restoreCD e% -> restoreCD @# e0
1# searchNextBit 00 -> searchNextBit 1# 00
@B searchNextBit 11 -> searchNextBit @B 11
e@ eraseC 00 -> eraseC e@ 0B
0E gotoMark @E -> gotoDecC 0E @E
eD restoreCD 11 -> restoreCD eD 11
$$ checkCD $0 -> checkCD $$ $0
e% backToDFromLeft e1 -> backToDFromLeft e% e1
@0 backToSharpOne $0 -> backToSharpOne @0 $0
0$ temp 00 -> beginCopying 0$ 00
@C backToSharpOne eE -> backToSharpOne @C eE
0$ gotoDecC @1 -> gotoDecC 0$ @1
eC backToSharpZero $C -> backToSharpZero eC $C
$& beginCopying 1B -> backToStart $& 1C
1D backToSharpOne 0E -> backToSharpOne 1D 0E
1# restoreCD 11 -> restoreCD 1# 11
$0 checkCD $1 -> checkCD $0 $1
1X searchNextBit e0 -> searchNextBit 1X e0
1& searchZero @0 -> backToDFromLeft 1& @%
$X eraseC $1 -> eraseC $X $B
0X searchOne e0 -> restoreCD 0X e0
1C restoreCD $0 -> restoreCD 1C $0
0# goToPlaceForDivider 0B -> backToFirstC 0# 0D
@@ initDividerByTwo e0 -> backToD @@ e1
0# findZero 01 -> beginCopying 0# 01
massErase e0 -> e0 massErase
$C backToD $0 -> backToD $C $0
@X eraseE 01 -> eraseE @X 0B
$& checkCD $0 -> checkCD $& $0
@% eraseC 1C -> backToStart @% 1X
$E restoreCD e% -> restoreCD $E e0
@1 prepEraseC 01 -> prepEraseC @1 01
01 backToSharpOne @1 -> backToSharpOne 01 @1
1& backToDFromRight @E -> backToDFromRight 1& @E
@0 gotoDecC e0 -> gotoDecC @0 e0
backToDAfterInc e1 -> e1 backToDAfterInc
0D backToD @1 -> backToD 0D @1
00 backToSharpZero e1 -> backToSharpZero 00 e1
11 forwardToLastD 0E -> incD 11 0E
0E eraseC 1C -> backToStart 0E 1X
0D forwardToLastD @E -> incD 0D @E
$D copyOne 1B -> backToSharpOne $D 11
0# restoreCD e& -> restoreCD 0# e1
$X backToFirstC @1 -> backToFirstC $X @1
@& backToDFromRight 10 -> backToDFromRight @& 10
e1 initDivider e0 -> initDividerByTwo e1 e0
1E incD 11 -> incD 1E 10
$0 eraseC $1 -> eraseC $0 $B
0X temp e1 -> beginCopying 0X e1
@0 FINAL -> FINAL @ FINAL
$& beginCopying 0B -> backToStart $& 0C
@D gotoDecC @0 -> gotoDecC @D @0
e$ backToDFromRight 0B -> backToDFromRight e$ 0B
$# backToDFromRight @B -> backToDFromRight $# @B
1% backToSharpOne @D -> backToSharpOne 1% @D
eC prepEraseC @1 -> prepEraseC eC @1
0B restoreCD 1% -> restoreCD 0B 10
$% backToSharpOne @X -> backToSharpOne $% @X
01 backToDFromRight 0E -> backToDFromRight 01 0E
00 searchZero $0 -> backToDFromLeft 00 $%
e@ backToD e0 -> backToD e@ e0
1@ checkCD e0 -> checkCD 1@ e0
$X searchNextBit 00 -> searchNextBit $X 00
e# initDividerByTwo 00 -> backToD e# 01
copyZero @1 -> @1 copyZero
0B searchOne @1 -> backToDFromLeft 0B @&
@B searchZero e0 -> backToDFromLeft @B e%
0@ findBlank @0 -> temp 0@ @0
0E backToDFromLeft 01 -> backToDFromLeft 0E 01
1D backToFirstC $0 -> backToFirstC 1D $0
@@ beginCopying @B -> backToStart @@ @C
e& temp @0 -> beginCopying e& @0
@& gotoDecC @0 -> gotoDecC @& @0
$# backToDFromRight 0E -> backToDFromRight $# 0E
e% massErase $@ -> eraseE e% $@
@X backToSharpOne 1D -> backToSharpOne @X 1D
e# backToSharpOne eD -> backToSharpOne e# eD
1# searchNextBit $0 -> searchNextBit 1# $0
@1 backToStart 00 -> backToStart @1 00
1# backToDFromRight e1 -> backToDFromRight 1# e1
0& searchZero 00 -> backToDFromLeft 0& 0%
e& searchZero @1 -> restoreCD e& @1
eE backToDFromRight @E -> backToDFromRight eE @E
$$ eraseC $C -> backToStart $$ $X
0X backToDFromLeft @& -> backToDFromLeft 0X @&
eB eraseC @1 -> eraseC eB @B
$E gotoMark 0E -> gotoDecC $E 0E
1# checkEForZero 0B -> stop 1# 0B
@X gotoDecC 10 -> gotoDecC @X 10
0# gotoDecC 10 -> gotoDecC 0# 10
e1 eraseE $1 -> eraseE e1 $B
1E restoreCD $% -> restoreCD 1E $0
e% restoreCD @1 -> restoreCD e% @1
@% eraseE 1E -> prepEraseC @% 1E
@D backToStart $0 -> backToStart @D $0
00 backToDFromRight 0B -> backToDFromRight 00 0B
0% backToD e0 -> backToD 0% e0
$& eraseE 01 -> eraseE $& 0B
1B backToSharpZero e0 -> backToSharpZero 1B e0
0% prepEraseC 00 -> prepEraseC 0% 00
eD backToSharpZero 0E -> backToSharpZero eD 0E
0C forwardToLastD 1E -> incD 0C 1E
0E restoreCD e& -> restoreCD 0E e1
eC eraseC $C -> backToStart eC $X
$% searchZero $0 -> backToDFromLeft $% $%
e& restoreCD $D -> restoreCD e& $D
@1 backToD $1 -> backToD @1 $1
0X gotoMark $E -> gotoDecC 0X $E
$0 backToSharpOne 1X -> backToSharpOne $0 1X
e$ backToSharpZero 1D -> backToSharpZero e$ 1D
$X dec @1 -> gotoMark $X @0
0$ searchOne 01 -> backToDFromLeft 0$ 0&
0D checkCD $0 -> checkCD 0D $0
1% restoreCD e0 -> restoreCD 1% e0
@X prepEraseC @0 -> prepEraseC @X @0
1$ restoreCD 1% -> restoreCD 1$ 10
1# restoreCD @1 -> restoreCD 1# @1
$D searchNextBit @0 -> searchNextBit $D @0
e0 backToStart 01 -> backToStart e0 01
$B backToSharpOne 00 -> backToSharpOne $B 00
e1 backToDFromLeft e% -> backToDFromLeft e1 e%
0# backToSharpZero eE -> backToSharpZero 0# eE
$E initDivider 10 -> initDividerByTwo $E 10
0& findBlank 01 -> temp 0& 01
@% searchNextBit 11 -> searchNextBit @% 11
1C dec @0 -> dec 1C @1
0@ backToStart 10 -> backToStart 0@ 10
@D restoreCD @1 -> restoreCD @D @1
e1 copyOne 1B -> backToSharpOne e1 11
e1 backToFirstC 01 -> backToFirstC e1 01
eX backToDFromRight $1 -> backToDFromRight eX $1
eD gotoMark @E -> gotoDecC eD @E
1E backToSharpOne eX -> backToSharpOne 1E eX
$$ gotoLastE e@ -> dec $$ e@
0$ restoreCD @% -> restoreCD 0$ @0
copyOne 1E -> 1E copyOne
1X dec @1 -> gotoMark 1X @0
0D temp 00 -> beginCopying 0D 00
$D backToSharpOne @D -> backToSharpOne $D @D
1% backToSharpOne 1E -> backToSharpOne 1% 1E
0@ gotoDecC 0D -> dec 0@ 0D
0X restoreCD 0& -> restoreCD 0X 01
$@ searchNextBit 01 -> searchNextBit $@ 01
1@ checkCD 10 -> checkCD 1@ 10
@@ checkEForZero $B -> stop @@ $B
0@ backToDFromLeft 0% -> backToDFromLeft 0@ 0%
01 prepEraseC e0 -> prepEraseC 01 e0
@$ incD 10 -> checkCD @$ 11
0B eraseC 00 -> eraseC 0B 0B
1# backToDFromLeft @0 -> backToDFromLeft 1# @0
1@ backToStart @1 -> backToStart 1@ @1
@@ prepEraseC 01 -> prepEraseC @@ 01
@D backToDFromLeft @% -> backToDFromLeft @D @%
@D eraseE e1 -> eraseE @D eB
@& eraseE 01 -> eraseE @& 0B
@D temp @1 -> beginCopying @D @1
$& replaceWithBlanks 1@ -> backToDFromRight $& 1@
$C backToDFromRight $0 -> backToDFromRight $C $0
$@ findZero 01 -> beginCopying $@ 01
1X prepEraseC @0 -> prepEraseC 1X @0
$B backToDFromLeft 11 -> backToDFromLeft $B 11
11 backToDFromRight eE -> backToDFromRight 11 eE
@$ prepEraseC 01 -> prepEraseC @$ 01
0# backToSharpZero 00 -> backToSharpZero 0# 00
@E searchZero 11 -> restoreCD @E 11
0$ forwardToLastD 0E -> incD 0$ 0E
1& searchZero 01 -> restoreCD 1& 01
@& incD @0 -> checkCD @& @1
0D incD e1 -> incD 0D e0
0# gotoDecC eD -> dec 0# eD
eE backToSharpOne 11 -> backToSharpOne eE 11
0% searchZero e1 -> restoreCD 0% e1
0X findBlank 00 -> temp 0X 00
eE searchNextBit 11 -> searchNextBit eE 11
$1 checkCD 00 -> checkCD $1 00
$% restoreCD @& -> restoreCD $% @1
$C searchNextBit @1 -> searchNextBit $C @1
0% backToSharpZero @0 -> backToSharpZero 0% @0
$& restoreCD $D -> restoreCD $& $D
eE initDivider 10 -> initDividerByTwo eE 10
0X goToPlaceForDivider 1B -> backToFirstC 0X 1D
$@ prepEraseC @0 -> prepEraseC $@ @0
0E findBlank 01 -> temp 0E 01
$& incD $0 -> checkCD $& $1
eC backToDFromRight 10 -> backToDFromRight eC 10
e@ eraseE eE -> prepEraseC e@ eE
0D backToDFromRight 00 -> backToDFromRight 0D 00
01 eraseE e1 -> eraseE 01 eB
e& searchOne 10 -> restoreCD e& 10
e@ gotoLastE 1@ -> dec e@ 1@
$$ gotoLastE 1@ -> dec $$ 1@
1$ checkEForZero $B -> stop 1$ $B
eB checkCD 11 -> checkCD eB 11
0$ incD 10 -> checkCD 0$ 11
e$ temp e0 -> beginCopying e$ e0
@X eraseC 0C -> backToStart @X 0X
0$ backToDFromRight @B -> backToDFromRight 0$ @B
@0 gotoMark @1 -> gotoMark @0 @1
e& restoreCD @& -> restoreCD e& @1
1C incD 11 -> incD 1C 10
0C eraseE 10 -> eraseE 0C 1B
$D backToFirstC e0 -> backToFirstC $D e0
1# massErase e@ -> eraseE 1# e@
$@ backToDFromRight @B -> backToDFromRight $@ @B
1& massErase $@ -> eraseE 1& $@
0@ searchOne @1 -> backToDFromLeft 0@ @&
@B forwardToLastD eE -> incD @B eE
$X dec 01 -> gotoMark $X 00
eD findBlank e0 -> temp eD e0
$X restoreCD @0 -> restoreCD $X @0
$B gotoDecC $1 -> gotoDecC $B $1
$# initDividerByTwo $0 -> backToD $# $1
11 checkCD $1 -> checkCD 11 $1
$% findBlank 01 -> temp $% 01
01 nullifier 1B -> initDivider 01 1E
$% eraseE @0 -> eraseE $% @B
@D checkCD @D -> checkCD @D @D
e& incD e0 -> checkCD e& e1
$% backToSharpZero $0 -> backToSharpZero $% $0
e& backToSharpOne 00 -> backToSharpOne e& 00
$0 backToSharpOne $X -> backToSharpOne $0 $X
@D checkCD $1 -> checkCD @D $1
1E backToSharpOne 1D -> backToSharpOne 1E 1D
0E copyOne 1B -> backToSharpOne 0E 11
00 initDivider 00 -> initDividerByTwo 00 00
$@ backToDFromLeft $D -> searchNextBit $@ $D
$& nullifier 0B -> initDivider $& 0E
0X initDivider $0 -> initDividerByTwo 0X $0
eC checkCD 1D -> checkCD eC 1D
01 prepEraseC eD -> eraseC 01 eD
@1 prepEraseC $1 -> prepEraseC @1 $1
@# gotoDecC 11 -> gotoDecC @# 11
eC massErase @@ -> eraseE eC @@
1E checkEForZero eB -> stop 1E eB
e# findBlank 1B -> FINAL e# 1B
1C gotoDecC 11 -> gotoDecC 1C 11
0B nullifier 0B -> initDivider 0B 0E
1& backToD 10 -> backToD 1& 10
@@ eraseC e0 -> eraseC @@ eB
@& copyOne $B -> backToSharpOne @& $1
@D FINAL -> FINAL @ FINAL
@D backToDFromRight 0E -> backToDFromRight @D 0E
@# restoreCD 1% -> restoreCD @# 10
eE backToFirstC $1 -> backToFirstC eE $1
1$ backToSharpOne 0C -> backToSharpOne 1$ 0C
e% initDivider 00 -> initDividerByTwo e% 00
e1 backToDFromLeft e1 -> backToDFromLeft e1 e1
0# searchOne @0 -> restoreCD 0# @0
1C backToSharpOne 1D -> backToSharpOne 1C 1D
$E dec @0 -> dec $E @1
@C eraseE 1E -> prepEraseC @C 1E
eB incD 10 -> checkCD eB 11
0# backToDFromLeft 0& -> backToDFromLeft 0# 0&
eD backToDFromLeft $D -> searchNextBit eD $D
1& restoreCD $1 -> restoreCD 1& $1
$C searchZero 01 -> restoreCD $C 01
@1 backToSharpOne 11 -> backToSharpOne @1 11
0C searchZero $0 -> backToDFromLeft 0C $%
1% backToSharpZero @E -> backToSharpZero 1% @E
$@ checkEForZero $B -> stop $@ $B
1$ searchOne 10 -> restoreCD 1$ 10
1X eraseE 01 -> eraseE 1X 0B
e& backToDFromLeft 0D -> searchNextBit e& 0D
0X gotoLastE e@ -> dec 0X e@
0B backToFirstC e1 -> backToFirstC 0B e1
0$ massErase @@ -> eraseE 0$ @@
eB findZero @1 -> beginCopying eB @1
eE backToSharpOne 0D -> backToSharpOne eE 0D
@C temp $0 -> beginCopying @C $0
$# dec e1 -> gotoMark $# e0
e# checkEForZero @B -> stop e# @B
1% copyZero eB -> backToSharpZero 1% e0
$# backToFirstC 01 -> backToFirstC $# 01
0X backToSharpZero $E -> backToSharpZero 0X $E
1$ gotoLastE 1@ -> dec 1$ 1@
0E initDivider 10 -> initDividerByTwo 0E 10
0% backToDFromRight 01 -> backToDFromRight 0% 01
0B findZero e1 -> beginCopying 0B e1
$E eraseC @1 -> eraseC $E @B
@E eraseE eE -> prepEraseC @E eE
e# backToDFromLeft 00 -> backToDFromLeft e# 00
@1 copyOne @B -> backToSharpOne @1 @1
0% backToDFromLeft 1D -> searchNextBit 0% 1D
0@ backToDFromLeft $& -> backToDFromLeft 0@ $&
$B backToSharpZero $E -> backToSharpZero $B $E
1# backToSharpZero $E -> backToSharpZero 1# $E
$% prepEraseC 1D -> eraseC $% 1D
$# nullifier $B -> initDivider $# $E
0$ dec $1 -> gotoMark 0$ $0
backToSharpZero $# -> $0 createCopy
01 gotoDecC $0 -> gotoDecC 01 $0
@C prepEraseC 11 -> prepEraseC @C 11
@% backToSharpOne 0D -> backToSharpOne @% 0D
1B backToSharpOne $X -> backToSharpOne 1B $X
0$ findBlank @B -> FINAL 0$ @B
@B initDivider @0 -> initDividerByTwo @B @0
1B temp e0 -> beginCopying 1B e0
@D dec @1 -> gotoMark @D @0
e% eraseC $C -> backToStart e% $X
@E restoreCD e1 -> restoreCD @E e1
1B searchZero 10 -> backToDFromLeft 1B 1%
$E restoreCD $% -> restoreCD $E $0
1E eraseE @E -> prepEraseC 1E @E
@X restoreCD $& -> restoreCD @X $1
$$ eraseC $1 -> eraseC $$ $B
01 backToDFromLeft 10 -> backToDFromLeft 01 10
eE backToDFromRight eE -> backToDFromRight eE eE
@B prepEraseC @0 -> prepEraseC @B @0
@1 copyOne $B -> backToSharpOne @1 $1
0C initDividerByTwo 00 -> backToD 0C 01
eX beginCopying @B -> backToStart eX @C
1@ searchZero $1 -> restoreCD 1@ $1
$D checkCD @D -> checkCD $D @D
10 gotoDecC 01 -> gotoDecC 10 01
$$ backToDFromLeft 1& -> backToDFromLeft $$ 1&
$X restoreCD 0% -> restoreCD $X 00
e# initDividerByTwo $0 -> backToD e# $1
$1 findBlank 0B -> FINAL $1 0B
0& restoreCD eD -> restoreCD 0& eD
0C findBlank e0 -> temp 0C e0
e1 initDivider 00 -> initDividerByTwo e1 00
beginCopying e1 -> e1 beginCopying
$& backToSharpOne $X -> backToSharpOne $& $X
e& eraseE e1 -> eraseE e& eB
0C restoreCD 1D -> restoreCD 0C 1D
1# dec e0 -> dec 1# e1
e& backToDFromLeft 00 -> backToDFromLeft e& 00
00 backToSharpOne $X -> backToSharpOne 00 $X
$X backToDFromLeft $0 -> backToDFromLeft $X $0
$# initDivider 10 -> initDividerByTwo $# 10
$B gotoDecC 1D -> dec $B 1D
$@ copyZero eB -> backToSharpZero $@ e0
e0 gotoDecC eD -> dec e0 eD
e0 backToSharpOne eC -> backToSharpOne e0 eC
0B backToSharpZero $C -> backToSharpZero 0B $C
0# restoreCD @0 -> restoreCD 0# @0
0$ backToFirstC @1 -> backToFirstC 0$ @1
eB prepEraseC 01 -> prepEraseC eB 01
e1 checkCD 01 -> checkCD e1 01
@# copyZero 1B -> backToSharpZero @# 10
1B forwardToLastD 0E -> incD 1B 0E
1& gotoMark $1 -> gotoMark 1& $1
@@ eraseE @E -> prepEraseC @@ @E
10 forwardToLastD $E -> incD 10 $E
0X gotoMark 00 -> gotoMark 0X 00
e# backToSharpZero 00 -> backToSharpZero e# 00
@% prepEraseC e1 -> prepEraseC @% e1
$X backToFirstC @0 -> backToFirstC $X @0
e# backToDFromLeft e% -> backToDFromLeft e# e%
@$ incD $1 -> incD @$ $0
0C searchNextBit $1 -> searchNextBit 0C $1
0% findBlank $1 -> temp 0% $1
10 goToPlaceForDivider 1B -> backToFirstC 10 1D
1B backToDFromLeft 00 -> backToDFromLeft 1B 00
$& backToDFromLeft 1& -> backToDFromLeft $& 1&
e# backToDFromRight $1 -> backToDFromRight e# $1
eX backToFirstC @1 -> backToFirstC eX @1
0D backToSharpOne eX -> backToSharpOne 0D eX
@1 eraseC 00 -> eraseC @1 0B
$B goToPlaceForDivider $B -> backToFirstC $B $D
$D restoreCD @D -> restoreCD $D @D
@C gotoLastE e@ -> dec @C e@
0% restoreCD 1D -> restoreCD 0% 1D
0@ backToSharpZero $0 -> backToSharpZero 0@ $0
$& backToSharpZero $C -> backToSharpZero $& $C
e0 copyZero 0B -> backToSharpZero e0 00
0$ incD 00 -> checkCD 0$ 01
1# searchZero 00 -> backToDFromLeft 1# 0%
eX backToDFromRight 1E -> backToDFromRight eX 1E
0# eraseE @0 -> eraseE 0# @B
eD dec $0 -> dec eD $1
1D restoreCD 1D -> restoreCD 1D 1D
@C findBlank e0 -> temp @C e0
@$ gotoMark 1E -> gotoDecC @$ 1E
10 massErase $@ -> eraseE 10 $@
$B gotoDecC @D -> dec $B @D
0& nullifier @B -> initDivider 0& @E
1$ checkEForZero @B -> stop 1$ @B
0@ restoreCD $& -> restoreCD 0@ $1
11 gotoMark 10 -> gotoMark 11 10
@D eraseC 1C -> backToStart @D 1X
0$ FINAL -> FINAL 0 FINAL
@C findBlank @B -> FINAL @C @B
00 backToSharpOne @C -> backToSharpOne 00 @C
@# backToSharpZero $D -> backToSharpZero @# $D
0X backToSharpZero 0E -> backToSharpZero 0X 0E
0# eraseE eE -> prepEraseC 0# eE
eX findBlank eB -> FINAL eX eB
@D backToSharpOne 00 -> backToSharpOne @D 00
0X searchOne 10 -> restoreCD 0X 10
0E eraseE $1 -> eraseE 0E $B
01 backToSharpOne @C -> backToSharpOne 01 @C
e1 backToSharpOne eD -> backToSharpOne e1 eD
$0 gotoMark e0 -> gotoMark $0 e0
$E findZero e1 -> beginCopying $E e1
eD replaceWithBlanks 1@ -> backToDFromRight eD 1@
0% prepEraseC eD -> eraseC 0% eD
0B backToDFromRight $1 -> backToDFromRight 0B $1
@$ checkEForZero 0B -> stop @$ 0B
$1 incD 01 -> incD $1 00
eD prepEraseC e1 -> prepEraseC eD e1
@1 backToSharpOne $X -> backToSharpOne @1 $X
e% searchZero $1 -> restoreCD e% $1
eE eraseC e0 -> eraseC eE eB
@& backToSharpZero 1E -> backToSharpZero @& 1E
1E backToSharpZero @1 -> backToSharpZero 1E @1
$# forwardToLastD eE -> incD $# eE
0# prepEraseC $0 -> prepEraseC 0# $0
$C checkCD 10 -> checkCD $C 10
0C backToDFromLeft 1% -> backToDFromLeft 0C 1%
@0 backToDFromRight @0 -> backToDFromRight @0 @0
@1 searchZero $0 -> backToDFromLeft @1 $%
1B gotoDecC $0 -> gotoDecC 1B $0
$0 searchZero e0 -> backToDFromLeft $0 e%
00 searchZero 10 -> backToDFromLeft 00 1%
1C backToDFromRight @0 -> backToDFromRight 1C @0
$$ backToDFromLeft e1 -> backToDFromLeft $$ e1
0% eraseC $0 -> eraseC 0% $B
0@ backToD @0 -> backToD 0@ @0
$E FINAL -> FINAL $ FINAL
@$ restoreCD @% -> restoreCD @$ @0
@% gotoLastE 0@ -> dec @% 0@
0& backToSharpZero 1D -> backToSharpZero 0& 1D
0$ copyOne 0B -> backToSharpOne 0$ 01
eB eraseE $0 -> eraseE eB $B
0C eraseE 1E -> prepEraseC 0C 1E
@E initDivider $0 -> initDividerByTwo @E $0
0# backToD e1 -> backToD 0# e1
@X gotoDecC e0 -> gotoDecC @X e0
backToSharpZero @# -> @0 createCopy
eC backToDFromLeft 1% -> backToDFromLeft eC 1%
0$ initDividerByTwo 10 -> backToD 0$ 11
@& backToDFromRight @B -> backToDFromRight @& @B
@& backToDFromRight 11 -> backToDFromRight @& 11
@E searchNextBit 10 -> searchNextBit @E 10
e& backToFirstC 11 -> backToFirstC e& 11
$C backToStart 01 -> backToStart $C 01
1E restoreCD @0 -> restoreCD 1E @0
@@ replaceWithBlanks $@ -> backToDFromRight @@ $@
eB beginCopying $B -> backToStart eB $C
@@ gotoMark @E -> gotoDecC @@ @E
e% findBlank 0B -> FINAL e% 0B
e% restoreCD e1 -> restoreCD e% e1
@% backToDFromRight $1 -> backToDFromRight @% $1
1B checkCD @0 -> checkCD 1B @0
$# eraseE 10 -> eraseE $# 1B
@# backToDFromRight e1 -> backToDFromRight @# e1
10 findBlank @B -> FINAL 10 @B
11 backToDFromLeft 0& -> backToDFromLeft 11 0&
1% backToDFromRight 0B -> backToDFromRight 1% 0B
1E replaceWithBlanks @@ -> backToDFromRight 1E @@
0B backToDFromLeft 0& -> backToDFromLeft 0B 0&
eE initDivider $0 -> initDividerByTwo eE $0
0B backToDFromLeft 11 -> backToDFromLeft 0B 11
$D eraseE $E -> prepEraseC $D $E
1X eraseE 10 -> eraseE 1X 1B
e# backToSharpOne 1C -> backToSharpOne e# 1C
@X backToDFromRight @B -> backToDFromRight @X @B
$1 gotoDecC 1D -> dec $1 1D
$1 backToSharpOne eX -> backToSharpOne $1 eX
e@ searchOne 01 -> backToDFromLeft e@ 0&
11 gotoDecC $D -> dec 11 $D
10 backToDFromRight e1 -> backToDFromRight 10 e1
eD findZero 11 -> beginCopying eD 11
e$ eraseC @0 -> eraseC e$ @B
0@ backToFirstC e0 -> backToFirstC 0@ e0
$$ backToDFromRight eE -> backToDFromRight $$ eE
1D searchZero 00 -> backToDFromLeft 1D 0%
0$ copyOne $B -> backToSharpOne 0$ $1
$$ checkCD 10 -> checkCD $$ 10
$X gotoDecC @1 -> gotoDecC $X @1
@& findBlank eB -> FINAL @& eB
e0 backToSharpZero $E -> backToSharpZero e0 $E
0C initDividerByTwo @0 -> backToD 0C @1
$1 eraseC @0 -> eraseC $1 @B
00 prepEraseC 1D -> eraseC 00 1D
$0 restoreCD 10 -> restoreCD $0 10
FINAL 0& -> FINAL 0 FINAL
@@ searchOne @1 -> backToDFromLeft @@ @&
@% backToDFromLeft e1 -> backToDFromLeft @% e1
$C incD 00 -> checkCD $C 01
e@ backToDFromLeft 1% -> backToDFromLeft e@ 1%
0E backToFirstC 00 -> backToFirstC 0E 00
@D backToDFromLeft 0D -> searchNextBit @D 0D
0X backToSharpOne eE -> backToSharpOne 0X eE
@$ backToStart 00 -> backToStart @$ 00
@% backToSharpOne 1X -> backToSharpOne @% 1X
e& checkCD eD -> checkCD e& eD
eC searchOne 00 -> restoreCD eC 00
e@ eraseE 0E -> prepEraseC e@ 0E
e$ eraseC 11 -> eraseC e$ 1B
eB incD 01 -> incD eB 00
e0 backToDFromLeft 0D -> searchNextBit e0 0D
@E beginCopying @B -> backToStart @E @C
gotoLastE $0 -> $0 gotoLastE
0% backToSharpOne 00 -> backToSharpOne 0% 00
0% checkEForZero @B -> stop 0% @B
e1 gotoMark $1 -> gotoMark e1 $1
@1 temp $0 -> beginCopying @1 $0
eB backToDFromLeft e1 -> backToDFromLeft eB e1
0B backToSharpOne eC -> backToSharpOne 0B eC
1X backToD @1 -> backToD 1X @1
$$ backToSharpZero $X -> backToSharpZero $$ $X
00 forwardToLastD $E -> incD 00 $E
@& gotoLastE 0@ -> dec @& 0@
@B massErase 1@ -> eraseE @B 1@
1D temp 00 -> beginCopying 1D 00
e@ backToDFromRight @B -> backToDFromRight e@ @B
copyZero 0C -> 0C copyZero
0# gotoDecC 1D -> dec 0# 1D
$X temp $1 -> beginCopying $X $1
$% checkEForZero eB -> stop $% eB
0@ gotoDecC e0 -> gotoDecC 0@ e0
10 eraseE $1 -> eraseE 10 $B
e# backToSharpZero 1E -> backToSharpZero e# 1E
1D backToDFromLeft @1 -> backToDFromLeft 1D @1
@0 incD $0 -> checkCD @0 $1
1E copyOne @B -> backToSharpOne 1E @1
11 restoreCD 1& -> restoreCD 11 11
@@ beginCopying 1B -> backToStart @@ 1C
1D checkEForZero $B -> stop 1D $B
$@ searchZero 00 -> backToDFromLeft $@ 0%
$@ nullifier 1B -> initDivider $@ 1E
$B dec e1 -> gotoMark $B e0
1% restoreCD $D -> restoreCD 1% $D
@$ restoreCD 11 -> restoreCD @$ 11
@E searchOne @0 -> restoreCD @E @0
e& backToSharpOne eX -> backToSharpOne e& eX
1B checkCD 0D -> checkCD 1B 0D
e1 gotoMark 11 -> gotoMark e1 11
0% incD 00 -> checkCD 0% 01
1$ goToPlaceForDivider eB -> backToFirstC 1$ eD
e# backToSharpZero 0X -> backToSharpZero e# 0X
$% dec 00 -> dec $% 01
1X backToSharpOne 01 -> backToSharpOne 1X 01
0% temp 11 -> beginCopying 0% 11
@E backToSharpZero e1 -> backToSharpZero @E e1
@# backToDFromLeft 00 -> backToDFromLeft @# 00
e$ temp 01 -> beginCopying e$ 01
e0 backToStart $1 -> backToStart e0 $1
e0 restoreCD 11 -> restoreCD e0 11
1E eraseC e1 -> eraseC 1E eB
1@ restoreCD 1D -> restoreCD 1@ 1D
$@ backToSharpOne 1E -> backToSharpOne $@ 1E
1D restoreCD @& -> restoreCD 1D @1
eE backToFirstC @1 -> backToFirstC eE @1
0D restoreCD eD -> restoreCD 0D eD
@& searchOne @0 -> restoreCD @& @0
$E eraseC $1 -> eraseC $E $B
@@ backToSharpZero $D -> backToSharpZero @@ $D
$1 backToDFromLeft $0 -> backToDFromLeft $1 $0
0B copyZero @B -> backToSharpZero 0B @0
0$ backToD @0 -> backToD 0$ @0
$% eraseE e1 -> eraseE $% eB
@& findBlank @B -> FINAL @& @B
10 findBlank 00 -> temp 10 00
10 backToDFromLeft @D -> searchNextBit 10 @D
@0 temp $0 -> beginCopying @0 $0
$@ eraseC @1 -> eraseC $@ @B
0$ copyOne 1B -> backToSharpOne 0$ 11
$D initDivider @0 -> initDividerByTwo $D @0
@X findBlank 10 -> temp @X 10
1C restoreCD 0& -> restoreCD 1C 01
eC backToD e1 -> backToD eC e1
0X backToSharpOne $0 -> backToSharpOne 0X $0
e$ gotoMark 11 -> gotoMark e$ 11
0C prepEraseC 01 -> prepEraseC 0C 01
@X checkCD 10 -> checkCD @X 10
$0 gotoDecC 10 -> gotoDecC $0 10
1C searchNextBit e1 -> searchNextBit 1C e1
e$ searchOne $0 -> restoreCD e$ $0
0B restoreCD $0 -> restoreCD 0B $0
0& prepEraseC @D -> eraseC 0& @D
0B backToSharpOne @D -> backToSharpOne 0B @D
0% backToSharpOne 0X -> backToSharpOne 0% 0X
@X backToFirstC $1 -> backToFirstC @X $1
01 searchZero e0 -> backToDFromLeft 01 e%
@E eraseC 10 -> eraseC @E 1B
@# backToSharpOne 1X -> backToSharpOne @# 1X
0# findBlank 1B -> FINAL 0# 1B
$& prepEraseC @0 -> prepEraseC $& @0
e@ backToDFromLeft 01 -> backToDFromLeft e@ 01
$1 goToPlaceForDivider @B -> backToFirstC $1 @D
1# eraseC $C -> backToStart 1# $X
$D restoreCD $& -> restoreCD $D $1
1# backToSharpOne @X -> backToSharpOne 1# @X
eC gotoDecC 0D -> dec eC 0D
0X prepEraseC e0 -> prepEraseC 0X e0
0# searchZero @1 -> restoreCD 0# @1
0# initDivider 00 -> initDividerByTwo 0# 00
e# searchNextBit @0 -> searchNextBit e# @0
0% backToDFromLeft 10 -> backToDFromLeft 0% 10
copyOne 11 -> 11 copyOne
@% findBlank $1 -> temp @% $1
$@ findBlank $0 -> temp $@ $0
eE findBlank 1B -> FINAL eE 1B
11 initDivider e0 -> initDividerByTwo 11 e0
eX temp 11 -> beginCopying eX 11
$E forwardToLastD @E -> incD $E @E
1B searchNextBit @1 -> searchNextBit 1B @1
0% backToDFromLeft 00 -> backToDFromLeft 0% 00
@D checkCD $0 -> checkCD @D $0
$& searchZero $1 -> restoreCD $& $1
@% backToDFromRight eB -> backToDFromRight @% eB
11 backToStart @1 -> backToStart 11 @1
eX prepEraseC $0 -> prepEraseC eX $0
e% findBlank 11 -> temp e% 11
@0 searchNextBit e0 -> searchNextBit @0 e0
e1 backToSharpOne $X -> backToSharpOne e1 $X
FINAL $& -> FINAL $ FINAL
$C backToDFromLeft $% -> backToDFromLeft $C $%
00 backToSharpOne @1 -> backToSharpOne 00 @1
1E findBlank e0 -> temp 1E e0
$# restoreCD e0 -> restoreCD $# e0
@C searchOne e0 -> restoreCD @C e0
0D checkCD @0 -> checkCD 0D @0
1# dec 01 -> gotoMark 1# 00
$B initDivider e0 -> initDividerByTwo $B e0
@& backToDFromLeft @& -> backToDFromLeft @& @&
0% eraseC 10 -> eraseC 0% 1B
@B nullifier 0B -> initDivider @B 0E
0B gotoLastE 0@ -> dec 0B 0@
e% incD 11 -> incD e% 10
@$ backToSharpOne 01 -> backToSharpOne @$ 01
e@ searchOne 11 -> backToDFromLeft e@ 1&
$C incD e1 -> incD $C e0
@1 searchNextBit 00 -> searchNextBit @1 00
1B backToDFromRight @E -> backToDFromRight 1B @E
$& incD $1 -> incD $& $0
0D copyOne 1B -> backToSharpOne 0D 11
1C gotoMark eE -> gotoDecC 1C eE
$D eraseE 01 -> eraseE $D 0B
1D gotoMark $0 -> gotoMark 1D $0
e% prepEraseC 10 -> prepEraseC e% 10
@0 backToSharpZero $E -> backToSharpZero @0 $E
@D nullifier @B -> initDivider @D @E
@D restoreCD $1 -> restoreCD @D $1
1@ backToDFromLeft 1% -> backToDFromLeft 1@ 1%
0# backToSharpZero 0C -> backToSharpZero 0# 0C
eD eraseE 11 -> eraseE eD 1B
@0 backToDFromLeft @0 -> backToDFromLeft @0 @0
10 initDividerByTwo e0 -> backToD 10 e1
1X dec $0 -> dec 1X $1
0& backToSharpZero $D -> backToSharpZero 0& $D
1# gotoMark 0E -> gotoDecC 1# 0E
@@ searchNextBit e0 -> searchNextBit @@ e0
@D gotoDecC 01 -> gotoDecC @D 01
1D massErase @@ -> eraseE 1D @@
eC beginCopying $B -> backToStart eC $C
@X initDivider 10 -> initDividerByTwo @X 10
@0 backToDFromLeft 0% -> backToDFromLeft @0 0%
@% eraseE @E -> prepEraseC @% @E
eB backToDFromRight 11 -> backToDFromRight eB 11
@# backToSharpZero e0 -> backToSharpZero @# e0
@C eraseC @C -> backToStart @C @X
$E checkCD $D -> checkCD $E $D
e1 searchNextBit 01 -> searchNextBit e1 01
e& backToDFromLeft $& -> backToDFromLeft e& $&
0& searchOne 01 -> backToDFromLeft 0& 0&
0C backToD @1 -> backToD 0C @1
00 backToDFromLeft $D -> searchNextBit 00 $D
0# backToSharpZero 10 -> backToSharpZero 0# 10
0& backToDFromLeft $& -> backToDFromLeft 0& $&
@E backToDFromRight 10 -> backToDFromRight @E 10
$$ eraseE $0 -> eraseE $$ $B
$E prepEraseC 00 -> prepEraseC $E 00
1$ forwardToLastD $E -> incD 1$ $E
0# findBlank 00 -> temp 0# 00
1% backToDFromRight $0 -> backToDFromRight 1% $0
$E backToDFromLeft $1 -> backToDFromLeft $E $1
@# backToDFromLeft $% -> backToDFromLeft @# $%
11 nullifier 1B -> initDivider 11 1E
eD searchNextBit @1 -> searchNextBit eD @1
@# forwardToLastD 1E -> incD @# 1E
$X searchZero 11 -> restoreCD $X 11
0B beginCopying 0B -> backToStart 0B 0C
@& eraseE $1 -> eraseE @& $B
1$ prepEraseC 11 -> prepEraseC 1$ 11
0B eraseE $E -> prepEraseC 0B $E
eD prepEraseC $0 -> prepEraseC eD $0
0C backToSharpOne $C -> backToSharpOne 0C $C
0@ searchNextBit 10 -> searchNextBit 0@ 10
e$ checkEForZero @B -> stop e$ @B
0X eraseC eC -> backToStart 0X eX
e% eraseC e0 -> eraseC e% eB
$% temp $0 -> beginCopying $% $0
@X prepEraseC $0 -> prepEraseC @X $0
$C eraseC 0C -> backToStart $C 0X
$# prepEraseC eD -> eraseC $# eD
eE eraseE 10 -> eraseE eE 1B
10 gotoDecC 1D -> dec 10 1D
eE forwardToLastD 1E -> incD eE 1E
0B backToSharpZero 1C -> backToSharpZero 0B 1C
$1 dec e0 -> dec $1 e1
1% checkCD 0D -> checkCD 1% 0D
$@ prepEraseC e1 -> prepEraseC $@ e1
1E backToSharpZero 00 -> backToSharpZero 1E 00
$# backToSharpOne $D -> backToSharpOne $# $D
e% searchOne 01 -> backToDFromLeft e% 0&
$D backToDFromLeft 1& -> backToDFromLeft $D 1&
@E eraseC 00 -> eraseC @E 0B
@$ searchZero @0 -> backToDFromLeft @$ @%
eC backToSharpOne @1 -> backToSharpOne eC @1
1% restoreCD e& -> restoreCD 1% e1
@C copyOne 0B -> backToSharpOne @C 01
eX backToD 01 -> backToD eX 01
1% gotoDecC e0 -> gotoDecC 1% e0
$@ gotoLastE @@ -> dec $@ @@
e0 backToSharpZero $1 -> backToSharpZero e0 $1
e1 prepEraseC 11 -> prepEraseC e1 11
@E gotoMark $E -> gotoDecC @E $E
1X checkCD 0D -> checkCD 1X 0D
0% incD e1 -> incD 0% e0
$X findBlank 10 -> temp $X 10
@B incD e1 -> incD @B e0
@1 searchOne 10 -> restoreCD @1 10
@D backToSharpZero @C -> backToSharpZero @D @C
00 incD @1 -> incD 00 @0
@X eraseC $0 -> eraseC @X $B
e% restoreCD @D -> restoreCD e% @D
$1 restoreCD 1% -> restoreCD $1 10
$D backToStart @1 -> backToStart $D @1
0& incD @0 -> checkCD 0& @1
1D searchOne $0 -> restoreCD 1D $0
1% gotoDecC 11 -> gotoDecC 1% 11
copyZero eX -> eX copyZero
eB replaceWithBlanks e@ -> backToDFromRight eB e@
@@ findBlank eB -> FINAL @@ eB
eE beginCopying eB -> backToStart eE eC
1C backToSharpZero 10 -> backToSharpZero 1C 10
@# backToSharpOne $X -> backToSharpOne @# $X
1% backToSharpZero 00 -> backToSharpZero 1% 00
0# backToDFromLeft 0% -> backToDFromLeft 0# 0%
0X checkCD eD -> checkCD 0X eD
0X backToSharpZero e0 -> backToSharpZero 0X e0
e$ gotoMark 01 -> gotoMark e$ 01
$@ backToDFromLeft $0 -> backToDFromLeft $@ $0
e0 searchOne 01 -> backToDFromLeft e0 0&
backToD $D -> $D createCopy
01 searchOne $1 -> backToDFromLeft 01 $&
1C copyOne eB -> backToSharpOne 1C e1
00 backToSharpOne 1X -> backToSharpOne 00 1X
$1 prepEraseC eD -> eraseC $1 eD
1# prepEraseC eD -> eraseC 1# eD
eD nullifier $B -> initDivider eD $E
0B gotoMark @0 -> gotoMark 0B @0
$X backToDFromRight 11 -> backToDFromRight $X 11
00 massErase $@ -> eraseE 00 $@
e% searchZero 10 -> backToDFromLeft e% 1%
@& restoreCD @1 -> restoreCD @& @1
$& backToDFromLeft $% -> backToDFromLeft $& $%
@X backToDFromRight 1E -> backToDFromRight @X 1E
0& gotoMark 0E -> gotoDecC 0& 0E
$@ temp @0 -> beginCopying $@ @0
10 dec @0 -> dec 10 @1
1& dec e1 -> gotoMark 1& e0
$X gotoMark 01 -> gotoMark $X 01
$& goToPlaceForDivider eB -> backToFirstC $& eD
@% backToFirstC e0 -> backToFirstC @% e0
0$ restoreCD 1% -> restoreCD 0$ 10
$@ backToSharpZero 0C -> backToSharpZero $@ 0C
@0 findBlank $B -> FINAL @0 $B
0@ searchNextBit @0 -> searchNextBit 0@ @0
01 initDivider @0 -> initDividerByTwo 01 @0
0$ gotoMark @E -> gotoDecC 0$ @E
$B searchNextBit $1 -> searchNextBit $B $1
0# nullifier 0B -> initDivider 0# 0E
0D searchNextBit $0 -> searchNextBit 0D $0
$B dec e0 -> dec $B e1
00 backToFirstC 01 -> backToFirstC 00 01
0& initDividerByTwo 10 -> backToD 0& 11
$0 restoreCD @& -> restoreCD $0 @1
0D incD e0 -> checkCD 0D e1
$D nullifier 0B -> initDivider $D 0E
@B findZero @1 -> beginCopying @B @1
1& backToFirstC $1 -> backToFirstC 1& $1
0@ beginCopying 0B -> backToStart 0@ 0C
e1 restoreCD @1 -> restoreCD e1 @1
@# copyZero $B -> backToSharpZero @# $0
@$ initDividerByTwo e0 -> backToD @$ e1
e$ prepEraseC @1 -> prepEraseC e$ @1
e1 backToSharpOne @X -> backToSharpOne e1 @X
$@ restoreCD @0 -> restoreCD $@ @0
1# backToSharpOne 0E -> backToSharpOne 1# 0E
1# backToSharpZero 0E -> backToSharpZero 1# 0E
$X findBlank 0B -> FINAL $X 0B
$1 searchZero 01 -> restoreCD $1 01
0@ backToSharpOne @X -> backToSharpOne 0@ @X
@% forwardToLastD 0E -> incD @% 0E
@E backToSharpZero e0 -> backToSharpZero @E e0
11 backToDFromLeft $& -> backToDFromLeft 11 $&
0X incD 11 -> incD 0X 10
$& backToSharpOne 10 -> backToSharpOne $& 10
eX backToDFromRight $B -> backToDFromRight eX $B
$B eraseE eE -> prepEraseC $B eE
eX searchNextBit e0 -> searchNextBit eX e0
1D backToStart 10 -> backToStart 1D 10
0C temp 11 -> beginCopying 0C 11
backToSharpZero e# -> e0 createCopy
0# findZero e1 -> beginCopying 0# e1
1$ nullifier $B -> initDivider 1$ $E
$E nullifier eB -> initDivider $E eE
$E backToSharpZero eE -> backToSharpZero $E eE
10 backToSharpOne eD -> backToSharpOne 10 eD
@$ backToSharpZero @C -> backToSharpZero @$ @C
0D searchZero e1 -> restoreCD 0D e1
0& restoreCD 11 -> restoreCD 0& 11
0& eraseE $E -> prepEraseC 0& $E
e@ restoreCD e1 -> restoreCD e@ e1
1E searchNextBit 11 -> searchNextBit 1E 11
$$ backToD $0 -> backToD $$ $0
1% incD 01 -> incD 1% 00
1& restoreCD 01 -> restoreCD 1& 01
1@ backToDFromLeft @% -> backToDFromLeft 1@ @%
@D gotoMark e1 -> gotoMark @D e1
1E backToSharpZero @0 -> backToSharpZero 1E @0
0& backToDFromRight @E -> backToDFromRight 0& @E
@# prepEraseC 0D -> eraseC @# 0D
@0 gotoLastE e@ -> dec @0 e@
@0 gotoMark 0E -> gotoDecC @0 0E
eB massErase @@ -> eraseE eB @@
e# eraseE @1 -> eraseE e# @B
0$ initDividerByTwo 00 -> backToD 0$ 01
$D eraseE 11 -> eraseE $D 1B
0E gotoMark $0 -> gotoMark 0E $0
$X findBlank @B -> FINAL $X @B
$D massErase 1@ -> eraseE $D 1@
$& backToSharpZero eE -> backToSharpZero $& eE
$& prepEraseC $1 -> prepEraseC $& $1
e# incD e0 -> checkCD e# e1
0B restoreCD e1 -> restoreCD 0B e1
$& prepEraseC 0D -> eraseC $& 0D
1D gotoMark @1 -> gotoMark 1D @1
$& temp 00 -> beginCopying $& 00
$% findBlank $0 -> temp $% $0
$E backToSharpOne @E -> backToSharpOne $E @E
@@ restoreCD 1D -> restoreCD @@ 1D
@B incD $0 -> checkCD @B $1
$1 findBlank 1B -> FINAL $1 1B
eX eraseE 10 -> eraseE eX 1B
checkZeroD e1 -> e1 checkZeroD
@$ gotoMark $0 -> gotoMark @$ $0
eX prepEraseC 1D -> eraseC eX 1D
0D checkEForZero 0B -> stop 0D 0B
eD backToDFromLeft e0 -> backToDFromLeft eD e0
0D backToDFromRight $1 -> backToDFromRight 0D $1
eE massErase 1@ -> eraseE eE 1@
1$ backToSharpOne 1X -> backToSharpOne 1$ 1X
1% restoreCD 10 -> restoreCD 1% 10
$B eraseE 01 -> eraseE $B 0B
1X backToD $0 -> backToD 1X $0
$& goToPlaceForDivider $B -> backToFirstC $& $D
@C backToDFromLeft @D -> searchNextBit @C @D
0E checkEForZero eB -> stop 0E eB
10 backToFirstC 00 -> backToFirstC 10 00
@% checkCD 10 -> checkCD @% 10
@% backToDFromLeft eD -> searchNextBit @% eD
@& gotoDecC $0 -> gotoDecC @& $0
eB checkCD 10 -> checkCD eB 10
1@ backToSharpOne @E -> backToSharpOne 1@ @E
1B backToDFromRight $0 -> backToDFromRight 1B $0
@$ backToSharpZero $1 -> backToSharpZero @$ $1
eB checkCD 00 -> checkCD eB 00
moveToE $1 -> $1 moveToE
@X dec @0 -> dec @X @1
e& searchOne $0 -> restoreCD e& $0
0E searchNextBit 10 -> searchNextBit 0E 10
00 restoreCD $% -> restoreCD 00 $0
1% backToSharpOne $C -> backToSharpOne 1% $C
e# gotoDecC $0 -> gotoDecC e# $0
eD gotoMark 00 -> gotoMark eD 00
eX backToSharpOne $E -> backToSharpOne eX $E
@$ gotoDecC @1 -> gotoDecC @$ @1
11 prepEraseC e0 -> prepEraseC 11 e0
$$ backToFirstC 01 -> backToFirstC $$ 01
@1 searchNextBit 01 -> searchNextBit @1 01
0E incD 10 -> checkCD 0E 11
0@ eraseE 00 -> eraseE 0@ 0B
0% incD @0 -> checkCD 0% @1
$0 backToFirstC $0 -> backToFirstC $0 $0
$C eraseE 01 -> eraseE $C 0B
@# checkEForZero eB -> stop @# eB
e1 searchOne e0 -> restoreCD e1 e0
0X eraseE 1E -> prepEraseC 0X 1E
10 backToSharpOne $1 -> backToSharpOne 10 $1
@E checkCD $1 -> checkCD @E $1
eB backToSharpOne 1D -> backToSharpOne eB 1D
$X findZero 01 -> beginCopying $X 01
0X checkCD 00 -> checkCD 0X 00
10 searchOne e1 -> backToDFromLeft 10 e&
e0 gotoDecC $D -> dec e0 $D
eD restoreCD $D -> restoreCD eD $D
0# prepEraseC @1 -> prepEraseC 0# @1
$& searchNextBit 10 -> searchNextBit $& 10
0E beginCopying @B -> backToStart 0E @C
1@ restoreCD e& -> restoreCD 1@ e1
1B copyZero 1B -> backToSharpZero 1B 10
$@ searchZero 10 -> backToDFromLeft $@ 1%
eD dec 00 -> dec eD 01
$C backToSharpOne 0D -> backToSharpOne $C 0D
e# initDivider @0 -> initDividerByTwo e# @0
@# restoreCD eD -> restoreCD @# eD
$$ checkCD @1 -> checkCD $$ @1
e$ checkCD $0 -> checkCD e$ $0
1B replaceWithBlanks 1@ -> backToDFromRight 1B 1@
1% gotoDecC $1 -> gotoDecC 1% $1
1D searchNextBit 11 -> searchNextBit 1D 11
0B backToDFromLeft $D -> searchNextBit 0B $D
e& findZero 11 -> beginCopying e& 11
$# beginCopying eB -> backToStart $# eC
eX forwardToLastD $E -> incD eX $E
1D findBlank $0 -> temp 1D $0
0$ searchNextBit $1 -> searchNextBit 0$ $1
$B eraseC $0 -> eraseC $B $B
0@ restoreCD @% -> restoreCD 0@ @0
1% backToDFromRight 1E -> backToDFromRight 1% 1E
11 backToDFromLeft $0 -> backToDFromLeft 11 $0
0# searchZero 10 -> backToDFromLeft 0# 1%
@@ copyZero $B -> backToSharpZero @@ $0
$B incD 11 -> incD $B 10
@0 backToSharpZero 1C -> backToSharpZero @0 1C
@$ forwardToLastD $E -> incD @$ $E
0$ temp @1 -> beginCopying 0$ @1
10 forwardToLastD 0E -> incD 10 0E
0E checkCD e0 -> checkCD 0E e0
eC gotoDecC 11 -> gotoDecC eC 11
$1 forwardToLastD 1E -> incD $1 1E
eE backToStart $0 -> backToStart eE $0
$# backToDFromRight @E -> backToDFromRight $# @E
@@ backToStart e1 -> backToStart @@ e1
$X nullifier 1B -> initDivider $X 1E
$$ backToSharpZero e1 -> backToSharpZero $$ e1
eE backToSharpOne $D -> backToSharpOne eE $D
01 backToFirstC 11 -> backToFirstC 01 11
0X searchNextBit $1 -> searchNextBit 0X $1
eE restoreCD e% -> restoreCD eE e0
$$ backToSharpZero 1D -> backToSharpZero $$ 1D
01 prepEraseC @0 -> prepEraseC 01 @0
e& backToDFromLeft $D -> searchNextBit e& $D
e& eraseC 00 -> eraseC e& 0B
$B dec $0 -> dec $B $1
1D eraseC 10 -> eraseC 1D 1B
@@ checkEForZero eB -> stop @@ eB
1$ checkCD $D -> checkCD 1$ $D
@B eraseC eC -> backToStart @B eX
01 eraseE @1 -> eraseE 01 @B
e$ gotoDecC eD -> dec e$ eD
0E checkCD $0 -> checkCD 0E $0
11 backToSharpOne 01 -> backToSharpOne 11 01
@# backToSharpOne 11 -> backToSharpOne @# 11
@D prepEraseC $0 -> prepEraseC @D $0
1& eraseE 0E -> prepEraseC 1& 0E
1@ restoreCD $1 -> restoreCD 1@ $1
@@ backToStart 11 -> backToStart @@ 11
e& searchOne 11 -> backToDFromLeft e& 1&
$X copyZero 1B -> backToSharpZero $X 10
@0 restoreCD 01 -> restoreCD @0 01
1B backToFirstC e1 -> backToFirstC 1B e1
1& backToDFromRight 10 -> backToDFromRight 1& 10
$& findBlank $0 -> temp $& $0
e0 backToSharpZero 0D -> backToSharpZero e0 0D
e& backToSharpZero $E -> backToSharpZero e& $E
@1 eraseE 01 -> eraseE @1 0B
@@ searchZero 01 -> restoreCD @@ 01
e# forwardToLastD $E -> incD e# $E
1% backToDFromRight @1 -> backToDFromRight 1% @1
$% restoreCD 1% -> restoreCD $% 10
0# searchZero @0 -> backToDFromLeft 0# @%
1% beginCopying $B -> backToStart 1% $C
e1 restoreCD 1& -> restoreCD e1 11
eX eraseC $0 -> eraseC eX $B
$1 initDivider 00 -> initDividerByTwo $1 00
0B prepEraseC 10 -> prepEraseC 0B 10
$$ massErase 1@ -> eraseE $$ 1@
0C findZero e1 -> beginCopying 0C e1
0B backToSharpZero $E -> backToSharpZero 0B $E
eD initDivider 10 -> initDividerByTwo eD 10
1% prepEraseC 1D -> eraseC 1% 1D
@C prepEraseC $D -> eraseC @C $D
01 backToSharpOne e0 -> backToSharpOne 01 e0
eD backToDFromRight eE -> backToDFromRight eD eE
e& backToDFromRight $1 -> backToDFromRight e& $1
eE massErase @@ -> eraseE eE @@
e1 checkCD eD -> checkCD e1 eD
@$ restoreCD 1% -> restoreCD @$ 10
eB backToSharpOne eC -> backToSharpOne eB eC
1& backToStart e1 -> backToStart 1& e1
$% eraseE 01 -> eraseE $% 0B
e& incD e1 -> incD e& e0
@X backToDFromLeft @% -> backToDFromLeft @X @%
$# restoreCD e% -> restoreCD $# e0
1X checkCD 11 -> checkCD 1X 11
$0 backToStart 10 -> backToStart $0 10
0X backToSharpOne $1 -> backToSharpOne 0X $1
1D backToSharpZero $0 -> backToSharpZero 1D $0
1& backToFirstC e0 -> backToFirstC 1& e0
$$ backToDFromLeft e% -> backToDFromLeft $$ e%
1@ backToDFromLeft eD -> searchNextBit 1@ eD
e# searchOne 11 -> backToDFromLeft e# 1&
0& backToSharpOne @E -> backToSharpOne 0& @E
$& eraseE $1 -> eraseE $& $B
@C prepEraseC 00 -> prepEraseC @C 00
0C backToDFromLeft 01 -> backToDFromLeft 0C 01
1X backToSharpOne $C -> backToSharpOne 1X $C
01 backToDFromRight 10 -> backToDFromRight 01 10
$0 findBlank 11 -> temp $0 11
$X gotoDecC e1 -> gotoDecC $X e1
1X findZero 01 -> beginCopying 1X 01
e1 backToSharpOne 1X -> backToSharpOne e1 1X
@1 restoreCD 10 -> restoreCD @1 10
eD gotoMark e0 -> gotoMark eD e0
0B backToStart @1 -> backToStart 0B @1
$& backToDFromRight $B -> backToDFromRight $& $B
$$ backToStart $0 -> backToStart $$ $0
$D findBlank e0 -> temp $D e0
0% backToSharpOne 11 -> backToSharpOne 0% 11
@& searchNextBit @0 -> searchNextBit @& @0
@# backToDFromRight $B -> backToDFromRight @# $B
$X backToSharpZero @0 -> backToSharpZero $X @0
@@ copyOne $B -> backToSharpOne @@ $1
1X nullifier @B -> initDivider 1X @E
@% gotoDecC e1 -> gotoDecC @% e1
eB checkCD 1D -> checkCD eB 1D
eB searchZero $0 -> backToDFromLeft eB $%
0& restoreCD $% -> restoreCD 0& $0
e# initDividerByTwo @0 -> backToD e# @1
0D restoreCD @% -> restoreCD 0D @0
$& searchOne 10 -> restoreCD $& 10
@B eraseE @0 -> eraseE @B @B
$& backToSharpOne $D -> backToSharpOne $& $D
e@ massErase 1@ -> eraseE e@ 1@
@D dec 01 -> gotoMark @D 00
$$ restoreCD 1D -> restoreCD $$ 1D
10 restoreCD 1& -> restoreCD 10 11
01 eraseC @C -> backToStart 01 @X
$D backToDFromRight 1E -> backToDFromRight $D 1E
1C backToSharpOne eE -> backToSharpOne 1C eE
@0 findBlank 11 -> temp @0 11
1% findBlank e1 -> temp 1% e1
e@ goToPlaceForDivider 0B -> backToFirstC e@ 0D
0$ backToSharpOne 1X -> backToSharpOne 0$ 1X
e& backToDFromLeft @0 -> backToDFromLeft e& @0
1X gotoMark $0 -> gotoMark 1X $0
1# initDividerByTwo @0 -> backToD 1# @1
eC findBlank $B -> FINAL eC $B
0B temp 01 -> beginCopying 0B 01
0B searchZero 00 -> backToDFromLeft 0B 0%
$C backToSharpZero $0 -> backToSharpZero $C $0
@@ backToSharpOne @D -> backToSharpOne @@ @D
@C backToDFromRight $E -> backToDFromRight @C $E
e1 eraseE 10 -> eraseE e1 1B
0C temp $0 -> beginCopying 0C $0
@$ backToDFromLeft eD -> searchNextBit @$ eD
@D prepEraseC 0D -> eraseC @D 0D
eqCD @D -> @D FINAL
@$ eraseE eE -> prepEraseC @$ eE
0E backToFirstC @0 -> backToFirstC 0E @0
e$ findBlank @0 -> temp e$ @0
11 nullifier @B -> initDivider 11 @E
1D searchNextBit @1 -> searchNextBit 1D @1
@1 massErase 0@ -> eraseE @1 0@
@# incD 00 -> checkCD @# 01
@0 gotoMark $E -> gotoDecC @0 $E
0C backToD 00 -> backToD 0C 00
$# searchOne 11 -> backToDFromLeft $# 1&
$C temp 11 -> beginCopying $C 11
1@ backToSharpZero e0 -> backToSharpZero 1@ e0
e1 goToPlaceForDivider 0B -> backToFirstC e1 0D
1D findZero 01 -> beginCopying 1D 01
eX backToSharpOne @X -> backToSharpOne eX @X
1% backToDFromRight 00 -> backToDFromRight 1% 00
$$ restoreCD e% -> restoreCD $$ e0
@$ searchOne @0 -> restoreCD @$ @0
eE incD e0 -> checkCD eE e1
01 temp e1 -> beginCopying 01 e1
@# eraseE 0E -> prepEraseC @# 0E
$E backToDFromRight e0 -> backToDFromRight $E e0
1B massErase @@ -> eraseE 1B @@
01 backToSharpZero $D -> backToSharpZero 01 $D
@C backToSharpZero $D -> backToSharpZero @C $D
0@ backToSharpOne eE -> backToSharpOne 0@ eE
1E backToFirstC @1 -> backToFirstC 1E @1
1X restoreCD eD -> restoreCD 1X eD
0C gotoDecC @D -> dec 0C @D
0X incD $1 -> incD 0X $0
1E eraseC e0 -> eraseC 1E eB
eX backToDFromRight e0 -> backToDFromRight eX e0
$D copyOne 0B -> backToSharpOne $D 01
1C forwardToLastD 1E -> incD 1C 1E
$B findBlank @1 -> temp $B @1
0B backToSharpOne @E -> backToSharpOne 0B @E
e% initDividerByTwo @0 -> backToD e% @1
$% incD $0 -> checkCD $% $1
@1 checkCD 11 -> checkCD @1 11
eB eraseC e1 -> eraseC eB eB
eD backToDFromLeft $0 -> backToDFromLeft eD $0
1$ forwardToLastD @E -> incD 1$ @E
@# searchOne @1 -> backToDFromLeft @# @&
01 backToSharpZero $X -> backToSharpZero 01 $X
01 dec e1 -> gotoMark 01 e0
$B initDividerByTwo 10 -> backToD $B 11
@D backToFirstC 10 -> backToFirstC @D 10
0@ restoreCD 11 -> restoreCD 0@ 11
$@ backToDFromLeft 1D -> searchNextBit $@ 1D
10 eraseE 11 -> eraseE 10 1B
$& dec 00 -> dec $& 01
e0 backToDFromRight 11 -> backToDFromRight e0 11
@& backToSharpOne 1X -> backToSharpOne @& 1X
0@ prepEraseC 0D -> eraseC 0@ 0D
@% searchOne 11 -> backToDFromLeft @% 1&
$0 findBlank $0 -> temp $0 $0
e0 backToDFromLeft @% -> backToDFromLeft e0 @%
$E backToSharpZero $D -> backToSharpZero $E $D
0X backToSharpOne @1 -> backToSharpOne 0X @1
$D backToStart $1 -> backToStart $D $1
@% backToSharpOne eX -> backToSharpOne @% eX
$0 replaceWithBlanks @@ -> backToDFromRight $0 @@
eC backToDFromRight @B -> backToDFromRight eC @B
e& backToSharpOne 0X -> backToSharpOne e& 0X
1$ eraseC eC -> backToStart 1$ eX
@$ eraseC e0 -> eraseC @$ eB
01 restoreCD e0 -> restoreCD 01 e0
e% findBlank 01 -> temp e% 01
@% backToSharpZero @D -> backToSharpZero @% @D
@0 copyZero 0B -> backToSharpZero @0 00
00 backToSharpZero 0X -> backToSharpZero 00 0X
e@ restoreCD $1 -> restoreCD e@ $1
eD gotoMark eE -> gotoDecC eD eE
e0 backToSharpOne 11 -> backToSharpOne e0 11
$E searchNextBit 01 -> searchNextBit $E 01
01 checkCD @D -> checkCD 01 @D
1X backToSharpZero eX -> backToSharpZero 1X eX
@$ backToSharpOne 1D -> backToSharpOne @$ 1D
1% backToD $0 -> backToD 1% $0
@C searchZero 01 -> restoreCD @C 01
$% initDivider 00 -> initDividerByTwo $% 00
$D backToDFromRight e0 -> backToDFromRight $D e0
0D initDivider 00 -> initDividerByTwo 0D 00
@X forwardToLastD @E -> incD @X @E
e0 backToDFromRight @B -> backToDFromRight e0 @B
@0 backToSharpZero 1E -> backToSharpZero @0 1E
0# backToDFromLeft $& -> backToDFromLeft 0# $&
1B eraseE 1E -> prepEraseC 1B 1E
0D searchZero 11 -> restoreCD 0D 11
1B searchNextBit $1 -> searchNextBit 1B $1
e$ restoreCD 1% -> restoreCD e$ 10
eB eraseE $E -> prepEraseC eB $E
$0 checkCD 0D -> checkCD $0 0D
00 incD 11 -> incD 00 10
00 eraseE 10 -> eraseE 00 1B
1% checkCD @1 -> checkCD 1% @1
1& prepEraseC 11 -> prepEraseC 1& 11
@E backToSharpOne $0 -> backToSharpOne @E $0
00 findBlank @0 -> temp 00 @0
@@ backToDFromRight eE -> backToDFromRight @@ eE
11 dec e1 -> gotoMark 11 e0
@% gotoDecC 00 -> gotoDecC @% 00
$# backToStart @1 -> backToStart $# @1
eE backToDFromLeft 1& -> backToDFromLeft eE 1&
e0 nullifier eB -> initDivider e0 eE
$@ initDivider e0 -> initDividerByTwo $@ e0
@& findZero 01 -> beginCopying @& 01
0# eraseE e0 -> eraseE 0# eB
$0 searchNextBit 10 -> searchNextBit $0 10
@X backToStart $1 -> backToStart @X $1
@& initDividerByTwo 00 -> backToD @& 01
1% backToDFromLeft 00 -> backToDFromLeft 1% 00
$@ FINAL -> FINAL $ FINAL
@C gotoDecC @D -> dec @C @D
0D massErase e@ -> eraseE 0D e@
0% temp e0 -> beginCopying 0% e0
0C backToDFromRight 0E -> backToDFromRight 0C 0E
1$ gotoDecC e1 -> gotoDecC 1$ e1
@B backToSharpZero @D -> backToSharpZero @B @D
1B searchNextBit $0 -> searchNextBit 1B $0
1# restoreCD $0 -> restoreCD 1# $0
1% checkCD 10 -> checkCD 1% 10
e% backToDFromLeft eD -> searchNextBit e% eD
@& gotoMark @E -> gotoDecC @& @E
e$ backToStart $0 -> backToStart e$ $0
@1 temp 00 -> beginCopying @1 00
@E backToFirstC 11 -> backToFirstC @E 11
@X dec e1 -> gotoMark @X e0
@% gotoDecC @1 -> gotoDecC @% @1
0$ gotoMark @1 -> gotoMark 0$ @1
e@ searchZero $0 -> backToDFromLeft e@ $%
@@ backToDFromLeft 1& -> backToDFromLeft @@ 1&
eqCD $D -> $D FINAL
0B prepEraseC 0D -> eraseC 0B 0D
1@ findBlank $B -> FINAL 1@ $B
0X searchNextBit $0 -> searchNextBit 0X $0
0% beginCopying 0B -> backToStart 0% 0C
0@ restoreCD 0% -> restoreCD 0@ 00
$X prepEraseC @D -> eraseC $X @D
$& gotoDecC @1 -> gotoDecC $& @1
01 gotoDecC eD -> dec 01 eD
$& backToFirstC @1 -> backToFirstC $& @1
1B restoreCD 01 -> restoreCD 1B 01
00 gotoDecC 11 -> gotoDecC 00 11
0@ backToFirstC 00 -> backToFirstC 0@ 00
$$ backToDFromLeft @1 -> backToDFromLeft $$ @1
$& backToSharpZero $E -> backToSharpZero $& $E
0D replaceWithBlanks $@ -> backToDFromRight 0D $@
$E prepEraseC @D -> eraseC $E @D
$E searchNextBit 00 -> searchNextBit $E 00
$D searchZero 11 -> restoreCD $D 11
eD backToSharpOne @D -> backToSharpOne eD @D
$E backToD 01 -> backToD $E 01
11 gotoDecC $1 -> gotoDecC 11 $1
1D gotoMark e0 -> gotoMark 1D e0
e& backToSharpZero @E -> backToSharpZero e& @E
0B backToSharpOne eX -> backToSharpOne 0B eX
@& gotoMark e1 -> gotoMark @& e1
$& backToDFromRight 0E -> backToDFromRight $& 0E
$% backToSharpOne $E -> backToSharpOne $% $E
0% restoreCD $1 -> restoreCD 0% $1
1@ backToDFromLeft @D -> searchNextBit 1@ @D
$D gotoMark 01 -> gotoMark $D 01
e1 incD $0 -> checkCD e1 $1
1X initDivider 10 -> initDividerByTwo 1X 10
eE copyZero eB -> backToSharpZero eE e0
@1 searchZero 01 -> restoreCD @1 01
$1 backToStart $0 -> backToStart $1 $0
eC incD @0 -> checkCD eC @1
$# backToSharpOne 0X -> backToSharpOne $# 0X
$& checkCD 0D -> checkCD $& 0D
$1 gotoMark 00 -> gotoMark $1 00
eX searchOne $0 -> restoreCD eX $0
e1 restoreCD $& -> restoreCD e1 $1
1# forwardToLastD 1E -> incD 1# 1E
0# findBlank eB -> FINAL 0# eB
1X eraseC $C -> backToStart 1X $X
@& backToDFromLeft 0D -> searchNextBit @& 0D
1@ backToSharpZero $C -> backToSharpZero 1@ $C
@D backToDFromLeft @D -> searchNextBit @D @D
1D backToSharpOne $1 -> backToSharpOne 1D $1
e1 gotoMark 1E -> gotoDecC e1 1E
@E searchZero e1 -> restoreCD @E e1
1$ copyZero 0B -> backToSharpZero 1$ 00
00 gotoMark $E -> gotoDecC 00 $E
1$ findBlank 00 -> temp 1$ 00
eE gotoDecC 00 -> gotoDecC eE 00
findZero e0 -> e0 findBlank
eD restoreCD e1 -> restoreCD eD e1
$$ gotoMark e0 -> gotoMark $$ e0
eC temp @0 -> beginCopying eC @0
e# restoreCD 11 -> restoreCD e# 11
00 beginCopying eB -> backToStart 00 eC
1% gotoDecC 0D -> dec 1% 0D
$& prepEraseC e0 -> prepEraseC $& e0
@B backToD e0 -> backToD @B e0
eC incD 01 -> incD eC 00
@$ prepEraseC e0 -> prepEraseC @$ e0
@B backToDFromRight @E -> backToDFromRight @B @E
0C backToDFromRight $E -> backToDFromRight 0C $E
@& goToPlaceForDivider 1B -> backToFirstC @& 1D
e% checkCD @D -> checkCD e% @D
e@ searchZero e0 -> backToDFromLeft e@ e%
$C backToDFromLeft @1 -> backToDFromLeft $C @1
e$ findBlank 0B -> FINAL e$ 0B
$& backToD e1 -> backToD $& e1
@0 restoreCD 10 -> restoreCD @0 10
0& backToSharpZero 1E -> backToSharpZero 0& 1E
$% backToFirstC $1 -> backToFirstC $% $1
e1 replaceWithBlanks 1@ -> backToDFromRight e1 1@
@0 copyZero 1B -> backToSharpZero @0 10
@D backToStart 01 -> backToStart @D 01
e# checkCD eD -> checkCD e# eD
0@ eraseE @E -> prepEraseC 0@ @E
0# restoreCD $0 -> restoreCD 0# $0
0D gotoMark @1 -> gotoMark 0D @1
0D gotoDecC $D -> dec 0D $D
0# backToDFromRight @0 -> backToDFromRight 0# @0
@& backToDFromRight eE -> backToDFromRight @& eE
1D gotoMark 11 -> gotoMark 1D 11
$# searchNextBit 11 -> searchNextBit $# 11
$% dec $1 -> gotoMark $% $0
1$ backToDFromLeft $D -> searchNextBit 1$ $D
e0 incD $0 -> checkCD e0 $1
11 temp @0 -> beginCopying 11 @0
$@ backToSharpOne e0 -> backToSharpOne $@ e0
e& searchNextBit 11 -> searchNextBit e& 11
e$ searchOne 10 -> restoreCD e$ 10
$$ backToDFromRight @0 -> backToDFromRight $$ @0
0B gotoDecC @1 -> gotoDecC 0B @1
e% goToPlaceForDivider 0B -> backToFirstC e% 0D
@E backToSharpZero @1 -> backToSharpZero @E @1
@D backToDFromLeft e0 -> backToDFromLeft @D e0
e@ backToDFromLeft 10 -> backToDFromLeft e@ 10
0@ backToSharpZero 1E -> backToSharpZero 0@ 1E
0D backToSharpOne 1X -> backToSharpOne 0D 1X
@$ backToD 11 -> backToD @$ 11
@B searchOne 00 -> restoreCD @B 00
eC checkCD $1 -> checkCD eC $1
0& backToSharpZero @C -> backToSharpZero 0& @C
0& checkCD $1 -> checkCD 0& $1
$B backToDFromLeft 1& -> backToDFromLeft $B 1&
e$ restoreCD 10 -> restoreCD e$ 10
e0 checkEForZero @B -> stop e0 @B
1D backToSharpOne 1C -> backToSharpOne 1D 1C
1E restoreCD 00 -> restoreCD 1E 00
$$ findBlank @1 -> temp $$ @1
e1 backToD 01 -> backToD e1 01
0$ replaceWithBlanks $@ -> backToDFromRight 0$ $@
eC findBlank 10 -> temp eC 10
1# restoreCD 0D -> restoreCD 1# 0D
$& backToSharpZero @C -> backToSharpZero $& @C
@C eraseC 11 -> eraseC @C 1B
$0 checkCD e1 -> checkCD $0 e1
0B gotoDecC 0D -> dec 0B 0D
e% gotoDecC e1 -> gotoDecC e% e1
$@ backToStart 11 -> backToStart $@ 11
e# backToFirstC $0 -> backToFirstC e# $0
1X backToDFromLeft $1 -> backToDFromLeft 1X $1
1D searchZero 11 -> restoreCD 1D 11
$B restoreCD @0 -> restoreCD $B @0
1& findZero $1 -> beginCopying 1& $1
11 backToSharpZero eD -> backToSharpZero 11 eD
$0 backToSharpZero 01 -> backToSharpZero $0 01
0C restoreCD @% -> restoreCD 0C @0
11 gotoMark @1 -> gotoMark 11 @1
$E restoreCD @0 -> restoreCD $E @0
$X searchOne e1 -> backToDFromLeft $X e&
@B backToSharpOne @D -> backToSharpOne @B @D
0# restoreCD e1 -> restoreCD 0# e1
@1 backToDFromLeft 0D -> searchNextBit @1 0D
0D backToDFromLeft 1& -> backToDFromLeft 0D 1&
e& dec 11 -> gotoMark e& 10
@% prepEraseC @1 -> prepEraseC @% @1
@0 prepEraseC e0 -> prepEraseC @0 e0
$C forwardToLastD 0E -> incD $C 0E
0& backToD e1 -> backToD 0& e1
$E findBlank @0 -> temp $E @0
$& searchNextBit e1 -> searchNextBit $& e1
e0 backToStart 10 -> backToStart e0 10
eD backToDFromLeft 0& -> backToDFromLeft eD 0&
$E backToDFromRight $E -> backToDFromRight $E $E
0D gotoMark $0 -> gotoMark 0D $0
0X checkCD 10 -> checkCD 0X 10
1@ massErase @@ -> eraseE 1@ @@
eX restoreCD e0 -> restoreCD eX e0
e@ eraseE e0 -> eraseE e@ eB
$D checkEForZero 0B -> stop $D 0B
00 gotoDecC @D -> dec 00 @D
$% gotoLastE 1@ -> dec $% 1@
$C eraseE $E -> prepEraseC $C $E
@& backToSharpOne 10 -> backToSharpOne @& 10
1$ checkCD 00 -> checkCD 1$ 00
1E backToSharpZero 0X -> backToSharpZero 1E 0X
$# searchNextBit 10 -> searchNextBit $# 10
$X backToSharpOne e0 -> backToSharpOne $X e0
@X gotoDecC @0 -> gotoDecC @X @0
0D restoreCD 1D -> restoreCD 0D 1D
$E backToSharpZero @0 -> backToSharpZero $E @0
$X eraseC 0C -> backToStart $X 0X
eE initDividerByTwo $0 -> backToD eE $1
0$ searchNextBit $0 -> searchNextBit 0$ $0
0& checkEForZero 0B -> stop 0& 0B
@& temp e0 -> beginCopying @& e0
@B checkCD $1 -> checkCD @B $1
$# backToSharpZero 1E -> backToSharpZero $# 1E
@E gotoMark 11 -> gotoMark @E 11
11 copyZero $B -> backToSharpZero 11 $0
e# eraseE @0 -> eraseE e# @B
eD temp @1 -> beginCopying eD @1
eC backToFirstC e0 -> backToFirstC eC e0
$D backToDFromRight eB -> backToDFromRight $D eB
0D gotoMark e0 -> gotoMark 0D e0
$D backToStart e0 -> backToStart $D e0
eE backToSharpZero eC -> backToSharpZero eE eC
1# findZero 11 -> beginCopying 1# 11
@X temp @1 -> beginCopying @X @1
0# findBlank $0 -> temp 0# $0
@E gotoDecC 00 -> gotoDecC @E 00
@1 gotoMark e1 -> gotoMark @1 e1
e& copyOne 0B -> backToSharpOne e& 01
1B backToD 11 -> backToD 1B 11
0B initDivider 00 -> initDividerByTwo 0B 00
1& restoreCD 00 -> restoreCD 1& 00
eD backToSharpOne e0 -> backToSharpOne eD e0
1& findBlank $B -> FINAL 1& $B
eD searchZero e1 -> restoreCD eD e1
00 findBlank e0 -> temp 00 e0
1% searchZero $1 -> restoreCD 1% $1
1B restoreCD e0 -> restoreCD 1B e0
01 backToDFromLeft 0D -> searchNextBit 01 0D
1# backToDFromRight $0 -> backToDFromRight 1# $0
$0 restoreCD e1 -> restoreCD $0 e1
$B searchNextBit 10 -> searchNextBit $B 10
1& backToSharpZero @D -> backToSharpZero 1& @D
1B backToDFromLeft $0 -> backToDFromLeft 1B $0
e@ searchOne $1 -> backToDFromLeft e@ $&
1# prepEraseC 00 -> prepEraseC 1# 00
$# checkCD 11 -> checkCD $# 11
eX initDivider 00 -> initDividerByTwo eX 00
$0 backToSharpZero eD -> backToSharpZero $0 eD
$1 findBlank $1 -> temp $1 $1
$$ copyOne 1B -> backToSharpOne $$ 11
01 backToSharpOne 0X -> backToSharpOne 01 0X
eX copyOne 1B -> backToSharpOne eX 11
1X checkCD 10 -> checkCD 1X 10
1B backToSharpZero 0C -> backToSharpZero 1B 0C
0# restoreCD 1% -> restoreCD 0# 10
0& dec 01 -> gotoMark 0& 00
eX backToSharpZero eC -> backToSharpZero eX eC
1# searchNextBit $1 -> searchNextBit 1# $1
1X checkEForZero 1B -> stop 1X 1B
@B checkCD @1 -> checkCD @B @1
eB findZero e1 -> beginCopying eB e1
eX restoreCD @0 -> restoreCD eX @0
@1 backToSharpOne 1C -> backToSharpOne @1 1C
$0 searchOne 10 -> restoreCD $0 10
eE restoreCD $0 -> restoreCD eE $0
e0 backToSharpZero $D -> backToSharpZero e0 $D
$$ backToSharpOne 00 -> backToSharpOne $$ 00
$X backToSharpZero $E -> backToSharpZero $X $E
1C restoreCD 00 -> restoreCD 1C 00
e1 searchOne 01 -> backToDFromLeft e1 0&
eX restoreCD 1D -> restoreCD eX 1D
@B gotoDecC 00 -> gotoDecC @B 00
1@ checkCD $1 -> checkCD 1@ $1
@@ checkCD 1D -> checkCD @@ 1D
$% restoreCD @% -> restoreCD $% @0
goToPlaceForDivider @1 -> @1 goToPlaceForDivider
01 restoreCD 1D -> restoreCD 01 1D
@C backToSharpOne 00 -> backToSharpOne @C 00
e# findBlank eB -> FINAL e# eB
1# prepEraseC 0D -> eraseC 1# 0D
e@ backToStart e0 -> backToStart e@ e0
e1 searchOne 10 -> restoreCD e1 10
$0 backToDFromRight $B -> backToDFromRight $0 $B
$X restoreCD e& -> restoreCD $X e1
0E gotoMark 00 -> gotoMark 0E 00
$B eraseC $1 -> eraseC $B $B
$% searchZero 01 -> restoreCD $% 01
eX copyZero 1B -> backToSharpZero eX 10
0$ beginCopying 1B -> backToStart 0$ 1C
e@ searchZero 00 -> backToDFromLeft e@ 0%
e0 backToSharpZero @X -> backToSharpZero e0 @X
11 eraseC $0 -> eraseC 11 $B
1@ backToSharpZero @E -> backToSharpZero 1@ @E
$@ eraseC $1 -> eraseC $@ $B
0& findBlank 00 -> temp 0& 00
$& searchZero 10 -> backToDFromLeft $& 1%
e& gotoMark $E -> gotoDecC e& $E
1@ copyOne 0B -> backToSharpOne 1@ 01
0E gotoMark 01 -> gotoMark 0E 01
1X gotoLastE 0@ -> dec 1X 0@
1B backToFirstC 10 -> backToFirstC 1B 10
0X prepEraseC 11 -> prepEraseC 0X 11
e@ checkCD @0 -> checkCD e@ @0
0C goToPlaceForDivider @B -> backToFirstC 0C @D
eC checkCD @D -> checkCD eC @D
1$ eraseE 00 -> eraseE 1$ 0B
0C restoreCD e0 -> restoreCD 0C e0
1X searchOne 10 -> restoreCD 1X 10
1E gotoDecC e1 -> gotoDecC 1E e1
1@ initDivider e0 -> initDividerByTwo 1@ e0
10 backToD $1 -> backToD 10 $1
1X eraseC e1 -> eraseC 1X eB
$E restoreCD e1 -> restoreCD $E e1
$E backToD 11 -> backToD $E 11
0@ checkCD $1 -> checkCD 0@ $1
e$ gotoLastE @@ -> dec e$ @@
1@ restoreCD @0 -> restoreCD 1@ @0
$E prepEraseC @1 -> prepEraseC $E @1
@D restoreCD 00 -> restoreCD @D 00
1X backToD e0 -> backToD 1X e0
1& backToSharpOne 00 -> backToSharpOne 1& 00
0@ findBlank $1 -> temp 0@ $1
e@ backToDFromRight @1 -> backToDFromRight e@ @1
eX replaceWithBlanks @@ -> backToDFromRight eX @@
eD eraseE @E -> prepEraseC eD @E
e@ backToStart $0 -> backToStart e@ $0
$# backToDFromRight e0 -> backToDFromRight $# e0
$$ incD @1 -> incD $$ @0
@# dec 11 -> gotoMark @# 10
0X eraseE $0 -> eraseE 0X $B
$C eraseC 1C -> backToStart $C 1X
e@ findBlank eB -> FINAL e@ eB
0D eraseC @C -> backToStart 0D @X
@C restoreCD @0 -> restoreCD @C @0
@$ backToDFromLeft 11 -> backToDFromLeft @$ 11
$% prepEraseC e0 -> prepEraseC $% e0
@D eraseE 1E -> prepEraseC @D 1E
$@ backToSharpZero @0 -> backToSharpZero $@ @0
@C backToStart 00 -> backToStart @C 00
@D eraseE $E -> prepEraseC @D $E
@# temp $1 -> beginCopying @# $1
0% restoreCD @0 -> restoreCD 0% @0
$0 massErase e@ -> eraseE $0 e@
@% restoreCD e& -> restoreCD @% e1
0E backToDFromLeft 0D -> searchNextBit 0E 0D
0$ gotoDecC 0D -> dec 0$ 0D
0X eraseC 0C -> backToStart 0X 0X
1E searchOne $0 -> restoreCD 1E $0
0B searchOne e1 -> backToDFromLeft 0B e&
$& backToSharpOne eC -> backToSharpOne $& eC
0& gotoMark @E -> gotoDecC 0& @E
1@ backToSharpZero eD -> backToSharpZero 1@ eD
1X restoreCD 1D -> restoreCD 1X 1D
@& backToDFromRight $1 -> backToDFromRight @& $1
eC backToSharpZero $E -> backToSharpZero eC $E
@@ backToSharpOne eD -> backToSharpOne @@ eD
@X dec $0 -> dec @X $1
eC backToDFromRight e1 -> backToDFromRight eC e1
0X incD 01 -> incD 0X 00
@# nullifier 1B -> initDivider @# 1E
0& backToFirstC 00 -> backToFirstC 0& 00
@X checkCD $D -> checkCD @X $D
$B backToFirstC 01 -> backToFirstC $B 01
0B eraseE 0E -> prepEraseC 0B 0E
@& restoreCD 10 -> restoreCD @& 10
$C backToDFromRight $B -> backToDFromRight $C $B
1C gotoMark @E -> gotoDecC 1C @E
$0 backToDFromLeft 10 -> backToDFromLeft $0 10
$C backToFirstC e0 -> backToFirstC $C e0
1@ searchOne 11 -> backToDFromLeft 1@ 1&
@D backToDFromLeft $1 -> backToDFromLeft @D $1
e# eraseE 0E -> prepEraseC e# 0E
@B eraseE $0 -> eraseE @B $B
e# gotoDecC 00 -> gotoDecC e# 00
@0 eraseE $0 -> eraseE @0 $B
0C copyZero @B -> backToSharpZero 0C @0
0E restoreCD $& -> restoreCD 0E $1
$& gotoDecC 0D -> dec $& 0D
1C backToDFromLeft $% -> backToDFromLeft 1C $%
1% gotoMark e0 -> gotoMark 1% e0
0X backToDFromRight @B -> backToDFromRight 0X @B
e& backToFirstC @0 -> backToFirstC e& @0
e@ eraseE @1 -> eraseE e@ @B
e% temp 10 -> beginCopying e% 10
0X backToSharpZero 1C -> backToSharpZero 0X 1C
e& gotoDecC $0 -> gotoDecC e& $0
0# eraseE $E -> prepEraseC 0# $E
@1 incD 11 -> incD @1 10
@E backToDFromRight 0B -> backToDFromRight @E 0B
1% massErase 0@ -> eraseE 1% 0@
0# findZero 11 -> beginCopying 0# 11
$D backToSharpZero 1C -> backToSharpZero $D 1C
e# forwardToLastD eE -> incD e# eE
0@ backToSharpZero $C -> backToSharpZero 0@ $C
$1 findBlank $0 -> temp $1 $0
eD dec 11 -> gotoMark eD 10
1% massErase e@ -> eraseE 1% e@
0# incD 10 -> checkCD 0# 11
0X backToStart e1 -> backToStart 0X e1
$1 searchZero e1 -> restoreCD $1 e1
11 checkCD @1 -> checkCD 11 @1
eD initDividerByTwo 10 -> backToD eD 11
0B prepEraseC @D -> eraseC 0B @D
@@ findBlank $0 -> temp @@ $0
0& temp $0 -> beginCopying 0& $0
1@ temp e0 -> beginCopying 1@ e0
$X restoreCD 01 -> restoreCD $X 01
e& backToSharpZero @0 -> backToSharpZero e& @0
11 backToFirstC $1 -> backToFirstC 11 $1
eE findBlank e1 -> temp eE e1
@D checkEForZero eB -> stop @D eB
1& backToDFromLeft 0& -> backToDFromLeft 1& 0&
$1 backToSharpZero @0 -> backToSharpZero $1 @0
10 eraseE @1 -> eraseE 10 @B
eX eraseC 00 -> eraseC eX 0B
1$ backToDFromRight $B -> backToDFromRight 1$ $B
$$ eraseE e1 -> eraseE $$ eB
0& backToDFromLeft e& -> backToDFromLeft 0& e&
$1 backToDFromRight @0 -> backToDFromRight $1 @0
$% checkCD e1 -> checkCD $% e1
1% incD e1 -> incD 1% e0
11 checkEForZero 1B -> stop 11 1B
$& prepEraseC 00 -> prepEraseC $& 00
$% backToSharpOne eD -> backToSharpOne $% eD
1% gotoMark 0E -> gotoDecC 1% 0E
@E backToSharpZero 00 -> backToSharpZero @E 00
1E backToSharpZero 1X -> backToSharpZero 1E 1X
1B backToDFromRight eE -> backToDFromRight 1B eE
eX initDividerByTwo 00 -> backToD eX 01
1B goToPlaceForDivider 1B -> backToFirstC 1B 1D
01 eraseE 0E -> prepEraseC 01 0E
eB temp e0 -> beginCopying eB e0
$E incD @0 -> checkCD $E @1
$$ copyOne @B -> backToSharpOne $$ @1
e$ restoreCD $% -> restoreCD e$ $0
e# prepEraseC e0 -> prepEraseC e# e0
@0 initDividerByTwo @0 -> backToD @0 @1
0$ backToD @1 -> backToD 0$ @1
1# gotoDecC 01 -> gotoDecC 1# 01
e@ dec 11 -> gotoMark e@ 10
@X backToDFromRight 11 -> backToDFromRight @X 11
1@ restoreCD e% -> restoreCD 1@ e0
$E eraseE $0 -> eraseE $E $B
$@ backToDFromLeft 0% -> backToDFromLeft $@ 0%
1# incD @0 -> checkCD 1# @1
0& initDivider e0 -> initDividerByTwo 0& e0
0B prepEraseC 00 -> prepEraseC 0B 00
$1 backToDFromLeft 1& -> backToDFromLeft $1 1&
$0 checkCD eD -> checkCD $0 eD
@C copyOne 1B -> backToSharpOne @C 11
@B backToSharpZero @X -> backToSharpZero @B @X
0B forwardToLastD @E -> incD 0B @E
$C goToPlaceForDivider 1B -> backToFirstC $C 1D
0$ backToSharpZero @0 -> backToSharpZero 0$ @0
$% prepEraseC @D -> eraseC $% @D
$@ restoreCD e0 -> restoreCD $@ e0
@% beginCopying 0B -> backToStart @% 0C
@B copyOne @B -> backToSharpOne @B @1
10 gotoMark @0 -> gotoMark 10 @0
0C goToPlaceForDivider 1B -> backToFirstC 0C 1D
11 replaceWithBlanks 1@ -> backToDFromRight 11 1@
@& eraseE @1 -> eraseE @& @B
10 backToDFromLeft e1 -> backToDFromLeft 10 e1
@X checkCD 11 -> checkCD @X 11
0% backToFirstC $1 -> backToFirstC 0% $1
0C searchZero e0 -> backToDFromLeft 0C e%
$1 checkEForZero @B -> stop $1 @B
e% nullifier 0B -> initDivider e% 0E
eX backToSharpOne eD -> backToSharpOne eX eD
0$ eraseE $0 -> eraseE 0$ $B
1B forwardToLastD $E -> incD 1B $E
@& copyOne 1B -> backToSharpOne @& 11
eD searchZero 01 -> restoreCD eD 01
00 backToFirstC e0 -> backToFirstC 00 e0
1@ beginCopying $B -> backToStart 1@ $C
0C prepEraseC 10 -> prepEraseC 0C 10
1D checkCD e0 -> checkCD 1D e0
e% backToSharpOne $1 -> backToSharpOne e% $1
eB searchOne 00 -> restoreCD eB 00
$D backToSharpZero @C -> backToSharpZero $D @C
1E backToSharpZero 1E -> backToSharpZero 1E 1E
1& searchNextBit $0 -> searchNextBit 1& $0
e@ checkCD 0D -> checkCD e@ 0D
@D backToDFromLeft $% -> backToDFromLeft @D $%
0# backToSharpOne $C -> backToSharpOne 0# $C
eE incD $1 -> incD eE $0
$# gotoLastE 0@ -> dec $# 0@
@1 backToSharpZero eD -> backToSharpZero @1 eD
e& backToSharpOne 0C -> backToSharpOne e& 0C
e# checkCD $1 -> checkCD e# $1
@X incD 00 -> checkCD @X 01
@& backToDFromRight eB -> backToDFromRight @& eB
$@ backToSharpOne eD -> backToSharpOne $@ eD
@% backToD $0 -> backToD @% $0
0E gotoLastE @@ -> dec 0E @@
e% copyZero 0B -> backToSharpZero e% 00
@@ prepEraseC $0 -> prepEraseC @@ $0
1E backToSharpOne e0 -> backToSharpOne 1E e0
1C restoreCD 0% -> restoreCD 1C 00
e1 restoreCD e1 -> restoreCD e1 e1
01 backToD $1 -> backToD 01 $1
0C gotoMark e0 -> gotoMark 0C e0
0E backToSharpOne 0X -> backToSharpOne 0E 0X
$C eraseE 11 -> eraseE $C 1B
e0 searchOne $0 -> restoreCD e0 $0
@% backToSharpZero @E -> backToSharpZero @% @E
0@ gotoDecC 1D -> dec 0@ 1D
@& findBlank 0B -> FINAL @& 0B
@1 backToDFromRight 0B -> backToDFromRight @1 0B
1X restoreCD @1 -> restoreCD 1X @1
1& backToSharpOne 0D -> backToSharpOne 1& 0D
$B eraseC 1C -> backToStart $B 1X
createCopy @1 -> @# copyOne
@1 eraseE $E -> prepEraseC @1 $E
eE searchOne 10 -> restoreCD eE 10
0B backToDFromLeft e1 -> backToDFromLeft 0B e1
@0 eraseE $1 -> eraseE @0 $B
$C checkCD $1 -> checkCD $C $1
$C eraseE 1E -> prepEraseC $C 1E
@E gotoDecC @D -> dec @E @D
e1 eraseE $0 -> eraseE e1 $B
0@ dec $0 -> dec 0@ $1
@C searchOne 00 -> restoreCD @C 00
1X backToDFromRight @E -> backToDFromRight 1X @E
0D backToDFromLeft @% -> backToDFromLeft 0D @%
@# backToDFromRight eE -> backToDFromRight @# eE
@& backToSharpZero 0E -> backToSharpZero @& 0E
e# searchNextBit $0 -> searchNextBit e# $0
1B searchOne e0 -> restoreCD 1B e0
@C gotoMark $0 -> gotoMark @C $0
$C backToDFromRight 10 -> backToDFromRight $C 10
@1 backToD 01 -> backToD @1 01
0X gotoDecC @1 -> gotoDecC 0X @1
01 restoreCD 1& -> restoreCD 01 11
e@ backToFirstC $1 -> backToFirstC e@ $1
0# eraseC @C -> backToStart 0# @X
0@ prepEraseC e0 -> prepEraseC 0@ e0
10 eraseC eC -> backToStart 10 eX
@X backToSharpOne 10 -> backToSharpOne @X 10
eC findBlank 11 -> temp eC 11
0X prepEraseC 10 -> prepEraseC 0X 10
1# gotoMark e0 -> gotoMark 1# e0
e% prepEraseC 0D -> eraseC e% 0D
$B prepEraseC e0 -> prepEraseC $B e0
e@ backToFirstC $0 -> backToFirstC e@ $0
0$ temp 01 -> beginCopying 0$ 01
@$ backToDFromLeft 00 -> backToDFromLeft @$ 00
0C findBlank @1 -> temp 0C @1
@D copyZero eB -> backToSharpZero @D e0
copyOne @C -> @C copyOne
1& checkEForZero eB -> stop 1& eB
0@ searchNextBit @1 -> searchNextBit 0@ @1
@D backToSharpZero 0C -> backToSharpZero @D 0C
0# backToSharpOne 11 -> backToSharpOne 0# 11
0E eraseC $0 -> eraseC 0E $B
1X gotoDecC 00 -> gotoDecC 1X 00
@0 gotoDecC e1 -> gotoDecC @0 e1
$D backToDFromLeft e% -> backToDFromLeft $D e%
$C backToSharpOne @D -> backToSharpOne $C @D
0% temp 01 -> beginCopying 0% 01
0E backToDFromLeft $D -> searchNextBit 0E $D
@B backToSharpZero 11 -> backToSharpZero @B 11
@X backToDFromRight eE -> backToDFromRight @X eE
@$ gotoMark $E -> gotoDecC @$ $E
0E findBlank @B -> FINAL 0E @B
@1 findBlank 0B -> FINAL @1 0B
$# eraseE @E -> prepEraseC $# @E
eB backToSharpZero @D -> backToSharpZero eB @D
searchNextBit e% -> e% eqCD
eE searchOne e0 -> restoreCD eE e0
$C backToDFromRight @0 -> backToDFromRight $C @0
@B checkCD @0 -> checkCD @B @0
@E backToSharpZero $0 -> backToSharpZero @E $0
0% dec e0 -> dec 0% e1
$# prepEraseC @0 -> prepEraseC $# @0
1C initDividerByTwo e0 -> backToD 1C e1
@E prepEraseC @1 -> prepEraseC @E @1
checkEForZero 10 -> 10 checkEForZero
e@ backToDFromLeft 11 -> backToDFromLeft e@ 11
@1 copyZero 1B -> backToSharpZero @1 10
$E gotoMark e1 -> gotoMark $E e1
eC backToFirstC $1 -> backToFirstC eC $1
0B eraseE e1 -> eraseE 0B eB
eD backToDFromRight $0 -> backToDFromRight eD $0
@B gotoDecC eD -> dec @B eD
1X temp 10 -> beginCopying 1X 10
$0 backToSharpZero $C -> backToSharpZero $0 $C
0X copyOne eB -> backToSharpOne 0X e1
0% gotoMark 0E -> gotoDecC 0% 0E
@& backToSharpOne @D -> backToSharpOne @& @D
1X temp @0 -> beginCopying 1X @0
e& backToDFromLeft @% -> backToDFromLeft e& @%
$X incD $1 -> incD $X $0
1X backToDFromRight eE -> backToDFromRight 1X eE
11 findZero 11 -> beginCopying 11 11
0D eraseC 1C -> backToStart 0D 1X
0X backToD e0 -> backToD 0X e0
01 searchNextBit e1 -> searchNextBit 01 e1
1# eraseE e0 -> eraseE 1# eB
e1 backToSharpZero $E -> backToSharpZero e1 $E
0& goToPlaceForDivider @B -> backToFirstC 0& @D
eD findZero @1 -> beginCopying eD @1
$1 backToD 11 -> backToD $1 11
@B backToStart 00 -> backToStart @B 00
1C backToStart 01 -> backToStart 1C 01
$E initDivider 00 -> initDividerByTwo $E 00
1% findBlank $B -> FINAL 1% $B
1$ initDivider e0 -> initDividerByTwo 1$ e0
01 gotoLastE $@ -> dec 01 $@
01 gotoMark eE -> gotoDecC 01 eE
1B backToDFromLeft 0D -> searchNextBit 1B 0D
$$ eraseC @0 -> eraseC $$ @B
@B gotoDecC e1 -> gotoDecC @B e1
e% searchOne 11 -> backToDFromLeft e% 1&
FINAL $1 -> FINAL $ FINAL
eD backToDFromLeft 11 -> backToDFromLeft eD 11
@X goToPlaceForDivider $B -> backToFirstC @X $D
10 checkEForZero 0B -> stop 10 0B
@X backToSharpOne 01 -> backToSharpOne @X 01
@0 temp 11 -> beginCopying @0 11
$X copyOne eB -> backToSharpOne $X e1
e$ searchZero 00 -> backToDFromLeft e$ 0%
$D backToSharpZero $C -> backToSharpZero $D $C
$$ backToSharpOne eD -> backToSharpOne $$ eD
1E findBlank e1 -> temp 1E e1
eX backToSharpOne $1 -> backToSharpOne eX $1
11 backToDFromRight 1B -> backToDFromRight 11 1B
e% dec 11 -> gotoMark e% 10
11 searchZero @1 -> restoreCD 11 @1
$C restoreCD 1D -> restoreCD $C 1D
e1 searchOne @0 -> restoreCD e1 @0
@C backToDFromRight eB -> backToDFromRight @C eB
@B backToSharpZero $X -> backToSharpZero @B $X
$0 backToSharpZero 1D -> backToSharpZero $0 1D
$% initDividerByTwo @0 -> backToD $% @1
0X backToStart 11 -> backToStart 0X 11
eB backToSharpOne 0X -> backToSharpOne eB 0X
e% backToSharpZero 11 -> backToSharpZero e% 11
1@ backToSharpZero $1 -> backToSharpZero 1@ $1
$C backToSharpOne 01 -> backToSharpOne $C 01
0& backToDFromRight 1E -> backToDFromRight 0& 1E
01 eraseE 00 -> eraseE 01 0B
@& backToDFromLeft 0& -> backToDFromLeft @& 0&
@B backToDFromLeft 0& -> backToDFromLeft @B 0&
$0 eraseE @E -> prepEraseC $0 @E
eB checkEForZero 0B -> stop eB 0B
0$ checkCD eD -> checkCD 0$ eD
$D findZero 01 -> beginCopying $D 01
0B findBlank 10 -> temp 0B 10
1& restoreCD e% -> restoreCD 1& e0
$D findBlank 11 -> temp $D 11
0@ backToSharpOne 1E -> backToSharpOne 0@ 1E
eB searchOne e0 -> restoreCD eB e0
11 eraseC 0C -> backToStart 11 0X
e@ backToD e1 -> backToD e@ e1
@# checkEForZero 0B -> stop @# 0B
$@ checkCD @1 -> checkCD $@ @1
11 restoreCD 10 -> restoreCD 11 10
e% dec 00 -> dec e% 01
@& backToDFromLeft eD -> searchNextBit @& eD
eB goToPlaceForDivider eB -> backToFirstC eB eD
0B backToDFromRight @0 -> backToDFromRight 0B @0
1% backToSharpOne 0X -> backToSharpOne 1% 0X
$% backToSharpOne e0 -> backToSharpOne $% e0
1& searchOne @1 -> backToDFromLeft 1& @&
$& findBlank e0 -> temp $& e0
@D backToSharpZero @E -> backToSharpZero @D @E
$$ backToSharpZero 0E -> backToSharpZero $$ 0E
1$ backToSharpZero 1C -> backToSharpZero 1$ 1C
$@ backToDFromRight eB -> backToDFromRight $@ eB
$X beginCopying 0B -> backToStart $X 0C
$B checkCD e1 -> checkCD $B e1
1B backToDFromRight @1 -> backToDFromRight 1B @1
eX backToSharpZero @D -> backToSharpZero eX @D
1C checkCD eD -> checkCD 1C eD
@# restoreCD 1D -> restoreCD @# 1D
e# restoreCD $% -> restoreCD e# $0
eX backToSharpOne 00 -> backToSharpOne eX 00
e$ copyZero 0B -> backToSharpZero e$ 00
0@ temp 11 -> beginCopying 0@ 11
@C forwardToLastD $E -> incD @C $E
0C searchOne $0 -> restoreCD 0C $0
e1 dec @1 -> gotoMark e1 @0
e% massErase 0@ -> eraseE e% 0@
1D backToFirstC 00 -> backToFirstC 1D 00
@# gotoMark eE -> gotoDecC @# eE
$C forwardToLastD 1E -> incD $C 1E
@B beginCopying 0B -> backToStart @B 0C
eB incD e0 -> checkCD eB e1
1@ copyOne @B -> backToSharpOne 1@ @1
0D gotoMark 01 -> gotoMark 0D 01
1% eraseC e1 -> eraseC 1% eB
e$ backToSharpOne e1 -> backToSharpOne e$ e1
e$ gotoMark e1 -> gotoMark e$ e1
$$ incD 01 -> incD $$ 00
1& backToDFromRight 11 -> backToDFromRight 1& 11
1& goToPlaceForDivider eB -> backToFirstC 1& eD
$1 incD @1 -> incD $1 @0
backToStart @$ -> @$ createCopy
@@ checkCD $1 -> checkCD @@ $1
@D backToSharpOne 10 -> backToSharpOne @D 10
1@ searchOne 10 -> restoreCD 1@ 10
0$ prepEraseC eD -> eraseC 0$ eD
1D massErase 1@ -> eraseE 1D 1@
0E incD 01 -> incD 0E 00
@@ eraseC 0C -> backToStart @@ 0X
@X backToSharpOne eX -> backToSharpOne @X eX
0@ temp e1 -> beginCopying 0@ e1
1@ copyOne 1B -> backToSharpOne 1@ 11
0D gotoDecC @D -> dec 0D @D
@X initDividerByTwo @0 -> backToD @X @1
00 copyOne eB -> backToSharpOne 00 e1
10 incD 11 -> incD 10 10
@X backToSharpOne @C -> backToSharpOne @X @C
0% goToPlaceForDivider eB -> backToFirstC 0% eD
@D backToDFromLeft e1 -> backToDFromLeft @D e1
1D backToStart $1 -> backToStart 1D $1
@D massErase 0@ -> eraseE @D 0@
@1 prepEraseC $0 -> prepEraseC @1 $0
@E backToStart 10 -> backToStart @E 10
@$ searchNextBit $1 -> searchNextBit @$ $1
@E searchNextBit 00 -> searchNextBit @E 00
$1 checkCD @1 -> checkCD $1 @1
0# backToDFromLeft e1 -> backToDFromLeft 0# e1
@% backToDFromLeft 1% -> backToDFromLeft @% 1%
1D restoreCD 00 -> restoreCD 1D 00
copyOne $X -> $X copyOne
@% findBlank 1B -> FINAL @% 1B
eC dec $0 -> dec eC $1
0& eraseE 00 -> eraseE 0& 0B
@% backToFirstC 00 -> backToFirstC @% 00
@X eraseC $1 -> eraseC @X $B
$C searchZero e1 -> restoreCD $C e1
$E prepEraseC $0 -> prepEraseC $E $0
1@ backToSharpZero e1 -> backToSharpZero 1@ e1
eX backToFirstC 10 -> backToFirstC eX 10
0C findBlank 11 -> temp 0C 11
$X gotoDecC $0 -> gotoDecC $X $0
@$ temp 11 -> beginCopying @$ 11
@X eraseE 0E -> prepEraseC @X 0E
$1 temp @0 -> beginCopying $1 @0
eC backToDFromLeft 10 -> backToDFromLeft eC 10
@X eraseC $C -> backToStart @X $X
1# searchNextBit 10 -> searchNextBit 1# 10
11 checkEForZero 0B -> stop 11 0B
$# findZero @1 -> beginCopying $# @1
0B backToSharpOne 0X -> backToSharpOne 0B 0X
@1 backToSharpZero eE -> backToSharpZero @1 eE
e@ backToDFromLeft e& -> backToDFromLeft e@ e&
$% findBlank $B -> FINAL $% $B
@# backToD 10 -> backToD @# 10
beginCopying @0 -> @0 beginCopying
1$ backToFirstC @1 -> backToFirstC 1$ @1
$C backToSharpOne @X -> backToSharpOne $C @X
@% eraseC @1 -> eraseC @% @B
@X findBlank 00 -> temp @X 00
$@ backToSharpOne @0 -> backToSharpOne $@ @0
@C backToDFromRight $B -> backToDFromRight @C $B
eD backToSharpZero $1 -> backToSharpZero eD $1
e$ forwardToLastD 0E -> incD e$ 0E
$@ prepEraseC 11 -> prepEraseC $@ 11
e& backToDFromRight 1E -> backToDFromRight e& 1E
11 backToStart $0 -> backToStart 11 $0
$E backToD $0 -> backToD $E $0
0$ backToDFromRight eE -> backToDFromRight 0$ eE
e& searchNextBit 10 -> searchNextBit e& 10
copyZero $C -> $C copyZero
$B gotoMark eE -> gotoDecC $B eE
@1 eraseE $0 -> eraseE @1 $B
e$ forwardToLastD 1E -> incD e$ 1E
eE backToSharpZero e1 -> backToSharpZero eE e1
e0 backToD e1 -> backToD e0 e1
@B findBlank 01 -> temp @B 01
00 temp 11 -> beginCopying 00 11
01 massErase 1@ -> eraseE 01 1@
$B backToDFromLeft eD -> searchNextBit $B eD
$C backToDFromRight $E -> backToDFromRight $C $E
1# backToSharpOne $E -> backToSharpOne 1# $E
0@ searchNextBit e0 -> searchNextBit 0@ e0
eE backToDFromRight 0B -> backToDFromRight eE 0B
1# backToFirstC e1 -> backToFirstC 1# e1
e& findBlank $0 -> temp e& $0
e@ restoreCD $% -> restoreCD e@ $0
FINAL eC -> FINAL e FINAL
0D backToSharpZero $E -> backToSharpZero 0D $E
00 gotoMark 00 -> gotoMark 00 00
@E dec 00 -> dec @E 01
eE findBlank 0B -> FINAL eE 0B
1C dec 10 -> dec 1C 11
@D backToSharpZero 00 -> backToSharpZero @D 00
e% gotoMark $0 -> gotoMark e% $0
e1 backToStart e1 -> backToStart e1 e1
@& backToDFromLeft e0 -> backToDFromLeft @& e0
1& backToSharpZero @E -> backToSharpZero 1& @E
$E gotoMark eE -> gotoDecC $E eE
@E backToDFromRight $1 -> backToDFromRight @E $1
0B searchNextBit $0 -> searchNextBit 0B $0
@C backToSharpZero $X -> backToSharpZero @C $X
0$ searchNextBit 10 -> searchNextBit 0$ 10
@1 prepEraseC 1D -> eraseC @1 1D
eC backToD $0 -> backToD eC $0
1C findBlank 00 -> temp 1C 00
00 backToD e1 -> backToD 00 e1
$X nullifier $B -> initDivider $X $E
@# findBlank @1 -> temp @# @1
$1 checkCD e0 -> checkCD $1 e0
@@ checkEForZero @B -> stop @@ @B
1E backToSharpZero eC -> backToSharpZero 1E eC
e$ restoreCD $& -> restoreCD e$ $1
$X eraseE 00 -> eraseE $X 0B
0# backToSharpZero 1E -> backToSharpZero 0# 1E
$D backToDFromLeft e& -> backToDFromLeft $D e&
0X backToStart $1 -> backToStart 0X $1
1% backToFirstC @1 -> backToFirstC 1% @1
$& nullifier 1B -> initDivider $& 1E
eC prepEraseC 0D -> eraseC eC 0D
e@ backToSharpOne $1 -> backToSharpOne e@ $1
0D backToStart 01 -> backToStart 0D 01
0D temp 10 -> beginCopying 0D 10
@# backToDFromLeft 10 -> backToDFromLeft @# 10
@# backToDFromRight $0 -> backToDFromRight @# $0
@1 backToDFromRight $B -> backToDFromRight @1 $B
10 beginCopying eB -> backToStart 10 eC
$C incD @0 -> checkCD $C @1
@C copyZero 0B -> backToSharpZero @C 00
0E searchOne 00 -> restoreCD 0E 00
eC backToSharpZero 0D -> backToSharpZero eC 0D
$C backToDFromLeft e0 -> backToDFromLeft $C e0
11 backToStart @0 -> backToStart 11 @0
@% gotoMark @1 -> gotoMark @% @1
e# prepEraseC $0 -> prepEraseC e# $0
eC backToSharpZero @X -> backToSharpZero eC @X
e$ gotoDecC 11 -> gotoDecC e$ 11
@X copyZero $B -> backToSharpZero @X $0
$1 searchZero 11 -> restoreCD $1 11
@X findZero e1 -> beginCopying @X e1
@E backToStart $1 -> backToStart @E $1
0B copyOne @B -> backToSharpOne 0B @1
0D initDivider $0 -> initDividerByTwo 0D $0
@# gotoDecC 1D -> dec @# 1D
@B gotoMark 0E -> gotoDecC @B 0E
eE gotoMark $0 -> gotoMark eE $0
1E restoreCD @& -> restoreCD 1E @1
$% backToStart 11 -> backToStart $% 11
0C gotoMark @0 -> gotoMark 0C @0
checkZeroD 1D -> 1D searchZero
@1 backToSharpOne eX -> backToSharpOne @1 eX
$& backToStart @0 -> backToStart $& @0
eX incD $0 -> checkCD eX $1
@@ backToSharpZero $E -> backToSharpZero @@ $E
e% backToDFromRight e1 -> backToDFromRight e% e1
0D gotoMark eE -> gotoDecC 0D eE
@E backToSharpOne eD -> backToSharpOne @E eD
e@ findBlank 10 -> temp e@ 10
e1 goToPlaceForDivider @B -> backToFirstC e1 @D
0$ gotoDecC @0 -> gotoDecC 0$ @0
@$ temp $1 -> beginCopying @$ $1
1# backToStart @1 -> backToStart 1# @1
1# replaceWithBlanks @@ -> backToDFromRight 1# @@
0C checkCD 10 -> checkCD 0C 10
$@ dec @0 -> dec $@ @1
01 backToSharpOne 1C -> backToSharpOne 01 1C
00 restoreCD @% -> restoreCD 00 @0
1% searchNextBit e1 -> searchNextBit 1% e1
eE prepEraseC $D -> eraseC eE $D
e@ eraseC @C -> backToStart e@ @X
1B backToSharpOne @X -> backToSharpOne 1B @X
eB gotoMark $0 -> gotoMark eB $0
1D dec 00 -> dec 1D 01
eC backToSharpZero eD -> backToSharpZero eC eD
$E backToSharpZero 1D -> backToSharpZero $E 1D
0& searchZero @1 -> restoreCD 0& @1
@B prepEraseC $1 -> prepEraseC @B $1
$X backToSharpZero 0E -> backToSharpZero $X 0E
$# backToSharpOne @1 -> backToSharpOne $# @1
e# gotoDecC e0 -> gotoDecC e# e0
@B backToDFromLeft e0 -> backToDFromLeft @B e0
1% copyOne eB -> backToSharpOne 1% e1
$& eraseC 01 -> eraseC $& 0B
0X gotoMark 1E -> gotoDecC 0X 1E
@0 restoreCD $D -> restoreCD @0 $D
$C checkCD 01 -> checkCD $C 01
$0 backToSharpZero @X -> backToSharpZero $0 @X
0B searchNextBit @1 -> searchNextBit 0B @1
0E findBlank e1 -> temp 0E e1
00 backToFirstC 11 -> backToFirstC 00 11
@0 backToSharpZero @1 -> backToSharpZero @0 @1
0@ copyZero 1B -> backToSharpZero 0@ 10
@C replaceWithBlanks $@ -> backToDFromRight @C $@
11 backToDFromRight 0E -> backToDFromRight 11 0E
1& backToSharpZero 1C -> backToSharpZero 1& 1C
e$ backToStart e0 -> backToStart e$ e0
eE temp 11 -> beginCopying eE 11
01 backToDFromRight 1E -> backToDFromRight 01 1E
e# backToDFromLeft 0& -> backToDFromLeft e# 0&
0B gotoDecC $0 -> gotoDecC 0B $0
1C backToStart e1 -> backToStart 1C e1
e# searchNextBit 11 -> searchNextBit e# 11
@0 massErase @@ -> eraseE @0 @@
@C findBlank 10 -> temp @C 10
1X backToSharpOne $E -> backToSharpOne 1X $E
0B backToDFromLeft $0 -> backToDFromLeft 0B $0
1D checkEForZero 0B -> stop 1D 0B
e0 prepEraseC 01 -> prepEraseC e0 01
0B findBlank 00 -> temp 0B 00
1@ backToDFromLeft 0D -> searchNextBit 1@ 0D
11 backToSharpZero 0D -> backToSharpZero 11 0D
@X gotoMark eE -> gotoDecC @X eE
$C backToFirstC e1 -> backToFirstC $C e1
10 copyZero 1B -> backToSharpZero 10 10
@$ checkCD @1 -> checkCD @$ @1
1$ gotoDecC $0 -> gotoDecC 1$ $0
0X restoreCD $0 -> restoreCD 0X $0
0B restoreCD 0& -> restoreCD 0B 01
1C checkCD $D -> checkCD 1C $D
@B gotoMark 10 -> gotoMark @B 10
e$ initDivider @0 -> initDividerByTwo e$ @0
@# initDivider e0 -> initDividerByTwo @# e0
eC backToSharpOne eC -> backToSharpOne eC eC
0D searchNextBit e1 -> searchNextBit 0D e1
1B initDivider 00 -> initDividerByTwo 1B 00
@1 backToDFromRight $1 -> backToDFromRight @1 $1
01 gotoMark $0 -> gotoMark 01 $0
@$ backToSharpOne 00 -> backToSharpOne @$ 00
e0 incD @0 -> checkCD e0 @1
01 backToSharpOne 0C -> backToSharpOne 01 0C
10 dec e1 -> gotoMark 10 e0
$C copyOne @B -> backToSharpOne $C @1
0$ findBlank 1B -> FINAL 0$ 1B
@$ temp e0 -> beginCopying @$ e0
e& checkCD @D -> checkCD e& @D
$% backToSharpOne 0D -> backToSharpOne $% 0D
1& backToStart 01 -> backToStart 1& 01
eB gotoMark 0E -> gotoDecC eB 0E
1% backToDFromLeft $D -> searchNextBit 1% $D
0@ backToSharpOne $D -> backToSharpOne 0@ $D
$# gotoMark $0 -> gotoMark $# $0
$% backToDFromLeft $D -> searchNextBit $% $D
@X backToSharpOne $D -> backToSharpOne @X $D
e# massErase @@ -> eraseE e# @@
eE initDividerByTwo e0 -> backToD eE e1
1# backToSharpOne 01 -> backToSharpOne 1# 01
@1 backToDFromLeft @0 -> backToDFromLeft @1 @0
eX backToDFromLeft 0% -> backToDFromLeft eX 0%
@& beginCopying eB -> backToStart @& eC
@D restoreCD e1 -> restoreCD @D e1
0D prepEraseC 01 -> prepEraseC 0D 01
@X backToSharpOne @D -> backToSharpOne @X @D
@# searchNextBit @0 -> searchNextBit @# @0
@C temp 01 -> beginCopying @C 01
$D copyZero $B -> backToSharpZero $D $0
e1 nullifier eB -> initDivider e1 eE
$$ eraseE 10 -> eraseE $$ 1B
1E backToDFromRight $E -> backToDFromRight 1E $E
1B forwardToLastD eE -> incD 1B eE
11 backToSharpZero $C -> backToSharpZero 11 $C
@X backToSharpOne 0C -> backToSharpOne @X 0C
@% initDividerByTwo 10 -> backToD @% 11
copyZero 1E -> 1E copyZero
1X backToSharpZero 01 -> backToSharpZero 1X 01
1X temp 01 -> beginCopying 1X 01
@& backToSharpZero $X -> backToSharpZero @& $X
$1 findBlank 10 -> temp $1 10
$& backToSharpOne e0 -> backToSharpOne $& e0
eC backToD @1 -> backToD eC @1
@# massErase $@ -> eraseE @# $@
1C incD e0 -> checkCD 1C e1
$# backToSharpOne 0D -> backToSharpOne $# 0D
$C restoreCD e1 -> restoreCD $C e1
$B checkEForZero 1B -> stop $B 1B
@X backToSharpOne 0X -> backToSharpOne @X 0X
0B gotoLastE @@ -> dec 0B @@
$1 backToSharpOne $D -> backToSharpOne $1 $D
e@ copyOne 1B -> backToSharpOne e@ 11
00 nullifier $B -> initDivider 00 $E
e$ searchOne @0 -> restoreCD e$ @0
1# backToDFromLeft @% -> backToDFromLeft 1# @%
01 backToSharpZero 0C -> backToSharpZero 01 0C
@C searchOne $0 -> restoreCD @C $0
0X massErase 0@ -> eraseE 0X 0@
0# backToSharpOne 1E -> backToSharpOne 0# 1E
$$ backToD e1 -> backToD $$ e1
eC backToSharpZero 0E -> backToSharpZero eC 0E
$0 backToDFromRight 0E -> backToDFromRight $0 0E
0& backToSharpOne 11 -> backToSharpOne 0& 11
01 gotoLastE @@ -> dec 01 @@
1C backToDFromLeft $0 -> backToDFromLeft 1C $0
@% backToDFromRight 11 -> backToDFromRight @% 11
1# backToD 00 -> backToD 1# 00
0C backToStart $0 -> backToStart 0C $0
e$ backToSharpZero eE -> backToSharpZero e$ eE
$# goToPlaceForDivider eB -> backToFirstC $# eD
eB eraseE e0 -> eraseE eB eB
$# initDivider @0 -> initDividerByTwo $# @0
@# goToPlaceForDivider 1B -> backToFirstC @# 1D
00 backToDFromLeft 01 -> backToDFromLeft 00 01
createCopy 1E -> 1E gotoLastE
$D backToSharpOne @1 -> backToSharpOne $D @1
0# backToDFromRight 1B -> backToDFromRight 0# 1B
0$ temp $0 -> beginCopying 0$ $0
@C checkEForZero @B -> stop @C @B
1% temp 11 -> beginCopying 1% 11
$1 backToSharpOne @X -> backToSharpOne $1 @X
@& checkEForZero $B -> stop @& $B
10 backToSharpOne @D -> backToSharpOne 10 @D
0X gotoDecC 10 -> gotoDecC 0X 10
0B eraseE @1 -> eraseE 0B @B
$# backToD 11 -> backToD $# 11
@0 checkCD @D -> checkCD @0 @D
1$ backToSharpZero $C -> backToSharpZero 1$ $C
1E searchNextBit $0 -> searchNextBit 1E $0
0$ forwardToLastD eE -> incD 0$ eE
1C findBlank @B -> FINAL 1C @B
$1 dec e1 -> gotoMark $1 e0
$D incD e1 -> incD $D e0
0E backToFirstC 11 -> backToFirstC 0E 11
replaceWithBlanks 01 -> 0B replaceWithBlanks
eE searchNextBit e1 -> searchNextBit eE e1
1E findZero 11 -> beginCopying 1E 11
0E backToSharpZero 00 -> backToSharpZero 0E 00
eX massErase e@ -> eraseE eX e@
11 backToSharpZero @0 -> backToSharpZero 11 @0
$% backToStart @0 -> backToStart $% @0
$D initDividerByTwo 00 -> backToD $D 01
e$ findBlank 11 -> temp e$ 11
$& replaceWithBlanks 0@ -> backToDFromRight $& 0@
@# checkCD e1 -> checkCD @# e1
0& backToSharpZero @D -> backToSharpZero 0& @D
$$ searchZero $0 -> backToDFromLeft $$ $%
e0 goToPlaceForDivider 1B -> backToFirstC e0 1D
0$ prepEraseC $0 -> prepEraseC 0$ $0
1$ backToD 00 -> backToD 1$ 00
@# backToSharpOne @0 -> backToSharpOne @# @0
0C beginCopying 0B -> backToStart 0C 0C
00 checkEForZero 0B -> stop 00 0B
0@ backToD @1 -> backToD 0@ @1
1B backToDFromRight 1E -> backToDFromRight 1B 1E
1D backToSharpZero 0D -> backToSharpZero 1D 0D
1E goToPlaceForDivider 1B -> backToFirstC 1E 1D
1# checkEForZero eB -> stop 1# eB
$# searchZero e0 -> backToDFromLeft $# e%
1C goToPlaceForDivider eB -> backToFirstC 1C eD
1X eraseC $1 -> eraseC 1X $B
1& initDividerByTwo 10 -> backToD 1& 11
eE eraseC @0 -> eraseC eE @B
$$ backToSharpOne 01 -> backToSharpOne $$ 01
$# gotoDecC eD -> dec $# eD
0E checkCD e1 -> checkCD 0E e1
eX gotoDecC 1D -> dec eX 1D
eD backToSharpOne eE -> backToSharpOne eD eE
@B backToSharpZero e0 -> backToSharpZero @B e0
eX goToPlaceForDivider 1B -> backToFirstC eX 1D
0$ goToPlaceForDivider $B -> backToFirstC 0$ $D
0B backToSharpOne 11 -> backToSharpOne 0B 11
@0 findBlank e0 -> temp @0 e0
@# dec e0 -> dec @# e1
@E replaceWithBlanks e@ -> backToDFromRight @E e@
11 backToDFromRight $0 -> backToDFromRight 11 $0
@E temp e0 -> beginCopying @E e0
e1 backToSharpOne 00 -> backToSharpOne e1 00
@B nullifier $B -> initDivider @B $E
0@ checkCD $D -> checkCD 0@ $D
@0 backToDFromRight 11 -> backToDFromRight @0 11
10 backToSharpOne $0 -> backToSharpOne 10 $0
eX backToDFromLeft $D -> searchNextBit eX $D
0B prepEraseC @1 -> prepEraseC 0B @1
1% gotoDecC 10 -> gotoDecC 1% 10
eC backToDFromRight 1E -> backToDFromRight eC 1E
0# checkEForZero 0B -> stop 0# 0B
eE gotoMark 0E -> gotoDecC eE 0E
@$ backToSharpZero 1D -> backToSharpZero @$ 1D
0$ searchZero 11 -> restoreCD 0$ 11
$1 copyZero @B -> backToSharpZero $1 @0
@C copyZero 1B -> backToSharpZero @C 10
1C searchOne 10 -> restoreCD 1C 10
e& checkCD 00 -> checkCD e& 00
@@ backToDFromLeft $0 -> backToDFromLeft @@ $0
01 backToDFromLeft 1% -> backToDFromLeft 01 1%
@# eraseC @1 -> eraseC @# @B
0$ backToSharpOne e0 -> backToSharpOne 0$ e0
@0 backToSharpZero @X -> backToSharpZero @0 @X
@1 searchZero $1 -> restoreCD @1 $1
e% restoreCD 1D -> restoreCD e% 1D
@# restoreCD $& -> restoreCD @# $1
01 findBlank 00 -> temp 01 00
$# backToDFromRight 01 -> backToDFromRight $# 01
0& restoreCD @D -> restoreCD 0& @D
1X backToSharpZero 1E -> backToSharpZero 1X 1E
1D backToSharpZero $1 -> backToSharpZero 1D $1
FINAL 1& -> FINAL 1 FINAL
$D backToFirstC e1 -> backToFirstC $D e1
e# backToSharpOne 0C -> backToSharpOne e# 0C
$& gotoMark 00 -> gotoMark $& 00
00 findBlank 01 -> temp 00 01
eE findZero 11 -> beginCopying eE 11
0X backToSharpOne e1 -> backToSharpOne 0X e1
$E checkCD eD -> checkCD $E eD
$E backToD e0 -> backToD $E e0
1B backToFirstC 11 -> backToFirstC 1B 11
11 massErase e@ -> eraseE 11 e@
1C backToSharpOne $D -> backToSharpOne 1C $D
@B incD $1 -> incD @B $0
0B backToSharpOne $1 -> backToSharpOne 0B $1
10 backToDFromLeft 1% -> backToDFromLeft 10 1%
0X restoreCD 11 -> restoreCD 0X 11
e0 searchZero 00 -> backToDFromLeft e0 0%
@1 backToFirstC e0 -> backToFirstC @1 e0
$X nullifier 0B -> initDivider $X 0E
@% checkCD @1 -> checkCD @% @1
eD searchZero e0 -> backToDFromLeft eD e%
@E nullifier $B -> initDivider @E $E
01 gotoMark 01 -> gotoMark 01 01
@E backToFirstC @0 -> backToFirstC @E @0
0X searchZero @0 -> backToDFromLeft 0X @%
0E backToFirstC $1 -> backToFirstC 0E $1
@E gotoMark @1 -> gotoMark @E @1
$D backToStart 01 -> backToStart $D 01
10 searchOne @1 -> backToDFromLeft 10 @&
10 restoreCD 11 -> restoreCD 10 11
$B backToDFromRight $0 -> backToDFromRight $B $0
0X eraseC $1 -> eraseC 0X $B
@& findBlank @0 -> temp @& @0
1B backToSharpZero 1X -> backToSharpZero 1B 1X
1% gotoMark 01 -> gotoMark 1% 01
$1 beginCopying @B -> backToStart $1 @C
@X backToStart 01 -> backToStart @X 01
@E temp @0 -> beginCopying @E @0
eC gotoDecC 00 -> gotoDecC eC 00
@C eraseE 10 -> eraseE @C 1B
01 backToDFromRight 11 -> backToDFromRight 01 11
00 backToSharpOne $D -> backToSharpOne 00 $D
0X massErase e@ -> eraseE 0X e@
01 massErase e@ -> eraseE 01 e@
@B gotoMark e1 -> gotoMark @B e1
e% backToSharpZero 00 -> backToSharpZero e% 00
e% backToDFromLeft @1 -> backToDFromLeft e% @1
1B checkEForZero eB -> stop 1B eB
1D backToDFromRight 10 -> backToDFromRight 1D 10
@1 restoreCD $D -> restoreCD @1 $D
@# initDividerByTwo e0 -> backToD @# e1
0& backToDFromLeft @1 -> backToDFromLeft 0& @1
0D findBlank @0 -> temp 0D @0
eB nullifier 1B -> initDivider eB 1E
$D temp 00 -> beginCopying $D 00
1E backToFirstC 11 -> backToFirstC 1E 11
$X gotoMark e0 -> gotoMark $X e0
1X dec e0 -> dec 1X e1
e& beginCopying $B -> backToStart e& $C
0D nullifier 1B -> initDivider 0D 1E
@@ eraseC 11 -> eraseC @@ 1B
0B backToFirstC @1 -> backToFirstC 0B @1
@E eraseE 0E -> prepEraseC @E 0E
@1 incD $0 -> checkCD @1 $1
10 searchOne 00 -> restoreCD 10 00
eE checkCD e1 -> checkCD eE e1
$C findBlank 01 -> temp $C 01
eB backToSharpZero eX -> backToSharpZero eB eX
0X incD 00 -> checkCD 0X 01
e1 restoreCD $1 -> restoreCD e1 $1
@& checkCD 11 -> checkCD @& 11
0E checkCD 1D -> checkCD 0E 1D
@B gotoMark $1 -> gotoMark @B $1
e& restoreCD 00 -> restoreCD e& 00
$B backToSharpZero e1 -> backToSharpZero $B e1
$% gotoDecC 00 -> gotoDecC $% 00
@X backToSharpZero @E -> backToSharpZero @X @E
eC gotoLastE 1@ -> dec eC 1@
eD gotoLastE $@ -> dec eD $@
10 goToPlaceForDivider @B -> backToFirstC 10 @D
@0 copyOne 0B -> backToSharpOne @0 01
$# backToDFromLeft 1D -> searchNextBit $# 1D
replaceWithBlanks 11 -> 1B replaceWithBlanks
eE searchNextBit 01 -> searchNextBit eE 01
@1 searchZero e0 -> backToDFromLeft @1 e%
gotoLastE 0E -> 0E gotoLastE
1$ temp e1 -> beginCopying 1$ e1
1E forwardToLastD 0E -> incD 1E 0E
1% eraseC 0C -> backToStart 1% 0X
@1 initDivider e0 -> initDividerByTwo @1 e0
0# initDivider e0 -> initDividerByTwo 0# e0
$& eraseE 11 -> eraseE $& 1B
0@ gotoLastE 1@ -> dec 0@ 1@
1@ backToDFromLeft 10 -> backToDFromLeft 1@ 10
$C nullifier eB -> initDivider $C eE
@@ searchOne 01 -> backToDFromLeft @@ 0&
e# restoreCD 00 -> restoreCD e# 00
eD backToStart $1 -> backToStart eD $1
@1 backToSharpZero 10 -> backToSharpZero @1 10
eE backToD @1 -> backToD eE @1
1& findZero 01 -> beginCopying 1& 01
@@ backToSharpZero @C -> backToSharpZero @@ @C
01 initDividerByTwo @0 -> backToD 01 @1
0B checkCD $D -> checkCD 0B $D
eC checkCD eD -> checkCD eC eD
$C gotoDecC 11 -> gotoDecC $C 11
0E restoreCD 11 -> restoreCD 0E 11
1# findBlank 10 -> temp 1# 10
@# backToSharpZero @0 -> backToSharpZero @# @0
1E gotoMark eE -> gotoDecC 1E eE
$E eraseE e1 -> eraseE $E eB
1$ backToSharpOne @1 -> backToSharpOne 1$ @1
@C backToDFromLeft $0 -> backToDFromLeft @C $0
$$ backToSharpOne $D -> backToSharpOne $$ $D
e0 backToSharpOne 0D -> backToSharpOne e0 0D
0X findZero @1 -> beginCopying 0X @1
1E backToSharpZero e1 -> backToSharpZero 1E e1
@@ searchNextBit @1 -> searchNextBit @@ @1
$& prepEraseC 1D -> eraseC $& 1D
@C backToSharpOne $D -> backToSharpOne @C $D
$% initDivider e0 -> initDividerByTwo $% e0
0B eraseC $1 -> eraseC 0B $B
0% gotoLastE $@ -> dec 0% $@
e& gotoDecC $D -> dec e& $D
e# replaceWithBlanks 1@ -> backToDFromRight e# 1@
@0 findBlank 1B -> FINAL @0 1B
$X backToSharpZero 0X -> backToSharpZero $X 0X
1C massErase 0@ -> eraseE 1C 0@
@1 gotoMark @E -> gotoDecC @1 @E
e@ backToDFromRight e1 -> backToDFromRight e@ e1
@1 backToFirstC $1 -> backToFirstC @1 $1
0D backToSharpZero $C -> backToSharpZero 0D $C
eX restoreCD @D -> restoreCD eX @D
$E gotoMark 01 -> gotoMark $E 01
1X backToDFromLeft 01 -> backToDFromLeft 1X 01
$1 incD $0 -> checkCD $1 $1
@B forwardToLastD 0E -> incD @B 0E
e0 backToDFromLeft 11 -> backToDFromLeft e0 11
1E backToSharpOne @0 -> backToSharpOne 1E @0
@0 backToSharpOne 1E -> backToSharpOne @0 1E
@1 goToPlaceForDivider $B -> backToFirstC @1 $D
e% backToSharpZero @C -> backToSharpZero e% @C
1D backToSharpZero @C -> backToSharpZero 1D @C
$$ backToSharpZero 00 -> backToSharpZero $$ 00
@& checkCD eD -> checkCD @& eD
00 backToD 10 -> backToD 00 10
eE eraseC $0 -> eraseC eE $B
e0 backToSharpZero 01 -> backToSharpZero e0 01
0D checkCD 1D -> checkCD 0D 1D
00 replaceWithBlanks e@ -> backToDFromRight 00 e@
$& backToSharpOne 0D -> backToSharpOne $& 0D
@0 restoreCD @& -> restoreCD @0 @1
11 eraseC 11 -> eraseC 11 1B
e% goToPlaceForDivider 1B -> backToFirstC e% 1D
01 beginCopying eB -> backToStart 01 eC
$1 restoreCD $0 -> restoreCD $1 $0
10 replaceWithBlanks @@ -> backToDFromRight 10 @@
1B replaceWithBlanks $@ -> backToDFromRight 1B $@
eD backToDFromLeft 0% -> backToDFromLeft eD 0%
e% temp 11 -> beginCopying e% 11
$X backToSharpOne e1 -> backToSharpOne $X e1
$0 findBlank 00 -> temp $0 00
0X goToPlaceForDivider eB -> backToFirstC 0X eD
createCopy $D -> $D nullifier
e% gotoMark 1E -> gotoDecC e% 1E
1C eraseC 00 -> eraseC 1C 0B
1$ eraseC @1 -> eraseC 1$ @B
$% eraseE 00 -> eraseE $% 0B
0B temp 00 -> beginCopying 0B 00
0$ searchZero e1 -> restoreCD 0$ e1
$X gotoDecC @D -> dec $X @D
eB backToDFromLeft 1& -> backToDFromLeft eB 1&
0C nullifier 0B -> initDivider 0C 0E
1# incD 01 -> incD 1# 00
$& backToSharpOne $0 -> backToSharpOne $& $0
$E backToSharpZero @X -> backToSharpZero $E @X
1@ restoreCD 10 -> restoreCD 1@ 10
$B backToDFromRight $B -> backToDFromRight $B $B
$$ searchOne @0 -> restoreCD $$ @0
1C eraseC $C -> backToStart 1C $X
eX gotoMark @1 -> gotoMark eX @1
e1 replaceWithBlanks 0@ -> backToDFromRight e1 0@
eX eraseE 1E -> prepEraseC eX 1E
$B backToStart e1 -> backToStart $B e1
$& backToSharpOne eX -> backToSharpOne $& eX
@1 searchNextBit $0 -> searchNextBit @1 $0
$B backToSharpZero 1E -> backToSharpZero $B 1E
0D backToSharpZero @0 -> backToSharpZero 0D @0
0& searchOne 00 -> restoreCD 0& 00
$E beginCopying $B -> backToStart $E $C
$% backToStart 01 -> backToStart $% 01
@& copyZero 0B -> backToSharpZero @& 00
0& backToD e0 -> backToD 0& e0
$0 checkEForZero 1B -> stop $0 1B
1% prepEraseC e0 -> prepEraseC 1% e0
$1 gotoMark 0E -> gotoDecC $1 0E
$D backToSharpZero 0C -> backToSharpZero $D 0C
1E copyZero 1B -> backToSharpZero 1E 10
1D backToSharpZero 01 -> backToSharpZero 1D 01
eX gotoMark 01 -> gotoMark eX 01
@@ backToSharpZero 1E -> backToSharpZero @@ 1E
$E goToPlaceForDivider @B -> backToFirstC $E @D
e$ forwardToLastD eE -> incD e$ eE
@# findZero 01 -> beginCopying @# 01
e@ goToPlaceForDivider $B -> backToFirstC e@ $D
eX eraseE 11 -> eraseE eX 1B
0C searchNextBit e1 -> searchNextBit 0C e1
eB gotoDecC 0D -> dec eB 0D
0& initDivider 00 -> initDividerByTwo 0& 00
0& eraseE e0 -> eraseE 0& eB
e$ backToSharpZero 00 -> backToSharpZero e$ 00
0% beginCopying 1B -> backToStart 0% 1C
0@ eraseC 1C -> backToStart 0@ 1X
@B backToD $0 -> backToD @B $0
1X eraseC @C -> backToStart 1X @X
e# searchOne @0 -> restoreCD e# @0
$B backToD 11 -> backToD $B 11
e@ backToDFromLeft $1 -> backToDFromLeft e@ $1
@% goToPlaceForDivider @B -> backToFirstC @% @D
$1 gotoMark e1 -> gotoMark $1 e1
01 searchOne 10 -> restoreCD 01 10
@# beginCopying @B -> backToStart @# @C
e1 backToDFromRight 00 -> backToDFromRight e1 00
0$ replaceWithBlanks 0@ -> backToDFromRight 0$ 0@
$& restoreCD 01 -> restoreCD $& 01
0# forwardToLastD $E -> incD 0# $E
1D restoreCD $1 -> restoreCD 1D $1
e$ checkCD $1 -> checkCD e$ $1
1& findZero 11 -> beginCopying 1& 11
@0 backToDFromLeft 00 -> backToDFromLeft @0 00
$1 gotoDecC 11 -> gotoDecC $1 11
$X backToFirstC e0 -> backToFirstC $X e0
1% restoreCD 1D -> restoreCD 1% 1D
1@ temp 11 -> beginCopying 1@ 11
eE eraseE eE -> prepEraseC eE eE
$& temp 10 -> beginCopying $& 10
00 backToSharpOne 0E -> backToSharpOne 00 0E
@X replaceWithBlanks e@ -> backToDFromRight @X e@
e1 backToSharpOne 0E -> backToSharpOne e1 0E
0D temp e1 -> beginCopying 0D e1
1E gotoMark @1 -> gotoMark 1E @1
1C massErase 1@ -> eraseE 1C 1@
e& eraseC e0 -> eraseC e& eB
@@ findBlank @1 -> temp @@ @1
e$ dec e0 -> dec e$ e1
@& gotoDecC e0 -> gotoDecC @& e0
@@ backToDFromRight eB -> backToDFromRight @@ eB
$E backToDFromLeft 10 -> backToDFromLeft $E 10
0& searchOne 10 -> restoreCD 0& 10
$X backToStart @1 -> backToStart $X @1
e$ nullifier $B -> initDivider e$ $E
e% gotoDecC 1D -> dec e% 1D
@X checkEForZero 0B -> stop @X 0B
eD findBlank 10 -> temp eD 10
01 checkCD 11 -> checkCD 01 11
1D eraseC e1 -> eraseC 1D eB
1$ gotoMark 0E -> gotoDecC 1$ 0E
@X searchNextBit 10 -> searchNextBit @X 10
00 backToSharpOne 10 -> backToSharpOne 00 10
0% backToD 00 -> backToD 0% 00
eD dec 01 -> gotoMark eD 00
$@ findBlank $1 -> temp $@ $1
e& copyOne @B -> backToSharpOne e& @1
@$ gotoMark @0 -> gotoMark @$ @0
@$ backToSharpOne 0D -> backToSharpOne @$ 0D
1% backToFirstC e1 -> backToFirstC 1% e1
$C forwardToLastD eE -> incD $C eE
e0 backToD $1 -> backToD e0 $1
0# incD @0 -> checkCD 0# @1
@0 backToDFromRight e0 -> backToDFromRight @0 e0
@C initDividerByTwo e0 -> backToD @C e1
$X backToDFromLeft e& -> backToDFromLeft $X e&
eC backToSharpZero $1 -> backToSharpZero eC $1
$X restoreCD e0 -> restoreCD $X e0
@B backToSharpZero 1D -> backToSharpZero @B 1D
00 backToSharpZero $1 -> backToSharpZero 00 $1
@X searchNextBit e1 -> searchNextBit @X e1
11 backToStart e1 -> backToStart 11 e1
e@ gotoDecC $1 -> gotoDecC e@ $1
0C searchNextBit 00 -> searchNextBit 0C 00
1& findBlank 11 -> temp 1& 11
e1 gotoDecC $0 -> gotoDecC e1 $0
e$ checkCD e0 -> checkCD e$ e0
e@ replaceWithBlanks 1@ -> backToDFromRight e@ 1@
@@ prepEraseC @0 -> prepEraseC @@ @0
0@ temp 00 -> beginCopying 0@ 00
1B backToD $0 -> backToD 1B $0
0% findBlank @0 -> temp 0% @0
@X backToDFromLeft e0 -> backToDFromLeft @X e0
1B dec $1 -> gotoMark 1B $0
eE gotoMark e0 -> gotoMark eE e0
@C eraseE eE -> prepEraseC @C eE
0& copyZero eB -> backToSharpZero 0& e0
0E searchNextBit $1 -> searchNextBit 0E $1
e0 backToSharpZero eD -> backToSharpZero e0 eD
e# eraseC 1C -> backToStart e# 1X
@0 checkEForZero 1B -> stop @0 1B
$E checkEForZero eB -> stop $E eB
1E incD @1 -> incD 1E @0
$& backToSharpZero 11 -> backToSharpZero $& 11
$# temp e1 -> beginCopying $# e1
e1 backToSharpZero 10 -> backToSharpZero e1 10
$# eraseE 0E -> prepEraseC $# 0E
$0 dec 00 -> dec $0 01
$$ backToDFromLeft @% -> backToDFromLeft $$ @%
@1 gotoMark 10 -> gotoMark @1 10
@B massErase e@ -> eraseE @B e@
e1 findBlank 0B -> FINAL e1 0B
$B backToDFromRight $E -> backToDFromRight $B $E
1E findBlank $0 -> temp 1E $0
$D replaceWithBlanks 1@ -> backToDFromRight $D 1@
@D massErase @@ -> eraseE @D @@
$X restoreCD 10 -> restoreCD $X 10
@B checkCD e0 -> checkCD @B e0
@# copyZero 0B -> backToSharpZero @# 00
1C backToD e1 -> backToD 1C e1
e% prepEraseC @1 -> prepEraseC e% @1
eC temp 10 -> beginCopying eC 10
0X dec @1 -> gotoMark 0X @0
0D gotoDecC 00 -> gotoDecC 0D 00
1D backToSharpZero $E -> backToSharpZero 1D $E
e& restoreCD 01 -> restoreCD e& 01
0D restoreCD e0 -> restoreCD 0D e0
0C backToSharpZero 1X -> backToSharpZero 0C 1X
@0 backToDFromLeft @& -> backToDFromLeft @0 @&
0$ prepEraseC 10 -> prepEraseC 0$ 10
eX backToDFromLeft e% -> backToDFromLeft eX e%
@B backToDFromLeft $1 -> backToDFromLeft @B $1
0@ copyZero 0B -> backToSharpZero 0@ 00
0% findZero e1 -> beginCopying 0% e1
e$ backToSharpOne @D -> backToSharpOne e$ @D
1C backToSharpOne 1X -> backToSharpOne 1C 1X
@X backToSharpOne 11 -> backToSharpOne @X 11
@0 checkCD 01 -> checkCD @0 01
@# backToDFromLeft 0& -> backToDFromLeft @# 0&
1C backToSharpOne $C -> backToSharpOne 1C $C
1E restoreCD 0& -> restoreCD 1E 01
$0 backToSharpOne 0X -> backToSharpOne $0 0X
1E backToD $0 -> backToD 1E $0
@E backToDFromLeft 0& -> backToDFromLeft @E 0&
@X backToFirstC 01 -> backToFirstC @X 01
1X backToSharpZero 1D -> backToSharpZero 1X 1D
$$ restoreCD @% -> restoreCD $$ @0
e& dec @0 -> dec e& @1
$E checkCD 00 -> checkCD $E 00
0E gotoDecC $1 -> gotoDecC 0E $1
$& replaceWithBlanks e@ -> backToDFromRight $& e@
$0 temp 01 -> beginCopying $0 01
1@ restoreCD @% -> restoreCD 1@ @0
1D copyZero eB -> backToSharpZero 1D e0
$# replaceWithBlanks @@ -> backToDFromRight $# @@
$# searchNextBit 00 -> searchNextBit $# 00
10 gotoMark 1E -> gotoDecC 10 1E
00 backToStart 10 -> backToStart 00 10
e@ checkEForZero $B -> stop e@ $B
1@ checkEForZero @B -> stop 1@ @B
@0 searchNextBit @1 -> searchNextBit @0 @1
eC backToDFromLeft e1 -> backToDFromLeft eC e1
eC backToDFromRight e0 -> backToDFromRight eC e0
$C gotoMark 01 -> gotoMark $C 01
@@ backToDFromRight e0 -> backToDFromRight @@ e0
$0 massErase 0@ -> eraseE $0 0@
1@ backToDFromLeft e& -> backToDFromLeft 1@ e&
11 temp e1 -> beginCopying 11 e1
e@ massErase $@ -> eraseE e@ $@
0# findBlank 01 -> temp 0# 01
@C dec e0 -> dec @C e1
$# gotoMark eE -> gotoDecC $# eE
1C backToSharpZero 0E -> backToSharpZero 1C 0E
e$ backToSharpOne 0D -> backToSharpOne e$ 0D
@D backToDFromRight 0B -> backToDFromRight @D 0B
eD initDividerByTwo @0 -> backToD eD @1
e@ backToSharpOne eD -> backToSharpOne e@ eD
@# backToDFromLeft @0 -> backToDFromLeft @# @0
@1 eraseE 00 -> eraseE @1 0B
eE gotoLastE $@ -> dec eE $@
$B checkCD 00 -> checkCD $B 00
0% findZero @1 -> beginCopying 0% @1
1C backToDFromLeft 00 -> backToDFromLeft 1C 00
@$ restoreCD @0 -> restoreCD @$ @0
@X backToSharpOne @0 -> backToSharpOne @X @0
01 backToSharpOne $1 -> backToSharpOne 01 $1
eX backToDFromLeft 0D -> searchNextBit eX 0D
0X backToDFromLeft $0 -> backToDFromLeft 0X $0
0@ backToDFromLeft @& -> backToDFromLeft 0@ @&
$E backToD $1 -> backToD $E $1
eD checkCD @D -> checkCD eD @D
$$ eraseC 00 -> eraseC $$ 0B
10 gotoDecC $D -> dec 10 $D
@@ backToD 00 -> backToD @@ 00
0$ backToSharpOne 00 -> backToSharpOne 0$ 00
1& backToDFromLeft 0% -> backToDFromLeft 1& 0%
0X backToSharpOne @0 -> backToSharpOne 0X @0
0& gotoLastE 0@ -> dec 0& 0@
10 backToSharpOne 00 -> backToSharpOne 10 00
$# backToDFromRight 11 -> backToDFromRight $# 11
@B backToSharpZero 0X -> backToSharpZero @B 0X
11 eraseC 1C -> backToStart 11 1X
$# backToSharpOne 1C -> backToSharpOne $# 1C
$0 backToStart e1 -> backToStart $0 e1
@B gotoMark @0 -> gotoMark @B @0
e@ forwardToLastD 1E -> incD e@ 1E
@D backToDFromRight 10 -> backToDFromRight @D 10
e@ gotoMark @0 -> gotoMark e@ @0
@@ initDividerByTwo 00 -> backToD @@ 01
$E backToSharpZero @1 -> backToSharpZero $E @1
e1 searchZero 00 -> backToDFromLeft e1 0%
$D checkEForZero eB -> stop $D eB
10 backToSharpOne eX -> backToSharpOne 10 eX
e& restoreCD 10 -> restoreCD e& 10
0B backToDFromRight 01 -> backToDFromRight 0B 01
0E backToDFromLeft @& -> backToDFromLeft 0E @&
eD eraseE 10 -> eraseE eD 1B
0D restoreCD $% -> restoreCD 0D $0
0B initDividerByTwo @0 -> backToD 0B @1
0@ eraseC $C -> backToStart 0@ $X
$% backToSharpZero @X -> backToSharpZero $% @X
1# incD 10 -> checkCD 1# 11
1$ temp @0 -> beginCopying 1$ @0
1C backToStart @1 -> backToStart 1C @1
$$ restoreCD $D -> restoreCD $$ $D
0& checkCD 0D -> checkCD 0& 0D
@# searchOne @0 -> restoreCD @# @0
eC gotoMark $E -> gotoDecC eC $E
1% gotoDecC @D -> dec 1% @D
$E findBlank e1 -> temp $E e1
$@ massErase @@ -> eraseE $@ @@
createCopy @0 -> @# copyZero
0% restoreCD e% -> restoreCD 0% e0
1D eraseC 11 -> eraseC 1D 1B
1& searchZero $1 -> restoreCD 1& $1
1E backToSharpOne eC -> backToSharpOne 1E eC
$# restoreCD @& -> restoreCD $# @1
1# copyZero @B -> backToSharpZero 1# @0
@& backToFirstC 01 -> backToFirstC @& 01
eD backToDFromLeft @& -> backToDFromLeft eD @&
0D backToDFromRight 1E -> backToDFromRight 0D 1E
0$ nullifier $B -> initDivider 0$ $E
1$ findZero 11 -> beginCopying 1$ 11
1& backToSharpOne $X -> backToSharpOne 1& $X
$X backToSharpOne @X -> backToSharpOne $X @X
0D findBlank 10 -> temp 0D 10
0X checkCD @0 -> checkCD 0X @0
0$ gotoLastE e@ -> dec 0$ e@
1E backToStart e0 -> backToStart 1E e0
@B copyOne 1B -> backToSharpOne @B 11
01 goToPlaceForDivider $B -> backToFirstC 01 $D
e@ backToSharpOne 0X -> backToSharpOne e@ 0X
@E backToSharpOne @1 -> backToSharpOne @E @1
1& backToSharpZero $E -> backToSharpZero 1& $E
1# massErase $@ -> eraseE 1# $@
0X gotoDecC @0 -> gotoDecC 0X @0
$1 searchOne @1 -> backToDFromLeft $1 @&
searchOne $% -> $% searchOne
$C backToSharpOne 0C -> backToSharpOne $C 0C
00 backToD $1 -> backToD 00 $1
$# incD @1 -> incD $# @0
eX checkEForZero eB -> stop eX eB
1X temp 00 -> beginCopying 1X 00
1% backToDFromRight 0E -> backToDFromRight 1% 0E
eE backToSharpZero eX -> backToSharpZero eE eX
@# temp 01 -> beginCopying @# 01
eC backToD $1 -> backToD eC $1
@$ temp @0 -> beginCopying @$ @0
0B backToD 11 -> backToD 0B 11
@0 temp @1 -> beginCopying @0 @1
1E backToDFromLeft eD -> searchNextBit 1E eD
1# searchZero $0 -> backToDFromLeft 1# $%
@B temp 00 -> beginCopying @B 00
eD gotoLastE 0@ -> dec eD 0@
1# searchNextBit @1 -> searchNextBit 1# @1
$B backToSharpZero eC -> backToSharpZero $B eC
e1 backToDFromRight $1 -> backToDFromRight e1 $1
1C backToDFromLeft $& -> backToDFromLeft 1C $&
0E massErase $@ -> eraseE 0E $@
$E beginCopying eB -> backToStart $E eC
@1 backToStart $0 -> backToStart @1 $0
nullifier e1 -> e0 nullifier
@C backToSharpZero $C -> backToSharpZero @C $C
1D backToSharpZero eD -> backToSharpZero 1D eD
e# backToDFromLeft @1 -> backToDFromLeft e# @1
e% backToSharpOne 10 -> backToSharpOne e% 10
eX checkCD eD -> checkCD eX eD
$E prepEraseC 0D -> eraseC $E 0D
$0 backToFirstC @1 -> backToFirstC $0 @1
backToSharpOne e# -> e1 createCopy
eD temp e0 -> beginCopying eD e0
0$ backToDFromRight $0 -> backToDFromRight 0$ $0
0B eraseC @0 -> eraseC 0B @B
0# searchZero 01 -> restoreCD 0# 01
1X backToSharpOne $1 -> backToSharpOne 1X $1
@B checkCD 10 -> checkCD @B 10
@% backToDFromRight $B -> backToDFromRight @% $B
eB prepEraseC $D -> eraseC eB $D
searchOne e& -> e& searchOne
$1 massErase 1@ -> eraseE $1 1@
0E backToSharpZero $E -> backToSharpZero 0E $E
10 backToSharpZero $1 -> backToSharpZero 10 $1
@E prepEraseC 00 -> prepEraseC @E 00
0E prepEraseC $0 -> prepEraseC 0E $0
@X massErase $@ -> eraseE @X $@
00 backToSharpZero @E -> backToSharpZero 00 @E
$1 backToDFromLeft 11 -> backToDFromLeft $1 11
0& FINAL -> FINAL 0 FINAL
$$ checkCD $D -> checkCD $$ $D
e@ searchNextBit e1 -> searchNextBit e@ e1
e$ incD $0 -> checkCD e$ $1
$C gotoDecC @1 -> gotoDecC $C @1
@0 searchNextBit 00 -> searchNextBit @0 00
1B backToDFromRight 00 -> backToDFromRight 1B 00
@B backToSharpOne $C -> backToSharpOne @B $C
1$ copyOne $B -> backToSharpOne 1$ $1
e$ backToSharpZero $0 -> backToSharpZero e$ $0
@1 searchOne 00 -> restoreCD @1 00
0C eraseC eC -> backToStart 0C eX
1D massErase e@ -> eraseE 1D e@
1B temp 00 -> beginCopying 1B 00
@B backToDFromRight e1 -> backToDFromRight @B e1
$B initDividerByTwo 00 -> backToD $B 01
0& incD 10 -> checkCD 0& 11
@E backToD 10 -> backToD @E 10
$C gotoMark 0E -> gotoDecC $C 0E
@0 backToDFromLeft @D -> searchNextBit @0 @D
@& nullifier 0B -> initDivider @& 0E
e# backToDFromLeft @0 -> backToDFromLeft e# @0
1B massErase 0@ -> eraseE 1B 0@
1B temp 10 -> beginCopying 1B 10
1X temp 11 -> beginCopying 1X 11
1C dec e1 -> gotoMark 1C e0
@0 prepEraseC @0 -> prepEraseC @0 @0
replaceWithBlanks 00 -> 0B replaceWithBlanks
00 backToFirstC 00 -> backToFirstC 00 00
@0 eraseC e1 -> eraseC @0 eB
@$ checkCD e0 -> checkCD @$ e0
@B eraseC e0 -> eraseC @B eB
eX findBlank @0 -> temp eX @0
0X findBlank @0 -> temp 0X @0
@1 beginCopying 1B -> backToStart @1 1C
@& initDividerByTwo 10 -> backToD @& 11
01 incD 00 -> checkCD 01 01
e# initDivider $0 -> initDividerByTwo e# $0
e1 backToSharpZero @E -> backToSharpZero e1 @E
10 backToDFromLeft @& -> backToDFromLeft 10 @&
1D backToSharpOne e0 -> backToSharpOne 1D e0
e& eraseE $E -> prepEraseC e& $E
@& backToSharpZero $C -> backToSharpZero @& $C
0% searchZero $0 -> backToDFromLeft 0% $%
$1 backToSharpOne 0C -> backToSharpOne $1 0C
$C backToSharpOne $0 -> backToSharpOne $C $0
e@ checkCD 1D -> checkCD e@ 1D
eB prepEraseC $0 -> prepEraseC eB $0
e% backToStart 10 -> backToStart e% 10
1$ backToSharpZero 0D -> backToSharpZero 1$ 0D
1$ backToDFromRight eE -> backToDFromRight 1$ eE
eE checkCD $0 -> checkCD eE $0
1X gotoDecC $D -> dec 1X $D
$X dec $0 -> dec $X $1
$X checkCD eD -> checkCD $X eD
@E beginCopying 0B -> backToStart @E 0C
0@ searchOne 10 -> restoreCD 0@ 10
$D incD e0 -> checkCD $D e1
0X temp e0 -> beginCopying 0X e0
$C backToSharpZero e1 -> backToSharpZero $C e1
$X backToSharpOne 1X -> backToSharpOne $X 1X
1$ backToStart $0 -> backToStart 1$ $0
e& eraseE @1 -> eraseE e& @B
$B backToDFromRight @1 -> backToDFromRight $B @1
e1 findBlank @B -> FINAL e1 @B
0X temp @0 -> beginCopying 0X @0
@$ initDivider 00 -> initDividerByTwo @$ 00
0$ searchOne 11 -> backToDFromLeft 0$ 1&
1D dec @0 -> dec 1D @1
00 searchOne 11 -> backToDFromLeft 00 1&
$1 copyOne @B -> backToSharpOne $1 @1
1$ gotoMark @0 -> gotoMark 1$ @0
10 checkCD @D -> checkCD 10 @D
01 prepEraseC 00 -> prepEraseC 01 00
e% backToDFromRight eB -> backToDFromRight e% eB
@1 beginCopying $B -> backToStart @1 $C
e$ restoreCD @0 -> restoreCD e$ @0
1D backToSharpZero @E -> backToSharpZero 1D @E
@1 gotoDecC e1 -> gotoDecC @1 e1
$% restoreCD @0 -> restoreCD $% @0
1# eraseE @E -> prepEraseC 1# @E
@# initDividerByTwo $0 -> backToD @# $1
$0 backToD 01 -> backToD $0 01
@E replaceWithBlanks 0@ -> backToDFromRight @E 0@
$1 findBlank 11 -> temp $1 11
0& prepEraseC 10 -> prepEraseC 0& 10
$% checkCD 00 -> checkCD $% 00
$E backToSharpZero 0C -> backToSharpZero $E 0C
@# searchZero 00 -> backToDFromLeft @# 0%
$D restoreCD @1 -> restoreCD $D @1
0% prepEraseC @D -> eraseC 0% @D
eC eraseC 11 -> eraseC eC 1B
$# initDividerByTwo 00 -> backToD $# 01
0X gotoMark 10 -> gotoMark 0X 10
eD backToSharpZero $C -> backToSharpZero eD $C
e& checkEForZero 1B -> stop e& 1B
1B initDivider $0 -> initDividerByTwo 1B $0
@C beginCopying $B -> backToStart @C $C
@@ backToStart 10 -> backToStart @@ 10
$1 backToSharpOne 10 -> backToSharpOne $1 10
0@ temp @0 -> beginCopying 0@ @0
00 dec @1 -> gotoMark 00 @0
0X checkCD $0 -> checkCD 0X $0
10 backToStart e1 -> backToStart 10 e1
e& backToDFromLeft $% -> backToDFromLeft e& $%
@0 backToSharpOne @0 -> backToSharpOne @0 @0
@E dec 10 -> dec @E 11
$% gotoMark 00 -> gotoMark $% 00
0# gotoDecC @D -> dec 0# @D
0& backToSharpOne @0 -> backToSharpOne 0& @0
e1 eraseE e1 -> eraseE e1 eB
10 backToDFromRight $0 -> backToDFromRight 10 $0
1& eraseE 00 -> eraseE 1& 0B
$X temp 11 -> beginCopying $X 11
@$ backToSharpZero $D -> backToSharpZero @$ $D
0& backToDFromLeft 11 -> backToDFromLeft 0& 11
eC gotoMark $0 -> gotoMark eC $0
$% backToSharpOne $1 -> backToSharpOne $% $1
@$ restoreCD 00 -> restoreCD @$ 00
$% backToSharpOne 01 -> backToSharpOne $% 01
0& dec 10 -> dec 0& 11
10 beginCopying $B -> backToStart 10 $C
1& gotoMark 11 -> gotoMark 1& 11
1@ gotoMark 00 -> gotoMark 1@ 00
$B incD 10 -> checkCD $B 11
0$ backToDFromLeft e0 -> backToDFromLeft 0$ e0
1$ goToPlaceForDivider 0B -> backToFirstC 1$ 0D
1B gotoDecC 00 -> gotoDecC 1B 00
e& backToSharpZero 1E -> backToSharpZero e& 1E
11 gotoMark $0 -> gotoMark 11 $0
0B restoreCD @% -> restoreCD 0B @0
e0 backToDFromRight 10 -> backToDFromRight e0 10
eC restoreCD $& -> restoreCD eC $1
1@ backToDFromLeft $0 -> backToDFromLeft 1@ $0
0# findBlank $1 -> temp 0# $1
@1 replaceWithBlanks e@ -> backToDFromRight @1 e@
@C gotoLastE 1@ -> dec @C 1@
1B gotoMark 10 -> gotoMark 1B 10
1C backToStart 00 -> backToStart 1C 00
0# eraseC $0 -> eraseC 0# $B
0% incD $1 -> incD 0% $0
0& backToSharpOne $X -> backToSharpOne 0& $X
@$ goToPlaceForDivider eB -> backToFirstC @$ eD
@@ backToSharpZero 0C -> backToSharpZero @@ 0C
0@ checkEForZero 0B -> stop 0@ 0B
e@ backToStart 01 -> backToStart e@ 01
@C nullifier @B -> initDivider @C @E
eC backToSharpZero eE -> backToSharpZero eC eE
0& backToSharpZero 0X -> backToSharpZero 0& 0X
$# restoreCD $& -> restoreCD $# $1
1& backToSharpZero 1D -> backToSharpZero 1& 1D
@$ backToDFromLeft e0 -> backToDFromLeft @$ e0
e$ backToD e1 -> backToD e$ e1
@E checkEForZero 1B -> stop @E 1B
e1 initDividerByTwo 00 -> backToD e1 01
$X checkCD @0 -> checkCD $X @0
0B initDividerByTwo 10 -> backToD 0B 11
10 beginCopying 1B -> backToStart 10 1C
0D backToDFromRight eB -> backToDFromRight 0D eB
0E eraseC 0C -> backToStart 0E 0X
11 backToSharpOne $C -> backToSharpOne 11 $C
11 searchZero 11 -> restoreCD 11 11
eE checkCD eD -> checkCD eE eD
1E backToSharpOne e1 -> backToSharpOne 1E e1
0# backToStart @0 -> backToStart 0# @0
0D backToSharpOne $C -> backToSharpOne 0D $C
0# checkCD e0 -> checkCD 0# e0
0B gotoMark 10 -> gotoMark 0B 10
0D searchZero 10 -> backToDFromLeft 0D 1%
0# eraseC 1C -> backToStart 0# 1X
1% eraseE @1 -> eraseE 1% @B
0@ gotoMark 10 -> gotoMark 0@ 10
11 backToDFromRight 1E -> backToDFromRight 11 1E
@$ temp 10 -> beginCopying @$ 10
0D gotoMark 1E -> gotoDecC 0D 1E
11 gotoMark 00 -> gotoMark 11 00
10 backToStart $0 -> backToStart 10 $0
11 temp 10 -> beginCopying 11 10
eC beginCopying 1B -> backToStart eC 1C
@@ goToPlaceForDivider 0B -> backToFirstC @@ 0D
e& backToFirstC $0 -> backToFirstC e& $0
e$ eraseE $1 -> eraseE e$ $B
e1 backToSharpOne $D -> backToSharpOne e1 $D
@C backToFirstC e0 -> backToFirstC @C e0
eB backToSharpZero 11 -> backToSharpZero eB 11
1@ eraseC 01 -> eraseC 1@ 0B
$C backToDFromLeft eD -> searchNextBit $C eD
e$ eraseE 1E -> prepEraseC e$ 1E
e% copyZero eB -> backToSharpZero e% e0
e& eraseC 11 -> eraseC e& 1B
$C backToDFromLeft @0 -> backToDFromLeft $C @0
@# initDividerByTwo @0 -> backToD @# @1
@0 incD 00 -> checkCD @0 01
0D checkEForZero @B -> stop 0D @B
@E eraseE e0 -> eraseE @E eB
$X replaceWithBlanks 0@ -> backToDFromRight $X 0@
@X eraseE $1 -> eraseE @X $B
@1 goToPlaceForDivider @B -> backToFirstC @1 @D
1$ backToStart 01 -> backToStart 1$ 01
$1 eraseC @1 -> eraseC $1 @B
@@ searchOne e1 -> backToDFromLeft @@ e&
$@ backToDFromLeft e& -> backToDFromLeft $@ e&
1C prepEraseC eD -> eraseC 1C eD
@C forwardToLastD eE -> incD @C eE
@@ gotoMark e1 -> gotoMark @@ e1
$0 backToSharpZero $X -> backToSharpZero $0 $X
$D gotoDecC $0 -> gotoDecC $D $0
e@ backToSharpOne @D -> backToSharpOne e@ @D
@$ prepEraseC @D -> eraseC @$ @D
e& backToSharpOne 01 -> backToSharpOne e& 01
$C checkCD @D -> checkCD $C @D
0% backToDFromLeft 11 -> backToDFromLeft 0% 11
$% backToD $1 -> backToD $% $1
$$ nullifier 1B -> initDivider $$ 1E
1E forwardToLastD 1E -> incD 1E 1E
$$ forwardToLastD 0E -> incD $$ 0E
$0 findBlank 01 -> temp $0 01
01 copyOne eB -> backToSharpOne 01 e1
1& replaceWithBlanks 0@ -> backToDFromRight 1& 0@
$E gotoLastE $@ -> dec $E $@
findZero @0 -> @0 findBlank
@# gotoMark 0E -> gotoDecC @# 0E
$0 gotoMark eE -> gotoDecC $0 eE
e1 checkCD $0 -> checkCD e1 $0
$B gotoDecC e0 -> gotoDecC $B e0
$@ forwardToLastD @E -> incD $@ @E
e% massErase @@ -> eraseE e% @@
0% backToSharpOne 0C -> backToSharpOne 0% 0C
1C backToD @0 -> backToD 1C @0
@% gotoMark $1 -> gotoMark @% $1
1% findBlank $0 -> temp 1% $0
0B beginCopying @B -> backToStart 0B @C
0B backToSharpOne eE -> backToSharpOne 0B eE
1$ dec 00 -> dec 1$ 01
e@ searchOne 00 -> restoreCD e@ 00
$X restoreCD $D -> restoreCD $X $D
eC initDivider 10 -> initDividerByTwo eC 10
e& searchOne 01 -> backToDFromLeft e& 0&
@B searchZero 00 -> backToDFromLeft @B 0%
e1 backToDFromRight eB -> backToDFromRight e1 eB
e0 prepEraseC e0 -> prepEraseC e0 e0
01 beginCopying $B -> backToStart 01 $C
$0 backToD e1 -> backToD $0 e1
0X findBlank @B -> FINAL 0X @B
eC searchOne e0 -> restoreCD eC e0
1# backToDFromRight $B -> backToDFromRight 1# $B
$D backToSharpZero $X -> backToSharpZero $D $X
0D backToDFromRight @0 -> backToDFromRight 0D @0
$D prepEraseC @0 -> prepEraseC $D @0
$% copyZero eB -> backToSharpZero $% e0
0% eraseC $1 -> eraseC 0% $B
eD incD @0 -> checkCD eD @1
0% gotoMark $E -> gotoDecC 0% $E
00 backToSharpZero 11 -> backToSharpZero 00 11
@@ eraseE e1 -> eraseE @@ eB
$X findBlank 00 -> temp $X 00
$E backToD e1 -> backToD $E e1
0% eraseC 0C -> backToStart 0% 0X
eC backToDFromRight 00 -> backToDFromRight eC 00
$# backToD $1 -> backToD $# $1
$B temp 11 -> beginCopying $B 11
1& backToFirstC 10 -> backToFirstC 1& 10
1B eraseC $C -> backToStart 1B $X
1D backToSharpZero 10 -> backToSharpZero 1D 10
$B incD $0 -> checkCD $B $1
@% backToSharpOne eE -> backToSharpOne @% eE
0C backToStart 01 -> backToStart 0C 01
$0 restoreCD 0% -> restoreCD $0 00
eX backToSharpZero 00 -> backToSharpZero eX 00
moveToE 11 -> 11 moveToE
$1 backToD $1 -> backToD $1 $1
eX backToDFromLeft @% -> backToDFromLeft eX @%
1@ prepEraseC 0D -> eraseC 1@ 0D
@E incD $1 -> incD @E $0
0B searchZero $0 -> backToDFromLeft 0B $%
@X forwardToLastD $E -> incD @X $E
@& backToSharpOne $X -> backToSharpOne @& $X
0C backToSharpZero $E -> backToSharpZero 0C $E
@X backToSharpZero 00 -> backToSharpZero @X 00
@& restoreCD @D -> restoreCD @& @D
$% backToD @1 -> backToD $% @1
eD backToD 01 -> backToD eD 01
@E temp e1 -> beginCopying @E e1
0E backToD 10 -> backToD 0E 10
0# nullifier eB -> initDivider 0# eE
@0 backToDFromLeft 11 -> backToDFromLeft @0 11
$D eraseE $1 -> eraseE $D $B
$X checkCD 0D -> checkCD $X 0D
$@ backToSharpOne $0 -> backToSharpOne $@ $0
0$ incD e0 -> checkCD 0$ e1
e% forwardToLastD @E -> incD e% @E
@1 initDividerByTwo e0 -> backToD @1 e1
1B gotoLastE 0@ -> dec 1B 0@
0X backToD $0 -> backToD 0X $0
1% backToStart @1 -> backToStart 1% @1
@0 gotoDecC 01 -> gotoDecC @0 01
1E backToFirstC $1 -> backToFirstC 1E $1
FINAL 1@ -> FINAL 1 FINAL
@# checkCD $D -> checkCD @# $D
$C backToSharpZero 1X -> backToSharpZero $C 1X
@# searchOne $1 -> backToDFromLeft @# $&
e$ backToDFromLeft @D -> searchNextBit e$ @D
00 backToDFromLeft 11 -> backToDFromLeft 00 11
1X searchNextBit 10 -> searchNextBit 1X 10
0E backToStart 01 -> backToStart 0E 01
1% restoreCD 1& -> restoreCD 1% 11
1@ eraseE e0 -> eraseE 1@ eB
0E gotoLastE $@ -> dec 0E $@
@D backToDFromLeft 0& -> backToDFromLeft @D 0&
$@ backToSharpOne 0D -> backToSharpOne $@ 0D
1X searchOne 00 -> restoreCD 1X 00
11 findBlank 01 -> temp 11 01
1% backToFirstC 10 -> backToFirstC 1% 10
1@ temp e1 -> beginCopying 1@ e1
11 backToSharpZero e1 -> backToSharpZero 11 e1
eE restoreCD 0& -> restoreCD eE 01
@D restoreCD @% -> restoreCD @D @0
$1 restoreCD $% -> restoreCD $1 $0
$X gotoLastE $@ -> dec $X $@
e% gotoMark e0 -> gotoMark e% e0
e& beginCopying @B -> backToStart e& @C
$0 backToSharpZero $0 -> backToSharpZero $0 $0
0C backToSharpOne 0C -> backToSharpOne 0C 0C
0# initDividerByTwo 10 -> backToD 0# 11
0X prepEraseC $0 -> prepEraseC 0X $0
@@ backToSharpZero 1X -> backToSharpZero @@ 1X
@C backToDFromLeft 1% -> backToDFromLeft @C 1%
0E checkEForZero 1B -> stop 0E 1B
1$ restoreCD $1 -> restoreCD 1$ $1
$X gotoMark 11 -> gotoMark $X 11
0% replaceWithBlanks $@ -> backToDFromRight 0% $@
0D temp @1 -> beginCopying 0D @1
e# backToFirstC 10 -> backToFirstC e# 10
e# massErase e@ -> eraseE e# e@
$1 copyZero eB -> backToSharpZero $1 e0
1E backToDFromLeft $& -> backToDFromLeft 1E $&
@# temp @1 -> beginCopying @# @1
0# prepEraseC 0D -> eraseC 0# 0D
@$ searchNextBit e0 -> searchNextBit @$ e0
@D backToDFromRight 1B -> backToDFromRight @D 1B
@@ gotoDecC 11 -> gotoDecC @@ 11
0B backToFirstC e0 -> backToFirstC 0B e0
1D backToFirstC 01 -> backToFirstC 1D 01
0% prepEraseC 1D -> eraseC 0% 1D
1X gotoLastE 1@ -> dec 1X 1@
e$ gotoDecC e0 -> gotoDecC e$ e0
11 incD 11 -> incD 11 10
1B eraseC @C -> backToStart 1B @X
0B goToPlaceForDivider eB -> backToFirstC 0B eD
0C dec 11 -> gotoMark 0C 10
eD backToFirstC 10 -> backToFirstC eD 10
copyZero eD -> eD copyZero
0B backToSharpOne 0E -> backToSharpOne 0B 0E
e$ backToDFromLeft 1% -> backToDFromLeft e$ 1%
0% backToSharpOne $D -> backToSharpOne 0% $D
0@ backToD 10 -> backToD 0@ 10
1E gotoDecC 00 -> gotoDecC 1E 00
$0 gotoDecC 0D -> dec $0 0D
1% initDivider 00 -> initDividerByTwo 1% 00
eC backToDFromRight $B -> backToDFromRight eC $B
10 eraseC 01 -> eraseC 10 0B
$D backToSharpZero $E -> backToSharpZero $D $E
eB replaceWithBlanks 1@ -> backToDFromRight eB 1@
$& backToStart 11 -> backToStart $& 11
$0 backToDFromLeft 1D -> searchNextBit $0 1D
$C copyZero @B -> backToSharpZero $C @0
e# temp 00 -> beginCopying e# 00
$X copyZero eB -> backToSharpZero $X e0
$X backToSharpZero eX -> backToSharpZero $X eX
e# copyOne 0B -> backToSharpOne e# 01
11 backToSharpZero 0E -> backToSharpZero 11 0E
@D backToSharpZero $D -> backToSharpZero @D $D
@D gotoDecC 1D -> dec @D 1D
$# dec $1 -> gotoMark $# $0
1@ massErase 0@ -> eraseE 1@ 0@
e1 backToSharpOne $E -> backToSharpOne e1 $E
1B findBlank 01 -> temp 1B 01
@# backToDFromLeft $& -> backToDFromLeft @# $&
@E backToDFromRight e1 -> backToDFromRight @E e1
0@ gotoMark @E -> gotoDecC 0@ @E
e1 restoreCD $% -> restoreCD e1 $0
00 findBlank @1 -> temp 00 @1
eE gotoDecC 11 -> gotoDecC eE 11
@B searchOne 01 -> backToDFromLeft @B 0&
0$ restoreCD 0% -> restoreCD 0$ 00
@0 eraseE e1 -> eraseE @0 eB
1@ copyZero @B -> backToSharpZero 1@ @0
1% backToSharpZero @C -> backToSharpZero 1% @C
00 backToSharpZero @C -> backToSharpZero 00 @C
1# copyOne 0B -> backToSharpOne 1# 01
eD temp 01 -> beginCopying eD 01
e0 incD 11 -> incD e0 10
@0 backToSharpZero $1 -> backToSharpZero @0 $1
eX backToStart e0 -> backToStart eX e0
$B backToStart @0 -> backToStart $B @0
@E backToSharpOne 1X -> backToSharpOne @E 1X
0# checkEForZero 1B -> stop 0# 1B
e0 checkCD 10 -> checkCD e0 10
$X massErase 0@ -> eraseE $X 0@
0% backToSharpOne $1 -> backToSharpOne 0% $1
e0 searchNextBit @1 -> searchNextBit e0 @1
eD checkEForZero 0B -> stop eD 0B
11 findBlank @B -> FINAL 11 @B
$$ backToSharpZero 01 -> backToSharpZero $$ 01
e$ backToDFromLeft e0 -> backToDFromLeft e$ e0
0X eraseC 1C -> backToStart 0X 1X
eX backToStart @1 -> backToStart eX @1
0@ backToSharpOne 01 -> backToSharpOne 0@ 01
10 gotoDecC 00 -> gotoDecC 10 00
$D initDivider $0 -> initDividerByTwo $D $0
@E dec 01 -> gotoMark @E 00
@E backToDFromLeft 01 -> backToDFromLeft @E 01
eX backToSharpOne 1D -> backToSharpOne eX 1D
@% searchZero @0 -> backToDFromLeft @% @%
eB backToFirstC @0 -> backToFirstC eB @0
e& findBlank 0B -> FINAL e& 0B
@D findBlank @0 -> temp @D @0
@D searchOne 11 -> backToDFromLeft @D 1&
$@ initDivider 10 -> initDividerByTwo $@ 10
$C backToSharpZero 0X -> backToSharpZero $C 0X
$D backToSharpOne $1 -> backToSharpOne $D $1
@% restoreCD 1& -> restoreCD @% 11
beginCopying 11 -> 11 beginCopying
$0 copyOne 0B -> backToSharpOne $0 01
e% prepEraseC eD -> eraseC e% eD
e% incD e1 -> incD e% e0
1B dec @0 -> dec 1B @1
01 backToFirstC @0 -> backToFirstC 01 @0
@$ gotoDecC @D -> dec @$ @D
@E backToSharpZero eE -> backToSharpZero @E eE
10 backToSharpZero 1D -> backToSharpZero 10 1D
0% backToStart 01 -> backToStart 0% 01
0C dec 00 -> dec 0C 01
$X backToSharpZero eD -> backToSharpZero $X eD
0$ findZero e1 -> beginCopying 0$ e1
e@ initDividerByTwo 00 -> backToD e@ 01
@B gotoDecC 01 -> gotoDecC @B 01
@1 backToDFromLeft 00 -> backToDFromLeft @1 00
@X restoreCD eD -> restoreCD @X eD
1$ eraseC @C -> backToStart 1$ @X
eE gotoLastE e@ -> dec eE e@
A2 -> 00 A2
A2 -> 11 A2
A2 -> @@ A2
A2 -> $$ A2
A2 -> A3
@D backToD e0 -> backToD @D e0
0X backToSharpOne 1C -> backToSharpOne 0X 1C
0# searchNextBit @0 -> searchNextBit 0# @0
@C eraseC @1 -> eraseC @C @B
$1 backToSharpZero e1 -> backToSharpZero $1 e1
1D restoreCD eD -> restoreCD 1D eD
$E restoreCD 11 -> restoreCD $E 11
@0 findBlank $1 -> temp @0 $1
0D eraseE @0 -> eraseE 0D @B
0% searchOne @0 -> restoreCD 0% @0
e1 gotoDecC @1 -> gotoDecC e1 @1
1& eraseE $0 -> eraseE 1& $B
11 restoreCD e0 -> restoreCD 11 e0
$D initDividerByTwo $0 -> backToD $D $1
1D backToSharpZero 11 -> backToSharpZero 1D 11
@B findBlank $0 -> temp @B $0
@@ forwardToLastD @E -> incD @@ @E
searchZero 0& -> 0& searchZero
$# searchNextBit $1 -> searchNextBit $# $1
$E checkEForZero 0B -> stop $E 0B
$B checkCD 01 -> checkCD $B 01
backToD 0D -> 0D createCopy
1$ restoreCD eD -> restoreCD 1$ eD
e$ eraseE @E -> prepEraseC e$ @E
@D backToStart @0 -> backToStart @D @0
eX backToDFromRight eE -> backToDFromRight eX eE
e& searchNextBit e1 -> searchNextBit e& e1
0@ backToD 11 -> backToD 0@ 11
1D backToSharpOne 00 -> backToSharpOne 1D 00
$$ backToStart $1 -> backToStart $$ $1
1@ eraseC e1 -> eraseC 1@ eB
1B backToDFromLeft @1 -> backToDFromLeft 1B @1
eD backToSharpOne 0X -> backToSharpOne eD 0X
10 eraseE 1E -> prepEraseC 10 1E
00 backToD e0 -> backToD 00 e0
@D prepEraseC 01 -> prepEraseC @D 01
@# backToStart $0 -> backToStart @# $0
0% searchNextBit @1 -> searchNextBit 0% @1
$C backToSharpOne @1 -> backToSharpOne $C @1
0C backToSharpZero 1D -> backToSharpZero 0C 1D
00 prepEraseC e0 -> prepEraseC 00 e0
e1 backToSharpZero 0E -> backToSharpZero e1 0E
@D dec $1 -> gotoMark @D $0
0% temp 10 -> beginCopying 0% 10
$X backToStart @0 -> backToStart $X @0
eB findBlank 0B -> FINAL eB 0B
11 eraseC e1 -> eraseC 11 eB
e1 gotoDecC $D -> dec e1 $D
10 initDivider e0 -> initDividerByTwo 10 e0
1D prepEraseC @D -> eraseC 1D @D
@C backToSharpZero 00 -> backToSharpZero @C 00
00 gotoMark $0 -> gotoMark 00 $0
1B incD 11 -> incD 1B 10
eD gotoDecC @0 -> gotoDecC eD @0
gotoLastE eD -> eD gotoLastE
1C gotoDecC e1 -> gotoDecC 1C e1
eX checkCD e1 -> checkCD eX e1
00 backToDFromRight 10 -> backToDFromRight 00 10
eD findBlank $0 -> temp eD $0
1% backToDFromRight e0 -> backToDFromRight 1% e0
$@ eraseE e1 -> eraseE $@ eB
1C gotoMark 0E -> gotoDecC 1C 0E
@# checkEForZero @B -> stop @# @B
$B prepEraseC $0 -> prepEraseC $B $0
e& searchOne @1 -> backToDFromLeft e& @&
1@ backToD 11 -> backToD 1@ 11
1C searchOne 01 -> backToDFromLeft 1C 0&
$$ replaceWithBlanks e@ -> backToDFromRight $$ e@
@D eraseE 00 -> eraseE @D 0B
@C backToDFromRight @1 -> backToDFromRight @C @1
$& findBlank 1B -> FINAL $& 1B
1D checkEForZero 1B -> stop 1D 1B
@B prepEraseC 11 -> prepEraseC @B 11
11 nullifier $B -> initDivider 11 $E
0B searchZero e1 -> restoreCD 0B e1
searchZero $% -> $% searchZero
eE restoreCD 0D -> restoreCD eE 0D
e0 checkCD @D -> checkCD e0 @D
e% backToDFromRight @E -> backToDFromRight e% @E
11 backToStart 11 -> backToStart 11 11
0& findBlank $0 -> temp 0& $0
1$ initDividerByTwo e0 -> backToD 1$ e1
@# searchZero 10 -> backToDFromLeft @# 1%
beginCopying 10 -> 10 beginCopying
1$ backToDFromRight 00 -> backToDFromRight 1$ 00
@E backToDFromLeft @% -> backToDFromLeft @E @%
$E backToStart 00 -> backToStart $E 00
0D backToDFromRight $E -> backToDFromRight 0D $E
eE backToDFromLeft 0& -> backToDFromLeft eE 0&
1% backToSharpZero 0E -> backToSharpZero 1% 0E
1# findZero 01 -> beginCopying 1# 01
@B eraseC 10 -> eraseC @B 1B
$X copyOne @B -> backToSharpOne $X @1
eE backToSharpZero 0E -> backToSharpZero eE 0E
1B checkEForZero @B -> stop 1B @B
@% gotoDecC $D -> dec @% $D
@X copyOne 1B -> backToSharpOne @X 11
1@ temp 01 -> beginCopying 1@ 01
eC copyZero $B -> backToSharpZero eC $0
1C searchZero $0 -> backToDFromLeft 1C $%
1# copyOne eB -> backToSharpOne 1# e1
$@ searchNextBit 11 -> searchNextBit $@ 11
e0 forwardToLastD @E -> incD e0 @E
eE findBlank 00 -> temp eE 00
$B checkCD $1 -> checkCD $B $1
1C gotoMark @0 -> gotoMark 1C @0
@B backToSharpZero $0 -> backToSharpZero @B $0
@B backToSharpOne eD -> backToSharpOne @B eD
eB restoreCD @1 -> restoreCD eB @1
e# restoreCD 1D -> restoreCD e# 1D
eX copyZero eB -> backToSharpZero eX e0
$& backToSharpZero 00 -> backToSharpZero $& 00
$$ incD @0 -> checkCD $$ @1
@# backToDFromLeft $1 -> backToDFromLeft @# $1
@0 prepEraseC 1D -> eraseC @0 1D
0$ eraseC 10 -> eraseC 0$ 1B
@B replaceWithBlanks e@ -> backToDFromRight @B e@
$X searchNextBit e1 -> searchNextBit $X e1
1& gotoDecC @D -> dec 1& @D
0# backToDFromLeft 00 -> backToDFromLeft 0# 00
0# prepEraseC $D -> eraseC 0# $D
0D searchZero @1 -> restoreCD 0D @1
$C checkCD e1 -> checkCD $C e1
0@ gotoLastE e@ -> dec 0@ e@
$& gotoDecC e1 -> gotoDecC $& e1
0B temp @1 -> beginCopying 0B @1
01 eraseE 10 -> eraseE 01 1B
@D restoreCD 1& -> restoreCD @D 11
1X incD 00 -> checkCD 1X 01
$1 searchZero @0 -> backToDFromLeft $1 @%
eE searchNextBit 00 -> searchNextBit eE 00
10 backToDFromLeft $% -> backToDFromLeft 10 $%
@0 checkCD @0 -> checkCD @0 @0
eX checkCD @D -> checkCD eX @D
e@ backToSharpOne 00 -> backToSharpOne e@ 00
$@ backToSharpZero 1X -> backToSharpZero $@ 1X
1% checkCD $1 -> checkCD 1% $1
@C restoreCD @% -> restoreCD @C @0
e1 checkEForZero $B -> stop e1 $B
$% findBlank @B -> FINAL $% @B
@C massErase @@ -> eraseE @C @@
1@ temp @0 -> beginCopying 1@ @0
moveToE 0E -> 0E checkEForZero
0@ restoreCD 01 -> restoreCD 0@ 01
@& backToSharpOne @1 -> backToSharpOne @& @1
eE dec @0 -> dec eE @1
1D backToDFromRight 1E -> backToDFromRight 1D 1E
e0 prepEraseC @0 -> prepEraseC e0 @0
0# restoreCD @% -> restoreCD 0# @0
@B searchOne e1 -> backToDFromLeft @B e&
0@ backToSharpOne @0 -> backToSharpOne 0@ @0
$$ backToDFromLeft 1D -> searchNextBit $$ 1D
@B eraseC 01 -> eraseC @B 0B
e# backToSharpOne @X -> backToSharpOne e# @X
$B backToDFromRight @0 -> backToDFromRight $B @0
e$ prepEraseC e1 -> prepEraseC e$ e1
@X backToSharpZero eC -> backToSharpZero @X eC
0# backToSharpZero @X -> backToSharpZero 0# @X
$# backToSharpOne eC -> backToSharpOne $# eC
@B gotoLastE @@ -> dec @B @@
@X eraseE @E -> prepEraseC @X @E
@D backToDFromRight 01 -> backToDFromRight @D 01
1# backToSharpZero @E -> backToSharpZero 1# @E
1% backToSharpZero $D -> backToSharpZero 1% $D
@E incD @1 -> incD @E @0
@0 backToSharpZero eC -> backToSharpZero @0 eC
0C backToDFromRight 0B -> backToDFromRight 0C 0B
0% temp e1 -> beginCopying 0% e1
e& backToDFromLeft @& -> backToDFromLeft e& @&
$@ dec e1 -> gotoMark $@ e0
10 prepEraseC 0D -> eraseC 10 0D
eD findBlank $1 -> temp eD $1
@B backToSharpOne 10 -> backToSharpOne @B 10
$& backToSharpOne e1 -> backToSharpOne $& e1
e% eraseC 10 -> eraseC e% 1B
0@ checkCD 1D -> checkCD 0@ 1D
@E backToStart @0 -> backToStart @E @0
e0 checkCD 1D -> checkCD e0 1D
$D dec e0 -> dec $D e1
e# eraseE eE -> prepEraseC e# eE
1B backToSharpZero @E -> backToSharpZero 1B @E
e% backToSharpZero 0E -> backToSharpZero e% 0E
10 copyZero 0B -> backToSharpZero 10 00
1D backToD 11 -> backToD 1D 11
$B checkCD 1D -> checkCD $B 1D
0C initDivider e0 -> initDividerByTwo 0C e0
$C backToD e1 -> backToD $C e1
10 backToSharpOne 0X -> backToSharpOne 10 0X
$@ backToSharpZero 0D -> backToSharpZero $@ 0D
e$ backToDFromRight 1E -> backToDFromRight e$ 1E
@X incD e1 -> incD @X e0
$E backToDFromRight 1E -> backToDFromRight $E 1E
$# backToFirstC 10 -> backToFirstC $# 10
@C incD $0 -> checkCD @C $1
e1 backToFirstC e0 -> backToFirstC e1 e0
1$ initDividerByTwo 10 -> backToD 1$ 11
@E backToSharpZero $D -> backToSharpZero @E $D
1$ backToSharpZero eD -> backToSharpZero 1$ eD
11 findBlank 1B -> FINAL 11 1B
$0 restoreCD @D -> restoreCD $0 @D
$% eraseC 01 -> eraseC $% 0B
@# beginCopying 0B -> backToStart @# 0C
01 goToPlaceForDivider 0B -> backToFirstC 01 0D
FINAL 1X -> FINAL 1 FINAL
0# gotoLastE $@ -> dec 0# $@
eB backToSharpOne @0 -> backToSharpOne eB @0
@D restoreCD e0 -> restoreCD @D e0
00 gotoMark 01 -> gotoMark 00 01
0& incD 01 -> incD 0& 00
@X copyOne eB -> backToSharpOne @X e1
0$ backToFirstC e0 -> backToFirstC 0$ e0
@% findBlank 10 -> temp @% 10
@0 backToDFromRight 0E -> backToDFromRight @0 0E
0C backToDFromLeft $1 -> backToDFromLeft 0C $1
0B backToDFromRight 1E -> backToDFromRight 0B 1E
$& searchOne $1 -> backToDFromLeft $& $&
$D checkEForZero 1B -> stop $D 1B
@% gotoLastE $@ -> dec @% $@
@D goToPlaceForDivider 1B -> backToFirstC @D 1D
@% backToSharpZero 0X -> backToSharpZero @% 0X
$% searchZero 11 -> restoreCD $% 11
1E copyOne eB -> backToSharpOne 1E e1
$E backToDFromRight $1 -> backToDFromRight $E $1
@@ eraseE 11 -> eraseE @@ 1B
1% restoreCD 1% -> restoreCD 1% 10
@% backToSharpOne @D -> backToSharpOne @% @D
$D backToSharpOne $D -> backToSharpOne $D $D
$$ searchZero 11 -> restoreCD $$ 11
10 incD @0 -> checkCD 10 @1
@B findBlank @1 -> temp @B @1
eB initDividerByTwo @0 -> backToD eB @1
0C checkEForZero $B -> stop 0C $B
$B searchZero @0 -> backToDFromLeft $B @%
e1 searchOne 00 -> restoreCD e1 00
0B checkCD 0D -> checkCD 0B 0D
e@ backToSharpOne 1E -> backToSharpOne e@ 1E
$C backToSharpOne 0X -> backToSharpOne $C 0X
1# searchOne $0 -> restoreCD 1# $0
e% massErase 1@ -> eraseE e% 1@
@0 backToSharpOne 1X -> backToSharpOne @0 1X
@E backToSharpZero @D -> backToSharpZero @E @D
0# backToDFromLeft e% -> backToDFromLeft 0# e%
$E findBlank 1B -> FINAL $E 1B
01 restoreCD 11 -> restoreCD 01 11
@# backToSharpOne 01 -> backToSharpOne @# 01
0B backToSharpZero eC -> backToSharpZero 0B eC
1B checkCD 00 -> checkCD 1B 00
@X eraseE 11 -> eraseE @X 1B
10 findBlank e0 -> temp 10 e0
@0 backToStart e0 -> backToStart @0 e0
0E backToDFromLeft e1 -> backToDFromLeft 0E e1
$X eraseE 01 -> eraseE $X 0B
$# nullifier 1B -> initDivider $# 1E
1$ checkCD 1D -> checkCD 1$ 1D
@# backToD @0 -> backToD @# @0
0@ backToSharpZero eD -> backToSharpZero 0@ eD
0B backToSharpOne $0 -> backToSharpOne 0B $0
00 backToDFromRight 0E -> backToDFromRight 00 0E
@E backToSharpOne 1E -> backToSharpOne @E 1E
0& replaceWithBlanks $@ -> backToDFromRight 0& $@
@E gotoLastE @@ -> dec @E @@
1C prepEraseC @0 -> prepEraseC 1C @0
0@ backToSharpOne $E -> backToSharpOne 0@ $E
$% goToPlaceForDivider 1B -> backToFirstC $% 1D
$@ backToSharpZero eE -> backToSharpZero $@ eE
1E backToD $1 -> backToD 1E $1
backToD 1D -> 1D createCopy
eC gotoDecC @1 -> gotoDecC eC @1
0C backToSharpOne 01 -> backToSharpOne 0C 01
eC backToSharpZero 1C -> backToSharpZero eC 1C
1C replaceWithBlanks $@ -> backToDFromRight 1C $@
@E backToSharpOne $D -> backToSharpOne @E $D
@@ backToDFromLeft @% -> backToDFromLeft @@ @%
1B backToSharpOne 10 -> backToSharpOne 1B 10
0# backToSharpZero $D -> backToSharpZero 0# $D
$X searchNextBit @0 -> searchNextBit $X @0
@0 forwardToLastD 0E -> incD @0 0E
1# gotoDecC 1D -> dec 1# 1D
0D eraseE 00 -> eraseE 0D 0B
1$ findBlank eB -> FINAL 1$ eB
1X backToSharpOne 0C -> backToSharpOne 1X 0C
e# backToSharpOne 11 -> backToSharpOne e# 11
01 nullifier @B -> initDivider 01 @E
0E copyOne 0B -> backToSharpOne 0E 01
1% beginCopying 1B -> backToStart 1% 1C
1# backToSharpZero $0 -> backToSharpZero 1# $0
e@ backToSharpOne e1 -> backToSharpOne e@ e1
0# gotoLastE 0@ -> dec 0# 0@
$$ backToFirstC $0 -> backToFirstC $$ $0
1E backToD 11 -> backToD 1E 11
@# dec @1 -> gotoMark @# @0
1B backToFirstC @0 -> backToFirstC 1B @0
0B copyZero $B -> backToSharpZero 0B $0
@@ backToSharpOne @X -> backToSharpOne @@ @X
eE prepEraseC 0D -> eraseC eE 0D
0% findBlank e0 -> temp 0% e0
e$ backToFirstC @0 -> backToFirstC e$ @0
e% eraseE 00 -> eraseE e% 0B
0& forwardToLastD eE -> incD 0& eE
$# restoreCD $D -> restoreCD $# $D
$1 backToD @0 -> backToD $1 @0
0D backToSharpOne @D -> backToSharpOne 0D @D
1B findBlank e0 -> temp 1B e0
0@ eraseE @1 -> eraseE 0@ @B
10 gotoLastE 1@ -> dec 10 1@
1D backToFirstC e0 -> backToFirstC 1D e0
e% backToSharpZero 0C -> backToSharpZero e% 0C
0D gotoDecC 11 -> gotoDecC 0D 11
@@ backToSharpZero $1 -> backToSharpZero @@ $1
$0 backToFirstC 10 -> backToFirstC $0 10
$C eraseC e1 -> eraseC $C eB
1B checkCD e0 -> checkCD 1B e0
11 findZero e1 -> beginCopying 11 e1
01 backToSharpOne eD -> backToSharpOne 01 eD
0E restoreCD @D -> restoreCD 0E @D
$@ searchZero $0 -> backToDFromLeft $@ $%
eD restoreCD 1D -> restoreCD eD 1D
$X backToDFromRight 0E -> backToDFromRight $X 0E
e0 backToDFromLeft 1D -> searchNextBit e0 1D
0@ replaceWithBlanks 1@ -> backToDFromRight 0@ 1@
01 backToStart e1 -> backToStart 01 e1
$& restoreCD $0 -> restoreCD $& $0
1C backToFirstC 11 -> backToFirstC 1C 11
@C prepEraseC @1 -> prepEraseC @C @1
e0 restoreCD @1 -> restoreCD e0 @1
$$ searchNextBit e1 -> searchNextBit $$ e1
@$ prepEraseC @1 -> prepEraseC @$ @1
eE backToDFromLeft 1D -> searchNextBit eE 1D
@0 backToDFromRight 1E -> backToDFromRight @0 1E
1$ findBlank e0 -> temp 1$ e0
0E temp @0 -> beginCopying 0E @0
@X backToDFromRight @E -> backToDFromRight @X @E
e@ incD 11 -> incD e@ 10
1% initDividerByTwo @0 -> backToD 1% @1
$# copyOne 0B -> backToSharpOne $# 01
@% massErase 1@ -> eraseE @% 1@
eB backToSharpZero 10 -> backToSharpZero eB 10
@0 checkCD 00 -> checkCD @0 00
$@ backToSharpOne 0C -> backToSharpOne $@ 0C
0X backToSharpZero $X -> backToSharpZero 0X $X
e# searchZero 01 -> restoreCD e# 01
$& backToDFromLeft 1% -> backToDFromLeft $& 1%
eB nullifier 0B -> initDivider eB 0E
1@ checkCD 0D -> checkCD 1@ 0D
$@ eraseE 10 -> eraseE $@ 1B
0E backToStart $0 -> backToStart 0E $0
@C restoreCD 1D -> restoreCD @C 1D
$B gotoDecC $D -> dec $B $D
$1 restoreCD 00 -> restoreCD $1 00
0# dec @1 -> gotoMark 0# @0
$$ copyZero 0B -> backToSharpZero $$ 00
e$ gotoDecC $1 -> gotoDecC e$ $1
$$ findBlank $1 -> temp $$ $1
eD eraseC 1C -> backToStart eD 1X
@% dec 10 -> dec @% 11
1% restoreCD e1 -> restoreCD 1% e1
$C prepEraseC $1 -> prepEraseC $C $1
1X goToPlaceForDivider eB -> backToFirstC 1X eD
0C backToD 10 -> backToD 0C 10
e1 checkEForZero 0B -> stop e1 0B
moveToE 00 -> 00 moveToE
eB nullifier $B -> initDivider eB $E
@% findBlank eB -> FINAL @% eB
e0 backToSharpZero @E -> backToSharpZero e0 @E
1C backToStart @0 -> backToStart 1C @0
@@ backToSharpZero $X -> backToSharpZero @@ $X
0D backToSharpOne 0X -> backToSharpOne 0D 0X
10 backToSharpOne e0 -> backToSharpOne 10 e0
$# temp $0 -> beginCopying $# $0
1& restoreCD 0% -> restoreCD 1& 00
$@ backToStart @1 -> backToStart $@ @1
01 eraseC 0C -> backToStart 01 0X
$D backToD 00 -> backToD $D 00
@% backToStart e1 -> backToStart @% e1
01 nullifier $B -> initDivider 01 $E
$# copyZero $B -> backToSharpZero $# $0
00 findZero e1 -> beginCopying 00 e1
$$ searchZero @1 -> restoreCD $$ @1
$E initDividerByTwo $0 -> backToD $E $1
1# searchZero 10 -> backToDFromLeft 1# 1%
1$ backToSharpOne 00 -> backToSharpOne 1$ 00
0D goToPlaceForDivider 0B -> backToFirstC 0D 0D
$0 gotoDecC 00 -> gotoDecC $0 00
0# gotoMark 01 -> gotoMark 0# 01
e% checkCD 01 -> checkCD e% 01
$# replaceWithBlanks $@ -> backToDFromRight $# $@
0% findBlank @1 -> temp 0% @1
1$ backToDFromLeft e& -> backToDFromLeft 1$ e&
@1 backToSharpZero 0C -> backToSharpZero @1 0C
0# backToD 10 -> backToD 0# 10
e@ backToDFromLeft 0D -> searchNextBit e@ 0D
0& replaceWithBlanks 0@ -> backToDFromRight 0& 0@
$C searchNextBit 01 -> searchNextBit $C 01
0@ gotoMark $1 -> gotoMark 0@ $1
$D searchOne @0 -> restoreCD $D @0
e$ restoreCD e& -> restoreCD e$ e1
eD forwardToLastD eE -> incD eD eE
@B eraseE 11 -> eraseE @B 1B
$% backToSharpZero @0 -> backToSharpZero $% @0
$0 backToDFromLeft 1% -> backToDFromLeft $0 1%
@$ backToSharpZero eX -> backToSharpZero @$ eX
@$ forwardToLastD 0E -> incD @$ 0E
eC eraseE 01 -> eraseE eC 0B
11 restoreCD 11 -> restoreCD 11 11
$0 backToDFromRight 1E -> backToDFromRight $0 1E
01 backToDFromRight $1 -> backToDFromRight 01 $1
1B dec 01 -> gotoMark 1B 00
1C initDivider 10 -> initDividerByTwo 1C 10
1B massErase 1@ -> eraseE 1B 1@
$@ findZero $1 -> beginCopying $@ $1
$0 findBlank @B -> FINAL $0 @B
@# replaceWithBlanks $@ -> backToDFromRight @# $@
$1 checkEForZero 1B -> stop $1 1B
@# goToPlaceForDivider @B -> backToFirstC @# @D
@C backToDFromLeft @& -> backToDFromLeft @C @&
$@ backToDFromRight 1E -> backToDFromRight $@ 1E
$@ searchZero 11 -> restoreCD $@ 11
@D prepEraseC e1 -> prepEraseC @D e1
0# searchNextBit 00 -> searchNextBit 0# 00
$E prepEraseC e0 -> prepEraseC $E e0
0$ backToSharpOne $C -> backToSharpOne 0$ $C
0% eraseC 01 -> eraseC 0% 0B
@E eraseC $0 -> eraseC @E $B
1D initDividerByTwo 10 -> backToD 1D 11
$% backToSharpOne @C -> backToSharpOne $% @C
1X backToDFromRight 1E -> backToDFromRight 1X 1E
$# beginCopying 0B -> backToStart $# 0C
0D restoreCD 0& -> restoreCD 0D 01
eC backToSharpOne $X -> backToSharpOne eC $X
$& backToSharpZero 1X -> backToSharpZero $& 1X
eB backToFirstC e0 -> backToFirstC eB e0
0X gotoMark e1 -> gotoMark 0X e1
@X backToD @0 -> backToD @X @0
e@ backToSharpZero eC -> backToSharpZero e@ eC
@X backToSharpOne eC -> backToSharpOne @X eC
1C backToDFromRight @E -> backToDFromRight 1C @E
1% backToSharpOne eC -> backToSharpOne 1% eC
$# eraseE $1 -> eraseE $# $B
e$ incD e0 -> checkCD e$ e1
$D backToDFromRight 0B -> backToDFromRight $D 0B
0& gotoLastE $@ -> dec 0& $@
1X backToSharpZero 1C -> backToSharpZero 1X 1C
$% backToDFromRight 1B -> backToDFromRight $% 1B
@0 restoreCD $& -> restoreCD @0 $1
1C gotoMark 1E -> gotoDecC 1C 1E
@C backToDFromLeft 0& -> backToDFromLeft @C 0&
0E restoreCD $0 -> restoreCD 0E $0
$@ backToSharpOne 11 -> backToSharpOne $@ 11
eC backToStart e1 -> backToStart eC e1
01 temp @0 -> beginCopying 01 @0
1& backToSharpZero eC -> backToSharpZero 1& eC
$X backToDFromLeft 00 -> backToDFromLeft $X 00
@@ backToDFromRight 1E -> backToDFromRight @@ 1E
$C backToDFromLeft 1& -> backToDFromLeft $C 1&
$E restoreCD $1 -> restoreCD $E $1
$& backToFirstC 11 -> backToFirstC $& 11
1D prepEraseC $1 -> prepEraseC 1D $1
@C backToDFromRight 0B -> backToDFromRight @C 0B
e0 backToFirstC 10 -> backToFirstC e0 10
FINAL 0$ -> FINAL 0 FINAL
1X backToSharpZero eC -> backToSharpZero 1X eC
0@ backToDFromLeft $0 -> backToDFromLeft 0@ $0
1B prepEraseC @D -> eraseC 1B @D
$0 searchNextBit @0 -> searchNextBit $0 @0
e1 searchZero e1 -> restoreCD e1 e1
$X goToPlaceForDivider eB -> backToFirstC $X eD
$@ backToSharpOne $E -> backToSharpOne $@ $E
1D findBlank $B -> FINAL 1D $B
@# backToDFromRight 00 -> backToDFromRight @# 00
e1 copyOne 0B -> backToSharpOne e1 01
0B backToSharpZero 1X -> backToSharpZero 0B 1X
0E gotoDecC $0 -> gotoDecC 0E $0
@X eraseE 00 -> eraseE @X 0B
1X searchZero e0 -> backToDFromLeft 1X e%
@@ restoreCD $D -> restoreCD @@ $D
eB restoreCD 1% -> restoreCD eB 10
1# checkEForZero $B -> stop 1# $B
$1 eraseE @1 -> eraseE $1 @B
@0 backToD $1 -> backToD @0 $1
0@ prepEraseC @0 -> prepEraseC 0@ @0
createCopy 10 -> 1# copyZero
@$ temp $0 -> beginCopying @$ $0
$# backToFirstC $0 -> backToFirstC $# $0
1& backToSharpOne $D -> backToSharpOne 1& $D
11 backToSharpOne 0E -> backToSharpOne 11 0E
@C eraseE $0 -> eraseE @C $B
0$ checkCD 10 -> checkCD 0$ 10
@0 eraseE @0 -> eraseE @0 @B
0% copyZero 0B -> backToSharpZero 0% 00
@@ eraseE 10 -> eraseE @@ 1B
1B eraseE $E -> prepEraseC 1B $E
0X searchNextBit 00 -> searchNextBit 0X 00
$B backToSharpOne 10 -> backToSharpOne $B 10
@@ restoreCD eD -> restoreCD @@ eD
@1 checkCD @0 -> checkCD @1 @0
eX backToDFromRight e1 -> backToDFromRight eX e1
1@ replaceWithBlanks e@ -> backToDFromRight 1@ e@
e# backToSharpOne $D -> backToSharpOne e# $D
e@ gotoDecC 11 -> gotoDecC e@ 11
$# backToStart 10 -> backToStart $# 10
$D prepEraseC eD -> eraseC $D eD
0# backToSharpZero eD -> backToSharpZero 0# eD
1D backToDFromLeft @& -> backToDFromLeft 1D @&
11 backToSharpOne @1 -> backToSharpOne 11 @1
eB backToSharpZero @1 -> backToSharpZero eB @1
1@ nullifier @B -> initDivider 1@ @E
10 prepEraseC e0 -> prepEraseC 10 e0
1# eraseE $1 -> eraseE 1# $B
@1 findBlank $0 -> temp @1 $0
e& backToDFromLeft 1% -> backToDFromLeft e& 1%
0% searchZero $1 -> restoreCD 0% $1
10 findBlank 1B -> FINAL 10 1B
0E backToSharpOne 0C -> backToSharpOne 0E 0C
01 backToD @1 -> backToD 01 @1
gotoLastE 10 -> 10 gotoLastE
$@ massErase 0@ -> eraseE $@ 0@
e0 prepEraseC $0 -> prepEraseC e0 $0
1D searchOne @1 -> backToDFromLeft 1D @&
0$ eraseC $0 -> eraseC 0$ $B
1% initDivider $0 -> initDividerByTwo 1% $0
e& initDivider 10 -> initDividerByTwo e& 10
0B searchZero e0 -> backToDFromLeft 0B e%
1& findBlank @1 -> temp 1& @1
@& eraseE 00 -> eraseE @& 0B
$# findBlank 11 -> temp $# 11
e# gotoMark e1 -> gotoMark e# e1
$# eraseE 11 -> eraseE $# 1B
e$ prepEraseC $0 -> prepEraseC e$ $0
$1 backToDFromLeft $D -> searchNextBit $1 $D
1@ gotoDecC 0D -> dec 1@ 0D
$$ backToDFromLeft @0 -> backToDFromLeft $$ @0
00 searchZero 00 -> backToDFromLeft 00 0%
0X backToDFromRight eB -> backToDFromRight 0X eB
$@ dec $0 -> dec $@ $1
$B copyOne 1B -> backToSharpOne $B 11
@0 temp e0 -> beginCopying @0 e0
$X searchNextBit $1 -> searchNextBit $X $1
@C restoreCD 11 -> restoreCD @C 11
@# prepEraseC $1 -> prepEraseC @# $1
01 searchZero 10 -> backToDFromLeft 01 1%
$@ gotoDecC 00 -> gotoDecC $@ 00
e$ restoreCD 11 -> restoreCD e$ 11
0C eraseC 11 -> eraseC 0C 1B
0% gotoDecC 1D -> dec 0% 1D
1@ backToSharpZero 01 -> backToSharpZero 1@ 01
eB searchOne @0 -> restoreCD eB @0
@@ gotoDecC eD -> dec @@ eD
0# backToSharpOne 10 -> backToSharpOne 0# 10
$E restoreCD 0& -> restoreCD $E 01
$B searchNextBit @1 -> searchNextBit $B @1
@B backToStart $0 -> backToStart @B $0
e0 backToDFromLeft @D -> searchNextBit e0 @D
@& gotoMark 00 -> gotoMark @& 00
@C searchNextBit 00 -> searchNextBit @C 00
@X searchNextBit @0 -> searchNextBit @X @0
@% backToStart 11 -> backToStart @% 11
00 searchOne e1 -> backToDFromLeft 00 e&
$& eraseC @1 -> eraseC $& @B
1@ findZero e1 -> beginCopying 1@ e1
$D restoreCD $0 -> restoreCD $D $0
eE backToStart @1 -> backToStart eE @1
10 backToSharpZero @E -> backToSharpZero 10 @E
eqCD 0D -> 0D FINAL
$E gotoDecC @0 -> gotoDecC $E @0
0$ restoreCD @D -> restoreCD 0$ @D
$# backToSharpZero 01 -> backToSharpZero $# 01
0E backToSharpZero eE -> backToSharpZero 0E eE
e@ prepEraseC 1D -> eraseC e@ 1D
00 eraseC e0 -> eraseC 00 eB
0# gotoLastE e@ -> dec 0# e@
@# eraseE 01 -> eraseE @# 0B
e1 eraseC 10 -> eraseC e1 1B
10 nullifier 0B -> initDivider 10 0E
0@ incD @0 -> checkCD 0@ @1
10 temp e1 -> beginCopying 10 e1
@E dec e1 -> gotoMark @E e0
0D backToD 01 -> backToD 0D 01
eE checkCD @0 -> checkCD eE @0
10 gotoMark @1 -> gotoMark 10 @1
e% findZero 11 -> beginCopying e% 11
1C backToSharpZero @1 -> backToSharpZero 1C @1
1B findZero e1 -> beginCopying 1B e1
$X backToSharpZero $0 -> backToSharpZero $X $0
1% eraseC eC -> backToStart 1% eX
$1 initDivider 10 -> initDividerByTwo $1 10
0D initDivider @0 -> initDividerByTwo 0D @0
$@ dec 00 -> dec $@ 01
e1 restoreCD 0D -> restoreCD e1 0D
e& eraseC @0 -> eraseC e& @B
1@ findBlank @1 -> temp 1@ @1
eE searchZero $0 -> backToDFromLeft eE $%
$E checkEForZero $B -> stop $E $B
1C dec e0 -> dec 1C e1
$E massErase $@ -> eraseE $E $@
eB forwardToLastD 0E -> incD eB 0E
$# searchOne 10 -> restoreCD $# 10
@# dec e1 -> gotoMark @# e0
1@ backToSharpZero eE -> backToSharpZero 1@ eE
$C backToSharpOne eD -> backToSharpOne $C eD
e$ prepEraseC @D -> eraseC e$ @D
@# backToDFromLeft 0% -> backToDFromLeft @# 0%
1% searchZero $0 -> backToDFromLeft 1% $%
@D backToDFromRight @1 -> backToDFromRight @D @1
$B incD @1 -> incD $B @0
$$ gotoMark eE -> gotoDecC $$ eE
11 eraseC 10 -> eraseC 11 1B
$B gotoMark 1E -> gotoDecC $B 1E
eE backToDFromRight 01 -> backToDFromRight eE 01
gotoLastE e0 -> e0 gotoLastE
eD eraseE $0 -> eraseE eD $B
e& gotoDecC @0 -> gotoDecC e& @0
$# restoreCD 0& -> restoreCD $# 01
copyZero 1D -> 1D copyZero
e1 findBlank 00 -> temp e1 00
@% gotoDecC 1D -> dec @% 1D
$B dec 10 -> dec $B 11
1C gotoLastE e@ -> dec 1C e@
0X gotoLastE $@ -> dec 0X $@
00 prepEraseC 01 -> prepEraseC 00 01
@% backToDFromRight $0 -> backToDFromRight @% $0
start @1 -> @1 findZero
eE backToSharpOne eE -> backToSharpOne eE eE
$& gotoLastE 0@ -> dec $& 0@
e1 findBlank e0 -> temp e1 e0
@& dec @1 -> gotoMark @& @0
0C temp 10 -> beginCopying 0C 10
$$ eraseC 01 -> eraseC $$ 0B
1@ forwardToLastD $E -> incD 1@ $E
e@ backToDFromLeft $D -> searchNextBit e@ $D
@D restoreCD $0 -> restoreCD @D $0
$1 backToDFromRight e0 -> backToDFromRight $1 e0
01 backToD e1 -> backToD 01 e1
@E checkCD eD -> checkCD @E eD
$& gotoDecC 00 -> gotoDecC $& 00
@B backToSharpOne $1 -> backToSharpOne @B $1
e% gotoDecC $0 -> gotoDecC e% $0
0C gotoMark $0 -> gotoMark 0C $0
e@ backToSharpZero 10 -> backToSharpZero e@ 10
$C dec e0 -> dec $C e1
e0 gotoMark e0 -> gotoMark e0 e0
eC prepEraseC 10 -> prepEraseC eC 10
@# backToSharpOne $1 -> backToSharpOne @# $1
@B initDivider 00 -> initDividerByTwo @B 00
1B backToSharpOne 1X -> backToSharpOne 1B 1X
1# restoreCD 10 -> restoreCD 1# 10
0% prepEraseC $0 -> prepEraseC 0% $0
@B initDividerByTwo $0 -> backToD @B $1
@& incD 11 -> incD @& 10
@E checkCD e0 -> checkCD @E e0
$1 temp e0 -> beginCopying $1 e0
11 gotoMark e1 -> gotoMark 11 e1
e% gotoMark $1 -> gotoMark e% $1
11 searchNextBit 00 -> searchNextBit 11 00
0E restoreCD 1D -> restoreCD 0E 1D
e$ backToDFromLeft 10 -> backToDFromLeft e$ 10
eE gotoDecC 01 -> gotoDecC eE 01
@@ backToSharpOne 0E -> backToSharpOne @@ 0E
$& prepEraseC 10 -> prepEraseC $& 10
eC searchNextBit e0 -> searchNextBit eC e0
1C prepEraseC $D -> eraseC 1C $D
$# backToDFromLeft @0 -> backToDFromLeft $# @0
$X backToD @1 -> backToD $X @1
01 backToSharpZero 1D -> backToSharpZero 01 1D
$$ searchOne $0 -> restoreCD $$ $0
1E findZero $1 -> beginCopying 1E $1
@1 beginCopying @B -> backToStart @1 @C
$C backToFirstC 01 -> backToFirstC $C 01
checkOneD 1D -> 1D searchOne
0& gotoMark 1E -> gotoDecC 0& 1E
11 searchNextBit 01 -> searchNextBit 11 01
1X backToDFromLeft @& -> backToDFromLeft 1X @&
$& backToD @1 -> backToD $& @1
eE backToSharpOne 1D -> backToSharpOne eE 1D
@D massErase 1@ -> eraseE @D 1@
e# backToDFromRight $0 -> backToDFromRight e# $0
$B checkCD 11 -> checkCD $B 11
1# incD e1 -> incD 1# e0
e# backToStart e0 -> backToStart e# e0
0D checkCD e0 -> checkCD 0D e0
@% backToDFromLeft $1 -> backToDFromLeft @% $1
e# eraseC $0 -> eraseC e# $B
$% copyZero 0B -> backToSharpZero $% 00
@X eraseC eC -> backToStart @X eX
@X prepEraseC e1 -> prepEraseC @X e1
e@ backToSharpOne 0E -> backToSharpOne e@ 0E
$# incD $1 -> incD $# $0
e@ dec 10 -> dec e@ 11
$& restoreCD e& -> restoreCD $& e1
1% backToDFromRight e1 -> backToDFromRight 1% e1
00 findBlank e1 -> temp 00 e1
$@ findBlank 00 -> temp $@ 00
$1 backToStart @1 -> backToStart $1 @1
e0 gotoMark 0E -> gotoDecC e0 0E
eC initDividerByTwo 00 -> backToD eC 01
0C searchOne 00 -> restoreCD 0C 00
1D searchZero e0 -> backToDFromLeft 1D e%
e@ checkCD eD -> checkCD e@ eD
0@ backToDFromRight 11 -> backToDFromRight 0@ 11
@$ findBlank $B -> FINAL @$ $B
1E checkEForZero @B -> stop 1E @B
$0 backToSharpZero @1 -> backToSharpZero $0 @1
eC eraseE 0E -> prepEraseC eC 0E
1E backToSharpOne @X -> backToSharpOne 1E @X
@D backToDFromRight @0 -> backToDFromRight @D @0
e& eraseE 11 -> eraseE e& 1B
0# backToSharpOne 0D -> backToSharpOne 0# 0D
0& restoreCD e& -> restoreCD 0& e1
0D backToSharpOne @X -> backToSharpOne 0D @X
e# massErase $@ -> eraseE e# $@
e% searchOne e0 -> restoreCD e% e0
e% nullifier @B -> initDivider e% @E
1& temp 10 -> beginCopying 1& 10
0# backToSharpZero 0X -> backToSharpZero 0# 0X
$B backToSharpOne e0 -> backToSharpOne $B e0
0B searchOne 00 -> restoreCD 0B 00
0& gotoMark 11 -> gotoMark 0& 11
01 goToPlaceForDivider @B -> backToFirstC 01 @D
e1 searchNextBit 00 -> searchNextBit e1 00
0C eraseC e1 -> eraseC 0C eB
@D backToSharpZero @X -> backToSharpZero @D @X
e0 backToStart 11 -> backToStart e0 11
eC backToDFromRight $1 -> backToDFromRight eC $1
0@ backToSharpZero 00 -> backToSharpZero 0@ 00
1E backToDFromLeft 1D -> searchNextBit 1E 1D
$# backToSharpZero 0X -> backToSharpZero $# 0X
00 backToSharpOne e1 -> backToSharpOne 00 e1
eC findZero e1 -> beginCopying eC e1
$% eraseC @C -> backToStart $% @X
0C backToSharpZero @E -> backToSharpZero 0C @E
$# backToD 10 -> backToD $# 10
@& backToDFromLeft @1 -> backToDFromLeft @& @1
e1 eraseC 01 -> eraseC e1 0B
$1 prepEraseC 01 -> prepEraseC $1 01
$D searchNextBit 10 -> searchNextBit $D 10
$C prepEraseC @1 -> prepEraseC $C @1
@$ restoreCD @1 -> restoreCD @$ @1
0B backToSharpZero $1 -> backToSharpZero 0B $1
0X restoreCD 00 -> restoreCD 0X 00
e% findBlank $0 -> temp e% $0
$% backToDFromRight eB -> backToDFromRight $% eB
eC goToPlaceForDivider @B -> backToFirstC eC @D
$X gotoLastE @@ -> dec $X @@
e$ backToSharpZero @1 -> backToSharpZero e$ @1
@X restoreCD $1 -> restoreCD @X $1
0X gotoLastE 1@ -> dec 0X 1@
e@ dec $0 -> dec e@ $1
0B gotoMark 11 -> gotoMark 0B 11
00 backToD 11 -> backToD 00 11
e# dec e0 -> dec e# e1
0# checkCD $0 -> checkCD 0# $0
@E incD e1 -> incD @E e0
0B searchNextBit 11 -> searchNextBit 0B 11
@0 backToFirstC 11 -> backToFirstC @0 11
@# backToDFromRight eB -> backToDFromRight @# eB
@1 gotoDecC e0 -> gotoDecC @1 e0
1# temp e0 -> beginCopying 1# e0
1$ backToDFromLeft 11 -> backToDFromLeft 1$ 11
@% checkEForZero $B -> stop @% $B
eC dec 01 -> gotoMark eC 00
e0 findBlank 01 -> temp e0 01
0E backToSharpOne eC -> backToSharpOne 0E eC
1D findBlank $1 -> temp 1D $1
0& backToSharpOne 0E -> backToSharpOne 0& 0E
e$ replaceWithBlanks 0@ -> backToDFromRight e$ 0@
0& checkCD eD -> checkCD 0& eD
1% backToSharpOne 0D -> backToSharpOne 1% 0D
$X massErase $@ -> eraseE $X $@
1& eraseC $C -> backToStart 1& $X
$1 backToSharpZero @E -> backToSharpZero $1 @E
checkOneD 11 -> 11 checkOneD
$C eraseE 0E -> prepEraseC $C 0E
@# gotoMark 00 -> gotoMark @# 00
$1 forwardToLastD @E -> incD $1 @E
@$ searchOne 10 -> restoreCD @$ 10
$% eraseC @0 -> eraseC $% @B
@B searchNextBit e1 -> searchNextBit @B e1
1# forwardToLastD 0E -> incD 1# 0E
e# prepEraseC 00 -> prepEraseC e# 00
1C prepEraseC @1 -> prepEraseC 1C @1
e% backToSharpZero eD -> backToSharpZero e% eD
0C eraseE @1 -> eraseE 0C @B
1@ backToDFromLeft @0 -> backToDFromLeft 1@ @0
$@ backToSharpZero 10 -> backToSharpZero $@ 10
@C temp 10 -> beginCopying @C 10
0C checkEForZero @B -> stop 0C @B
0# eraseC eC -> backToStart 0# eX
1X copyOne @B -> backToSharpOne 1X @1
$@ backToStart @0 -> backToStart $@ @0
e$ findZero 01 -> beginCopying e$ 01
1% findBlank @0 -> temp 1% @0
eB restoreCD @0 -> restoreCD eB @0
1X eraseE 1E -> prepEraseC 1X 1E
0C backToDFromLeft $& -> backToDFromLeft 0C $&
@C backToSharpZero @1 -> backToSharpZero @C @1
0C copyZero 0B -> backToSharpZero 0C 00
$0 searchZero @0 -> backToDFromLeft $0 @%
00 findZero $1 -> beginCopying 00 $1
1$ backToDFromRight eB -> backToDFromRight 1$ eB
0@ checkCD 10 -> checkCD 0@ 10
00 eraseC $0 -> eraseC 00 $B
$0 findZero $1 -> beginCopying $0 $1
1& backToDFromLeft 1% -> backToDFromLeft 1& 1%
$C searchOne 10 -> restoreCD $C 10
checkCD 1C -> 1C eqCD
0# backToFirstC $1 -> backToFirstC 0# $1
0C backToSharpOne eD -> backToSharpOne 0C eD
1$ initDivider $0 -> initDividerByTwo 1$ $0
e@ gotoLastE 0@ -> dec e@ 0@
$1 backToDFromRight eB -> backToDFromRight $1 eB
$C searchZero e0 -> backToDFromLeft $C e%
$& backToD @0 -> backToD $& @0
1X initDivider e0 -> initDividerByTwo 1X e0
1X checkEForZero $B -> stop 1X $B
e$ backToStart 00 -> backToStart e$ 00
1% searchZero @0 -> backToDFromLeft 1% @%
e1 backToStart $1 -> backToStart e1 $1
e@ findZero @1 -> beginCopying e@ @1
@@ backToDFromRight 11 -> backToDFromRight @@ 11
$$ backToDFromLeft 10 -> backToDFromLeft $$ 10
0@ backToD $0 -> backToD 0@ $0
0# restoreCD 0D -> restoreCD 0# 0D
$@ backToSharpOne $X -> backToSharpOne $@ $X
$# restoreCD e& -> restoreCD $# e1
eD gotoMark e1 -> gotoMark eD e1
0@ searchZero e1 -> restoreCD 0@ e1
$E backToStart 01 -> backToStart $E 01
@0 findZero 01 -> beginCopying @0 01
0C incD @1 -> incD 0C @0
0D nullifier @B -> initDivider 0D @E
@E eraseC $1 -> eraseC @E $B
0% searchOne e0 -> restoreCD 0% e0
1# backToStart $0 -> backToStart 1# $0
0& backToSharpOne $E -> backToSharpOne 0& $E
@# prepEraseC @1 -> prepEraseC @# @1
0D replaceWithBlanks 1@ -> backToDFromRight 0D 1@
e@ checkCD @1 -> checkCD e@ @1
11 findBlank 0B -> FINAL 11 0B
e# searchZero e1 -> restoreCD e# e1
1$ restoreCD @% -> restoreCD 1$ @0
0# gotoMark 11 -> gotoMark 0# 11
@X eraseC @0 -> eraseC @X @B
eX eraseC eC -> backToStart eX eX
0C backToSharpOne $1 -> backToSharpOne 0C $1
$% backToSharpZero 0D -> backToSharpZero $% 0D
0@ backToDFromRight 01 -> backToDFromRight 0@ 01
e@ searchNextBit 00 -> searchNextBit e@ 00
$E copyOne 1B -> backToSharpOne $E 11
1D temp e1 -> beginCopying 1D e1
$$ restoreCD 0% -> restoreCD $$ 00
@B backToSharpOne 0D -> backToSharpOne @B 0D
0@ initDivider 10 -> initDividerByTwo 0@ 10
@B backToDFromLeft eD -> searchNextBit @B eD
$C backToSharpZero 1D -> backToSharpZero $C 1D
0$ initDividerByTwo @0 -> backToD 0$ @1
0& searchNextBit $0 -> searchNextBit 0& $0
@% searchOne $1 -> backToDFromLeft @% $&
0D restoreCD @1 -> restoreCD 0D @1
@% eraseC e1 -> eraseC @% eB
e& restoreCD 1& -> restoreCD e& 11
eC backToDFromLeft eD -> searchNextBit eC eD
1X backToStart 10 -> backToStart 1X 10
1D backToDFromRight @B -> backToDFromRight 1D @B
$& gotoDecC e0 -> gotoDecC $& e0
0# eraseE e1 -> eraseE 0# eB
e0 backToSharpZero @C -> backToSharpZero e0 @C
01 gotoDecC @1 -> gotoDecC 01 @1
eC temp $0 -> beginCopying eC $0
1& findBlank 1B -> FINAL 1& 1B
e# searchNextBit 00 -> searchNextBit e# 00
e& incD 00 -> checkCD e& 01
11 backToSharpZero 1D -> backToSharpZero 11 1D
eX backToD @1 -> backToD eX @1
1B backToSharpZero eX -> backToSharpZero 1B eX
$0 copyOne 1B -> backToSharpOne $0 11
eC gotoMark eE -> gotoDecC eC eE
@@ gotoDecC e0 -> gotoDecC @@ e0
$B searchZero $0 -> backToDFromLeft $B $%
e1 findBlank $0 -> temp e1 $0
e1 restoreCD $0 -> restoreCD e1 $0
@0 eraseC @1 -> eraseC @0 @B
1& backToSharpOne 10 -> backToSharpOne 1& 10
1D searchNextBit $0 -> searchNextBit 1D $0
e$ prepEraseC 1D -> eraseC e$ 1D
e@ findZero $1 -> beginCopying e@ $1
@D backToSharpZero 1D -> backToSharpZero @D 1D
$B backToSharpZero 0X -> backToSharpZero $B 0X
$% backToDFromLeft e0 -> backToDFromLeft $% e0
0C backToSharpOne eE -> backToSharpOne 0C eE
0% backToSharpZero $0 -> backToSharpZero 0% $0
@@ copyOne 1B -> backToSharpOne @@ 11
0E gotoMark 0E -> gotoDecC 0E 0E
1C nullifier 0B -> initDivider 1C 0E
e# gotoDecC 10 -> gotoDecC e# 10
0C backToD $0 -> backToD 0C $0
$0 eraseC e0 -> eraseC $0 eB
$& checkCD e1 -> checkCD $& e1
@0 gotoLastE 1@ -> dec @0 1@
1B backToDFromLeft $& -> backToDFromLeft 1B $&
e@ backToSharpZero 00 -> backToSharpZero e@ 00
0D copyOne $B -> backToSharpOne 0D $1
$% searchOne 10 -> restoreCD $% 10
@E searchNextBit @0 -> searchNextBit @E @0
$0 initDivider 10 -> initDividerByTwo $0 10
1B backToSharpZero 1E -> backToSharpZero 1B 1E
1& findBlank 00 -> temp 1& 00
0% backToDFromLeft $& -> backToDFromLeft 0% $&
1& gotoDecC e1 -> gotoDecC 1& e1
1E beginCopying 0B -> backToStart 1E 0C
0E incD $0 -> checkCD 0E $1
@D backToSharpOne @C -> backToSharpOne @D @C
@D searchZero 00 -> backToDFromLeft @D 0%
1D forwardToLastD 1E -> incD 1D 1E
eC backToDFromLeft @0 -> backToDFromLeft eC @0
@% restoreCD 1D -> restoreCD @% 1D
@E backToFirstC 10 -> backToFirstC @E 10
0C backToSharpOne 1C -> backToSharpOne 0C 1C
$1 searchOne @0 -> restoreCD $1 @0
@$ backToSharpOne @X -> backToSharpOne @$ @X
1$ FINAL -> FINAL 1 FINAL
@# nullifier $B -> initDivider @# $E
@C eraseC $C -> backToStart @C $X
$0 gotoDecC $D -> dec $0 $D
@$ backToSharpOne @E -> backToSharpOne @$ @E
@@ backToSharpZero @1 -> backToSharpZero @@ @1
nullifier @1 -> @0 nullifier
1& incD @0 -> checkCD 1& @1
@X backToDFromRight $B -> backToDFromRight @X $B
1% backToSharpOne $1 -> backToSharpOne 1% $1
@0 backToDFromRight 0B -> backToDFromRight @0 0B
$$ eraseE e0 -> eraseE $$ eB
@1 dec 01 -> gotoMark @1 00
@0 gotoDecC $0 -> gotoDecC @0 $0
@@ eraseE $0 -> eraseE @@ $B
0E prepEraseC e1 -> prepEraseC 0E e1
11 backToDFromLeft $D -> searchNextBit 11 $D
@& backToStart 10 -> backToStart @& 10
$B copyZero eB -> backToSharpZero $B e0
$B backToDFromRight @B -> backToDFromRight $B @B
1X searchOne $1 -> backToDFromLeft 1X $&
$@ searchOne 00 -> restoreCD $@ 00
e& backToSharpZero 1X -> backToSharpZero e& 1X
e0 gotoLastE $@ -> dec e0 $@
$0 goToPlaceForDivider 0B -> backToFirstC $0 0D
@@ findBlank 00 -> temp @@ 00
@1 gotoLastE @@ -> dec @1 @@
1# backToDFromRight $1 -> backToDFromRight 1# $1
1$ backToSharpZero 0X -> backToSharpZero 1$ 0X
1B prepEraseC e1 -> prepEraseC 1B e1
@0 findBlank $0 -> temp @0 $0
$C backToD 01 -> backToD $C 01
e@ eraseC @0 -> eraseC e@ @B
$# gotoMark e1 -> gotoMark $# e1
@X eraseC @1 -> eraseC @X @B
FINAL 1% -> FINAL 1 FINAL
0@ backToDFromLeft 1D -> searchNextBit 0@ 1D
@0 dec $1 -> gotoMark @0 $0
@@ nullifier @B -> initDivider @@ @E
$X gotoMark 00 -> gotoMark $X 00
@C checkCD @0 -> checkCD @C @0
11 findBlank eB -> FINAL 11 eB
e$ initDividerByTwo 00 -> backToD e$ 01
$& massErase @@ -> eraseE $& @@
01 massErase 0@ -> eraseE 01 0@
e& restoreCD 11 -> restoreCD e& 11
1E FINAL -> FINAL 1 FINAL
$B prepEraseC 00 -> prepEraseC $B 00
$X findBlank e1 -> temp $X e1
@% backToDFromRight 1E -> backToDFromRight @% 1E
@% backToDFromLeft 00 -> backToDFromLeft @% 00
$@ restoreCD 0& -> restoreCD $@ 01
0X backToFirstC @1 -> backToFirstC 0X @1
1D eraseE $0 -> eraseE 1D $B
11 backToStart $1 -> backToStart 11 $1
$$ restoreCD 0& -> restoreCD $$ 01
@X dec 00 -> dec @X 01
0B eraseC 10 -> eraseC 0B 1B
0$ searchOne @0 -> restoreCD 0$ @0
0% backToDFromRight @1 -> backToDFromRight 0% @1
@% backToSharpZero $0 -> backToSharpZero @% $0
e0 prepEraseC 10 -> prepEraseC e0 10
$# backToSharpZero 00 -> backToSharpZero $# 00
eE backToDFromLeft $1 -> backToDFromLeft eE $1
@E nullifier eB -> initDivider @E eE
0C temp @1 -> beginCopying 0C @1
0& searchZero $0 -> backToDFromLeft 0& $%
1@ backToD e0 -> backToD 1@ e0
00 searchOne 00 -> restoreCD 00 00
@% backToFirstC $0 -> backToFirstC @% $0
$1 checkCD @0 -> checkCD $1 @0
e$ backToDFromLeft @0 -> backToDFromLeft e$ @0
@% backToSharpZero @X -> backToSharpZero @% @X
eX backToDFromRight 0E -> backToDFromRight eX 0E
00 backToDFromRight $B -> backToDFromRight 00 $B
0C restoreCD $0 -> restoreCD 0C $0
$0 backToStart @1 -> backToStart $0 @1
@@ eraseC 00 -> eraseC @@ 0B
1B backToSharpOne $1 -> backToSharpOne 1B $1
e0 gotoMark $1 -> gotoMark e0 $1
@1 prepEraseC 0D -> eraseC @1 0D
1% goToPlaceForDivider @B -> backToFirstC 1% @D
$X replaceWithBlanks e@ -> backToDFromRight $X e@
1# findBlank e1 -> temp 1# e1
10 checkCD 1D -> checkCD 10 1D
eX checkCD @0 -> checkCD eX @0
0& forwardToLastD @E -> incD 0& @E
0@ searchNextBit $0 -> searchNextBit 0@ $0
$X eraseE $0 -> eraseE $X $B
1D initDividerByTwo e0 -> backToD 1D e1
$C backToSharpZero @0 -> backToSharpZero $C @0
11 backToSharpOne eX -> backToSharpOne 11 eX
$0 gotoMark 1E -> gotoDecC $0 1E
$X findBlank 1B -> FINAL $X 1B
@D backToSharpOne eD -> backToSharpOne @D eD
$# backToDFromLeft 0D -> searchNextBit $# 0D
$E backToSharpOne e1 -> backToSharpOne $E e1
0$ backToSharpZero e1 -> backToSharpZero 0$ e1
$% gotoMark 01 -> gotoMark $% 01
eX searchOne e1 -> backToDFromLeft eX e&
0B gotoMark @1 -> gotoMark 0B @1
@C gotoDecC 11 -> gotoDecC @C 11
e$ backToStart @0 -> backToStart e$ @0
$D checkCD 0D -> checkCD $D 0D
@# backToSharpZero 01 -> backToSharpZero @# 01
e& incD @0 -> checkCD e& @1
@E temp @1 -> beginCopying @E @1
1$ restoreCD @D -> restoreCD 1$ @D
$# temp @0 -> beginCopying $# @0
@$ checkEForZero 1B -> stop @$ 1B
@C backToSharpOne eX -> backToSharpOne @C eX
@% eraseE 10 -> eraseE @% 1B
@E backToFirstC e0 -> backToFirstC @E e0
eX gotoMark 1E -> gotoDecC eX 1E
eX prepEraseC 0D -> eraseC eX 0D
@E backToStart @1 -> backToStart @E @1
@C searchNextBit @1 -> searchNextBit @C @1
e& gotoDecC 01 -> gotoDecC e& 01
$@ dec $1 -> gotoMark $@ $0
0D backToDFromLeft $1 -> backToDFromLeft 0D $1
@D goToPlaceForDivider 0B -> backToFirstC @D 0D
@X gotoDecC 11 -> gotoDecC @X 11
eX backToDFromRight $E -> backToDFromRight eX $E
1X eraseC eC -> backToStart 1X eX
1X massErase $@ -> eraseE 1X $@
0B restoreCD $& -> restoreCD 0B $1
0& backToSharpZero 01 -> backToSharpZero 0& 01
$0 gotoMark $0 -> gotoMark $0 $0
@X findBlank @B -> FINAL @X @B
e1 backToDFromLeft e& -> backToDFromLeft e1 e&
@$ backToSharpOne $D -> backToSharpOne @$ $D
0X checkEForZero 0B -> stop 0X 0B
$1 searchOne e1 -> backToDFromLeft $1 e&
copyZero 01 -> 01 copyZero
e@ temp e0 -> beginCopying e@ e0
e1 restoreCD e0 -> restoreCD e1 e0
1C backToSharpZero @X -> backToSharpZero 1C @X
1# searchZero @1 -> restoreCD 1# @1
$X searchOne @0 -> restoreCD $X @0
@X searchOne @1 -> backToDFromLeft @X @&
$# nullifier eB -> initDivider $# eE
@0 searchOne 01 -> backToDFromLeft @0 0&
$$ dec 00 -> dec $$ 01
1@ backToSharpZero @X -> backToSharpZero 1@ @X
00 goToPlaceForDivider eB -> backToFirstC 00 eD
createCopy eE -> eE gotoLastE
$0 backToStart e0 -> backToStart $0 e0
eB prepEraseC eD -> eraseC eB eD
10 dec e0 -> dec 10 e1
0% backToDFromLeft @D -> searchNextBit 0% @D
eB backToD e0 -> backToD eB e0
$0 backToDFromLeft $1 -> backToDFromLeft $0 $1
e% restoreCD eD -> restoreCD e% eD
@@ initDivider e0 -> initDividerByTwo @@ e0
eC findBlank @0 -> temp eC @0
eB dec $0 -> dec eB $1
$& copyZero 1B -> backToSharpZero $& 10
e0 backToSharpOne eE -> backToSharpOne e0 eE
@@ backToSharpZero @E -> backToSharpZero @@ @E
1E backToD 01 -> backToD 1E 01
$$ searchNextBit e0 -> searchNextBit $$ e0
1D findBlank @1 -> temp 1D @1
0C backToSharpZero e0 -> backToSharpZero 0C e0
1C searchZero @0 -> backToDFromLeft 1C @%
@X prepEraseC 01 -> prepEraseC @X 01
$@ gotoMark e0 -> gotoMark $@ e0
@@ backToDFromLeft e% -> backToDFromLeft @@ e%
eD gotoLastE e@ -> dec eD e@
$@ backToStart 00 -> backToStart $@ 00
@& backToSharpOne 1D -> backToSharpOne @& 1D
1B backToSharpZero $1 -> backToSharpZero 1B $1
$X findZero e1 -> beginCopying $X e1
1% eraseC 00 -> eraseC 1% 0B
0& initDivider @0 -> initDividerByTwo 0& @0
$C backToStart e1 -> backToStart $C e1
1# temp e1 -> beginCopying 1# e1
$& backToDFromLeft @0 -> backToDFromLeft $& @0
0% backToDFromLeft $% -> backToDFromLeft 0% $%
@B copyOne 0B -> backToSharpOne @B 01
@B prepEraseC 1D -> eraseC @B 1D
0D replaceWithBlanks e@ -> backToDFromRight 0D e@
$D gotoLastE $@ -> dec $D $@
$% goToPlaceForDivider @B -> backToFirstC $% @D
@C backToSharpZero @C -> backToSharpZero @C @C
e@ temp 10 -> beginCopying e@ 10
0@ backToFirstC 11 -> backToFirstC 0@ 11
$X backToSharpZero @D -> backToSharpZero $X @D
$$ backToFirstC 11 -> backToFirstC $$ 11
e& backToSharpOne $C -> backToSharpOne e& $C
1X backToFirstC @0 -> backToFirstC 1X @0
1# restoreCD @0 -> restoreCD 1# @0
0@ searchOne 00 -> restoreCD 0@ 00
@% gotoDecC 11 -> gotoDecC @% 11
01 restoreCD @% -> restoreCD 01 @0
1E backToStart @0 -> backToStart 1E @0
1B searchZero 11 -> restoreCD 1B 11
@& restoreCD e1 -> restoreCD @& e1
$@ nullifier eB -> initDivider $@ eE
$& incD e0 -> checkCD $& e1
$% backToStart e0 -> backToStart $% e0
$X dec @0 -> dec $X @1
e$ temp e1 -> beginCopying e$ e1
eqCD $0 -> $% checkZeroD
1B checkEForZero 1B -> stop 1B 1B
01 checkCD $1 -> checkCD 01 $1
e@ backToSharpOne @0 -> backToSharpOne e@ @0
@X eraseC 01 -> eraseC @X 0B
e$ initDivider 00 -> initDividerByTwo e$ 00
@@ backToSharpZero @0 -> backToSharpZero @@ @0
e& backToSharpOne 0D -> backToSharpOne e& 0D
eB copyOne eB -> backToSharpOne eB e1
1X eraseC 10 -> eraseC 1X 1B
0E goToPlaceForDivider 0B -> backToFirstC 0E 0D
@C eraseE @1 -> eraseE @C @B
backToFirstC 1C -> 1C createCopy
eB gotoDecC eD -> dec eB eD
$X checkCD e0 -> checkCD $X e0
eX backToD e0 -> backToD eX e0
1B incD 00 -> checkCD 1B 01
$@ backToSharpZero e0 -> backToSharpZero $@ e0
@E initDivider e0 -> initDividerByTwo @E e0
$B backToSharpZero 10 -> backToSharpZero $B 10
$C temp e1 -> beginCopying $C e1
$# restoreCD 1& -> restoreCD $# 11
$% gotoDecC @D -> dec $% @D
@$ restoreCD 1& -> restoreCD @$ 11
1E eraseC @C -> backToStart 1E @X
@E backToDFromLeft $% -> backToDFromLeft @E $%
$& prepEraseC 01 -> prepEraseC $& 01
@@ incD 10 -> checkCD @@ 11
$0 backToSharpZero 1X -> backToSharpZero $0 1X
@E backToFirstC 00 -> backToFirstC @E 00
0$ gotoDecC $0 -> gotoDecC 0$ $0
1B copyOne eB -> backToSharpOne 1B e1
@1 findBlank e0 -> temp @1 e0
@$ checkCD 00 -> checkCD @$ 00
e% backToDFromLeft $% -> backToDFromLeft e% $%
$& backToSharpZero $0 -> backToSharpZero $& $0
@# searchZero @0 -> backToDFromLeft @# @%
@C nullifier eB -> initDivider @C eE
$$ backToDFromLeft eD -> searchNextBit $$ eD
@& eraseE e1 -> eraseE @& eB
$D backToD @0 -> backToD $D @0
0% searchOne 00 -> restoreCD 0% 00
0@ backToD $1 -> backToD 0@ $1
@# backToSharpOne $0 -> backToSharpOne @# $0
1# gotoDecC eD -> dec 1# eD
11 eraseE 10 -> eraseE 11 1B
$& incD 10 -> checkCD $& 11
@@ searchZero 11 -> restoreCD @@ 11
e1 backToD 11 -> backToD e1 11
0@ backToDFromRight $1 -> backToDFromRight 0@ $1
@% backToDFromLeft $0 -> backToDFromLeft @% $0
0D backToStart $0 -> backToStart 0D $0
eE nullifier @B -> initDivider eE @E
@D searchOne e0 -> restoreCD @D e0
eC findZero @1 -> beginCopying eC @1
0D temp e0 -> beginCopying 0D e0
$C backToDFromLeft $1 -> backToDFromLeft $C $1
eC replaceWithBlanks 0@ -> backToDFromRight eC 0@
eE prepEraseC $0 -> prepEraseC eE $0
10 FINAL -> FINAL 1 FINAL
@% incD 01 -> incD @% 00
eE eraseC @1 -> eraseC eE @B
eB searchNextBit $1 -> searchNextBit eB $1
0E checkEForZero $B -> stop 0E $B
$& findZero $1 -> beginCopying $& $1
0E massErase 0@ -> eraseE 0E 0@
$C eraseE e0 -> eraseE $C eB
eE restoreCD $& -> restoreCD eE $1
10 gotoMark 00 -> gotoMark 10 00
1E backToDFromRight eE -> backToDFromRight 1E eE
@@ initDivider 10 -> initDividerByTwo @@ 10
$% gotoDecC e1 -> gotoDecC $% e1
nullifier 10 -> 10 nullifier
eE checkCD e0 -> checkCD eE e0
$# searchZero 01 -> restoreCD $# 01
11 restoreCD e% -> restoreCD 11 e0
eX gotoDecC 0D -> dec eX 0D
11 searchNextBit 10 -> searchNextBit 11 10
0X backToStart 00 -> backToStart 0X 00
0# backToSharpOne @0 -> backToSharpOne 0# @0
$1 gotoDecC 00 -> gotoDecC $1 00
$% searchOne 01 -> backToDFromLeft $% 0&
10 findBlank $0 -> temp 10 $0
$# backToSharpZero eC -> backToSharpZero $# eC
eD backToFirstC e1 -> backToFirstC eD e1
@X checkCD 01 -> checkCD @X 01
$# findBlank @0 -> temp $# @0
00 dec 10 -> dec 00 11
e& checkCD 11 -> checkCD e& 11
0B backToSharpZero $X -> backToSharpZero 0B $X
10 dec $1 -> gotoMark 10 $0
0# gotoDecC $D -> dec 0# $D
$% backToSharpOne 1D -> backToSharpOne $% 1D
$D gotoMark @0 -> gotoMark $D @0
$B findBlank 1B -> FINAL $B 1B
$E backToSharpOne $E -> backToSharpOne $E $E
1C backToSharpZero @E -> backToSharpZero 1C @E
0# eraseC $1 -> eraseC 0# $B
eD incD @1 -> incD eD @0
1@ eraseC $0 -> eraseC 1@ $B
$D checkCD e1 -> checkCD $D e1
e1 forwardToLastD @E -> incD e1 @E
$& findZero @1 -> beginCopying $& @1
0& replaceWithBlanks e@ -> backToDFromRight 0& e@
e% goToPlaceForDivider @B -> backToFirstC e% @D
0& eraseE 10 -> eraseE 0& 1B
e# eraseE e0 -> eraseE e# eB
1$ eraseC 0C -> backToStart 1$ 0X
$D gotoMark @1 -> gotoMark $D @1
@$ nullifier @B -> initDivider @$ @E
@& backToFirstC $0 -> backToFirstC @& $0
e# searchNextBit 01 -> searchNextBit e# 01
1X initDivider 00 -> initDividerByTwo 1X 00
$$ restoreCD 1% -> restoreCD $$ 10
@X temp 10 -> beginCopying @X 10
1D backToSharpZero 1X -> backToSharpZero 1D 1X
@# backToSharpOne 0C -> backToSharpOne @# 0C
@D checkCD e0 -> checkCD @D e0
@@ backToDFromLeft e& -> backToDFromLeft @@ e&
@C backToSharpZero @X -> backToSharpZero @C @X
0& searchOne e0 -> restoreCD 0& e0
@@ nullifier $B -> initDivider @@ $E
e# prepEraseC e1 -> prepEraseC e# e1
1# eraseC @C -> backToStart 1# @X
e@ backToSharpZero $0 -> backToSharpZero e@ $0
0% copyZero $B -> backToSharpZero 0% $0
10 copyZero eB -> backToSharpZero 10 e0
1D forwardToLastD eE -> incD 1D eE
0@ gotoMark $0 -> gotoMark 0@ $0
01 initDivider 10 -> initDividerByTwo 01 10
1E beginCopying @B -> backToStart 1E @C
@# backToSharpZero @D -> backToSharpZero @# @D
1E prepEraseC $0 -> prepEraseC 1E $0
$& backToSharpOne $C -> backToSharpOne $& $C
$@ backToSharpZero eX -> backToSharpZero $@ eX
e# searchZero e0 -> backToDFromLeft e# e%
@E searchOne $1 -> backToDFromLeft @E $&
eD backToSharpOne eX -> backToSharpOne eD eX
0% searchNextBit 11 -> searchNextBit 0% 11
@@ checkCD 0D -> checkCD @@ 0D
@E backToSharpZero $1 -> backToSharpZero @E $1
00 restoreCD @1 -> restoreCD 00 @1
@$ nullifier eB -> initDivider @$ eE
eX gotoMark eE -> gotoDecC eX eE
e$ backToDFromLeft 00 -> backToDFromLeft e$ 00
gotoMark $C -> $C ifZero
1E eraseC 01 -> eraseC 1E 0B
$E findBlank 11 -> temp $E 11
0% backToDFromRight e1 -> backToDFromRight 0% e1
e@ checkEForZero 1B -> stop e@ 1B
1$ searchZero @0 -> backToDFromLeft 1$ @%
0D massErase 0@ -> eraseE 0D 0@
eE backToSharpOne 0C -> backToSharpOne eE 0C
$# checkEForZero 0B -> stop $# 0B
$% restoreCD $D -> restoreCD $% $D
01 findBlank 10 -> temp 01 10
eB searchOne $0 -> restoreCD eB $0
0% backToFirstC 10 -> backToFirstC 0% 10
$0 backToSharpOne 1E -> backToSharpOne $0 1E
eD checkCD $D -> checkCD eD $D
@X backToDFromLeft 0% -> backToDFromLeft @X 0%
0& nullifier 1B -> initDivider 0& 1E
00 prepEraseC 0D -> eraseC 00 0D
0% searchNextBit 01 -> searchNextBit 0% 01
$% copyZero $B -> backToSharpZero $% $0
$& gotoMark @1 -> gotoMark $& @1
1& backToD $0 -> backToD 1& $0
1& eraseC 0C -> backToStart 1& 0X
1D backToSharpOne $C -> backToSharpOne 1D $C
1B incD 01 -> incD 1B 00
@C copyZero $B -> backToSharpZero @C $0
@C searchZero 11 -> restoreCD @C 11
1B backToFirstC 00 -> backToFirstC 1B 00
eX copyZero 0B -> backToSharpZero eX 00
e@ copyZero $B -> backToSharpZero e@ $0
e& backToSharpZero $0 -> backToSharpZero e& $0
$$ incD $0 -> checkCD $$ $1
forwardToLastD @0 -> @0 forwardToLastD
@& backToSharpZero 1D -> backToSharpZero @& 1D
1D eraseE 10 -> eraseE 1D 1B
$& incD 00 -> checkCD $& 01
@B eraseE eE -> prepEraseC @B eE
$D massErase @@ -> eraseE $D @@
0X restoreCD 0% -> restoreCD 0X 00
1B prepEraseC 1D -> eraseC 1B 1D
eB eraseC e0 -> eraseC eB eB
@0 backToSharpOne 0X -> backToSharpOne @0 0X
1C gotoDecC 10 -> gotoDecC 1C 10
e0 findBlank @1 -> temp e0 @1
1@ gotoDecC @D -> dec 1@ @D
@D backToDFromLeft 10 -> backToDFromLeft @D 10
e% dec 01 -> gotoMark e% 00
1% checkEForZero 1B -> stop 1% 1B
1$ eraseC 11 -> eraseC 1$ 1B
@B dec 00 -> dec @B 01
$& nullifier eB -> initDivider $& eE
FINAL 1E -> FINAL 1 FINAL
0$ backToSharpOne @D -> backToSharpOne 0$ @D
@0 goToPlaceForDivider 0B -> backToFirstC @0 0D
$B replaceWithBlanks 0@ -> backToDFromRight $B 0@
1& backToDFromRight 0B -> backToDFromRight 1& 0B
01 gotoDecC 00 -> gotoDecC 01 00
beginCopying @1 -> @1 beginCopying
1X backToSharpZero $X -> backToSharpZero 1X $X
e$ checkCD @1 -> checkCD e$ @1
e1 eraseE e0 -> eraseE e1 eB
@X backToSharpZero 11 -> backToSharpZero @X 11
eD backToDFromRight 1E -> backToDFromRight eD 1E
0X searchNextBit 10 -> searchNextBit 0X 10
1E incD e0 -> checkCD 1E e1
eD backToDFromLeft 01 -> backToDFromLeft eD 01
1B restoreCD $& -> restoreCD 1B $1
e1 initDividerByTwo e0 -> backToD e1 e1
1D copyZero @B -> backToSharpZero 1D @0
@X searchZero $0 -> backToDFromLeft @X $%
eC restoreCD 00 -> restoreCD eC 00
$B backToSharpOne @D -> backToSharpOne $B @D
@X temp @0 -> beginCopying @X @0
1# backToDFromLeft $% -> backToDFromLeft 1# $%
@D backToDFromRight @B -> backToDFromRight @D @B
eD findZero 01 -> beginCopying eD 01
e# initDividerByTwo 10 -> backToD e# 11
@$ gotoDecC $0 -> gotoDecC @$ $0
1# searchZero e1 -> restoreCD 1# e1
0& backToSharpOne 0X -> backToSharpOne 0& 0X
@X backToSharpOne 1X -> backToSharpOne @X 1X
1$ findBlank @1 -> temp 1$ @1
1X prepEraseC 00 -> prepEraseC 1X 00
@$ backToD $0 -> backToD @$ $0
0X findBlank e1 -> temp 0X e1
1X restoreCD @& -> restoreCD 1X @1
@0 backToSharpZero 0X -> backToSharpZero @0 0X
0D findZero 01 -> beginCopying 0D 01
1D prepEraseC eD -> eraseC 1D eD
$E backToSharpZero $1 -> backToSharpZero $E $1
01 backToDFromLeft 11 -> backToDFromLeft 01 11
1# gotoMark $1 -> gotoMark 1# $1
00 eraseE e1 -> eraseE 00 eB
$X prepEraseC 00 -> prepEraseC $X 00
eB dec @0 -> dec eB @1
11 findBlank 10 -> temp 11 10
$D gotoDecC @D -> dec $D @D
0@ restoreCD 00 -> restoreCD 0@ 00
0D backToSharpZero $0 -> backToSharpZero 0D $0
@% incD @0 -> checkCD @% @1
$% checkCD e0 -> checkCD $% e0
$# backToSharpZero @E -> backToSharpZero $# @E
e0 checkCD 01 -> checkCD e0 01
1C backToDFromLeft @1 -> backToDFromLeft 1C @1
$& backToDFromRight 1B -> backToDFromRight $& 1B
0# beginCopying 0B -> backToStart 0# 0C
e& findBlank e0 -> temp e& e0
01 beginCopying 1B -> backToStart 01 1C
1$ backToStart 11 -> backToStart 1$ 11
1$ restoreCD 01 -> restoreCD 1$ 01
e1 backToD @0 -> backToD e1 @0
$# backToDFromRight e1 -> backToDFromRight $# e1
0% backToSharpZero 10 -> backToSharpZero 0% 10
1% searchOne 01 -> backToDFromLeft 1% 0&
e1 restoreCD e& -> restoreCD e1 e1
1B backToSharpOne eD -> backToSharpOne 1B eD
1E searchZero 10 -> backToDFromLeft 1E 1%
$& gotoDecC eD -> dec $& eD
e& backToSharpZero @D -> backToSharpZero e& @D
$# backToSharpOne $X -> backToSharpOne $# $X
0E beginCopying eB -> backToStart 0E eC
@% gotoDecC $0 -> gotoDecC @% $0
$B backToSharpOne @1 -> backToSharpOne $B @1
$E findBlank eB -> FINAL $E eB
1# backToSharpZero @D -> backToSharpZero 1# @D
0% backToDFromRight 0B -> backToDFromRight 0% 0B
$B backToD e0 -> backToD $B e0
$$ gotoLastE 0@ -> dec $$ 0@
e% backToFirstC 01 -> backToFirstC e% 01
0$ gotoMark 1E -> gotoDecC 0$ 1E
@C backToSharpOne @0 -> backToSharpOne @C @0
$E incD @1 -> incD $E @0
@& initDividerByTwo $0 -> backToD @& $1
1D searchZero $0 -> backToDFromLeft 1D $%
0& backToSharpZero eD -> backToSharpZero 0& eD
1E findBlank 00 -> temp 1E 00
e% backToDFromLeft 0D -> searchNextBit e% 0D
$B forwardToLastD 0E -> incD $B 0E
$B checkEForZero eB -> stop $B eB
$% backToSharpOne 00 -> backToSharpOne $% 00
@# eraseE @E -> prepEraseC @# @E
01 findBlank e0 -> temp 01 e0
$1 eraseC $0 -> eraseC $1 $B
$% goToPlaceForDivider $B -> backToFirstC $% $D
@E findBlank 0B -> FINAL @E 0B
1B nullifier eB -> initDivider 1B eE
eB gotoMark $1 -> gotoMark eB $1
0C backToStart 10 -> backToStart 0C 10
e0 backToSharpZero $X -> backToSharpZero e0 $X
1E restoreCD $D -> restoreCD 1E $D
$% searchZero @0 -> backToDFromLeft $% @%
11 initDividerByTwo 10 -> backToD 11 11
$& forwardToLastD @E -> incD $& @E
$1 eraseE e0 -> eraseE $1 eB
@C gotoLastE $@ -> dec @C $@
0& backToSharpZero $C -> backToSharpZero 0& $C
0& eraseE @0 -> eraseE 0& @B
1D eraseE 11 -> eraseE 1D 1B
01 backToDFromRight @0 -> backToDFromRight 01 @0
$0 gotoLastE 0@ -> dec $0 0@
0D temp $1 -> beginCopying 0D $1
00 incD 01 -> incD 00 00
e& incD 01 -> incD e& 00
e0 goToPlaceForDivider @B -> backToFirstC e0 @D
@$ eraseC 1C -> backToStart @$ 1X
1X backToD 00 -> backToD 1X 00
@E massErase 0@ -> eraseE @E 0@
eB backToFirstC 00 -> backToFirstC eB 00
$# searchNextBit e1 -> searchNextBit $# e1
$B dec @0 -> dec $B @1
eC backToSharpZero eX -> backToSharpZero eC eX
0# gotoMark $E -> gotoDecC 0# $E
01 gotoLastE 0@ -> dec 01 0@
e0 backToDFromLeft eD -> searchNextBit e0 eD
@@ backToSharpOne $E -> backToSharpOne @@ $E
$$ backToDFromLeft $D -> searchNextBit $$ $D
$$ temp 11 -> beginCopying $$ 11
1X copyOne 1B -> backToSharpOne 1X 11
1C gotoDecC @1 -> gotoDecC 1C @1
1% eraseC @0 -> eraseC 1% @B
$D backToDFromRight 00 -> backToDFromRight $D 00
eB eraseE 1E -> prepEraseC eB 1E
e1 massErase 0@ -> eraseE e1 0@
$D backToSharpOne $C -> backToSharpOne $D $C
e1 FINAL -> FINAL e FINAL
@B gotoMark @E -> gotoDecC @B @E
$D beginCopying @B -> backToStart $D @C
eE backToSharpOne 00 -> backToSharpOne eE 00
e# gotoMark $0 -> gotoMark e# $0
1C temp e0 -> beginCopying 1C e0
$0 initDividerByTwo e0 -> backToD $0 e1
01 backToDFromLeft 1& -> backToDFromLeft 01 1&
eC backToSharpZero @0 -> backToSharpZero eC @0
0C gotoDecC 1D -> dec 0C 1D
$$ backToSharpZero eD -> backToSharpZero $$ eD
@1 gotoLastE 0@ -> dec @1 0@
@C backToDFromRight @0 -> backToDFromRight @C @0
$X backToD 01 -> backToD $X 01
1& gotoLastE $@ -> dec 1& $@
e0 checkEForZero 1B -> stop e0 1B
$@ searchOne e0 -> restoreCD $@ e0
11 prepEraseC $0 -> prepEraseC 11 $0
eE backToFirstC 10 -> backToFirstC eE 10
eB backToSharpOne 1C -> backToSharpOne eB 1C
@D massErase $@ -> eraseE @D $@
$$ searchZero @0 -> backToDFromLeft $$ @%
eB gotoDecC e0 -> gotoDecC eB e0
1@ backToSharpOne 0E -> backToSharpOne 1@ 0E
e% backToDFromRight $B -> backToDFromRight e% $B
$0 gotoMark 11 -> gotoMark $0 11
$X backToFirstC $1 -> backToFirstC $X $1
checkEForZero e1 -> e1 massErase
@& backToSharpOne $1 -> backToSharpOne @& $1
1X eraseC 00 -> eraseC 1X 0B
@B backToSharpOne 0X -> backToSharpOne @B 0X
1D temp 11 -> beginCopying 1D 11
1@ backToFirstC 11 -> backToFirstC 1@ 11
$C restoreCD e% -> restoreCD $C e0
$# backToStart $1 -> backToStart $# $1
0C restoreCD 0& -> restoreCD 0C 01
$0 replaceWithBlanks 0@ -> backToDFromRight $0 0@
e@ restoreCD 00 -> restoreCD e@ 00
1& backToSharpZero $C -> backToSharpZero 1& $C
@1 searchNextBit $1 -> searchNextBit @1 $1
eX gotoMark @E -> gotoDecC eX @E
1$ backToDFromLeft 0& -> backToDFromLeft 1$ 0&
$C searchOne @1 -> backToDFromLeft $C @&
$% backToSharpOne 0X -> backToSharpOne $% 0X
$@ eraseC 11 -> eraseC $@ 1B
@$ eraseE 0E -> prepEraseC @$ 0E
eD backToDFromLeft $% -> backToDFromLeft eD $%
@1 backToSharpZero 1X -> backToSharpZero @1 1X
$@ backToSharpOne 00 -> backToSharpOne $@ 00
$& findBlank 11 -> temp $& 11
e% initDivider @0 -> initDividerByTwo e% @0
eE nullifier $B -> initDivider eE $E
1$ gotoDecC 1D -> dec 1$ 1D
10 backToSharpZero eD -> backToSharpZero 10 eD
0E backToDFromLeft 1D -> searchNextBit 0E 1D
0# incD 11 -> incD 0# 10
1C eraseE 1E -> prepEraseC 1C 1E
0# searchZero e1 -> restoreCD 0# e1
$B backToDFromRight 0E -> backToDFromRight $B 0E
e$ backToSharpOne $C -> backToSharpOne e$ $C
eD copyZero @B -> backToSharpZero eD @0
1$ beginCopying eB -> backToStart 1$ eC
@X backToD @1 -> backToD @X @1
$E backToSharpOne @X -> backToSharpOne $E @X
1B eraseC 00 -> eraseC 1B 0B
e0 backToDFromLeft e1 -> backToDFromLeft e0 e1
e$ eraseE eE -> prepEraseC e$ eE
@E backToDFromLeft e1 -> backToDFromLeft @E e1
e1 temp 11 -> beginCopying e1 11
@D nullifier 0B -> initDivider @D 0E
$# eraseC @0 -> eraseC $# @B
00 prepEraseC @1 -> prepEraseC 00 @1
0C backToDFromLeft 1& -> backToDFromLeft 0C 1&
10 backToSharpOne eC -> backToSharpOne 10 eC
00 eraseC 1C -> backToStart 00 1X
@# backToSharpZero 0X -> backToSharpZero @# 0X
goToPlaceForDivider e1 -> e1 goToPlaceForDivider
@B backToSharpOne 11 -> backToSharpOne @B 11
$C restoreCD 0D -> restoreCD $C 0D
0& backToDFromRight 00 -> backToDFromRight 0& 00
$$ checkCD @D -> checkCD $$ @D
0D backToSharpZero eC -> backToSharpZero 0D eC
0& backToSharpOne e0 -> backToSharpOne 0& e0
0E restoreCD 1& -> restoreCD 0E 11
$B searchOne e0 -> restoreCD $B e0
$@ prepEraseC e0 -> prepEraseC $@ e0
1B restoreCD @& -> restoreCD 1B @1
1$ searchOne $1 -> backToDFromLeft 1$ $&
eD backToD $1 -> backToD eD $1
e# temp @1 -> beginCopying e# @1
$& backToDFromLeft 0D -> searchNextBit $& 0D
$0 checkEForZero 0B -> stop $0 0B
0$ massErase 1@ -> eraseE 0$ 1@
$@ backToDFromLeft 0& -> backToDFromLeft $@ 0&
e0 findBlank 11 -> temp e0 11
e0 backToSharpZero 1C -> backToSharpZero e0 1C
0# gotoMark 10 -> gotoMark 0# 10
@X backToFirstC e0 -> backToFirstC @X e0
e& nullifier 1B -> initDivider e& 1E
10 checkCD @0 -> checkCD 10 @0
$B restoreCD 0D -> restoreCD $B 0D
@# forwardToLastD eE -> incD @# eE
e& checkEForZero 0B -> stop e& 0B
1E backToSharpOne 0X -> backToSharpOne 1E 0X
1E gotoMark @E -> gotoDecC 1E @E
0X prepEraseC 1D -> eraseC 0X 1D
$B searchOne @0 -> restoreCD $B @0
e1 massErase @@ -> eraseE e1 @@
@B gotoLastE 0@ -> dec @B 0@
0& copyOne 0B -> backToSharpOne 0& 01
nullifier 00 -> 00 nullifier
eE nullifier 0B -> initDivider eE 0E
$C backToD 10 -> backToD $C 10
$0 gotoMark $E -> gotoDecC $0 $E
10 temp $0 -> beginCopying 10 $0
eC goToPlaceForDivider 0B -> backToFirstC eC 0D
eD gotoDecC 1D -> dec eD 1D
$$ backToD @1 -> backToD $$ @1
1# nullifier 1B -> initDivider 1# 1E
0D prepEraseC @1 -> prepEraseC 0D @1
e1 searchZero 01 -> restoreCD e1 01
0# searchOne 11 -> backToDFromLeft 0# 1&
01 backToDFromLeft 01 -> backToDFromLeft 01 01
e0 backToDFromRight 1B -> backToDFromRight e0 1B
@$ backToSharpZero @D -> backToSharpZero @$ @D
eX backToStart 00 -> backToStart eX 00
@X eraseE e0 -> eraseE @X eB
eE backToFirstC 11 -> backToFirstC eE 11
0# temp 10 -> beginCopying 0# 10
$0 backToSharpZero e0 -> backToSharpZero $0 e0
1X initDividerByTwo @0 -> backToD 1X @1
1# backToSharpOne 0X -> backToSharpOne 1# 0X
01 prepEraseC e1 -> prepEraseC 01 e1
01 searchNextBit e0 -> searchNextBit 01 e0
$$ gotoDecC 01 -> gotoDecC $$ 01
1E eraseE $E -> prepEraseC 1E $E
backToDAfterInc $0 -> $0 backToDAfterInc
1X initDivider $0 -> initDividerByTwo 1X $0
nullifier $0 -> $0 nullifier
$E dec 10 -> dec $E 11
10 checkCD $0 -> checkCD 10 $0
$B backToD 00 -> backToD $B 00
$1 findZero $1 -> beginCopying $1 $1
0% findZero $1 -> beginCopying 0% $1
0E findBlank eB -> FINAL 0E eB
$C gotoMark @0 -> gotoMark $C @0
$B eraseE $1 -> eraseE $B $B
1C initDividerByTwo 10 -> backToD 1C 11
1C backToDFromLeft 1& -> backToDFromLeft 1C 1&
@D backToDFromLeft $0 -> backToDFromLeft @D $0
1# backToDFromLeft e0 -> backToDFromLeft 1# e0
$$ copyZero @B -> backToSharpZero $$ @0
1@ backToDFromLeft @1 -> backToDFromLeft 1@ @1
@D gotoDecC e0 -> gotoDecC @D e0
@D findZero $1 -> beginCopying @D $1
$# prepEraseC 10 -> prepEraseC $# 10
@& eraseC eC -> backToStart @& eX
$E backToSharpOne $1 -> backToSharpOne $E $1
1$ restoreCD @0 -> restoreCD 1$ @0
@E eraseE 1E -> prepEraseC @E 1E
$$ backToDFromRight $1 -> backToDFromRight $$ $1
1C restoreCD e% -> restoreCD 1C e0
$& searchZero 11 -> restoreCD $& 11
0$ backToSharpOne eC -> backToSharpOne 0$ eC
$% backToSharpZero eD -> backToSharpZero $% eD
eX backToSharpZero 10 -> backToSharpZero eX 10
10 gotoMark $0 -> gotoMark 10 $0
1& findBlank $0 -> temp 1& $0
@& backToSharpZero eX -> backToSharpZero @& eX
10 gotoDecC 0D -> dec 10 0D
@@ eraseC @0 -> eraseC @@ @B
1X backToSharpZero $D -> backToSharpZero 1X $D
$@ forwardToLastD 0E -> incD $@ 0E
0C backToStart $1 -> backToStart 0C $1
e1 findZero @1 -> beginCopying e1 @1
$@ goToPlaceForDivider @B -> backToFirstC $@ @D
nullifier $1 -> $0 nullifier
eB eraseE @1 -> eraseE eB @B
0& backToSharpZero eE -> backToSharpZero 0& eE
e& restoreCD $& -> restoreCD e& $1
1E backToSharpZero @D -> backToSharpZero 1E @D
11 backToDFromRight e0 -> backToDFromRight 11 e0
0$ nullifier eB -> initDivider 0$ eE
@C backToFirstC 10 -> backToFirstC @C 10
e$ checkEForZero eB -> stop e$ eB
$@ initDivider @0 -> initDividerByTwo $@ @0
1B restoreCD e& -> restoreCD 1B e1
e@ temp @0 -> beginCopying e@ @0
checkEForZero $1 -> $1 massErase
@# temp e1 -> beginCopying @# e1
@E backToSharpZero @C -> backToSharpZero @E @C
0D eraseE $1 -> eraseE 0D $B
@@ backToSharpZero eX -> backToSharpZero @@ eX
1# restoreCD $D -> restoreCD 1# $D
0E backToStart 10 -> backToStart 0E 10
e@ gotoMark 01 -> gotoMark e@ 01
@B dec 01 -> gotoMark @B 00
@$ findBlank e0 -> temp @$ e0
eX searchNextBit @1 -> searchNextBit eX @1
eC replaceWithBlanks e@ -> backToDFromRight eC e@
@0 searchNextBit 01 -> searchNextBit @0 01
0C backToDFromLeft eD -> searchNextBit 0C eD
11 backToDFromLeft @D -> searchNextBit 11 @D
$$ restoreCD @& -> restoreCD $$ @1
eX checkCD 01 -> checkCD eX 01
$@ goToPlaceForDivider 1B -> backToFirstC $@ 1D
1% prepEraseC @1 -> prepEraseC 1% @1
@E backToStart $0 -> backToStart @E $0
@@ dec 10 -> dec @@ 11
$1 backToSharpOne @1 -> backToSharpOne $1 @1
1B backToDFromRight 01 -> backToDFromRight 1B 01
e0 backToDFromRight @1 -> backToDFromRight e0 @1
1D searchOne e0 -> restoreCD 1D e0
@0 backToD 11 -> backToD @0 11
@0 backToSharpOne 11 -> backToSharpOne @0 11
e@ incD 00 -> checkCD e@ 01
0D eraseE 1E -> prepEraseC 0D 1E
e& checkCD e0 -> checkCD e& e0
0% backToSharpOne $E -> backToSharpOne 0% $E
e$ backToDFromLeft 0D -> searchNextBit e$ 0D
$& eraseE @0 -> eraseE $& @B
e1 backToSharpOne 10 -> backToSharpOne e1 10
0C findBlank 01 -> temp 0C 01
@& backToDFromRight $0 -> backToDFromRight @& $0
0C gotoMark 1E -> gotoDecC 0C 1E
1D backToSharpOne eE -> backToSharpOne 1D eE
$0 checkCD $D -> checkCD $0 $D
1D gotoMark @E -> gotoDecC 1D @E
$& backToDFromRight @1 -> backToDFromRight $& @1
$0 backToSharpOne eC -> backToSharpOne $0 eC
@# backToSharpOne eC -> backToSharpOne @# eC
@& backToSharpOne eD -> backToSharpOne @& eD
1$ prepEraseC $D -> eraseC 1$ $D
1$ gotoMark e0 -> gotoMark 1$ e0
0# restoreCD $D -> restoreCD 0# $D
00 backToStart 01 -> backToStart 00 01
0% eraseE 01 -> eraseE 0% 0B
1X restoreCD @% -> restoreCD 1X @0
@C gotoDecC 01 -> gotoDecC @C 01
0& checkCD 01 -> checkCD 0& 01
$0 restoreCD $% -> restoreCD $0 $0
eC initDividerByTwo 10 -> backToD eC 11
00 backToSharpOne eD -> backToSharpOne 00 eD
1% gotoMark 11 -> gotoMark 1% 11
@# restoreCD 0& -> restoreCD @# 01
0# initDivider $0 -> initDividerByTwo 0# $0
e% prepEraseC e1 -> prepEraseC e% e1
e# dec $1 -> gotoMark e# $0
backToSharpOne 1# -> 11 createCopy
@B backToDFromLeft 1% -> backToDFromLeft @B 1%
$D backToFirstC $1 -> backToFirstC $D $1
$C gotoLastE 1@ -> dec $C 1@
@B findBlank $B -> FINAL @B $B
@D searchOne $1 -> backToDFromLeft @D $&
$E eraseE 11 -> eraseE $E 1B
10 incD @1 -> incD 10 @0
eD restoreCD $0 -> restoreCD eD $0
$# backToD 01 -> backToD $# 01
0C gotoLastE $@ -> dec 0C $@
e1 dec 01 -> gotoMark e1 00
e0 replaceWithBlanks 1@ -> backToDFromRight e0 1@
00 searchNextBit $0 -> searchNextBit 00 $0
10 searchZero @0 -> backToDFromLeft 10 @%
e% incD 10 -> checkCD e% 11
1% eraseE $1 -> eraseE 1% $B
@0 backToStart @0 -> backToStart @0 @0
1@ backToD 01 -> backToD 1@ 01
$@ initDividerByTwo @0 -> backToD $@ @1
e$ eraseC e1 -> eraseC e$ eB
eX gotoDecC 10 -> gotoDecC eX 10
01 searchZero @0 -> backToDFromLeft 01 @%
eE backToDFromLeft @& -> backToDFromLeft eE @&
eD checkCD 00 -> checkCD eD 00
eE backToStart e0 -> backToStart eE e0
$1 findZero e1 -> beginCopying $1 e1
$% backToSharpOne eE -> backToSharpOne $% eE
$E findBlank $1 -> temp $E $1
1X goToPlaceForDivider 0B -> backToFirstC 1X 0D
11 backToD $0 -> backToD 11 $0
0B checkCD $0 -> checkCD 0B $0
$E gotoMark @0 -> gotoMark $E @0
@B backToFirstC @0 -> backToFirstC @B @0
01 backToDFromLeft 1D -> searchNextBit 01 1D
10 searchNextBit $0 -> searchNextBit 10 $0
@$ initDivider 10 -> initDividerByTwo @$ 10
1E findZero 01 -> beginCopying 1E 01
e# incD 00 -> checkCD e# 01
1% backToDFromLeft 10 -> backToDFromLeft 1% 10
1% temp @1 -> beginCopying 1% @1
1$ backToSharpZero @1 -> backToSharpZero 1$ @1
$X checkCD $0 -> checkCD $X $0
0# backToDFromRight 0B -> backToDFromRight 0# 0B
00 gotoMark 10 -> gotoMark 00 10
@X gotoDecC 01 -> gotoDecC @X 01
e% FINAL -> FINAL e FINAL
e% eraseC $1 -> eraseC e% $B
@1 initDividerByTwo @0 -> backToD @1 @1
e$ restoreCD e1 -> restoreCD e$ e1
eC dec @1 -> gotoMark eC @0
$E searchZero 00 -> backToDFromLeft $E 0%
0$ backToFirstC 11 -> backToFirstC 0$ 11
$# initDividerByTwo e0 -> backToD $# e1
1C beginCopying $B -> backToStart 1C $C
$E dec e1 -> gotoMark $E e0
1D temp @1 -> beginCopying 1D @1
$@ backToDFromRight e0 -> backToDFromRight $@ e0
eC searchOne $0 -> restoreCD eC $0
$1 prepEraseC 10 -> prepEraseC $1 10
$% copyOne $B -> backToSharpOne $% $1
@1 backToSharpOne 0E -> backToSharpOne @1 0E
e& backToSharpOne @E -> backToSharpOne e& @E
0C incD 01 -> incD 0C 00
1D backToD @0 -> backToD 1D @0
@B restoreCD $% -> restoreCD @B $0
@X findZero 01 -> beginCopying @X 01
0@ dec e1 -> gotoMark 0@ e0
e$ searchOne @1 -> backToDFromLeft e$ @&
eB backToSharpOne @1 -> backToSharpOne eB @1
eD searchOne e1 -> backToDFromLeft eD e&
$$ backToFirstC e0 -> backToFirstC $$ e0
checkZeroD @D -> @D searchZero
@E gotoMark $0 -> gotoMark @E $0
eE copyOne @B -> backToSharpOne eE @1
@@ backToStart @0 -> backToStart @@ @0
@C restoreCD $% -> restoreCD @C $0
e0 dec $0 -> dec e0 $1
e# nullifier $B -> initDivider e# $E
1$ eraseE @E -> prepEraseC 1$ @E
1@ backToSharpZero @C -> backToSharpZero 1@ @C
backToSharpOne @# -> @1 createCopy
@1 backToStart @1 -> backToStart @1 @1
1C searchNextBit 00 -> searchNextBit 1C 00
1B findBlank e1 -> temp 1B e1
eB searchOne e1 -> backToDFromLeft eB e&
10 backToDFromLeft @% -> backToDFromLeft 10 @%
$B searchNextBit @0 -> searchNextBit $B @0
$E temp @1 -> beginCopying $E @1
e@ eraseE 11 -> eraseE e@ 1B
1# backToSharpOne 1E -> backToSharpOne 1# 1E
@$ gotoMark 01 -> gotoMark @$ 01
@& eraseE 1E -> prepEraseC @& 1E
$E dec @1 -> gotoMark $E @0
1$ initDividerByTwo $0 -> backToD 1$ $1
$& backToDFromRight @B -> backToDFromRight $& @B
00 searchZero @1 -> restoreCD 00 @1
e& backToSharpOne $0 -> backToSharpOne e& $0
@& prepEraseC 0D -> eraseC @& 0D
1@ gotoLastE e@ -> dec 1@ e@
$% gotoMark 1E -> gotoDecC $% 1E
$B backToDFromLeft @& -> backToDFromLeft $B @&
eX findBlank @1 -> temp eX @1
e# findBlank @1 -> temp e# @1
e# checkEForZero 1B -> stop e# 1B
$B backToDFromLeft $1 -> backToDFromLeft $B $1
1C backToSharpOne e1 -> backToSharpOne 1C e1
$# searchZero $0 -> backToDFromLeft $# $%
0$ backToSharpOne 11 -> backToSharpOne 0$ 11
e& copyOne $B -> backToSharpOne e& $1
e$ backToSharpOne 00 -> backToSharpOne e$ 00
1% backToDFromRight eE -> backToDFromRight 1% eE
1$ backToSharpZero @0 -> backToSharpZero 1$ @0
@& initDivider e0 -> initDividerByTwo @& e0
@B dec @1 -> gotoMark @B @0
e# replaceWithBlanks $@ -> backToDFromRight e# $@
$& gotoMark 10 -> gotoMark $& 10
$@ searchNextBit $1 -> searchNextBit $@ $1
$& findBlank 10 -> temp $& 10
0X findBlank 11 -> temp 0X 11
eB backToFirstC 10 -> backToFirstC eB 10
0# prepEraseC e1 -> prepEraseC 0# e1
$C backToSharpZero 01 -> backToSharpZero $C 01
@% nullifier 0B -> initDivider @% 0E
$E backToSharpZero $C -> backToSharpZero $E $C
copyOne $D -> $D copyOne
e@ backToDFromRight eB -> backToDFromRight e@ eB
@C backToSharpOne $0 -> backToSharpOne @C $0
gotoLastE $1 -> $1 gotoLastE
0B eraseC e1 -> eraseC 0B eB
1& eraseE e1 -> eraseE 1& eB
1$ checkCD $1 -> checkCD 1$ $1
1& backToD @1 -> backToD 1& @1
@D eraseC 11 -> eraseC @D 1B
@D backToDFromLeft 1D -> searchNextBit @D 1D
0@ initDividerByTwo $0 -> backToD 0@ $1
FINAL @C -> FINAL @ FINAL
@0 copyOne $B -> backToSharpOne @0 $1
e& backToDFromRight @1 -> backToDFromRight e& @1
00 dec $1 -> gotoMark 00 $0
00 backToStart e1 -> backToStart 00 e1
e$ backToFirstC 10 -> backToFirstC e$ 10
$& massErase e@ -> eraseE $& e@
$@ checkCD 11 -> checkCD $@ 11
1# eraseC 00 -> eraseC 1# 0B
1X backToDFromRight 00 -> backToDFromRight 1X 00
@$ massErase 0@ -> eraseE @$ 0@
$& restoreCD 1D -> restoreCD $& 1D
0D goToPlaceForDivider $B -> backToFirstC 0D $D
00 nullifier eB -> initDivider 00 eE
eX eraseC 10 -> eraseC eX 1B
@C findBlank 1B -> FINAL @C 1B
@1 backToSharpZero 00 -> backToSharpZero @1 00
1E replaceWithBlanks e@ -> backToDFromRight 1E e@
0& gotoMark e1 -> gotoMark 0& e1
@@ backToSharpZero 0D -> backToSharpZero @@ 0D
e0 backToDFromRight 0E -> backToDFromRight e0 0E
10 goToPlaceForDivider eB -> backToFirstC 10 eD
eB initDivider $0 -> initDividerByTwo eB $0
$1 gotoLastE @@ -> dec $1 @@
@0 replaceWithBlanks 1@ -> backToDFromRight @0 1@
1D backToSharpOne 1D -> backToSharpOne 1D 1D
$0 gotoLastE @@ -> dec $0 @@
@C backToStart e0 -> backToStart @C e0
@# findBlank 11 -> temp @# 11
1B backToDFromRight 0B -> backToDFromRight 1B 0B
$@ findBlank 1B -> FINAL $@ 1B
$C prepEraseC 01 -> prepEraseC $C 01
$X searchNextBit $0 -> searchNextBit $X $0
$0 initDividerByTwo $0 -> backToD $0 $1
1X checkCD 01 -> checkCD 1X 01
$E gotoDecC 10 -> gotoDecC $E 10
$& gotoMark e0 -> gotoMark $& e0
10 backToSharpZero $D -> backToSharpZero 10 $D
@E backToDFromLeft e0 -> backToDFromLeft @E e0
0# eraseE $0 -> eraseE 0# $B
e@ backToDFromRight @0 -> backToDFromRight e@ @0
1& findZero e1 -> beginCopying 1& e1
0$ copyOne eB -> backToSharpOne 0$ e1
10 findBlank @1 -> temp 10 @1
$$ backToD e0 -> backToD $$ e0
$D temp e0 -> beginCopying $D e0
0B findBlank @1 -> temp 0B @1
@1 searchNextBit 11 -> searchNextBit @1 11
@# checkCD $1 -> checkCD @# $1
@E backToDFromRight @E -> backToDFromRight @E @E
$@ checkCD e1 -> checkCD $@ e1
11 checkEForZero eB -> stop 11 eB
0@ nullifier 0B -> initDivider 0@ 0E
@D temp 00 -> beginCopying @D 00
1B searchZero @1 -> restoreCD 1B @1
@C gotoMark 0E -> gotoDecC @C 0E
$& findBlank 01 -> temp $& 01
00 eraseC @0 -> eraseC 00 @B
e# prepEraseC @D -> eraseC e# @D
@D searchNextBit $0 -> searchNextBit @D $0
@% nullifier $B -> initDivider @% $E
0& backToDFromLeft @& -> backToDFromLeft 0& @&
@E backToSharpZero 0X -> backToSharpZero @E 0X
@X prepEraseC 0D -> eraseC @X 0D
$C backToD $1 -> backToD $C $1
eX gotoMark $0 -> gotoMark eX $0
0X backToSharpZero $D -> backToSharpZero 0X $D
1B backToSharpOne 1D -> backToSharpOne 1B 1D
0# backToStart $1 -> backToStart 0# $1
e@ backToFirstC 11 -> backToFirstC e@ 11
@0 incD @0 -> checkCD @0 @1
0B searchZero $1 -> restoreCD 0B $1
@X backToDFromRight 0E -> backToDFromRight @X 0E
0C backToSharpZero eE -> backToSharpZero 0C eE
1& gotoMark e1 -> gotoMark 1& e1
$E dec $1 -> gotoMark $E $0
@# incD 01 -> incD @# 00
$% backToDFromLeft 1% -> backToDFromLeft $% 1%
e$ gotoMark e0 -> gotoMark e$ e0
$E searchZero $1 -> restoreCD $E $1
0B checkEForZero @B -> stop 0B @B
0# backToD $1 -> backToD 0# $1
e@ incD e1 -> incD e@ e0
eX searchZero e1 -> restoreCD eX e1
@@ restoreCD @% -> restoreCD @@ @0
00 gotoDecC @0 -> gotoDecC 00 @0
$E replaceWithBlanks 0@ -> backToDFromRight $E 0@
0C gotoMark $1 -> gotoMark 0C $1
$% backToDFromRight @0 -> backToDFromRight $% @0
@& findZero 11 -> beginCopying @& 11
1@ backToSharpOne @1 -> backToSharpOne 1@ @1
1% temp 00 -> beginCopying 1% 00
@E incD 10 -> checkCD @E 11
0$ backToD 00 -> backToD 0$ 00
1X checkEForZero 0B -> stop 1X 0B
@B backToSharpZero @E -> backToSharpZero @B @E
11 gotoMark e0 -> gotoMark 11 e0
copyZero 1X -> 1X copyZero
1% temp e1 -> beginCopying 1% e1
00 checkCD @D -> checkCD 00 @D
@B checkCD e1 -> checkCD @B e1
1% searchZero e0 -> backToDFromLeft 1% e%
1# backToDFromLeft $1 -> backToDFromLeft 1# $1
0# backToDFromLeft e& -> backToDFromLeft 0# e&
1& findBlank 0B -> FINAL 1& 0B
11 replaceWithBlanks e@ -> backToDFromRight 11 e@
0X findBlank 01 -> temp 0X 01
1@ eraseE $0 -> eraseE 1@ $B
$D restoreCD @& -> restoreCD $D @1
1C backToSharpZero @D -> backToSharpZero 1C @D
@% backToD 10 -> backToD @% 10
$# temp 11 -> beginCopying $# 11
e0 gotoMark 01 -> gotoMark e0 01
1E eraseC eC -> backToStart 1E eX
0D backToDFromRight $0 -> backToDFromRight 0D $0
@% backToD @0 -> backToD @% @0
0D findBlank $B -> FINAL 0D $B
$% findBlank @1 -> temp $% @1
$C backToFirstC 11 -> backToFirstC $C 11
gotoLastE eE -> eE gotoLastE
$# backToSharpZero $E -> backToSharpZero $# $E
e& checkCD 10 -> checkCD e& 10
eB backToSharpZero $X -> backToSharpZero eB $X
e0 gotoDecC $0 -> gotoDecC e0 $0
$% findZero $1 -> beginCopying $% $1
1E massErase 1@ -> eraseE 1E 1@
@# copyOne @B -> backToSharpOne @# @1
$D searchOne 10 -> restoreCD $D 10
e@ eraseC $1 -> eraseC e@ $B
1C searchOne 11 -> backToDFromLeft 1C 1&
@B backToDFromLeft $% -> backToDFromLeft @B $%
00 checkEForZero $B -> stop 00 $B
eB copyOne 1B -> backToSharpOne eB 11
0D backToSharpZero 1X -> backToSharpZero 0D 1X
$0 dec 10 -> dec $0 11
0D backToSharpZero 1C -> backToSharpZero 0D 1C
e1 incD e1 -> incD e1 e0
eB searchNextBit 01 -> searchNextBit eB 01
e& backToSharpOne 1C -> backToSharpOne e& 1C
$0 gotoLastE $@ -> dec $0 $@
0B gotoMark 1E -> gotoDecC 0B 1E
e$ backToDFromRight eB -> backToDFromRight e$ eB
1B backToSharpZero @D -> backToSharpZero 1B @D
eC backToDFromRight 0E -> backToDFromRight eC 0E
0E restoreCD 0D -> restoreCD 0E 0D
00 gotoDecC e0 -> gotoDecC 00 e0
@B backToSharpOne @X -> backToSharpOne @B @X
1C searchOne $0 -> restoreCD 1C $0
1X backToSharpZero $1 -> backToSharpZero 1X $1
e# checkCD 00 -> checkCD e# 00
$$ backToStart @0 -> backToStart $$ @0
@# eraseE @1 -> eraseE @# @B
1$ backToSharpZero 00 -> backToSharpZero 1$ 00
0E backToSharpZero @E -> backToSharpZero 0E @E
0& restoreCD e% -> restoreCD 0& e0
1# eraseE 1E -> prepEraseC 1# 1E
1# eraseC 10 -> eraseC 1# 1B
$0 restoreCD $& -> restoreCD $0 $1
0D backToSharpOne @0 -> backToSharpOne 0D @0
$$ eraseE 1E -> prepEraseC $$ 1E
1C eraseE 01 -> eraseE 1C 0B
@X backToFirstC 00 -> backToFirstC @X 00
00 gotoDecC $0 -> gotoDecC 00 $0
1D eraseE @E -> prepEraseC 1D @E
$1 backToDFromRight 01 -> backToDFromRight $1 01
@1 searchOne 01 -> backToDFromLeft @1 0&
0$ searchOne @1 -> backToDFromLeft 0$ @&
0@ backToDFromLeft 0D -> searchNextBit 0@ 0D
e# copyOne $B -> backToSharpOne e# $1
$E eraseC eC -> backToStart $E eX
$X checkCD 1D -> checkCD $X 1D
1B findZero 01 -> beginCopying 1B 01
$C backToSharpZero 0D -> backToSharpZero $C 0D
1E backToDFromRight 01 -> backToDFromRight 1E 01
$@ copyOne 0B -> backToSharpOne $@ 01
@0 searchZero $1 -> restoreCD @0 $1
@$ searchZero @1 -> restoreCD @$ @1
01 findZero 11 -> beginCopying 01 11
e# backToDFromLeft $& -> backToDFromLeft e# $&
@X backToDFromRight $E -> backToDFromRight @X $E
1@ dec 11 -> gotoMark 1@ 10
e0 prepEraseC 0D -> eraseC e0 0D
0# backToFirstC e1 -> backToFirstC 0# e1
@1 prepEraseC 10 -> prepEraseC @1 10
1% backToSharpOne @E -> backToSharpOne 1% @E
1$ backToSharpOne $0 -> backToSharpOne 1$ $0
eB backToDFromLeft eD -> searchNextBit eB eD
0E backToSharpOne @C -> backToSharpOne 0E @C
$0 findZero e1 -> beginCopying $0 e1
e1 backToD @1 -> backToD e1 @1
@% incD 00 -> checkCD @% 01
e$ eraseE 01 -> eraseE e$ 0B
@0 backToStart $1 -> backToStart @0 $1
1D gotoDecC $1 -> gotoDecC 1D $1
$B beginCopying @B -> backToStart $B @C
@# backToSharpZero $E -> backToSharpZero @# $E
@& checkCD 1D -> checkCD @& 1D
e$ eraseE e1 -> eraseE e$ eB
1B backToStart 10 -> backToStart 1B 10
@% restoreCD e% -> restoreCD @% e0
e1 backToDFromRight eE -> backToDFromRight e1 eE
0B findBlank $B -> FINAL 0B $B
@0 backToDFromRight $1 -> backToDFromRight @0 $1
$% findBlank e0 -> temp $% e0
e$ massErase @@ -> eraseE e$ @@
@D backToSharpOne eC -> backToSharpOne @D eC
1B backToSharpOne $0 -> backToSharpOne 1B $0
$& restoreCD 0% -> restoreCD $& 00
$# backToStart 00 -> backToStart $# 00
1D eraseC @C -> backToStart 1D @X
e0 beginCopying 0B -> backToStart e0 0C
1& eraseC 01 -> eraseC 1& 0B
1$ goToPlaceForDivider @B -> backToFirstC 1$ @D
@E prepEraseC 1D -> eraseC @E 1D
1D restoreCD @% -> restoreCD 1D @0
1B backToDFromLeft $D -> searchNextBit 1B $D
@X backToSharpZero @C -> backToSharpZero @X @C
00 backToSharpZero 1C -> backToSharpZero 00 1C
10 gotoMark e1 -> gotoMark 10 e1
0$ backToSharpZero $D -> backToSharpZero 0$ $D
eB eraseC $0 -> eraseC eB $B
$$ searchNextBit 11 -> searchNextBit $$ 11
@B searchZero e1 -> restoreCD @B e1
1E gotoMark e0 -> gotoMark 1E e0
00 beginCopying $B -> backToStart 00 $C
eX incD @0 -> checkCD eX @1
1X restoreCD 10 -> restoreCD 1X 10
1% searchOne 10 -> restoreCD 1% 10
0@ backToDFromLeft $% -> backToDFromLeft 0@ $%
0C prepEraseC 11 -> prepEraseC 0C 11
1@ backToDFromLeft $1 -> backToDFromLeft 1@ $1
e% backToSharpOne $E -> backToSharpOne e% $E
$% temp 00 -> beginCopying $% 00
00 backToSharpOne eC -> backToSharpOne 00 eC
$0 backToDFromRight eE -> backToDFromRight $0 eE
$# checkEForZero @B -> stop $# @B
00 eraseC @C -> backToStart 00 @X
$@ eraseC eC -> backToStart $@ eX
$$ temp e0 -> beginCopying $$ e0
@# backToD 11 -> backToD @# 11
1@ backToDFromRight e0 -> backToDFromRight 1@ e0
$E restoreCD $D -> restoreCD $E $D
e# backToSharpOne 10 -> backToSharpOne e# 10
eB backToDFromLeft e% -> backToDFromLeft eB e%
$& eraseC e1 -> eraseC $& eB
01 searchNextBit @1 -> searchNextBit 01 @1
@C dec $1 -> gotoMark @C $0
$B backToDFromRight 10 -> backToDFromRight $B 10
$@ checkEForZero eB -> stop $@ eB
1E gotoDecC @0 -> gotoDecC 1E @0
0@ searchNextBit e1 -> searchNextBit 0@ e1
$C searchOne 11 -> backToDFromLeft $C 1&
e0 searchZero $1 -> restoreCD e0 $1
@1 goToPlaceForDivider 1B -> backToFirstC @1 1D
$% backToDFromRight @E -> backToDFromRight $% @E
$D restoreCD 1% -> restoreCD $D 10
0B backToDFromLeft @% -> backToDFromLeft 0B @%
eX backToFirstC $1 -> backToFirstC eX $1
e0 initDividerByTwo 00 -> backToD e0 01
0@ backToSharpZero $X -> backToSharpZero 0@ $X
0C backToSharpOne @X -> backToSharpOne 0C @X
11 restoreCD 0D -> restoreCD 11 0D
$B copyOne 0B -> backToSharpOne $B 01
11 prepEraseC 11 -> prepEraseC 11 11
$0 searchNextBit 11 -> searchNextBit $0 11
@@ checkCD 10 -> checkCD @@ 10
1E goToPlaceForDivider eB -> backToFirstC 1E eD
0% searchOne 11 -> backToDFromLeft 0% 1&
01 incD @1 -> incD 01 @0
e1 gotoDecC 1D -> dec e1 1D
0# backToSharpZero $C -> backToSharpZero 0# $C
eE gotoMark 00 -> gotoMark eE 00
00 backToSharpZero 00 -> backToSharpZero 00 00
01 findBlank e1 -> temp 01 e1
1& incD 11 -> incD 1& 10
@B restoreCD 0% -> restoreCD @B 00
$E backToSharpOne $0 -> backToSharpOne $E $0
@& backToDFromLeft 1D -> searchNextBit @& 1D
@& temp $0 -> beginCopying @& $0
e% backToSharpOne @0 -> backToSharpOne e% @0
$@ eraseC 00 -> eraseC $@ 0B
$% prepEraseC $1 -> prepEraseC $% $1
1@ incD e0 -> checkCD 1@ e1
@B initDividerByTwo 10 -> backToD @B 11
@& nullifier $B -> initDivider @& $E
0# findBlank @1 -> temp 0# @1
e% eraseC 11 -> eraseC e% 1B
e% restoreCD e& -> restoreCD e% e1
10 goToPlaceForDivider $B -> backToFirstC 10 $D
e@ dec @1 -> gotoMark e@ @0
01 backToSharpOne @E -> backToSharpOne 01 @E
$D dec e1 -> gotoMark $D e0
$D checkEForZero @B -> stop $D @B
$E copyOne @B -> backToSharpOne $E @1
$C checkCD eD -> checkCD $C eD
@0 searchOne @1 -> backToDFromLeft @0 @&
@# eraseE 00 -> eraseE @# 0B
eE copyZero 1B -> backToSharpZero eE 10
1X backToFirstC 00 -> backToFirstC 1X 00
00 initDividerByTwo e0 -> backToD 00 e1
@D initDividerByTwo 00 -> backToD @D 01
1% forwardToLastD @E -> incD 1% @E
0% backToSharpOne 0D -> backToSharpOne 0% 0D
$X backToDFromRight @0 -> backToDFromRight $X @0
$1 backToFirstC @1 -> backToFirstC $1 @1
e1 searchOne 11 -> backToDFromLeft e1 1&
@# backToSharpZero @1 -> backToSharpZero @# @1
0@ gotoDecC $D -> dec 0@ $D
$% backToSharpOne $X -> backToSharpOne $% $X
@B checkEForZero $B -> stop @B $B
1X backToDFromLeft $% -> backToDFromLeft 1X $%
@$ findZero 11 -> beginCopying @$ 11
0C initDivider 00 -> initDividerByTwo 0C 00
eE backToDFromLeft 0% -> backToDFromLeft eE 0%
e& restoreCD @D -> restoreCD e& @D
1& backToSharpZero 11 -> backToSharpZero 1& 11
$1 backToFirstC @0 -> backToFirstC $1 @0
1& backToD @0 -> backToD 1& @0
$& incD @1 -> incD $& @0
$% gotoDecC eD -> dec $% eD
0# temp @0 -> beginCopying 0# @0
eE backToDFromLeft 01 -> backToDFromLeft eE 01
$# backToSharpOne $0 -> backToSharpOne $# $0
@$ backToStart @0 -> backToStart @$ @0
eE findBlank @0 -> temp eE @0
e@ incD @1 -> incD e@ @0
0X backToSharpZero @E -> backToSharpZero 0X @E
@& beginCopying @B -> backToStart @& @C
@B restoreCD 10 -> restoreCD @B 10
0@ eraseE 01 -> eraseE 0@ 0B
e$ backToSharpZero eD -> backToSharpZero e$ eD
$% initDividerByTwo 10 -> backToD $% 11
eX prepEraseC 11 -> prepEraseC eX 11
0% prepEraseC @1 -> prepEraseC 0% @1
$@ backToFirstC e1 -> backToFirstC $@ e1
0# forwardToLastD @E -> incD 0# @E
0$ backToDFromLeft 0& -> backToDFromLeft 0$ 0&
@X initDividerByTwo 10 -> backToD @X 11
$B gotoLastE 0@ -> dec $B 0@
e1 backToSharpZero e0 -> backToSharpZero e1 e0
e% checkCD 0D -> checkCD e% 0D
@E findBlank $1 -> temp @E $1
@X searchOne 11 -> backToDFromLeft @X 1&
$& backToD $1 -> backToD $& $1
0D gotoDecC eD -> dec 0D eD
@E findBlank 01 -> temp @E 01
0# backToSharpZero @1 -> backToSharpZero 0# @1
1@ initDividerByTwo e0 -> backToD 1@ e1
checkZeroD @0 -> @0 checkZeroD
eX backToSharpZero 11 -> backToSharpZero eX 11
eE backToSharpOne $X -> backToSharpOne eE $X
$$ goToPlaceForDivider 1B -> backToFirstC $$ 1D
11 dec 10 -> dec 11 11
$0 restoreCD 1D -> restoreCD $0 1D
0$ incD e1 -> incD 0$ e0
@@ backToDFromLeft 0& -> backToDFromLeft @@ 0&
0C restoreCD $1 -> restoreCD 0C $1
1D gotoDecC @1 -> gotoDecC 1D @1
$# backToDFromRight eE -> backToDFromRight $# eE
1& backToDFromRight 1E -> backToDFromRight 1& 1E
1$ replaceWithBlanks $@ -> backToDFromRight 1$ $@
1$ copyZero @B -> backToSharpZero 1$ @0
$D backToSharpOne e0 -> backToSharpOne $D e0
$C eraseE @0 -> eraseE $C @B
0D searchOne @0 -> restoreCD 0D @0
$1 checkCD 10 -> checkCD $1 10
@X beginCopying $B -> backToStart @X $C
1X eraseE @E -> prepEraseC 1X @E
@$ initDividerByTwo 00 -> backToD @$ 01
0E checkCD $1 -> checkCD 0E $1
e% gotoLastE @@ -> dec e% @@
e$ replaceWithBlanks e@ -> backToDFromRight e$ e@
0& restoreCD 0& -> restoreCD 0& 01
e@ forwardToLastD @E -> incD e@ @E
0D backToStart e1 -> backToStart 0D e1
eB initDividerByTwo 00 -> backToD eB 01
$$ eraseC 1C -> backToStart $$ 1X
@% backToSharpZero 1D -> backToSharpZero @% 1D
$X backToD $1 -> backToD $X $1
10 restoreCD 00 -> restoreCD 10 00
e& backToDFromRight 11 -> backToDFromRight e& 11
0X backToDFromLeft 1& -> backToDFromLeft 0X 1&
@@ dec e0 -> dec @@ e1
@@ checkCD 01 -> checkCD @@ 01
e@ beginCopying 1B -> backToStart e@ 1C
1$ searchZero e0 -> backToDFromLeft 1$ e%
1$ gotoLastE $@ -> dec 1$ $@
0@ restoreCD $1 -> restoreCD 0@ $1
1X backToFirstC 01 -> backToFirstC 1X 01
1% prepEraseC @D -> eraseC 1% @D
0% eraseC $C -> backToStart 0% $X
$E searchOne 11 -> backToDFromLeft $E 1&
0X backToDFromRight 10 -> backToDFromRight 0X 10
1X gotoDecC 10 -> gotoDecC 1X 10
@B backToSharpOne eC -> backToSharpOne @B eC
1$ restoreCD $D -> restoreCD 1$ $D
@$ backToDFromLeft $D -> searchNextBit @$ $D
eD FINAL -> FINAL e FINAL
@0 gotoMark e0 -> gotoMark @0 e0
00 backToSharpOne 1D -> backToSharpOne 00 1D
@B backToFirstC 10 -> backToFirstC @B 10
e$ incD 10 -> checkCD e$ 11
1$ gotoMark eE -> gotoDecC 1$ eE
0# gotoLastE @@ -> dec 0# @@
@B initDivider e0 -> initDividerByTwo @B e0
eB eraseE 00 -> eraseE eB 0B
$D nullifier @B -> initDivider $D @E
$1 nullifier @B -> initDivider $1 @E
$B backToSharpOne 0D -> backToSharpOne $B 0D
1D backToD e0 -> backToD 1D e0
e& backToSharpOne @C -> backToSharpOne e& @C
1# backToSharpOne 1C -> backToSharpOne 1# 1C
1B forwardToLastD 1E -> incD 1B 1E
1B gotoLastE $@ -> dec 1B $@
@# backToSharpOne 10 -> backToSharpOne @# 10
e0 searchZero @0 -> backToDFromLeft e0 @%
$@ beginCopying eB -> backToStart $@ eC
checkOneD $D -> $D searchOne
@B backToSharpZero $C -> backToSharpZero @B $C
$1 checkCD 01 -> checkCD $1 01
$X backToSharpZero $D -> backToSharpZero $X $D
@$ gotoLastE 1@ -> dec @$ 1@
@1 searchOne $1 -> backToDFromLeft @1 $&
$# prepEraseC $D -> eraseC $# $D
1@ findBlank 00 -> temp 1@ 00
$C beginCopying $B -> backToStart $C $C
0$ gotoMark 01 -> gotoMark 0$ 01
$C temp @1 -> beginCopying $C @1
00 gotoMark 11 -> gotoMark 00 11
@# initDivider @0 -> initDividerByTwo @# @0
e0 backToDFromLeft e0 -> backToDFromLeft e0 e0
1B restoreCD $0 -> restoreCD 1B $0
@D gotoDecC eD -> dec @D eD
$& restoreCD 0D -> restoreCD $& 0D
@$ backToDFromRight @1 -> backToDFromRight @$ @1
e1 backToDFromLeft 0D -> searchNextBit e1 0D
e@ searchNextBit 01 -> searchNextBit e@ 01
0D backToDFromRight @B -> backToDFromRight 0D @B
1B prepEraseC e0 -> prepEraseC 1B e0
@C FINAL -> FINAL @ FINAL
eE eraseE e0 -> eraseE eE eB
@E checkEForZero @B -> stop @E @B
@@ gotoMark $1 -> gotoMark @@ $1
1X dec $1 -> gotoMark 1X $0
$X restoreCD 0& -> restoreCD $X 01
1% gotoMark @1 -> gotoMark 1% @1
0C restoreCD 10 -> restoreCD 0C 10
0& findBlank 10 -> temp 0& 10
@C gotoLastE 0@ -> dec @C 0@
0X forwardToLastD @E -> incD 0X @E
@B backToSharpOne @E -> backToSharpOne @B @E
@@ prepEraseC 10 -> prepEraseC @@ 10
0@ findBlank 00 -> temp 0@ 00
e1 searchZero 10 -> backToDFromLeft e1 1%
0E backToDFromLeft 1% -> backToDFromLeft 0E 1%
@@ initDivider $0 -> initDividerByTwo @@ $0
@& backToSharpOne 0E -> backToSharpOne @& 0E
@@ dec $1 -> gotoMark @@ $0
0& findZero 01 -> beginCopying 0& 01
$C findBlank @1 -> temp $C @1
$$ findBlank @0 -> temp $$ @0
eqCD e0 -> e% checkZeroD
0@ beginCopying $B -> backToStart 0@ $C
00 temp $0 -> beginCopying 00 $0
$C checkCD @1 -> checkCD $C @1
@& searchOne $1 -> backToDFromLeft @& $&
$0 nullifier $B -> initDivider $0 $E
1C gotoLastE @@ -> dec 1C @@
@C gotoDecC 0D -> dec @C 0D
eD searchNextBit 01 -> searchNextBit eD 01
@E restoreCD $& -> restoreCD @E $1
e% backToSharpOne 0C -> backToSharpOne e% 0C
1& nullifier @B -> initDivider 1& @E
e$ backToFirstC 11 -> backToFirstC e$ 11
@# initDivider $0 -> initDividerByTwo @# $0
e1 gotoMark $0 -> gotoMark e1 $0
$# backToFirstC @0 -> backToFirstC $# @0
0B incD @0 -> checkCD 0B @1
copyZero eE -> eE copyZero
e0 backToDFromRight $E -> backToDFromRight e0 $E
0$ gotoMark e0 -> gotoMark 0$ e0
@E gotoMark e0 -> gotoMark @E e0
e@ prepEraseC e0 -> prepEraseC e@ e0
00 nullifier 1B -> initDivider 00 1E
1@ forwardToLastD @E -> incD 1@ @E
1E findBlank 11 -> temp 1E 11
0@ eraseE $0 -> eraseE 0@ $B
$1 backToDFromRight $0 -> backToDFromRight $1 $0
e0 temp 01 -> beginCopying e0 01
e@ searchZero 10 -> backToDFromLeft e@ 1%
$B findBlank 10 -> temp $B 10
1& findBlank @0 -> temp 1& @0
$# backToSharpZero 0D -> backToSharpZero $# 0D
@@ backToFirstC e0 -> backToFirstC @@ e0
@B restoreCD 1% -> restoreCD @B 10
0# backToSharpOne $1 -> backToSharpOne 0# $1
0B gotoDecC 00 -> gotoDecC 0B 00
1X backToFirstC $0 -> backToFirstC 1X $0
0X eraseC e0 -> eraseC 0X eB
$& copyZero eB -> backToSharpZero $& e0
00 backToDFromLeft 1% -> backToDFromLeft 00 1%
@$ incD e1 -> incD @$ e0
1$ gotoDecC e0 -> gotoDecC 1$ e0
eD initDivider e0 -> initDividerByTwo eD e0
1$ backToD e1 -> backToD 1$ e1
0X backToStart $0 -> backToStart 0X $0
@X backToStart $0 -> backToStart @X $0
e1 gotoLastE 0@ -> dec e1 0@
e$ eraseC $1 -> eraseC e$ $B
0& incD @1 -> incD 0& @0
@E backToSharpZero 01 -> backToSharpZero @E 01
$D searchOne $0 -> restoreCD $D $0
eB temp 00 -> beginCopying eB 00
@0 backToDFromRight $E -> backToDFromRight @0 $E
0& searchNextBit @1 -> searchNextBit 0& @1
eC eraseE @E -> prepEraseC eC @E
eE searchOne e1 -> backToDFromLeft eE e&
e0 eraseE 01 -> eraseE e0 0B
$E backToFirstC 00 -> backToFirstC $E 00
0C dec @0 -> dec 0C @1
e% eraseE 10 -> eraseE e% 1B
eB backToSharpZero e1 -> backToSharpZero eB e1
e# backToSharpZero @1 -> backToSharpZero e# @1
@C gotoDecC 10 -> gotoDecC @C 10
0E backToFirstC 01 -> backToFirstC 0E 01
e@ backToDFromLeft 0% -> backToDFromLeft e@ 0%
0X findZero $1 -> beginCopying 0X $1
0C searchOne 01 -> backToDFromLeft 0C 0&
@& searchZero e0 -> backToDFromLeft @& e%
@0 backToDFromRight $0 -> backToDFromRight @0 $0
$B restoreCD @& -> restoreCD $B @1
$$ backToSharpZero @E -> backToSharpZero $$ @E
0D findBlank $0 -> temp 0D $0
$$ backToSharpOne e0 -> backToSharpOne $$ e0
1B prepEraseC $1 -> prepEraseC 1B $1
1% backToD e0 -> backToD 1% e0
e% backToD 01 -> backToD e% 01
@B gotoMark @1 -> gotoMark @B @1
1X gotoMark 00 -> gotoMark 1X 00
$E backToSharpZero 0D -> backToSharpZero $E 0D
1C restoreCD 10 -> restoreCD 1C 10
$D gotoLastE e@ -> dec $D e@
$@ backToSharpZero @1 -> backToSharpZero $@ @1
eB backToSharpOne 00 -> backToSharpOne eB 00
0C eraseC 01 -> eraseC 0C 0B
@& backToDFromLeft 11 -> backToDFromLeft @& 11
$# forwardToLastD @E -> incD $# @E
@B backToFirstC e0 -> backToFirstC @B e0
1# searchOne e0 -> restoreCD 1# e0
@% backToSharpOne $0 -> backToSharpOne @% $0
e% gotoMark $E -> gotoDecC e% $E
0D searchNextBit e0 -> searchNextBit 0D e0
0& backToDFromRight 01 -> backToDFromRight 0& 01
@C backToStart 01 -> backToStart @C 01
@X backToSharpZero @X -> backToSharpZero @X @X
$D gotoMark $0 -> gotoMark $D $0
eC dec @0 -> dec eC @1
11 backToSharpOne 1X -> backToSharpOne 11 1X
00 gotoMark @E -> gotoDecC 00 @E
0B backToDFromRight @B -> backToDFromRight 0B @B
1X initDividerByTwo $0 -> backToD 1X $1
e& backToSharpOne @0 -> backToSharpOne e& @0
10 beginCopying 0B -> backToStart 10 0C
$X backToSharpZero 0C -> backToSharpZero $X 0C
00 backToSharpOne @D -> backToSharpOne 00 @D
eD backToD @1 -> backToD eD @1
eX checkCD $0 -> checkCD eX $0
@X backToD $1 -> backToD @X $1
0& searchZero e0 -> backToDFromLeft 0& e%
0$ searchNextBit 11 -> searchNextBit 0$ 11
$$ searchNextBit @0 -> searchNextBit $$ @0
@0 backToD e1 -> backToD @0 e1
0% incD @1 -> incD 0% @0
e$ backToDFromRight e0 -> backToDFromRight e$ e0
eB findBlank $1 -> temp eB $1
e% backToD 11 -> backToD e% 11
0@ incD e1 -> incD 0@ e0
eC gotoLastE e@ -> dec eC e@
00 backToDFromLeft $& -> backToDFromLeft 00 $&
e0 initDivider $0 -> initDividerByTwo e0 $0
e$ temp @1 -> beginCopying e$ @1
0E dec @1 -> gotoMark 0E @0
@X copyZero 1B -> backToSharpZero @X 10
e$ prepEraseC 00 -> prepEraseC e$ 00
1D gotoMark e1 -> gotoMark 1D e1
e@ gotoDecC @1 -> gotoDecC e@ @1
1# searchOne $1 -> backToDFromLeft 1# $&
e1 goToPlaceForDivider 1B -> backToFirstC e1 1D
@1 prepEraseC $D -> eraseC @1 $D
$X dec $1 -> gotoMark $X $0
eX searchOne 10 -> restoreCD eX 10
eC initDivider @0 -> initDividerByTwo eC @0
00 copyOne 1B -> backToSharpOne 00 11
@% gotoMark 00 -> gotoMark @% 00
e% dec 10 -> dec e% 11
$% gotoMark 0E -> gotoDecC $% 0E
11 gotoDecC @0 -> gotoDecC 11 @0
00 checkCD 01 -> checkCD 00 01
e# copyZero @B -> backToSharpZero e# @0
@E checkCD 11 -> checkCD @E 11
1B eraseC eC -> backToStart 1B eX
@% temp 10 -> beginCopying @% 10
$% searchZero 00 -> backToDFromLeft $% 0%
e& backToD 00 -> backToD e& 00
$0 backToFirstC 11 -> backToFirstC $0 11
1X copyZero 0B -> backToSharpZero 1X 00
$% backToSharpOne $D -> backToSharpOne $% $D
0D backToSharpZero eE -> backToSharpZero 0D eE
1C backToSharpZero eE -> backToSharpZero 1C eE
@C eraseC 0C -> backToStart @C 0X
0C prepEraseC e0 -> prepEraseC 0C e0
0X backToSharpOne 0X -> backToSharpOne 0X 0X
0# searchOne e1 -> backToDFromLeft 0# e&
$% searchNextBit @0 -> searchNextBit $% @0
0X prepEraseC 00 -> prepEraseC 0X 00
$& prepEraseC $D -> eraseC $& $D
0B restoreCD 1& -> restoreCD 0B 11
0@ initDivider 00 -> initDividerByTwo 0@ 00
e1 gotoDecC 11 -> gotoDecC e1 11
0% backToD $0 -> backToD 0% $0
$1 replaceWithBlanks 1@ -> backToDFromRight $1 1@
$1 copyZero 1B -> backToSharpZero $1 10
@1 searchOne $0 -> restoreCD @1 $0
eC checkCD 0D -> checkCD eC 0D
1X backToD $1 -> backToD 1X $1
$% restoreCD e0 -> restoreCD $% e0
$% backToSharpOne @E -> backToSharpOne $% @E
eB gotoDecC 11 -> gotoDecC eB 11
eX backToSharpOne 1E -> backToSharpOne eX 1E
11 checkCD 01 -> checkCD 11 01
@X temp e1 -> beginCopying @X e1
@B goToPlaceForDivider $B -> backToFirstC @B $D
eE beginCopying 0B -> backToStart eE 0C
@@ backToStart e0 -> backToStart @@ e0
1% backToSharpZero 01 -> backToSharpZero 1% 01
e# gotoMark 11 -> gotoMark e# 11
@C backToDFromLeft 10 -> backToDFromLeft @C 10
$% backToSharpOne $0 -> backToSharpOne $% $0
0& backToSharpOne 0D -> backToSharpOne 0& 0D
0@ backToFirstC @0 -> backToFirstC 0@ @0
@C restoreCD $0 -> restoreCD @C $0
$# searchZero 00 -> backToDFromLeft $# 0%
$X backToDFromLeft @& -> backToDFromLeft $X @&
@0 replaceWithBlanks @@ -> backToDFromRight @0 @@
1# backToStart 11 -> backToStart 1# 11
0$ gotoDecC 10 -> gotoDecC 0$ 10
1$ backToSharpZero eE -> backToSharpZero 1$ eE
@$ eraseE 11 -> eraseE @$ 1B
$E backToDFromRight 00 -> backToDFromRight $E 00
0X temp 01 -> beginCopying 0X 01
0D eraseE 01 -> eraseE 0D 0B
$1 backToStart 01 -> backToStart $1 01
00 dec e1 -> gotoMark 00 e0
1C backToSharpOne 11 -> backToSharpOne 1C 11
0% gotoDecC 01 -> gotoDecC 0% 01
@@ dec 11 -> gotoMark @@ 10
$C findZero @1 -> beginCopying $C @1
0E searchNextBit e0 -> searchNextBit 0E e0
0% backToStart $0 -> backToStart 0% $0
e$ initDivider $0 -> initDividerByTwo e$ $0
00 backToFirstC e1 -> backToFirstC 00 e1
$0 initDivider $0 -> initDividerByTwo $0 $0
1# eraseE @1 -> eraseE 1# @B
@E backToSharpZero 1X -> backToSharpZero @E 1X
1# goToPlaceForDivider 0B -> backToFirstC 1# 0D
e$ backToSharpOne 10 -> backToSharpOne e$ 10
eE backToSharpZero $E -> backToSharpZero eE $E
$$ gotoMark $0 -> gotoMark $$ $0
11 backToDFromRight $B -> backToDFromRight 11 $B
$B backToFirstC @0 -> backToFirstC $B @0
$B restoreCD 1% -> restoreCD $B 10
e# eraseC @C -> backToStart e# @X
@& restoreCD $0 -> restoreCD @& $0
$C backToDFromLeft 01 -> backToDFromLeft $C 01
0B gotoDecC e0 -> gotoDecC 0B e0
$D searchOne e0 -> restoreCD $D e0
1& searchZero e1 -> restoreCD 1& e1
e1 backToStart $0 -> backToStart e1 $0
@% backToSharpOne eD -> backToSharpOne @% eD
0E backToSharpZero 0X -> backToSharpZero 0E 0X
1$ backToDFromLeft @& -> backToDFromLeft 1$ @&
1@ searchZero 10 -> backToDFromLeft 1@ 1%
eX eraseC 1C -> backToStart eX 1X
0E backToFirstC e1 -> backToFirstC 0E e1
eE backToSharpZero $1 -> backToSharpZero eE $1
@X checkCD $1 -> checkCD @X $1
$B findBlank @0 -> temp $B @0
@0 backToDFromRight $B -> backToDFromRight @0 $B
0% backToStart @1 -> backToStart 0% @1
0E forwardToLastD eE -> incD 0E eE
@D replaceWithBlanks 0@ -> backToDFromRight @D 0@
0& checkEForZero @B -> stop 0& @B
1C backToDFromRight 00 -> backToDFromRight 1C 00
@0 backToSharpZero $0 -> backToSharpZero @0 $0
$D copyZero 0B -> backToSharpZero $D 00
eB gotoDecC $D -> dec eB $D
eB restoreCD $& -> restoreCD eB $1
@X gotoLastE 1@ -> dec @X 1@
@E eraseC 01 -> eraseC @E 0B
eC dec $1 -> gotoMark eC $0
00 initDivider $0 -> initDividerByTwo 00 $0
1$ backToDFromLeft e1 -> backToDFromLeft 1$ e1
@@ backToD 11 -> backToD @@ 11
$D incD $0 -> checkCD $D $1
@@ gotoDecC $1 -> gotoDecC @@ $1
0X gotoMark 0E -> gotoDecC 0X 0E
1% backToDFromLeft @& -> backToDFromLeft 1% @&
1@ findBlank 0B -> FINAL 1@ 0B
1C temp 01 -> beginCopying 1C 01
@E dec $0 -> dec @E $1
0X backToDFromLeft 0% -> backToDFromLeft 0X 0%
e# prepEraseC 1D -> eraseC e# 1D
@C backToSharpOne e0 -> backToSharpOne @C e0
@$ eraseC $C -> backToStart @$ $X
@@ backToDFromLeft 0% -> backToDFromLeft @@ 0%
e& backToSharpZero @1 -> backToSharpZero e& @1
10 backToSharpZero @C -> backToSharpZero 10 @C
@$ gotoDecC 00 -> gotoDecC @$ 00
0$ backToDFromLeft @% -> backToDFromLeft 0$ @%
e$ backToDFromLeft @% -> backToDFromLeft e$ @%
$C backToSharpOne $D -> backToSharpOne $C $D
e# findZero e1 -> beginCopying e# e1
00 prepEraseC e1 -> prepEraseC 00 e1
1D backToSharpOne e1 -> backToSharpOne 1D e1
e& beginCopying eB -> backToStart e& eC
1$ backToStart $1 -> backToStart 1$ $1
10 restoreCD @D -> restoreCD 10 @D
@@ prepEraseC 0D -> eraseC @@ 0D
11 searchZero 00 -> backToDFromLeft 11 0%
@# backToDFromRight $1 -> backToDFromRight @# $1
10 eraseE 01 -> eraseE 10 0B
e# checkCD $D -> checkCD e# $D
0# copyZero 1B -> backToSharpZero 0# 10
$B incD e0 -> checkCD $B e1
@C searchZero e1 -> restoreCD @C e1
$B checkEForZero @B -> stop $B @B
00 checkCD 10 -> checkCD 00 10
1X restoreCD $1 -> restoreCD 1X $1
0% initDivider @0 -> initDividerByTwo 0% @0
1E searchOne 10 -> restoreCD 1E 10
$X backToSharpOne 0D -> backToSharpOne $X 0D
$C backToD 11 -> backToD $C 11
eB backToDFromRight e1 -> backToDFromRight eB e1
@% backToFirstC @0 -> backToFirstC @% @0
@# findBlank $B -> FINAL @# $B
0% gotoMark @E -> gotoDecC 0% @E
@0 backToDFromLeft 0D -> searchNextBit @0 0D
1C checkCD 01 -> checkCD 1C 01
@# checkCD @0 -> checkCD @# @0
01 searchNextBit 10 -> searchNextBit 01 10
1@ backToSharpOne @C -> backToSharpOne 1@ @C
@# checkCD e0 -> checkCD @# e0
$1 copyOne 1B -> backToSharpOne $1 11
1% forwardToLastD $E -> incD 1% $E
eD restoreCD @1 -> restoreCD eD @1
$X findBlank 11 -> temp $X 11
e# eraseE 1E -> prepEraseC e# 1E
0& gotoMark 01 -> gotoMark 0& 01
1& searchOne 10 -> restoreCD 1& 10
0@ backToDFromLeft e% -> backToDFromLeft 0@ e%
e& prepEraseC e0 -> prepEraseC e& e0
@$ searchOne 11 -> backToDFromLeft @$ 1&
$& prepEraseC $0 -> prepEraseC $& $0
eE restoreCD $D -> restoreCD eE $D
$E prepEraseC @0 -> prepEraseC $E @0
@E prepEraseC 11 -> prepEraseC @E 11
$D backToDFromLeft @& -> backToDFromLeft $D @&
@# forwardToLastD 0E -> incD @# 0E
e@ prepEraseC 11 -> prepEraseC e@ 11
1$ eraseC 10 -> eraseC 1$ 1B
11 backToSharpOne $D -> backToSharpOne 11 $D
@# prepEraseC 01 -> prepEraseC @# 01
@% initDividerByTwo e0 -> backToD @% e1
0E gotoMark @0 -> gotoMark 0E @0
0$ searchNextBit e0 -> searchNextBit 0$ e0
11 backToSharpOne @E -> backToSharpOne 11 @E
0C prepEraseC @D -> eraseC 0C @D
@1 findZero 11 -> beginCopying @1 11
$% backToDFromLeft 0% -> backToDFromLeft $% 0%
0X forwardToLastD 1E -> incD 0X 1E
$% temp 01 -> beginCopying $% 01
0X prepEraseC 01 -> prepEraseC 0X 01
@& eraseE $0 -> eraseE @& $B
0$ searchZero $1 -> restoreCD 0$ $1
1# eraseE $0 -> eraseE 1# $B
@% backToSharpOne 00 -> backToSharpOne @% 00
1B eraseC e1 -> eraseC 1B eB
$$ prepEraseC $1 -> prepEraseC $$ $1
1E eraseE 1E -> prepEraseC 1E 1E
01 backToStart 10 -> backToStart 01 10
1E backToDFromLeft 11 -> backToDFromLeft 1E 11
@@ gotoDecC 1D -> dec @@ 1D
01 checkCD 1D -> checkCD 01 1D
@& gotoDecC @1 -> gotoDecC @& @1
00 prepEraseC 10 -> prepEraseC 00 10
@$ backToSharpZero $X -> backToSharpZero @$ $X
eC incD e0 -> checkCD eC e1
1E backToSharpZero $X -> backToSharpZero 1E $X
$C findZero 01 -> beginCopying $C 01
@@ dec @0 -> dec @@ @1
FINAL eE -> FINAL e FINAL
10 restoreCD $& -> restoreCD 10 $1
1E backToDFromLeft e0 -> backToDFromLeft 1E e0
1X backToDFromRight $1 -> backToDFromRight 1X $1
$B copyZero 0B -> backToSharpZero $B 00
@% backToDFromRight 0E -> backToDFromRight @% 0E
e@ dec e0 -> dec e@ e1
e1 initDivider 10 -> initDividerByTwo e1 10
e1 backToDFromLeft @D -> searchNextBit e1 @D
0& backToDFromRight 0E -> backToDFromRight 0& 0E
$# gotoDecC $0 -> gotoDecC $# $0
$D backToD e1 -> backToD $D e1
1& eraseE eE -> prepEraseC 1& eE
0D dec @0 -> dec 0D @1
$B dec 11 -> gotoMark $B 10
@C initDividerByTwo @0 -> backToD @C @1
0C backToSharpZero $D -> backToSharpZero 0C $D
eC searchZero 10 -> backToDFromLeft eC 1%
@$ findBlank @B -> FINAL @$ @B
e0 eraseC e0 -> eraseC e0 eB
e0 dec 11 -> gotoMark e0 10
1$ checkCD e1 -> checkCD 1$ e1
@X gotoMark 00 -> gotoMark @X 00
$X backToDFromLeft $D -> searchNextBit $X $D
0% FINAL -> FINAL 0 FINAL
$0 backToDFromLeft e& -> backToDFromLeft $0 e&
eB backToSharpZero 01 -> backToSharpZero eB 01
$E goToPlaceForDivider $B -> backToFirstC $E $D
1@ backToStart 00 -> backToStart 1@ 00
1$ backToFirstC 11 -> backToFirstC 1$ 11
$E backToDFromLeft e1 -> backToDFromLeft $E e1
eD backToSharpZero eX -> backToSharpZero eD eX
$# gotoMark 01 -> gotoMark $# 01
0$ prepEraseC 01 -> prepEraseC 0$ 01
1% initDividerByTwo $0 -> backToD 1% $1
@E backToDFromLeft $0 -> backToDFromLeft @E $0
0X backToDFromRight $B -> backToDFromRight 0X $B
0& eraseC eC -> backToStart 0& eX
00 eraseE $E -> prepEraseC 00 $E
eE backToDFromLeft e& -> backToDFromLeft eE e&
1$ eraseE e0 -> eraseE 1$ eB
@% backToSharpZero 1E -> backToSharpZero @% 1E
$D backToSharpOne 00 -> backToSharpOne $D 00
@0 backToSharpZero 01 -> backToSharpZero @0 01
0C backToDFromLeft e& -> backToDFromLeft 0C e&
1X backToSharpOne e0 -> backToSharpOne 1X e0
1C eraseC e0 -> eraseC 1C eB
e$ backToFirstC 00 -> backToFirstC e$ 00
1% restoreCD $1 -> restoreCD 1% $1
10 restoreCD 10 -> restoreCD 10 10
1% forwardToLastD eE -> incD 1% eE
0B backToSharpOne $E -> backToSharpOne 0B $E
@1 backToSharpZero 0D -> backToSharpZero @1 0D
$0 restoreCD e& -> restoreCD $0 e1
$% prepEraseC $0 -> prepEraseC $% $0
$% backToFirstC 01 -> backToFirstC $% 01
0X gotoDecC @D -> dec 0X @D
0& backToDFromRight 10 -> backToDFromRight 0& 10
1% searchOne $1 -> backToDFromLeft 1% $&
@# gotoDecC @0 -> gotoDecC @# @0
$B gotoMark 00 -> gotoMark $B 00
$D searchOne 01 -> backToDFromLeft $D 0&
$% initDivider $0 -> initDividerByTwo $% $0
0$ eraseE 0E -> prepEraseC 0$ 0E
@$ findZero $1 -> beginCopying @$ $1
0B findBlank e1 -> temp 0B e1
0& backToStart $0 -> backToStart 0& $0
@% restoreCD 10 -> restoreCD @% 10
$# checkCD $1 -> checkCD $# $1
@% prepEraseC $0 -> prepEraseC @% $0
1& restoreCD 1D -> restoreCD 1& 1D
@1 eraseC @0 -> eraseC @1 @B
e# temp $1 -> beginCopying e# $1
eB dec 01 -> gotoMark eB 00
0C massErase e@ -> eraseE 0C e@
1X backToDFromLeft eD -> searchNextBit 1X eD
1% dec e0 -> dec 1% e1
@1 restoreCD @% -> restoreCD @1 @0
0$ eraseE $E -> prepEraseC 0$ $E
0& dec @1 -> gotoMark 0& @0
copyOne @E -> @E copyOne
1& backToDFromLeft $0 -> backToDFromLeft 1& $0
$X restoreCD e1 -> restoreCD $X e1
e# backToSharpOne @1 -> backToSharpOne e# @1
0C prepEraseC e1 -> prepEraseC 0C e1
e& gotoDecC eD -> dec e& eD
$D searchZero 01 -> restoreCD $D 01
0@ initDivider @0 -> initDividerByTwo 0@ @0
@# searchOne e1 -> backToDFromLeft @# e&
00 searchOne $0 -> restoreCD 00 $0
eC massErase e@ -> eraseE eC e@
@1 nullifier 1B -> initDivider @1 1E
0% backToSharpOne e0 -> backToSharpOne 0% e0
0@ initDividerByTwo @0 -> backToD 0@ @1
1@ backToDFromLeft 1& -> backToDFromLeft 1@ 1&
@C beginCopying 0B -> backToStart @C 0C
$D backToSharpZero eX -> backToSharpZero $D eX
$@ backToSharpOne 0X -> backToSharpOne $@ 0X
0@ gotoMark e0 -> gotoMark 0@ e0
e% restoreCD 0D -> restoreCD e% 0D
eC checkEForZero eB -> stop eC eB
$B searchZero e0 -> backToDFromLeft $B e%
0C searchNextBit $0 -> searchNextBit 0C $0
eB prepEraseC $1 -> prepEraseC eB $1
eE searchZero e1 -> restoreCD eE e1
0& backToSharpZero 0D -> backToSharpZero 0& 0D
$C searchOne $1 -> backToDFromLeft $C $&
$E copyZero @B -> backToSharpZero $E @0
$% searchNextBit 11 -> searchNextBit $% 11
$& backToD $0 -> backToD $& $0
0B eraseE $0 -> eraseE 0B $B
0E searchOne @1 -> backToDFromLeft 0E @&
@1 findZero @1 -> beginCopying @1 @1
0$ backToSharpOne eX -> backToSharpOne 0$ eX
11 backToFirstC @0 -> backToFirstC 11 @0
@@ gotoMark 0E -> gotoDecC @@ 0E
e% gotoDecC eD -> dec e% eD
1# gotoMark 01 -> gotoMark 1# 01
1E backToSharpOne eE -> backToSharpOne 1E eE
e# nullifier 0B -> initDivider e# 0E
$0 initDivider e0 -> initDividerByTwo $0 e0
0& massErase @@ -> eraseE 0& @@
$0 backToSharpOne @0 -> backToSharpOne $0 @0
0# eraseC e0 -> eraseC 0# eB
eC checkCD $D -> checkCD eC $D
1@ prepEraseC $1 -> prepEraseC 1@ $1
eE gotoMark 01 -> gotoMark eE 01
1@ restoreCD $D -> restoreCD 1@ $D
@$ backToSharpZero $0 -> backToSharpZero @$ $0
1# gotoDecC 11 -> gotoDecC 1# 11
$% gotoLastE @@ -> dec $% @@
$$ backToSharpZero 10 -> backToSharpZero $$ 10
e& initDividerByTwo 10 -> backToD e& 11
$% searchNextBit $1 -> searchNextBit $% $1
0E gotoMark eE -> gotoDecC 0E eE
e@ searchZero 01 -> restoreCD e@ 01
$C backToDFromLeft 00 -> backToDFromLeft $C 00
0D backToSharpZero 11 -> backToSharpZero 0D 11
@1 nullifier $B -> initDivider @1 $E
e0 backToSharpOne @1 -> backToSharpOne e0 @1
$# backToSharpOne 0E -> backToSharpOne $# 0E
11 initDividerByTwo e0 -> backToD 11 e1
$C eraseC 10 -> eraseC $C 1B
e1 temp e0 -> beginCopying e1 e0
e& backToDFromRight 10 -> backToDFromRight e& 10
$E backToDFromLeft $0 -> backToDFromLeft $E $0
@C restoreCD 0% -> restoreCD @C 00
1@ backToSharpZero @0 -> backToSharpZero 1@ @0
e% findBlank @1 -> temp e% @1
@B gotoDecC @D -> dec @B @D
e% searchOne @1 -> backToDFromLeft e% @&
@0 backToD 01 -> backToD @0 01
@& backToSharpOne $D -> backToSharpOne @& $D
1X backToSharpZero $C -> backToSharpZero 1X $C
e$ copyOne $B -> backToSharpOne e$ $1
$B backToSharpZero 1X -> backToSharpZero $B 1X
1E backToSharpOne $0 -> backToSharpOne 1E $0
@C backToSharpZero $1 -> backToSharpZero @C $1
e@ backToDFromRight e0 -> backToDFromRight e@ e0
e$ dec $0 -> dec e$ $1
e$ beginCopying @B -> backToStart e$ @C
$D copyOne @B -> backToSharpOne $D @1
0# prepEraseC eD -> eraseC 0# eD
@E restoreCD @D -> restoreCD @E @D
1$ eraseE $E -> prepEraseC 1$ $E
eC backToDFromLeft 01 -> backToDFromLeft eC 01
eE gotoDecC $1 -> gotoDecC eE $1
$0 incD 10 -> checkCD $0 11
createCopy @D -> @D nullifier
1B prepEraseC 0D -> eraseC 1B 0D
@B backToSharpZero @0 -> backToSharpZero @B @0
@X backToStart 10 -> backToStart @X 10
e% checkCD $D -> checkCD e% $D
0& backToD 11 -> backToD 0& 11
0% restoreCD 11 -> restoreCD 0% 11
FINAL $$ -> FINAL $ FINAL
@@ checkCD @1 -> checkCD @@ @1
10 checkEForZero @B -> stop 10 @B
@& findBlank $0 -> temp @& $0
$@ backToSharpOne eE -> backToSharpOne $@ eE
e# backToDFromLeft @% -> backToDFromLeft e# @%
$X eraseE e1 -> eraseE $X eB
e@ beginCopying @B -> backToStart e@ @C
01 backToSharpOne 0E -> backToSharpOne 01 0E
0E findZero @1 -> beginCopying 0E @1
1C checkCD @0 -> checkCD 1C @0
$$ checkCD @0 -> checkCD $$ @0
1E backToStart $1 -> backToStart 1E $1
eE backToSharpOne 0E -> backToSharpOne eE 0E
1$ searchNextBit 01 -> searchNextBit 1$ 01
eC backToStart 01 -> backToStart eC 01
0E eraseE @E -> prepEraseC 0E @E
@$ restoreCD e1 -> restoreCD @$ e1
1X searchZero 01 -> restoreCD 1X 01
@$ backToDFromRight 1B -> backToDFromRight @$ 1B
@C restoreCD $D -> restoreCD @C $D
1% backToStart 01 -> backToStart 1% 01
e% eraseE $E -> prepEraseC e% $E
1E searchOne $1 -> backToDFromLeft 1E $&
e0 eraseE e1 -> eraseE e0 eB
$C findBlank @0 -> temp $C @0
$E backToD @0 -> backToD $E @0
0X forwardToLastD 0E -> incD 0X 0E
@% backToSharpOne 0X -> backToSharpOne @% 0X
0X backToDFromLeft 0& -> backToDFromLeft 0X 0&
$1 gotoLastE 0@ -> dec $1 0@
@& dec 00 -> dec @& 01
$B restoreCD 00 -> restoreCD $B 00
11 gotoDecC e1 -> gotoDecC 11 e1
eB goToPlaceForDivider 1B -> backToFirstC eB 1D
@C searchOne 11 -> backToDFromLeft @C 1&
e$ copyZero 1B -> backToSharpZero e$ 10
$$ gotoMark 00 -> gotoMark $$ 00
@D findBlank 01 -> temp @D 01
e$ prepEraseC @0 -> prepEraseC e$ @0
e1 searchZero $1 -> restoreCD e1 $1
01 checkCD eD -> checkCD 01 eD
00 copyOne 0B -> backToSharpOne 00 01
eB backToD 01 -> backToD eB 01
1# replaceWithBlanks e@ -> backToDFromRight 1# e@
$X eraseC 11 -> eraseC $X 1B
1& backToStart $1 -> backToStart 1& $1
$@ backToDFromRight 00 -> backToDFromRight $@ 00
0$ backToDFromLeft 00 -> backToDFromLeft 0$ 00
0X copyOne $B -> backToSharpOne 0X $1
1% backToDFromLeft @D -> searchNextBit 1% @D
@E checkCD 00 -> checkCD @E 00
$& gotoMark $E -> gotoDecC $& $E
@E backToSharpOne 0D -> backToSharpOne @E 0D
@# replaceWithBlanks e@ -> backToDFromRight @# e@
@# checkEForZero $B -> stop @# $B
$@ eraseC 1C -> backToStart $@ 1X
eE goToPlaceForDivider $B -> backToFirstC eE $D
1% backToFirstC e0 -> backToFirstC 1% e0
eqCD @0 -> @% checkZeroD
1E checkCD @1 -> checkCD 1E @1
$@ backToSharpOne @X -> backToSharpOne $@ @X
eC backToSharpOne 1D -> backToSharpOne eC 1D
01 prepEraseC @1 -> prepEraseC 01 @1
@% eraseC $C -> backToStart @% $X
10 searchNextBit @0 -> searchNextBit 10 @0
eX backToStart 10 -> backToStart eX 10
e1 backToSharpOne $1 -> backToSharpOne e1 $1
e& initDivider 00 -> initDividerByTwo e& 00
1E massErase e@ -> eraseE 1E e@
0C backToDFromLeft $% -> backToDFromLeft 0C $%
@# eraseE e1 -> eraseE @# eB
@@ gotoDecC @0 -> gotoDecC @@ @0
00 gotoMark @1 -> gotoMark 00 @1
e$ findBlank $B -> FINAL e$ $B
$0 backToSharpZero $D -> backToSharpZero $0 $D
01 backToSharpZero 01 -> backToSharpZero 01 01
01 backToFirstC $1 -> backToFirstC 01 $1
0C backToSharpOne e1 -> backToSharpOne 0C e1
e$ backToSharpOne @X -> backToSharpOne e$ @X
@0 backToSharpOne $D -> backToSharpOne @0 $D
@# eraseC e1 -> eraseC @# eB
e$ findZero $1 -> beginCopying e$ $1
e@ eraseE 1E -> prepEraseC e@ 1E
1# dec 11 -> gotoMark 1# 10
e% backToSharpOne 0E -> backToSharpOne e% 0E
$$ backToSharpZero 0C -> backToSharpZero $$ 0C
1# findBlank $B -> FINAL 1# $B
@$ prepEraseC 1D -> eraseC @$ 1D
1D eraseC e0 -> eraseC 1D eB
@X backToSharpZero eE -> backToSharpZero @X eE
@$ backToFirstC e0 -> backToFirstC @$ e0
1E restoreCD @D -> restoreCD 1E @D
0B eraseC 1C -> backToStart 0B 1X
01 gotoMark 10 -> gotoMark 01 10
checkZeroD 10 -> 10 checkZeroD
$1 backToDFromLeft e1 -> backToDFromLeft $1 e1
e@ backToSharpZero 1C -> backToSharpZero e@ 1C
1@ checkEForZero 0B -> stop 1@ 0B
1C backToSharpZero 11 -> backToSharpZero 1C 11
@% backToStart 00 -> backToStart @% 00
0X restoreCD 1% -> restoreCD 0X 10
e@ initDivider @0 -> initDividerByTwo e@ @0
1% beginCopying eB -> backToStart 1% eC
@B incD 11 -> incD @B 10
11 eraseE 01 -> eraseE 11 0B
0$ initDivider 10 -> initDividerByTwo 0$ 10
e@ copyOne 0B -> backToSharpOne e@ 01
@1 gotoMark 1E -> gotoDecC @1 1E
11 backToSharpOne $E -> backToSharpOne 11 $E
eE findZero 01 -> beginCopying eE 01
0& initDividerByTwo 00 -> backToD 0& 01
0$ backToDFromLeft 01 -> backToDFromLeft 0$ 01
0& backToSharpOne @X -> backToSharpOne 0& @X
0D findZero e1 -> beginCopying 0D e1
$1 replaceWithBlanks 0@ -> backToDFromRight $1 0@
$$ initDivider @0 -> initDividerByTwo $$ @0
@0 backToFirstC $1 -> backToFirstC @0 $1
$@ backToSharpOne 1C -> backToSharpOne $@ 1C
@E backToD $1 -> backToD @E $1
1B replaceWithBlanks e@ -> backToDFromRight 1B e@
1$ restoreCD e0 -> restoreCD 1$ e0
@D restoreCD $& -> restoreCD @D $1
e& goToPlaceForDivider $B -> backToFirstC e& $D
FINAL -> e
1X gotoDecC $0 -> gotoDecC 1X $0
@E backToDFromRight @B -> backToDFromRight @E @B
1$ incD @0 -> checkCD 1$ @1
1# dec @0 -> dec 1# @1
0% backToD @1 -> backToD 0% @1
0C incD e0 -> checkCD 0C e1
$E searchNextBit 11 -> searchNextBit $E 11
@X backToSharpOne 1C -> backToSharpOne @X 1C
@0 backToDFromLeft eD -> searchNextBit @0 eD
@$ backToDFromLeft @1 -> backToDFromLeft @$ @1
0@ backToSharpOne 0C -> backToSharpOne 0@ 0C
0B backToDFromRight $0 -> backToDFromRight 0B $0
$B checkCD 0D -> checkCD $B 0D
1% incD 11 -> incD 1% 10
$& dec e0 -> dec $& e1
$0 temp 11 -> beginCopying $0 11
@D replaceWithBlanks @@ -> backToDFromRight @D @@
@X prepEraseC @D -> eraseC @X @D
$& searchNextBit 00 -> searchNextBit $& 00
$% backToSharpOne 1C -> backToSharpOne $% 1C
e$ gotoDecC 10 -> gotoDecC e$ 10
forwardToLastD 01 -> 01 forwardToLastD
10 gotoLastE @@ -> dec 10 @@
@% restoreCD $0 -> restoreCD @% $0
1# backToD e1 -> backToD 1# e1
$# gotoMark $1 -> gotoMark $# $1
0@ backToFirstC e1 -> backToFirstC 0@ e1
@& eraseC 10 -> eraseC @& 1B
0B backToDFromLeft @0 -> backToDFromLeft 0B @0
1C eraseE 10 -> eraseE 1C 1B
@B backToSharpZero $1 -> backToSharpZero @B $1
eC eraseE $1 -> eraseE eC $B
0& checkCD $D -> checkCD 0& $D
$$ backToDFromRight @1 -> backToDFromRight $$ @1
@E eraseE 10 -> eraseE @E 1B
11 backToSharpOne @C -> backToSharpOne 11 @C
0X backToDFromLeft 01 -> backToDFromLeft 0X 01
1B backToSharpOne 00 -> backToSharpOne 1B 00
e1 gotoLastE $@ -> dec e1 $@
FINAL 0@ -> FINAL 0 FINAL
01 copyZero @B -> backToSharpZero 01 @0
@% backToDFromLeft $& -> backToDFromLeft @% $&
$B massErase $@ -> eraseE $B $@
$% restoreCD 00 -> restoreCD $% 00
@B backToSharpOne 1D -> backToSharpOne @B 1D
@C initDivider 10 -> initDividerByTwo @C 10
eD backToD 11 -> backToD eD 11
$C restoreCD @% -> restoreCD $C @0
@@ massErase @@ -> eraseE @@ @@
0X restoreCD @% -> restoreCD 0X @0
eD restoreCD e& -> restoreCD eD e1
@@ restoreCD @1 -> restoreCD @@ @1
@E backToDFromLeft 00 -> backToDFromLeft @E 00
@0 massErase 1@ -> eraseE @0 1@
$& searchZero e0 -> backToDFromLeft $& e%
e$ backToSharpZero 10 -> backToSharpZero e$ 10
@D initDivider 10 -> initDividerByTwo @D 10
eD backToDFromLeft 0D -> searchNextBit eD 0D
1B gotoDecC 11 -> gotoDecC 1B 11
0B gotoMark eE -> gotoDecC 0B eE
@C findBlank 0B -> FINAL @C 0B
e& prepEraseC $1 -> prepEraseC e& $1
e# eraseE $0 -> eraseE e# $B
e& eraseC @C -> backToStart e& @X
@C gotoMark @E -> gotoDecC @C @E
1@ checkCD eD -> checkCD 1@ eD
$$ checkCD 1D -> checkCD $$ 1D
@$ searchNextBit 00 -> searchNextBit @$ 00
$B prepEraseC @1 -> prepEraseC $B @1
e& searchZero $0 -> backToDFromLeft e& $%
@E backToSharpOne @D -> backToSharpOne @E @D
@1 backToDFromRight $0 -> backToDFromRight @1 $0
$& eraseC 1C -> backToStart $& 1X
e# backToSharpZero @D -> backToSharpZero e# @D
@@ backToSharpOne 1E -> backToSharpOne @@ 1E
checkOneD 10 -> 10 checkOneD
1B eraseE eE -> prepEraseC 1B eE
1# restoreCD e& -> restoreCD 1# e1
1E eraseE e0 -> eraseE 1E eB
eX restoreCD $0 -> restoreCD eX $0
0B backToDFromLeft e0 -> backToDFromLeft 0B e0
@% backToDFromRight e1 -> backToDFromRight @% e1
$$ backToSharpZero $E -> backToSharpZero $$ $E
@% nullifier 1B -> initDivider @% 1E
@0 backToD @1 -> backToD @0 @1
0C prepEraseC 1D -> eraseC 0C 1D
$& findBlank @1 -> temp $& @1
0% backToDFromRight eE -> backToDFromRight 0% eE
e0 forwardToLastD 1E -> incD e0 1E
1& searchNextBit @0 -> searchNextBit 1& @0
0C eraseC e0 -> eraseC 0C eB
e# initDividerByTwo e0 -> backToD e# e1
0D massErase 1@ -> eraseE 0D 1@
1C backToFirstC 00 -> backToFirstC 1C 00
@# prepEraseC @D -> eraseC @# @D
0# nullifier @B -> initDivider 0# @E
$@ backToDFromLeft 11 -> backToDFromLeft $@ 11
e1 backToD $1 -> backToD e1 $1
e1 prepEraseC @1 -> prepEraseC e1 @1
0D beginCopying eB -> backToStart 0D eC
@$ temp 01 -> beginCopying @$ 01
@& restoreCD @% -> restoreCD @& @0
eB gotoMark 11 -> gotoMark eB 11
eE backToStart 10 -> backToStart eE 10
e$ backToD $0 -> backToD e$ $0
01 backToD 10 -> backToD 01 10
0% backToFirstC 00 -> backToFirstC 0% 00
@C prepEraseC eD -> eraseC @C eD
eE findBlank 11 -> temp eE 11
@1 gotoDecC 00 -> gotoDecC @1 00
e0 backToSharpOne 10 -> backToSharpOne e0 10
eC searchNextBit 10 -> searchNextBit eC 10
e$ searchZero @1 -> restoreCD e$ @1
1D gotoLastE 1@ -> dec 1D 1@
0& gotoLastE 1@ -> dec 0& 1@
0% massErase 0@ -> eraseE 0% 0@
e% beginCopying 1B -> backToStart e% 1C
$& initDivider e0 -> initDividerByTwo $& e0
@1 massErase e@ -> eraseE @1 e@
eD backToSharpOne $D -> backToSharpOne eD $D
11 backToSharpOne $0 -> backToSharpOne 11 $0
01 copyOne $B -> backToSharpOne 01 $1
$% backToDFromRight eE -> backToDFromRight $% eE
@D searchOne 00 -> restoreCD @D 00
$% backToDFromRight 00 -> backToDFromRight $% 00
1% nullifier 0B -> initDivider 1% 0E
@& gotoMark $E -> gotoDecC @& $E
@X backToSharpOne @E -> backToSharpOne @X @E
$E backToDFromLeft @& -> backToDFromLeft $E @&
@# massErase e@ -> eraseE @# e@
0& backToDFromLeft $0 -> backToDFromLeft 0& $0
1D backToSharpOne $D -> backToSharpOne 1D $D
$# eraseC 10 -> eraseC $# 1B
eD backToD e0 -> backToD eD e0
1E eraseC @0 -> eraseC 1E @B
0@ incD $0 -> checkCD 0@ $1
0# backToStart 00 -> backToStart 0# 00
$# restoreCD 10 -> restoreCD $# 10
e# findBlank @0 -> temp e# @0
@X eraseE @0 -> eraseE @X @B
11 eraseC 00 -> eraseC 11 0B
10 backToSharpZero 1C -> backToSharpZero 10 1C
$C backToSharpZero eX -> backToSharpZero $C eX
1C findBlank 10 -> temp 1C 10
1D eraseE $E -> prepEraseC 1D $E
0% findBlank $0 -> temp 0% $0
$D backToSharpOne eC -> backToSharpOne $D eC
1% backToSharpZero $X -> backToSharpZero 1% $X
@0 backToDFromRight @B -> backToDFromRight @0 @B
0$ restoreCD $& -> restoreCD 0$ $1
0B initDividerByTwo $0 -> backToD 0B $1
$% backToStart e1 -> backToStart $% e1
$% backToSharpZero 1E -> backToSharpZero $% 1E
00 backToFirstC $0 -> backToFirstC 00 $0
1X goToPlaceForDivider 1B -> backToFirstC 1X 1D
0& backToSharpOne eD -> backToSharpOne 0& eD
$D gotoMark @E -> gotoDecC $D @E
@E backToSharpZero @E -> backToSharpZero @E @E
@B backToFirstC $1 -> backToFirstC @B $1
$@ backToDFromLeft $1 -> backToDFromLeft $@ $1
$$ gotoLastE @@ -> dec $$ @@
@B eraseC 0C -> backToStart @B 0X
$$ backToSharpOne @1 -> backToSharpOne $$ @1
$D backToDFromLeft $D -> searchNextBit $D $D
$@ prepEraseC 01 -> prepEraseC $@ 01
$C backToDFromRight 01 -> backToDFromRight $C 01
11 eraseE $1 -> eraseE 11 $B
e% backToSharpZero 01 -> backToSharpZero e% 01
1# backToSharpZero $1 -> backToSharpZero 1# $1
0# gotoDecC 0D -> dec 0# 0D
1C backToSharpZero 1X -> backToSharpZero 1C 1X
@D searchZero 11 -> restoreCD @D 11
$B backToSharpOne eC -> backToSharpOne $B eC
e1 searchNextBit $1 -> searchNextBit e1 $1
e% eraseC eC -> backToStart e% eX
$% checkCD @0 -> checkCD $% @0
1E backToSharpZero 11 -> backToSharpZero 1E 11
e# backToDFromRight e0 -> backToDFromRight e# e0
eE backToSharpOne eC -> backToSharpOne eE eC
eX dec 11 -> gotoMark eX 10
$C eraseE 00 -> eraseE $C 0B
e& backToDFromLeft eD -> searchNextBit e& eD
eE checkCD 01 -> checkCD eE 01
eE backToSharpZero $D -> backToSharpZero eE $D
0$ backToDFromLeft e& -> backToDFromLeft 0$ e&
e1 gotoDecC e0 -> gotoDecC e1 e0
@E initDividerByTwo 10 -> backToD @E 11
dec eE -> eE replaceWithBlanks
@@ findBlank $B -> FINAL @@ $B
e% initDivider e0 -> initDividerByTwo e% e0
0$ backToSharpOne eE -> backToSharpOne 0$ eE
10 temp @1 -> beginCopying 10 @1
createCopy 1C -> 1C goToPlaceForDivider
$& backToSharpOne @1 -> backToSharpOne $& @1
e% restoreCD $& -> restoreCD e% $1
e& backToStart @0 -> backToStart e& @0
$$ backToDFromRight 00 -> backToDFromRight $$ 00
@E searchNextBit e0 -> searchNextBit @E e0
e# checkCD @0 -> checkCD e# @0
1D goToPlaceForDivider @B -> backToFirstC 1D @D
0D dec e1 -> gotoMark 0D e0
$D backToSharpZero @D -> backToSharpZero $D @D
@X restoreCD @& -> restoreCD @X @1
0% copyOne $B -> backToSharpOne 0% $1
1$ backToDFromRight 0E -> backToDFromRight 1$ 0E
@& checkEForZero eB -> stop @& eB
@% initDividerByTwo $0 -> backToD @% $1
$$ eraseC e0 -> eraseC $$ eB
$# incD e1 -> incD $# e0
1X massErase 0@ -> eraseE 1X 0@
01 backToDFromLeft @1 -> backToDFromLeft 01 @1
$& backToDFromRight 0B -> backToDFromRight $& 0B
@B goToPlaceForDivider @B -> backToFirstC @B @D
@@ backToSharpOne 0X -> backToSharpOne @@ 0X
eD eraseC $0 -> eraseC eD $B
1D eraseE $1 -> eraseE 1D $B
@B searchNextBit @1 -> searchNextBit @B @1
$D restoreCD 0% -> restoreCD $D 00
$$ backToSharpOne $E -> backToSharpOne $$ $E
00 massErase @@ -> eraseE 00 @@
e# nullifier eB -> initDivider e# eE
1# prepEraseC $D -> eraseC 1# $D
1D forwardToLastD $E -> incD 1D $E
e% copyOne $B -> backToSharpOne e% $1
@@ nullifier 1B -> initDivider @@ 1E
eE backToSharpZero 11 -> backToSharpZero eE 11
@& backToSharpOne 00 -> backToSharpOne @& 00
$0 copyZero 1B -> backToSharpZero $0 10
@X findBlank $1 -> temp @X $1
$# replaceWithBlanks e@ -> backToDFromRight $# e@
0& goToPlaceForDivider 0B -> backToFirstC 0& 0D
eC searchOne @1 -> backToDFromLeft eC @&
1X findZero @1 -> beginCopying 1X @1
$D eraseE @0 -> eraseE $D @B
0B temp @0 -> beginCopying 0B @0
$B backToDFromRight 00 -> backToDFromRight $B 00
1E backToSharpZero 01 -> backToSharpZero 1E 01
eB temp $1 -> beginCopying eB $1
@& prepEraseC $D -> eraseC @& $D
$1 eraseC e0 -> eraseC $1 eB
@@ searchZero e0 -> backToDFromLeft @@ e%
@& backToD @1 -> backToD @& @1
searchNextBit 0& -> 0& eqCD
0B backToSharpOne 1C -> backToSharpOne 0B 1C
eB backToSharpOne 0E -> backToSharpOne eB 0E
$% backToDFromLeft 1D -> searchNextBit $% 1D
1& backToSharpZero 0E -> backToSharpZero 1& 0E
@B backToSharpOne 0C -> backToSharpOne @B 0C
1C searchOne e1 -> backToDFromLeft 1C e&
1D checkEForZero @B -> stop 1D @B
$E backToSharpOne 0E -> backToSharpOne $E 0E
e@ prepEraseC 10 -> prepEraseC e@ 10
eX backToDFromRight @E -> backToDFromRight eX @E
eX goToPlaceForDivider $B -> backToFirstC eX $D
$E prepEraseC $D -> eraseC $E $D
eB backToSharpZero 1D -> backToSharpZero eB 1D
00 backToSharpZero eD -> backToSharpZero 00 eD
1% checkCD @D -> checkCD 1% @D
0E temp $0 -> beginCopying 0E $0
e& backToD e1 -> backToD e& e1
eB gotoDecC 1D -> dec eB 1D
@# restoreCD 0D -> restoreCD @# 0D
@B backToD 01 -> backToD @B 01
0B restoreCD 1D -> restoreCD 0B 1D
$$ replaceWithBlanks $@ -> backToDFromRight $$ $@
@% replaceWithBlanks 0@ -> backToDFromRight @% 0@
copyOne @1 -> @1 copyOne
1% backToDFromRight 10 -> backToDFromRight 1% 10
e% backToDFromRight @1 -> backToDFromRight e% @1
@1 searchOne e0 -> restoreCD @1 e0
1& backToDFromRight eE -> backToDFromRight 1& eE
$C massErase $@ -> eraseE $C $@
0$ gotoMark $1 -> gotoMark 0$ $1
$D dec @1 -> gotoMark $D @0
0E massErase 1@ -> eraseE 0E 1@
0E backToDFromRight 0B -> backToDFromRight 0E 0B
0E backToSharpOne eD -> backToSharpOne 0E eD
0# backToSharpZero 11 -> backToSharpZero 0# 11
@0 copyZero @B -> backToSharpZero @0 @0
e0 backToSharpOne eX -> backToSharpOne e0 eX
@@ backToDFromLeft $% -> backToDFromLeft @@ $%
00 checkCD $1 -> checkCD 00 $1
1D eraseE 0E -> prepEraseC 1D 0E
$B restoreCD e% -> restoreCD $B e0
$1 gotoDecC @D -> dec $1 @D
1B eraseE 00 -> eraseE 1B 0B
$% eraseC $C -> backToStart $% $X
0@ backToSharpOne 00 -> backToSharpOne 0@ 00
$X restoreCD 1% -> restoreCD $X 10
eB eraseC $C -> backToStart eB $X
@1 checkCD @1 -> checkCD @1 @1
@% backToDFromLeft 01 -> backToDFromLeft @% 01
1# backToDFromRight eB -> backToDFromRight 1# eB
@% temp 11 -> beginCopying @% 11
11 gotoMark 0E -> gotoDecC 11 0E
searchOne 0% -> 0% searchOne
copyZero @C -> @C copyZero
1& gotoMark $E -> gotoDecC 1& $E
$E copyZero $B -> backToSharpZero $E $0
eX searchOne 01 -> backToDFromLeft eX 0&
0% replaceWithBlanks e@ -> backToDFromRight 0% e@
1# gotoMark 10 -> gotoMark 1# 10
@D initDivider 00 -> initDividerByTwo @D 00
$X goToPlaceForDivider 0B -> backToFirstC $X 0D
@@ backToDFromLeft e0 -> backToDFromLeft @@ e0
eB backToDFromLeft $% -> backToDFromLeft eB $%
1@ eraseE eE -> prepEraseC 1@ eE
$E backToStart 10 -> backToStart $E 10
0C checkCD 00 -> checkCD 0C 00
e@ initDividerByTwo @0 -> backToD e@ @1
$C copyZero $B -> backToSharpZero $C $0
1C backToDFromLeft 11 -> backToDFromLeft 1C 11
@0 gotoDecC $D -> dec @0 $D
@B restoreCD $& -> restoreCD @B $1
$$ restoreCD e0 -> restoreCD $$ e0
eB temp 01 -> beginCopying eB 01
$B backToSharpOne 0E -> backToSharpOne $B 0E
@# checkCD 1D -> checkCD @# 1D
1# checkCD 11 -> checkCD 1# 11
$E nullifier 1B -> initDivider $E 1E
e# eraseE e1 -> eraseE e# eB
1# backToD @0 -> backToD 1# @0
0C gotoDecC 11 -> gotoDecC 0C 11
$C findBlank 00 -> temp $C 00
$1 initDividerByTwo 00 -> backToD $1 01
01 backToFirstC 00 -> backToFirstC 01 00
e0 dec 10 -> dec e0 11
$1 backToSharpOne 0E -> backToSharpOne $1 0E
$$ backToSharpZero 1C -> backToSharpZero $$ 1C
$X backToSharpOne $E -> backToSharpOne $X $E
@C checkCD 1D -> checkCD @C 1D
@B eraseC e1 -> eraseC @B eB
1& checkCD @0 -> checkCD 1& @0
0# backToSharpZero $1 -> backToSharpZero 0# $1
eC eraseC 1C -> backToStart eC 1X
eB restoreCD e& -> restoreCD eB e1
@B backToDFromRight $0 -> backToDFromRight @B $0
0B backToSharpOne 10 -> backToSharpOne 0B 10
e0 dec 00 -> dec e0 01
00 backToDFromLeft eD -> searchNextBit 00 eD
0# prepEraseC 00 -> prepEraseC 0# 00
@$ searchNextBit @1 -> searchNextBit @$ @1
$B goToPlaceForDivider 1B -> backToFirstC $B 1D
$# massErase $@ -> eraseE $# $@
10 restoreCD e% -> restoreCD 10 e0
@0 backToDFromLeft @% -> backToDFromLeft @0 @%
@# incD $1 -> incD @# $0
0D backToDFromLeft @D -> searchNextBit 0D @D
@E checkCD 01 -> checkCD @E 01
$$ checkEForZero $B -> stop $$ $B
1E forwardToLastD @E -> incD 1E @E
$@ backToDFromRight 01 -> backToDFromRight $@ 01
1E checkCD @D -> checkCD 1E @D
1# FINAL -> FINAL 1 FINAL
1B eraseE @1 -> eraseE 1B @B
1# prepEraseC 10 -> prepEraseC 1# 10
1& findBlank e0 -> temp 1& e0
$@ prepEraseC $D -> eraseC $@ $D
e$ findBlank 01 -> temp e$ 01
$C backToSharpOne $X -> backToSharpOne $C $X
10 backToDFromLeft @1 -> backToDFromLeft 10 @1
$B initDividerByTwo @0 -> backToD $B @1
@$ gotoDecC 10 -> gotoDecC @$ 10
@C backToSharpZero @D -> backToSharpZero @C @D
1& gotoMark @1 -> gotoMark 1& @1
@D initDivider @0 -> initDividerByTwo @D @0
1D restoreCD 01 -> restoreCD 1D 01
00 initDivider @0 -> initDividerByTwo 00 @0
e& forwardToLastD @E -> incD e& @E
eE backToSharpOne 0X -> backToSharpOne eE 0X
@E gotoDecC $D -> dec @E $D
e@ prepEraseC $0 -> prepEraseC e@ $0
e@ copyZero 1B -> backToSharpZero e@ 10
0E backToSharpZero e1 -> backToSharpZero 0E e1
0$ backToDFromLeft 10 -> backToDFromLeft 0$ 10
$1 backToSharpOne 11 -> backToSharpOne $1 11
eD temp $0 -> beginCopying eD $0
01 searchOne e0 -> restoreCD 01 e0
01 findBlank eB -> FINAL 01 eB
eE gotoMark $E -> gotoDecC eE $E
1@ initDividerByTwo @0 -> backToD 1@ @1
$% massErase 1@ -> eraseE $% 1@
@& prepEraseC 11 -> prepEraseC @& 11
eB backToD 10 -> backToD eB 10
1@ backToSharpZero 11 -> backToSharpZero 1@ 11
e# gotoMark 0E -> gotoDecC e# 0E
0E gotoDecC 1D -> dec 0E 1D
0E findBlank 11 -> temp 0E 11
0X checkCD @D -> checkCD 0X @D
e$ restoreCD 1& -> restoreCD e$ 11
0@ gotoDecC $1 -> gotoDecC 0@ $1
$$ restoreCD 10 -> restoreCD $$ 10
1# searchOne e1 -> backToDFromLeft 1# e&
0B backToSharpOne 0C -> backToSharpOne 0B 0C
11 backToSharpOne 0C -> backToSharpOne 11 0C
@$ checkCD e1 -> checkCD @$ e1
1% backToDFromRight $E -> backToDFromRight 1% $E
11 searchOne 00 -> restoreCD 11 00
$0 backToDFromRight 00 -> backToDFromRight $0 00
00 findZero 01 -> beginCopying 00 01
0% checkCD 0D -> checkCD 0% 0D
00 temp 00 -> beginCopying 00 00
e% findZero @1 -> beginCopying e% @1
eC backToFirstC 00 -> backToFirstC eC 00
@% copyZero @B -> backToSharpZero @% @0
@C backToSharpZero 0C -> backToSharpZero @C 0C
1B backToDFromLeft @D -> searchNextBit 1B @D
0X checkCD @1 -> checkCD 0X @1
$X backToSharpOne 0C -> backToSharpOne $X 0C
$C incD $0 -> checkCD $C $1
0X backToSharpZero 0X -> backToSharpZero 0X 0X
0@ findBlank @1 -> temp 0@ @1
10 backToDFromLeft $D -> searchNextBit 10 $D
$@ backToSharpZero @D -> backToSharpZero $@ @D
forwardToLastD 00 -> 00 forwardToLastD
@0 gotoDecC 11 -> gotoDecC @0 11
@C backToFirstC $0 -> backToFirstC @C $0
$0 backToSharpOne $C -> backToSharpOne $0 $C
1B searchOne 11 -> backToDFromLeft 1B 1&
e@ eraseC $C -> backToStart e@ $X
$C restoreCD $1 -> restoreCD $C $1
11 backToSharpZero @C -> backToSharpZero 11 @C
0B checkCD eD -> checkCD 0B eD
e& backToSharpZero eX -> backToSharpZero e& eX
$C backToSharpOne 1E -> backToSharpOne $C 1E
00 backToDFromLeft @& -> backToDFromLeft 00 @&
11 searchOne 11 -> backToDFromLeft 11 1&
e0 restoreCD e% -> restoreCD e0 e0
0X temp @1 -> beginCopying 0X @1
@1 gotoDecC $0 -> gotoDecC @1 $0
0& incD 00 -> checkCD 0& 01
01 FINAL -> FINAL 0 FINAL
1E dec @0 -> dec 1E @1
e# goToPlaceForDivider 1B -> backToFirstC e# 1D
0C eraseC @1 -> eraseC 0C @B
$# copyOne 1B -> backToSharpOne $# 11
@1 forwardToLastD @E -> incD @1 @E
@& backToSharpZero e0 -> backToSharpZero @& e0
@D dec @0 -> dec @D @1
$@ backToFirstC 00 -> backToFirstC $@ 00
e1 dec 11 -> gotoMark e1 10
1E backToSharpOne @E -> backToSharpOne 1E @E
0% searchZero 11 -> restoreCD 0% 11
@% findBlank $B -> FINAL @% $B
$0 incD $0 -> checkCD $0 $1
0B copyZero eB -> backToSharpZero 0B e0
0& findZero 11 -> beginCopying 0& 11
0B findBlank $1 -> temp 0B $1
1D gotoLastE e@ -> dec 1D e@
e% backToDFromRight 00 -> backToDFromRight e% 00
0C backToSharpZero @X -> backToSharpZero 0C @X
e0 backToFirstC 01 -> backToFirstC e0 01
1$ beginCopying 0B -> backToStart 1$ 0C
1& copyZero eB -> backToSharpZero 1& e0
$B eraseE @E -> prepEraseC $B @E
0X backToSharpOne 11 -> backToSharpOne 0X 11
1@ backToSharpOne 1D -> backToSharpOne 1@ 1D
@0 gotoDecC 1D -> dec @0 1D
$0 prepEraseC @D -> eraseC $0 @D
1& replaceWithBlanks $@ -> backToDFromRight 1& $@
$& restoreCD $& -> restoreCD $& $1
11 searchZero 10 -> backToDFromLeft 11 1%
$0 gotoMark @0 -> gotoMark $0 @0
01 backToSharpZero $1 -> backToSharpZero 01 $1
0& incD e0 -> checkCD 0& e1
e% copyOne 1B -> backToSharpOne e% 11
e0 incD $1 -> incD e0 $0
e@ eraseE 10 -> eraseE e@ 1B
1% eraseE $0 -> eraseE 1% $B
@0 backToSharpOne $E -> backToSharpOne @0 $E
0$ goToPlaceForDivider 1B -> backToFirstC 0$ 1D
e1 backToSharpZero @1 -> backToSharpZero e1 @1
$@ gotoMark $E -> gotoDecC $@ $E
01 findBlank @0 -> temp 01 @0
$X initDividerByTwo e0 -> backToD $X e1
0X searchOne $0 -> restoreCD 0X $0
10 forwardToLastD @E -> incD 10 @E
0X backToStart 10 -> backToStart 0X 10
1@ checkEForZero $B -> stop 1@ $B
e% backToDFromLeft 1% -> backToDFromLeft e% 1%
e% findBlank @B -> FINAL e% @B
@& initDivider 10 -> initDividerByTwo @& 10
eB restoreCD $% -> restoreCD eB $0
$X initDividerByTwo @0 -> backToD $X @1
backToD @D -> @D createCopy
e& backToStart e0 -> backToStart e& e0
e1 restoreCD $D -> restoreCD e1 $D
@D backToSharpOne 0X -> backToSharpOne @D 0X
10 searchNextBit $1 -> searchNextBit 10 $1
01 backToFirstC $0 -> backToFirstC 01 $0
$% forwardToLastD @E -> incD $% @E
e% restoreCD @% -> restoreCD e% @0
1& restoreCD 0& -> restoreCD 1& 01
0# backToDFromRight $1 -> backToDFromRight 0# $1
eE backToSharpOne 1C -> backToSharpOne eE 1C
0@ backToSharpOne $X -> backToSharpOne 0@ $X
1C backToDFromLeft @D -> searchNextBit 1C @D
e# incD 11 -> incD e# 10
1E backToDFromLeft 1% -> backToDFromLeft 1E 1%
eB findBlank e0 -> temp eB e0
e& findBlank 00 -> temp e& 00
0X backToD 00 -> backToD 0X 00
eX incD 00 -> checkCD eX 01
1& backToStart 00 -> backToStart 1& 00
@D temp @0 -> beginCopying @D @0
$& backToStart e0 -> backToStart $& e0
e@ checkCD $D -> checkCD e@ $D
1$ forwardToLastD 0E -> incD 1$ 0E
11 findBlank 11 -> temp 11 11
$D incD 00 -> checkCD $D 01
00 backToDFromRight e0 -> backToDFromRight 00 e0
0$ massErase e@ -> eraseE 0$ e@
@D dec $0 -> dec @D $1
0E temp 01 -> beginCopying 0E 01
@@ restoreCD 0% -> restoreCD @@ 00
1X backToSharpOne eD -> backToSharpOne 1X eD
1@ forwardToLastD 1E -> incD 1@ 1E
eC nullifier @B -> initDivider eC @E
1@ backToDFromRight @E -> backToDFromRight 1@ @E
0E nullifier $B -> initDivider 0E $E
$& dec e1 -> gotoMark $& e0
0# checkCD @0 -> checkCD 0# @0
$B temp 00 -> beginCopying $B 00
@0 backToFirstC @1 -> backToFirstC @0 @1
e# backToSharpZero @X -> backToSharpZero e# @X
@E backToSharpZero 1E -> backToSharpZero @E 1E
0B backToDFromLeft 1% -> backToDFromLeft 0B 1%
0B findBlank 11 -> temp 0B 11
e& eraseE 0E -> prepEraseC e& 0E
$& checkCD $D -> checkCD $& $D
1C prepEraseC @D -> eraseC 1C @D
@0 findBlank e1 -> temp @0 e1
1D searchNextBit e1 -> searchNextBit 1D e1
eE eraseC eC -> backToStart eE eX
0C backToDFromRight @E -> backToDFromRight 0C @E
@% restoreCD eD -> restoreCD @% eD
@C backToSharpZero 1E -> backToSharpZero @C 1E
$C prepEraseC 10 -> prepEraseC $C 10
e0 backToSharpZero 0X -> backToSharpZero e0 0X
0B backToDFromRight $E -> backToDFromRight 0B $E
0D backToStart $1 -> backToStart 0D $1
@1 backToDFromLeft 11 -> backToDFromLeft @1 11
1X findZero 11 -> beginCopying 1X 11
1@ gotoDecC 11 -> gotoDecC 1@ 11
@1 checkEForZero @B -> stop @1 @B
@X prepEraseC 11 -> prepEraseC @X 11
1E searchZero e1 -> restoreCD 1E e1
1D gotoMark 10 -> gotoMark 1D 10
@0 temp $1 -> beginCopying @0 $1
$C prepEraseC @D -> eraseC $C @D
$% copyZero @B -> backToSharpZero $% @0
1E initDividerByTwo $0 -> backToD 1E $1
1& restoreCD e0 -> restoreCD 1& e0
$X dec e0 -> dec $X e1
eE copyZero 0B -> backToSharpZero eE 00
1% checkEForZero $B -> stop 1% $B
0X restoreCD $D -> restoreCD 0X $D
$X checkEForZero 0B -> stop $X 0B
@$ eraseC @1 -> eraseC @$ @B
0& backToSharpZero $X -> backToSharpZero 0& $X
@% gotoDecC eD -> dec @% eD
eE searchZero $1 -> restoreCD eE $1
$# searchOne e0 -> restoreCD $# e0
eB incD $0 -> checkCD eB $1
$C copyZero eB -> backToSharpZero $C e0
$& eraseC 11 -> eraseC $& 1B
0B backToStart e0 -> backToStart 0B e0
0$ backToFirstC 00 -> backToFirstC 0$ 00
$X gotoMark e1 -> gotoMark $X e1
0# backToSharpOne 00 -> backToSharpOne 0# 00
e& goToPlaceForDivider @B -> backToFirstC e& @D
0% temp @1 -> beginCopying 0% @1
0& eraseC @0 -> eraseC 0& @B
@E checkCD 10 -> checkCD @E 10
e# backToStart 10 -> backToStart e# 10
e0 incD e0 -> checkCD e0 e1
e1 backToSharpZero 0C -> backToSharpZero e1 0C
eC restoreCD e0 -> restoreCD eC e0
$@ dec 10 -> dec $@ 11
1@ backToSharpZero $0 -> backToSharpZero 1@ $0
e1 backToSharpZero 1X -> backToSharpZero e1 1X
0X eraseE $E -> prepEraseC 0X $E
e% backToDFromRight $0 -> backToDFromRight e% $0
@X gotoDecC $1 -> gotoDecC @X $1
eC dec e0 -> dec eC e1
1@ backToSharpZero 00 -> backToSharpZero 1@ 00
eD checkCD 1D -> checkCD eD 1D
$# backToSharpZero @X -> backToSharpZero $# @X
$E checkCD @1 -> checkCD $E @1
@E findBlank 1B -> FINAL @E 1B
1$ forwardToLastD 1E -> incD 1$ 1E
$@ findBlank 01 -> temp $@ 01
0@ dec 10 -> dec 0@ 11
e0 backToDFromRight eB -> backToDFromRight e0 eB
1$ backToDFromLeft 00 -> backToDFromLeft 1$ 00
0C searchOne 11 -> backToDFromLeft 0C 1&
0% backToSharpZero $C -> backToSharpZero 0% $C
$0 findBlank @0 -> temp $0 @0
$B findZero $1 -> beginCopying $B $1
@B searchNextBit $0 -> searchNextBit @B $0
1D eraseC @0 -> eraseC 1D @B
eD restoreCD e% -> restoreCD eD e0
eD gotoDecC 10 -> gotoDecC eD 10
0% backToSharpOne @X -> backToSharpOne 0% @X
e@ restoreCD 0D -> restoreCD e@ 0D
0E backToSharpZero @X -> backToSharpZero 0E @X
$D restoreCD 1D -> restoreCD $D 1D
@@ searchNextBit $1 -> searchNextBit @@ $1
@C restoreCD 10 -> restoreCD @C 10
0$ backToFirstC $1 -> backToFirstC 0$ $1
$0 findBlank e1 -> temp $0 e1
$B gotoDecC 0D -> dec $B 0D
$D prepEraseC e0 -> prepEraseC $D e0
$B searchOne @1 -> backToDFromLeft $B @&
0E eraseC 11 -> eraseC 0E 1B
0D beginCopying 1B -> backToStart 0D 1C
0B backToDFromLeft 01 -> backToDFromLeft 0B 01
e# backToStart 01 -> backToStart e# 01
1$ backToDFromLeft eD -> searchNextBit 1$ eD
@& eraseC e0 -> eraseC @& eB
10 eraseE eE -> prepEraseC 10 eE
@1 eraseE 10 -> eraseE @1 1B
0C temp @0 -> beginCopying 0C @0
$C backToDFromLeft @D -> searchNextBit $C @D
$1 eraseC 10 -> eraseC $1 1B
00 restoreCD 10 -> restoreCD 00 10
1X copyOne eB -> backToSharpOne 1X e1
$E restoreCD eD -> restoreCD $E eD
10 restoreCD 0% -> restoreCD 10 00
11 gotoDecC 00 -> gotoDecC 11 00
$1 eraseE 00 -> eraseE $1 0B
e0 checkCD 11 -> checkCD e0 11
1B gotoMark 00 -> gotoMark 1B 00
0X restoreCD $% -> restoreCD 0X $0
10 restoreCD $D -> restoreCD 10 $D
@0 searchZero @0 -> backToDFromLeft @0 @%
@1 prepEraseC 11 -> prepEraseC @1 11
e% incD @1 -> incD e% @0
1$ backToDFromLeft @D -> searchNextBit 1$ @D
@# backToD 00 -> backToD @# 00
$1 checkEForZero eB -> stop $1 eB
$B backToD $1 -> backToD $B $1
0$ checkCD $0 -> checkCD 0$ $0
0X backToSharpZero 10 -> backToSharpZero 0X 10
eD searchNextBit 11 -> searchNextBit eD 11
00 backToDFromLeft 1D -> searchNextBit 00 1D
e1 backToFirstC $1 -> backToFirstC e1 $1
1% findBlank 10 -> temp 1% 10
0# backToDFromRight $B -> backToDFromRight 0# $B
0& backToSharpZero @X -> backToSharpZero 0& @X
10 temp 01 -> beginCopying 10 01
1B restoreCD 0& -> restoreCD 1B 01
@0 gotoDecC 0D -> dec @0 0D
0# backToDFromLeft @& -> backToDFromLeft 0# @&
e# backToSharpZero $1 -> backToSharpZero e# $1
0D checkEForZero eB -> stop 0D eB
11 backToDFromLeft 01 -> backToDFromLeft 11 01
e$ eraseC 10 -> eraseC e$ 1B
$# eraseE @0 -> eraseE $# @B
$& searchNextBit @1 -> searchNextBit $& @1
@C backToSharpOne @E -> backToSharpOne @C @E
e@ restoreCD e0 -> restoreCD e@ e0
@@ copyZero eB -> backToSharpZero @@ e0
0@ incD e0 -> checkCD 0@ e1
$@ prepEraseC $0 -> prepEraseC $@ $0
1B backToSharpZero 10 -> backToSharpZero 1B 10
$0 searchZero 00 -> backToDFromLeft $0 0%
00 restoreCD 01 -> restoreCD 00 01
00 eraseE @E -> prepEraseC 00 @E
1& replaceWithBlanks @@ -> backToDFromRight 1& @@
forwardToLastD eD -> eD forwardToLastD
@X gotoDecC @D -> dec @X @D
1D beginCopying 0B -> backToStart 1D 0C
$E backToSharpOne 00 -> backToSharpOne $E 00
0E dec 00 -> dec 0E 01
$% backToSharpZero 0X -> backToSharpZero $% 0X
@C massErase e@ -> eraseE @C e@
e# eraseC @1 -> eraseC e# @B
@% backToSharpZero e0 -> backToSharpZero @% e0
@C backToD 11 -> backToD @C 11
1$ backToDFromLeft $0 -> backToDFromLeft 1$ $0
1B restoreCD $D -> restoreCD 1B $D
@E findBlank $B -> FINAL @E $B
$# searchZero e1 -> restoreCD $# e1
0$ backToDFromLeft eD -> searchNextBit 0$ eD
@C incD $1 -> incD @C $0
@% backToSharpZero 0E -> backToSharpZero @% 0E
0D gotoMark 00 -> gotoMark 0D 00
e% eraseC 0C -> backToStart e% 0X
@# findBlank $0 -> temp @# $0
0% beginCopying @B -> backToStart 0% @C
$$ restoreCD 01 -> restoreCD $$ 01
0@ findBlank 0B -> FINAL 0@ 0B
1B checkCD 10 -> checkCD 1B 10
0@ checkCD $0 -> checkCD 0@ $0
0@ backToSharpOne @1 -> backToSharpOne 0@ @1
1B backToDFromLeft e1 -> backToDFromLeft 1B e1
1@ incD 00 -> checkCD 1@ 01
1D dec e0 -> dec 1D e1
$0 eraseE $E -> prepEraseC $0 $E
eD backToDFromRight 0E -> backToDFromRight eD 0E
0& backToSharpOne $0 -> backToSharpOne 0& $0
$X backToDFromRight e1 -> backToDFromRight $X e1
@1 initDivider $0 -> initDividerByTwo @1 $0
1$ prepEraseC @0 -> prepEraseC 1$ @0
$B gotoLastE $@ -> dec $B $@
$# backToSharpZero @1 -> backToSharpZero $# @1
1& gotoMark @E -> gotoDecC 1& @E
@@ eraseE @0 -> eraseE @@ @B
e1 gotoMark @E -> gotoDecC e1 @E
e@ replaceWithBlanks e@ -> backToDFromRight e@ e@
e@ prepEraseC eD -> eraseC e@ eD
0X incD e1 -> incD 0X e0
e# backToStart 00 -> backToStart e# 00
1# initDividerByTwo 10 -> backToD 1# 11
@X backToSharpOne 0E -> backToSharpOne @X 0E
@C eraseE 00 -> eraseE @C 0B
0# findBlank 11 -> temp 0# 11
1@ dec e1 -> gotoMark 1@ e0
11 eraseE @0 -> eraseE 11 @B
@B copyOne eB -> backToSharpOne @B e1
@X restoreCD 10 -> restoreCD @X 10
@& prepEraseC eD -> eraseC @& eD
0D restoreCD 01 -> restoreCD 0D 01
$E gotoDecC eD -> dec $E eD
@X gotoDecC e1 -> gotoDecC @X e1
eE dec 10 -> dec eE 11
e% backToSharpOne $C -> backToSharpOne e% $C
eB dec $1 -> gotoMark eB $0
$E findZero @1 -> beginCopying $E @1
@1 eraseC e0 -> eraseC @1 eB
$0 backToDFromLeft e1 -> backToDFromLeft $0 e1
$# eraseE $0 -> eraseE $# $B
@E replaceWithBlanks $@ -> backToDFromRight @E $@
@D incD e1 -> incD @D e0
@% dec 01 -> gotoMark @% 00
@0 goToPlaceForDivider 1B -> backToFirstC @0 1D
@E backToDFromRight 11 -> backToDFromRight @E 11
e% restoreCD 0& -> restoreCD e% 01
e& backToSharpOne 1X -> backToSharpOne e& 1X
e0 backToSharpOne 01 -> backToSharpOne e0 01
@$ replaceWithBlanks e@ -> backToDFromRight @$ e@
eC restoreCD 0D -> restoreCD eC 0D
$% massErase $@ -> eraseE $% $@
@1 restoreCD 1% -> restoreCD @1 10
e$ backToSharpOne $E -> backToSharpOne e$ $E
searchZero @% -> @% searchZero
1# eraseC $1 -> eraseC 1# $B
FINAL @1 -> FINAL @ FINAL
01 backToSharpOne 01 -> backToSharpOne 01 01
01 incD 10 -> checkCD 01 11
@0 backToD 00 -> backToD @0 00
e1 restoreCD @0 -> restoreCD e1 @0
e% backToDFromLeft $1 -> backToDFromLeft e% $1
eB backToD $0 -> backToD eB $0
$@ backToSharpOne @C -> backToSharpOne $@ @C
eX replaceWithBlanks $@ -> backToDFromRight eX $@
$& backToSharpOne 1E -> backToSharpOne $& 1E
$% backToSharpZero eX -> backToSharpZero $% eX
10 copyOne @B -> backToSharpOne 10 @1
01 backToSharpZero 10 -> backToSharpZero 01 10
e@ eraseC 0C -> backToStart e@ 0X
@E checkCD e1 -> checkCD @E e1
$E gotoDecC 0D -> dec $E 0D
00 searchNextBit e0 -> searchNextBit 00 e0
@E eraseC @C -> backToStart @E @X
e$ backToSharpZero @C -> backToSharpZero e$ @C
1# backToStart 01 -> backToStart 1# 01
eX forwardToLastD @E -> incD eX @E
0D initDividerByTwo e0 -> backToD 0D e1
$1 backToSharpOne @D -> backToSharpOne $1 @D
@D backToSharpOne $X -> backToSharpOne @D $X
$D prepEraseC $1 -> prepEraseC $D $1
incD $D -> $D FINAL
@D temp 10 -> beginCopying @D 10
@X restoreCD @% -> restoreCD @X @0
$@ backToSharpZero @C -> backToSharpZero $@ @C
0D backToDFromLeft 10 -> backToDFromLeft 0D 10
e$ dec $1 -> gotoMark e$ $0
e% searchZero 11 -> restoreCD e% 11
eB restoreCD 00 -> restoreCD eB 00
$B findBlank 0B -> FINAL $B 0B
1X backToSharpZero 11 -> backToSharpZero 1X 11
1$ backToD e0 -> backToD 1$ e0
e% dec e0 -> dec e% e1
e@ backToSharpZero 11 -> backToSharpZero e@ 11
@$ beginCopying eB -> backToStart @$ eC
@D copyZero $B -> backToSharpZero @D $0
1E dec $1 -> gotoMark 1E $0
eB backToSharpZero 0E -> backToSharpZero eB 0E
11 checkEForZero @B -> stop 11 @B
$@ backToDFromLeft @0 -> backToDFromLeft $@ @0
e& gotoDecC @D -> dec e& @D
$X backToSharpOne @0 -> backToSharpOne $X @0
$X backToSharpOne 11 -> backToSharpOne $X 11
0C backToStart 00 -> backToStart 0C 00
eX backToDFromLeft @0 -> backToDFromLeft eX @0
eB backToSharpOne $D -> backToSharpOne eB $D
0B backToStart 00 -> backToStart 0B 00
00 backToSharpZero $C -> backToSharpZero 00 $C
@@ temp e1 -> beginCopying @@ e1
1@ dec @1 -> gotoMark 1@ @0
01 eraseC $1 -> eraseC 01 $B
0E backToSharpZero 0E -> backToSharpZero 0E 0E
e% gotoLastE $@ -> dec e% $@
0# restoreCD @1 -> restoreCD 0# @1
1X backToSharpOne eX -> backToSharpOne 1X eX
$@ gotoMark @1 -> gotoMark $@ @1
e$ backToD 01 -> backToD e$ 01
eB backToDFromLeft @D -> searchNextBit eB @D
eB backToDFromRight @B -> backToDFromRight eB @B
@E backToSharpZero 11 -> backToSharpZero @E 11
1# restoreCD @& -> restoreCD 1# @1
checkOneD @D -> @D searchOne
0B dec @1 -> gotoMark 0B @0
11 nullifier eB -> initDivider 11 eE
eB FINAL -> FINAL e FINAL
@% backToSharpOne e0 -> backToSharpOne @% e0
$@ dec e0 -> dec $@ e1
0# eraseC $C -> backToStart 0# $X
0E searchZero e1 -> restoreCD 0E e1
e% backToSharpOne @C -> backToSharpOne e% @C
@1 backToDFromRight 10 -> backToDFromRight @1 10
1E checkCD 10 -> checkCD 1E 10
0B backToD e0 -> backToD 0B e0
e@ nullifier $B -> initDivider e@ $E
0& backToDFromRight @0 -> backToDFromRight 0& @0
$1 eraseC 0C -> backToStart $1 0X
0X backToSharpZero 1E -> backToSharpZero 0X 1E
@X checkCD 1D -> checkCD @X 1D
$D backToSharpZero $0 -> backToSharpZero $D $0
$E backToSharpZero 1E -> backToSharpZero $E 1E
$@ initDivider 00 -> initDividerByTwo $@ 00
1% searchNextBit 00 -> searchNextBit 1% 00
$0 eraseE 10 -> eraseE $0 1B
0D temp 01 -> beginCopying 0D 01
1$ backToDFromLeft 01 -> backToDFromLeft 1$ 01
1& prepEraseC 00 -> prepEraseC 1& 00
$X goToPlaceForDivider 1B -> backToFirstC $X 1D
$X findZero $1 -> beginCopying $X $1
$B findBlank $B -> FINAL $B $B
e% searchNextBit 11 -> searchNextBit e% 11
eC backToFirstC 10 -> backToFirstC eC 10
$1 checkCD 11 -> checkCD $1 11
@& findZero @1 -> beginCopying @& @1
eC backToDFromLeft 0& -> backToDFromLeft eC 0&
$@ findBlank $B -> FINAL $@ $B
1@ gotoMark @E -> gotoDecC 1@ @E
10 gotoDecC $1 -> gotoDecC 10 $1
eE checkEForZero @B -> stop eE @B
10 restoreCD e0 -> restoreCD 10 e0
0B beginCopying eB -> backToStart 0B eC
00 searchOne @0 -> restoreCD 00 @0
$1 beginCopying eB -> backToStart $1 eC
$$ copyZero 1B -> backToSharpZero $$ 10
eB initDivider e0 -> initDividerByTwo eB e0
eD searchNextBit e1 -> searchNextBit eD e1
1& dec $0 -> dec 1& $1
@@ eraseE 00 -> eraseE @@ 0B
$& restoreCD 00 -> restoreCD $& 00
eD incD $1 -> incD eD $0
0C dec 01 -> gotoMark 0C 00
e@ dec e1 -> gotoMark e@ e0
1B backToDFromLeft e% -> backToDFromLeft 1B e%
1X backToStart e0 -> backToStart 1X e0
$E temp @0 -> beginCopying $E @0
0& initDividerByTwo @0 -> backToD 0& @1
1C backToDFromLeft 0D -> searchNextBit 1C 0D
0@ backToStart 11 -> backToStart 0@ 11
e% backToDFromLeft 10 -> backToDFromLeft e% 10
e@ gotoMark 11 -> gotoMark e@ 11
eX checkCD $D -> checkCD eX $D
@C dec e1 -> gotoMark @C e0
e0 checkCD 00 -> checkCD e0 00
0B backToFirstC 00 -> backToFirstC 0B 00
0D restoreCD e1 -> restoreCD 0D e1
$& temp 11 -> beginCopying $& 11
1# findBlank $0 -> temp 1# $0
1X restoreCD 1% -> restoreCD 1X 10
0E backToSharpOne $E -> backToSharpOne 0E $E
@B prepEraseC 00 -> prepEraseC @B 00
$D copyOne $B -> backToSharpOne $D $1
0B incD e1 -> incD 0B e0
0X dec 00 -> dec 0X 01
0% gotoDecC e0 -> gotoDecC 0% e0
1B gotoLastE e@ -> dec 1B e@
$X checkEForZero @B -> stop $X @B
@E copyZero 1B -> backToSharpZero @E 10
eC restoreCD e& -> restoreCD eC e1
@@ temp e0 -> beginCopying @@ e0
0D findBlank @1 -> temp 0D @1
$& checkEForZero 0B -> stop $& 0B
1$ goToPlaceForDivider $B -> backToFirstC 1$ $D
1$ prepEraseC 1D -> eraseC 1$ 1D
1@ backToSharpOne 1X -> backToSharpOne 1@ 1X
1& initDivider e0 -> initDividerByTwo 1& e0
@X backToSharpZero $0 -> backToSharpZero @X $0
1$ backToSharpOne $E -> backToSharpOne 1$ $E
0% checkEForZero 1B -> stop 0% 1B
eX searchOne e0 -> restoreCD eX e0
0@ prepEraseC e1 -> prepEraseC 0@ e1
e& backToD 11 -> backToD e& 11
0B findBlank 01 -> temp 0B 01
11 searchNextBit $1 -> searchNextBit 11 $1
e@ gotoDecC e1 -> gotoDecC e@ e1
@% backToD 11 -> backToD @% 11
e@ backToSharpOne eC -> backToSharpOne e@ eC
e@ backToFirstC e1 -> backToFirstC e@ e1
11 goToPlaceForDivider 1B -> backToFirstC 11 1D
@X findBlank eB -> FINAL @X eB
@@ gotoDecC $D -> dec @@ $D
e# gotoMark 10 -> gotoMark e# 10
@0 searchZero $0 -> backToDFromLeft @0 $%
@D backToSharpOne 01 -> backToSharpOne @D 01
eD gotoDecC $0 -> gotoDecC eD $0
0% copyOne eB -> backToSharpOne 0% e1
@0 restoreCD $1 -> restoreCD @0 $1
backToDFromRight @D -> @D createCopy
0B initDivider 10 -> initDividerByTwo 0B 10
backToDAfterInc 10 -> 10 backToDAfterInc
1@ prepEraseC 01 -> prepEraseC 1@ 01
1$ backToD $1 -> backToD 1$ $1
searchOne 1% -> 1% searchOne
e1 replaceWithBlanks e@ -> backToDFromRight e1 e@
0$ findZero 01 -> beginCopying 0$ 01
0@ backToSharpOne 0E -> backToSharpOne 0@ 0E
$X backToSharpZero @X -> backToSharpZero $X @X
$0 backToSharpOne 0E -> backToSharpOne $0 0E
$B beginCopying eB -> backToStart $B eC
@X backToDFromLeft @D -> searchNextBit @X @D
1$ backToSharpOne 1C -> backToSharpOne 1$ 1C
$C findBlank 0B -> FINAL $C 0B
1@ backToFirstC 01 -> backToFirstC 1@ 01
00 restoreCD $& -> restoreCD 00 $1
1# backToSharpOne 00 -> backToSharpOne 1# 00
e& backToD @0 -> backToD e& @0
$0 copyOne @B -> backToSharpOne $0 @1
eC backToSharpOne 0C -> backToSharpOne eC 0C
1& backToSharpZero e1 -> backToSharpZero 1& e1
eX checkCD 10 -> checkCD eX 10
$D eraseE eE -> prepEraseC $D eE
eE backToDFromLeft 11 -> backToDFromLeft eE 11
$$ copyOne eB -> backToSharpOne $$ e1
eX gotoDecC e0 -> gotoDecC eX e0
0B gotoDecC eD -> dec 0B eD
$D backToSharpZero 10 -> backToSharpZero $D 10
00 findBlank 00 -> temp 00 00
$X backToSharpZero 00 -> backToSharpZero $X 00
$D restoreCD e& -> restoreCD $D e1
createCopy 0E -> 0E gotoLastE
@& gotoMark 01 -> gotoMark @& 01
e$ searchNextBit $0 -> searchNextBit e$ $0
0D restoreCD e% -> restoreCD 0D e0
@% eraseC @0 -> eraseC @% @B
e# findBlank e1 -> temp e# e1
$1 gotoMark $E -> gotoDecC $1 $E
@B goToPlaceForDivider eB -> backToFirstC @B eD
0# restoreCD e0 -> restoreCD 0# e0
$X eraseC eC -> backToStart $X eX
1@ prepEraseC 00 -> prepEraseC 1@ 00
@1 searchZero 11 -> restoreCD @1 11
@& backToFirstC $1 -> backToFirstC @& $1
e0 copyZero @B -> backToSharpZero e0 @0
$@ gotoDecC e0 -> gotoDecC $@ e0
@& findZero $1 -> beginCopying @& $1
gotoLastE $D -> $D gotoLastE
$E gotoDecC e0 -> gotoDecC $E e0
e@ searchNextBit e0 -> searchNextBit e@ e0
eB backToSharpZero 00 -> backToSharpZero eB 00
e1 checkCD $D -> checkCD e1 $D
$X findBlank eB -> FINAL $X eB
0X dec $1 -> gotoMark 0X $0
1E backToSharpOne eD -> backToSharpOne 1E eD
$% searchNextBit 01 -> searchNextBit $% 01
e@ gotoMark $0 -> gotoMark e@ $0
@% restoreCD $D -> restoreCD @% $D
1B restoreCD 0D -> restoreCD 1B 0D
0B eraseE 1E -> prepEraseC 0B 1E
0B backToSharpZero 0E -> backToSharpZero 0B 0E
1B beginCopying @B -> backToStart 1B @C
1E restoreCD 10 -> restoreCD 1E 10
e$ backToDFromLeft @& -> backToDFromLeft e$ @&
$0 prepEraseC 01 -> prepEraseC $0 01
eC findBlank 00 -> temp eC 00
e$ gotoMark @1 -> gotoMark e$ @1
00 backToFirstC 10 -> backToFirstC 00 10
eB eraseC @0 -> eraseC eB @B
0% temp $1 -> beginCopying 0% $1
eB forwardToLastD 1E -> incD eB 1E
@# incD e1 -> incD @# e0
$0 copyOne $B -> backToSharpOne $0 $1
01 checkEForZero 1B -> stop 01 1B
eE backToSharpZero @X -> backToSharpZero eE @X
$% prepEraseC e1 -> prepEraseC $% e1
e0 dec e1 -> gotoMark e0 e0
0E goToPlaceForDivider @B -> backToFirstC 0E @D
0$ nullifier @B -> initDivider 0$ @E
$% backToDFromRight 1E -> backToDFromRight $% 1E
@B temp 11 -> beginCopying @B 11
1$ searchOne 00 -> restoreCD 1$ 00
e0 backToFirstC @0 -> backToFirstC e0 @0
@& searchOne 10 -> restoreCD @& 10
00 backToDFromRight 01 -> backToDFromRight 00 01
$& gotoMark eE -> gotoDecC $& eE
@E findZero $1 -> beginCopying @E $1
0@ backToSharpOne eD -> backToSharpOne 0@ eD
@# findZero 11 -> beginCopying @# 11
0X prepEraseC @0 -> prepEraseC 0X @0
e# restoreCD $1 -> restoreCD e# $1
@C backToStart 10 -> backToStart @C 10
1D backToSharpOne @1 -> backToSharpOne 1D @1
eD gotoMark $1 -> gotoMark eD $1
0E gotoDecC $D -> dec 0E $D
e% searchOne 00 -> restoreCD e% 00
massErase $1 -> $1 massErase
0$ gotoLastE $@ -> dec 0$ $@
$@ backToSharpOne @E -> backToSharpOne $@ @E
0$ restoreCD @0 -> restoreCD 0$ @0
@@ FINAL -> FINAL @ FINAL
e1 eraseC 00 -> eraseC e1 0B
0% searchZero 01 -> restoreCD 0% 01
0@ restoreCD $% -> restoreCD 0@ $0
00 forwardToLastD @E -> incD 00 @E
@1 backToDFromRight @0 -> backToDFromRight @1 @0
@B gotoLastE 1@ -> dec @B 1@
$E prepEraseC eD -> eraseC $E eD
01 backToSharpZero e0 -> backToSharpZero 01 e0
1E backToSharpZero $D -> backToSharpZero 1E $D
0# backToSharpOne $X -> backToSharpOne 0# $X
1C searchNextBit $1 -> searchNextBit 1C $1
0& temp 10 -> beginCopying 0& 10
0% findBlank 00 -> temp 0% 00
$& backToFirstC e1 -> backToFirstC $& e1
@D temp $1 -> beginCopying @D $1
copyOne 0D -> 0D copyOne
@B backToD 11 -> backToD @B 11
@1 eraseC $0 -> eraseC @1 $B
@% findBlank 11 -> temp @% 11
$B backToStart 00 -> backToStart $B 00
e1 searchZero @1 -> restoreCD e1 @1
0C forwardToLastD @E -> incD 0C @E
1B backToSharpZero eC -> backToSharpZero 1B eC
@% backToD $1 -> backToD @% $1
$B backToD e1 -> backToD $B e1
$B backToDFromLeft $% -> backToDFromLeft $B $%
e0 findBlank @0 -> temp e0 @0
@& gotoDecC 01 -> gotoDecC @& 01
0X backToSharpZero 0D -> backToSharpZero 0X 0D
0E backToSharpOne 0E -> backToSharpOne 0E 0E
10 backToSharpZero 1X -> backToSharpZero 10 1X
0B forwardToLastD 1E -> incD 0B 1E
10 backToDFromLeft e& -> backToDFromLeft 10 e&
eE backToD e0 -> backToD eE e0
0X backToD e1 -> backToD 0X e1
@E checkCD 1D -> checkCD @E 1D
eC backToSharpOne @C -> backToSharpOne eC @C
$$ prepEraseC e1 -> prepEraseC $$ e1
$% backToSharpOne 0E -> backToSharpOne $% 0E
$# backToStart @0 -> backToStart $# @0
@$ gotoMark 11 -> gotoMark @$ 11
$1 gotoMark @E -> gotoDecC $1 @E
eE temp 01 -> beginCopying eE 01
e$ findBlank e1 -> temp e$ e1
eC backToSharpZero 0C -> backToSharpZero eC 0C
eX gotoLastE 1@ -> dec eX 1@
@D prepEraseC @1 -> prepEraseC @D @1
0C backToDFromLeft @D -> searchNextBit 0C @D
e@ backToSharpZero @0 -> backToSharpZero e@ @0
10 findBlank 11 -> temp 10 11
e$ backToD 00 -> backToD e$ 00
0C backToSharpOne 1E -> backToSharpOne 0C 1E
0B incD 10 -> checkCD 0B 11
11 backToSharpOne eE -> backToSharpOne 11 eE
e@ gotoMark @E -> gotoDecC e@ @E
$E findZero $1 -> beginCopying $E $1
e# backToStart 11 -> backToStart e# 11
e$ eraseC $0 -> eraseC e$ $B
gotoLastE e1 -> e1 gotoLastE
e% incD @0 -> checkCD e% @1
e@ initDividerByTwo 10 -> backToD e@ 11
1# backToSharpOne @1 -> backToSharpOne 1# @1
1@ eraseE @E -> prepEraseC 1@ @E
1% eraseE 11 -> eraseE 1% 1B
$B restoreCD $% -> restoreCD $B $0
0C gotoMark $E -> gotoDecC 0C $E
11 gotoLastE @@ -> dec 11 @@
1D backToDFromRight e1 -> backToDFromRight 1D e1
1D backToSharpZero @D -> backToSharpZero 1D @D
0E backToStart @1 -> backToStart 0E @1
eC findBlank $0 -> temp eC $0
0@ prepEraseC 01 -> prepEraseC 0@ 01
0# backToSharpOne eE -> backToSharpOne 0# eE
1D massErase 0@ -> eraseE 1D 0@
$C initDividerByTwo @0 -> backToD $C @1
0E backToDFromLeft 10 -> backToDFromLeft 0E 10
@D findBlank e1 -> temp @D e1
@# backToFirstC @0 -> backToFirstC @# @0
0E backToSharpOne 0D -> backToSharpOne 0E 0D
@@ replaceWithBlanks 1@ -> backToDFromRight @@ 1@
@# backToDFromLeft @& -> backToDFromLeft @# @&
$1 checkCD $0 -> checkCD $1 $0
$C gotoDecC 10 -> gotoDecC $C 10
1& backToSharpOne 1E -> backToSharpOne 1& 1E
eC replaceWithBlanks 1@ -> backToDFromRight eC 1@
1& prepEraseC 0D -> eraseC 1& 0D
@B FINAL -> FINAL @ FINAL
eD temp 10 -> beginCopying eD 10
1# backToSharpOne 0D -> backToSharpOne 1# 0D
@C initDivider @0 -> initDividerByTwo @C @0
@% backToDFromRight eE -> backToDFromRight @% eE
$& backToDFromLeft $D -> searchNextBit $& $D
0& backToSharpZero 00 -> backToSharpZero 0& 00
1B backToDFromLeft 01 -> backToDFromLeft 1B 01
$D temp 01 -> beginCopying $D 01
1# backToSharpZero 00 -> backToSharpZero 1# 00
$X beginCopying eB -> backToStart $X eC
0# gotoDecC @0 -> gotoDecC 0# @0
e% massErase e@ -> eraseE e% e@
0# searchZero 11 -> restoreCD 0# 11
0D backToSharpOne 0C -> backToSharpOne 0D 0C
$@ gotoMark e1 -> gotoMark $@ e1
e# searchZero $1 -> restoreCD e# $1
e& prepEraseC 1D -> eraseC e& 1D
eX backToDFromLeft 1D -> searchNextBit eX 1D
0% backToD $1 -> backToD 0% $1
eE backToFirstC 00 -> backToFirstC eE 00
$C eraseC 00 -> eraseC $C 0B
@# restoreCD $% -> restoreCD @# $0
1$ dec $0 -> dec 1$ $1
$D replaceWithBlanks 0@ -> backToDFromRight $D 0@
1# backToStart @0 -> backToStart 1# @0
e# backToFirstC e0 -> backToFirstC e# e0
$@ eraseC $0 -> eraseC $@ $B
@& replaceWithBlanks $@ -> backToDFromRight @& $@
1% initDividerByTwo e0 -> backToD 1% e1
1E backToDFromLeft 10 -> backToDFromLeft 1E 10
@$ checkCD 10 -> checkCD @$ 10
$@ temp e1 -> beginCopying $@ e1
1& prepEraseC $D -> eraseC 1& $D
@% checkCD 00 -> checkCD @% 00
@@ backToDFromLeft 01 -> backToDFromLeft @@ 01
1D dec 10 -> dec 1D 11
e$ temp $1 -> beginCopying e$ $1
0B temp $1 -> beginCopying 0B $1
@@ backToD @1 -> backToD @@ @1
e1 restoreCD e% -> restoreCD e1 e0
1C temp $1 -> beginCopying 1C $1
0# dec 01 -> gotoMark 0# 00
e& backToSharpZero 00 -> backToSharpZero e& 00
1@ restoreCD @& -> restoreCD 1@ @1
1@ goToPlaceForDivider 1B -> backToFirstC 1@ 1D
1$ backToDFromRight $0 -> backToDFromRight 1$ $0
e@ backToSharpZero $E -> backToSharpZero e@ $E
0& prepEraseC 0D -> eraseC 0& 0D
@# replaceWithBlanks @@ -> backToDFromRight @# @@
eB backToFirstC 11 -> backToFirstC eB 11
10 gotoDecC @1 -> gotoDecC 10 @1
@# searchOne $0 -> restoreCD @# $0
1% dec 01 -> gotoMark 1% 00
@0 backToSharpOne e1 -> backToSharpOne @0 e1
0D findBlank 00 -> temp 0D 00
1# backToStart e0 -> backToStart 1# e0
@& backToDFromLeft 00 -> backToDFromLeft @& 00
1B restoreCD eD -> restoreCD 1B eD
@B backToDFromRight 1E -> backToDFromRight @B 1E
1& prepEraseC $0 -> prepEraseC 1& $0
e& dec 01 -> gotoMark e& 00
0# restoreCD 11 -> restoreCD 0# 11
$# backToSharpOne 0C -> backToSharpOne $# 0C
@& backToDFromLeft 1& -> backToDFromLeft @& 1&
1C backToDFromRight eE -> backToDFromRight 1C eE
0D findBlank e1 -> temp 0D e1
e# restoreCD eD -> restoreCD e# eD
e% gotoDecC 00 -> gotoDecC e% 00
ifZero 0D -> 0D moveToE
0% goToPlaceForDivider 0B -> backToFirstC 0% 0D
10 backToSharpOne 1E -> backToSharpOne 10 1E
e1 temp e1 -> beginCopying e1 e1
$C backToSharpZero 1C -> backToSharpZero $C 1C
1D FINAL -> FINAL 1 FINAL
@E searchZero 10 -> backToDFromLeft @E 1%
1& nullifier 0B -> initDivider 1& 0E
1% backToDFromLeft 0& -> backToDFromLeft 1% 0&
0E backToSharpOne @X -> backToSharpOne 0E @X
0@ checkEForZero 1B -> stop 0@ 1B
$B incD 00 -> checkCD $B 01
0& eraseC $0 -> eraseC 0& $B
1% backToDFromRight eB -> backToDFromRight 1% eB
e@ beginCopying 0B -> backToStart e@ 0C
0& backToFirstC e1 -> backToFirstC 0& e1
0$ eraseC 1C -> backToStart 0$ 1X
0# searchNextBit 01 -> searchNextBit 0# 01
1& backToDFromRight $1 -> backToDFromRight 1& $1
$0 restoreCD $1 -> restoreCD $0 $1
0X gotoDecC $D -> dec 0X $D
@B eraseE e1 -> eraseE @B eB
0@ gotoMark 01 -> gotoMark 0@ 01
$X searchOne $1 -> backToDFromLeft $X $&
1X restoreCD 0D -> restoreCD 1X 0D
@D copyZero @B -> backToSharpZero @D @0
eB eraseC 01 -> eraseC eB 0B
@% prepEraseC 0D -> eraseC @% 0D
1X gotoMark $E -> gotoDecC 1X $E
e1 goToPlaceForDivider eB -> backToFirstC e1 eD
@$ eraseE e0 -> eraseE @$ eB
1# eraseC e1 -> eraseC 1# eB
eC searchZero e1 -> restoreCD eC e1
e& searchZero $1 -> restoreCD e& $1
0% eraseE @0 -> eraseE 0% @B
@% backToSharpOne eC -> backToSharpOne @% eC
e% backToSharpZero @1 -> backToSharpZero e% @1
10 backToFirstC e0 -> backToFirstC 10 e0
1$ eraseE $1 -> eraseE 1$ $B
$E backToD 00 -> backToD $E 00
@X eraseE @1 -> eraseE @X @B
$@ eraseE eE -> prepEraseC $@ eE
e0 searchNextBit $0 -> searchNextBit e0 $0
@# temp @0 -> beginCopying @# @0
eD restoreCD @D -> restoreCD eD @D
$# gotoMark 1E -> gotoDecC $# 1E
$X findZero 11 -> beginCopying $X 11
0X gotoLastE 0@ -> dec 0X 0@
1B copyZero $B -> backToSharpZero 1B $0
@B restoreCD $D -> restoreCD @B $D
@& gotoDecC $1 -> gotoDecC @& $1
1# temp 01 -> beginCopying 1# 01
1X goToPlaceForDivider $B -> backToFirstC 1X $D
e# forwardToLastD @E -> incD e# @E
$& backToFirstC $0 -> backToFirstC $& $0
@# eraseE @0 -> eraseE @# @B
01 restoreCD eD -> restoreCD 01 eD
@# gotoDecC e1 -> gotoDecC @# e1
@D gotoLastE @@ -> dec @D @@
$C checkCD $0 -> checkCD $C $0
@D goToPlaceForDivider eB -> backToFirstC @D eD
eX initDivider $0 -> initDividerByTwo eX $0
e$ prepEraseC e0 -> prepEraseC e$ e0
10 restoreCD e& -> restoreCD 10 e1
$C backToDFromLeft @& -> backToDFromLeft $C @&
@0 temp 10 -> beginCopying @0 10
00 backToSharpOne 1E -> backToSharpOne 00 1E
0% copyOne 0B -> backToSharpOne 0% 01
eE incD $0 -> checkCD eE $1
$$ backToSharpZero $D -> backToSharpZero $$ $D
eD checkCD 0D -> checkCD eD 0D
1C backToD 00 -> backToD 1C 00
0# prepEraseC 1D -> eraseC 0# 1D
0# eraseE 00 -> eraseE 0# 0B
0% initDivider e0 -> initDividerByTwo 0% e0
1X backToSharpOne $0 -> backToSharpOne 1X $0
0% gotoDecC 10 -> gotoDecC 0% 10
11 restoreCD eD -> restoreCD 11 eD
@C checkCD $1 -> checkCD @C $1
@X backToDFromLeft 0& -> backToDFromLeft @X 0&
$B eraseC 00 -> eraseC $B 0B
1C backToFirstC 10 -> backToFirstC 1C 10
eE eraseC 10 -> eraseC eE 1B
eC backToSharpOne $1 -> backToSharpOne eC $1
@X backToStart @1 -> backToStart @X @1
$X massErase 1@ -> eraseE $X 1@
eD backToSharpOne 01 -> backToSharpOne eD 01
$C gotoDecC $0 -> gotoDecC $C $0
1@ backToFirstC 00 -> backToFirstC 1@ 00
0& copyOne eB -> backToSharpOne 0& e1
1& prepEraseC @D -> eraseC 1& @D
eC backToD 10 -> backToD eC 10
$C restoreCD eD -> restoreCD $C eD
$$ searchOne 11 -> backToDFromLeft $$ 1&
$X backToStart 11 -> backToStart $X 11
@$ backToDFromLeft 0D -> searchNextBit @$ 0D
01 restoreCD 0D -> restoreCD 01 0D
eD massErase 0@ -> eraseE eD 0@
e0 temp @1 -> beginCopying e0 @1
eX backToDFromLeft 10 -> backToDFromLeft eX 10
e1 initDivider $0 -> initDividerByTwo e1 $0
1B findZero 11 -> beginCopying 1B 11
@E searchZero 00 -> backToDFromLeft @E 0%
11 prepEraseC 00 -> prepEraseC 11 00
$C backToSharpZero @X -> backToSharpZero $C @X
eB goToPlaceForDivider 0B -> backToFirstC eB 0D
@# incD 10 -> checkCD @# 11
@D findBlank 00 -> temp @D 00
eD backToDFromRight @E -> backToDFromRight eD @E
eC initDivider 00 -> initDividerByTwo eC 00
$C backToDFromRight 0E -> backToDFromRight $C 0E
$& backToSharpOne 0X -> backToSharpOne $& 0X
@# gotoMark @E -> gotoDecC @# @E
eB searchZero @0 -> backToDFromLeft eB @%
searchNextBit 0% -> 0% eqCD
eC temp 00 -> beginCopying eC 00
eC findZero $1 -> beginCopying eC $1
@0 checkCD 10 -> checkCD @0 10
0# backToSharpOne $E -> backToSharpOne 0# $E
0# restoreCD 1D -> restoreCD 0# 1D
$# backToFirstC $1 -> backToFirstC $# $1
@# backToD $1 -> backToD @# $1
1$ restoreCD @& -> restoreCD 1$ @1
0% backToSharpZero 0C -> backToSharpZero 0% 0C
1D backToSharpZero 0E -> backToSharpZero 1D 0E
e# backToSharpZero 1D -> backToSharpZero e# 1D
0X eraseC 01 -> eraseC 0X 0B
e& massErase 1@ -> eraseE e& 1@
@D checkCD 00 -> checkCD @D 00
$D eraseC 0C -> backToStart $D 0X
eB findBlank eB -> FINAL eB eB
$1 backToDFromRight 00 -> backToDFromRight $1 00
@0 findZero 11 -> beginCopying @0 11
@$ backToSharpOne $C -> backToSharpOne @$ $C
$E findBlank $0 -> temp $E $0
0D restoreCD 00 -> restoreCD 0D 00
1% prepEraseC $1 -> prepEraseC 1% $1
$1 backToSharpZero 0E -> backToSharpZero $1 0E
$# backToSharpOne eX -> backToSharpOne $# eX
$1 backToDFromLeft 0D -> searchNextBit $1 0D
11 prepEraseC e1 -> prepEraseC 11 e1
eE restoreCD 11 -> restoreCD eE 11
$0 backToSharpZero eE -> backToSharpZero $0 eE
1E eraseC 0C -> backToStart 1E 0X
$B dec @1 -> gotoMark $B @0
00 eraseC 0C -> backToStart 00 0X
1E gotoLastE @@ -> dec 1E @@
$X eraseE @E -> prepEraseC $X @E
1C findBlank 0B -> FINAL 1C 0B
@% goToPlaceForDivider 0B -> backToFirstC @% 0D
@B restoreCD e0 -> restoreCD @B e0
11 backToDFromLeft e1 -> backToDFromLeft 11 e1
0$ checkEForZero 0B -> stop 0$ 0B
1X restoreCD $D -> restoreCD 1X $D
0& forwardToLastD 1E -> incD 0& 1E
e1 backToFirstC @1 -> backToFirstC e1 @1
1C backToSharpZero $X -> backToSharpZero 1C $X
1% backToSharpOne 1X -> backToSharpOne 1% 1X
0$ backToSharpZero e0 -> backToSharpZero 0$ e0
1X searchZero @0 -> backToDFromLeft 1X @%
@E forwardToLastD $E -> incD @E $E
1X prepEraseC eD -> eraseC 1X eD
@& gotoLastE e@ -> dec @& e@
1@ prepEraseC 10 -> prepEraseC 1@ 10
0X backToFirstC @0 -> backToFirstC 0X @0
$D eraseC 10 -> eraseC $D 1B
1# findBlank 0B -> FINAL 1# 0B
11 backToSharpZero $1 -> backToSharpZero 11 $1
@B searchNextBit 00 -> searchNextBit @B 00
0# checkEForZero @B -> stop 0# @B
$# copyZero eB -> backToSharpZero $# e0
@B replaceWithBlanks 0@ -> backToDFromRight @B 0@
e# checkCD 01 -> checkCD e# 01
1@ gotoMark e0 -> gotoMark 1@ e0
00 goToPlaceForDivider $B -> backToFirstC 00 $D
0E backToSharpOne @1 -> backToSharpOne 0E @1
0X searchZero $1 -> restoreCD 0X $1
1B nullifier 0B -> initDivider 1B 0E
$@ findZero e1 -> beginCopying $@ e1
@E backToFirstC $0 -> backToFirstC @E $0
01 backToSharpZero 0E -> backToSharpZero 01 0E
e# copyZero $B -> backToSharpZero e# $0
0& backToDFromLeft $D -> searchNextBit 0& $D
eC findBlank e1 -> temp eC e1
1C backToDFromLeft e% -> backToDFromLeft 1C e%
eB searchZero $1 -> restoreCD eB $1
0E backToStart 00 -> backToStart 0E 00
e0 backToDFromLeft 01 -> backToDFromLeft e0 01
@$ findBlank e1 -> temp @$ e1
0C findBlank 10 -> temp 0C 10
1X forwardToLastD 1E -> incD 1X 1E
$E backToDFromLeft @0 -> backToDFromLeft $E @0
01 backToD @0 -> backToD 01 @0
1D backToDFromLeft 0& -> backToDFromLeft 1D 0&
@1 findBlank @0 -> temp @1 @0
@1 checkCD eD -> checkCD @1 eD
FINAL eB -> FINAL e FINAL
11 prepEraseC $D -> eraseC 11 $D
1X backToDFromLeft $& -> backToDFromLeft 1X $&
eD forwardToLastD 0E -> incD eD 0E
@D searchZero e0 -> backToDFromLeft @D e%
FINAL $C -> FINAL $ FINAL
@& dec 01 -> gotoMark @& 00
1D eraseE @1 -> eraseE 1D @B
eD backToSharpZero eD -> backToSharpZero eD eD
1C eraseE @0 -> eraseE 1C @B
e@ gotoDecC $D -> dec e@ $D
@X findBlank $B -> FINAL @X $B
0$ eraseC @0 -> eraseC 0$ @B
$% restoreCD $% -> restoreCD $% $0
1B restoreCD $1 -> restoreCD 1B $1
$E backToSharpZero 11 -> backToSharpZero $E 11
eC restoreCD 0% -> restoreCD eC 00
$% backToSharpOne 1E -> backToSharpOne $% 1E
11 checkCD @0 -> checkCD 11 @0
@# goToPlaceForDivider 0B -> backToFirstC @# 0D
$1 eraseE 10 -> eraseE $1 1B
01 backToDFromRight 0B -> backToDFromRight 01 0B
11 initDividerByTwo 00 -> backToD 11 01
@D findZero 01 -> beginCopying @D 01
0$ backToDFromRight 10 -> backToDFromRight 0$ 10
$$ checkEForZero 1B -> stop $$ 1B
1D gotoDecC e0 -> gotoDecC 1D e0
@$ eraseE @1 -> eraseE @$ @B
1# backToD 10 -> backToD 1# 10
moveToE e1 -> e1 moveToE
@D beginCopying $B -> backToStart @D $C
@X backToDFromRight @0 -> backToDFromRight @X @0
1E backToSharpZero $1 -> backToSharpZero 1E $1
@$ backToDFromRight $E -> backToDFromRight @$ $E
@$ FINAL -> FINAL @ FINAL
@$ backToSharpZero 0X -> backToSharpZero @$ 0X
0X eraseE 10 -> eraseE 0X 1B
00 incD @0 -> checkCD 00 @1
0% checkCD e0 -> checkCD 0% e0
@D gotoDecC $D -> dec @D $D
@# checkCD $0 -> checkCD @# $0
eC backToSharpOne e1 -> backToSharpOne eC e1
$0 prepEraseC 1D -> eraseC $0 1D
$0 gotoMark @1 -> gotoMark $0 @1
0% beginCopying $B -> backToStart 0% $C
1& backToDFromLeft $% -> backToDFromLeft 1& $%
$$ prepEraseC 10 -> prepEraseC $$ 10
$X checkCD $D -> checkCD $X $D
0$ restoreCD e0 -> restoreCD 0$ e0
$1 backToDFromLeft 1% -> backToDFromLeft $1 1%
e# eraseE 00 -> eraseE e# 0B
$0 backToD $0 -> backToD $0 $0
0B backToSharpZero $D -> backToSharpZero 0B $D
$& gotoDecC 1D -> dec $& 1D
$& backToSharpZero e0 -> backToSharpZero $& e0
1D backToSharpOne @E -> backToSharpOne 1D @E
0& findZero @1 -> beginCopying 0& @1
$& backToSharpZero eC -> backToSharpZero $& eC
@@ gotoLastE 0@ -> dec @@ 0@
$# searchNextBit @0 -> searchNextBit $# @0
$# backToDFromRight 00 -> backToDFromRight $# 00
@C initDivider e0 -> initDividerByTwo @C e0
0B initDividerByTwo e0 -> backToD 0B e1
@1 gotoMark 00 -> gotoMark @1 00
1$ replaceWithBlanks 1@ -> backToDFromRight 1$ 1@
1E gotoDecC @1 -> gotoDecC 1E @1
@1 restoreCD e1 -> restoreCD @1 e1
eC eraseE e1 -> eraseE eC eB
0% nullifier eB -> initDivider 0% eE
0C gotoMark @1 -> gotoMark 0C @1
eB eraseC 1C -> backToStart eB 1X
$@ eraseE e0 -> eraseE $@ eB
00 backToDFromRight @E -> backToDFromRight 00 @E
$X initDivider 10 -> initDividerByTwo $X 10
@% temp 01 -> beginCopying @% 01
1% backToStart $0 -> backToStart 1% $0
eC restoreCD 1& -> restoreCD eC 11
e% backToSharpZero @D -> backToSharpZero e% @D
$E backToStart $1 -> backToStart $E $1
$1 backToSharpZero 1D -> backToSharpZero $1 1D
@$ backToSharpZero 1X -> backToSharpZero @$ 1X
@0 beginCopying $B -> backToStart @0 $C
$$ searchNextBit @1 -> searchNextBit $$ @1
$$ dec $0 -> dec $$ $1
0$ backToStart @1 -> backToStart 0$ @1
e# dec 01 -> gotoMark e# 00
0E checkCD 0D -> checkCD 0E 0D
0# findBlank 10 -> temp 0# 10
0$ goToPlaceForDivider @B -> backToFirstC 0$ @D
$& backToDFromRight e1 -> backToDFromRight $& e1
e1 massErase 1@ -> eraseE e1 1@
0X backToSharpOne 10 -> backToSharpOne 0X 10
@# backToSharpZero 11 -> backToSharpZero @# 11
11 incD @0 -> checkCD 11 @1
1& gotoMark 10 -> gotoMark 1& 10
@C searchNextBit 11 -> searchNextBit @C 11
0D gotoMark $1 -> gotoMark 0D $1
11 dec 11 -> gotoMark 11 10
1& backToDFromLeft @0 -> backToDFromLeft 1& @0
1$ gotoDecC 0D -> dec 1$ 0D
1@ backToDFromRight 00 -> backToDFromRight 1@ 00
0C backToDFromLeft @1 -> backToDFromLeft 0C @1
$# backToDFromRight eB -> backToDFromRight $# eB
1C incD @0 -> checkCD 1C @1
eC backToSharpOne 11 -> backToSharpOne eC 11
eX backToSharpZero @X -> backToSharpZero eX @X
eD restoreCD 10 -> restoreCD eD 10
eB backToDFromRight e0 -> backToDFromRight eB e0
$$ findBlank @B -> FINAL $$ @B
0C gotoMark 00 -> gotoMark 0C 00
eE backToD 10 -> backToD eE 10
0C backToD 01 -> backToD 0C 01
$E prepEraseC 1D -> eraseC $E 1D
@1 findBlank @1 -> temp @1 @1
0D copyZero 1B -> backToSharpZero 0D 10
@& restoreCD @& -> restoreCD @& @1
1C searchNextBit 11 -> searchNextBit 1C 11
copyZero $E -> $E copyZero
eD backToStart $0 -> backToStart eD $0
eC searchZero $0 -> backToDFromLeft eC $%
$& backToDFromLeft $0 -> backToDFromLeft $& $0
0$ searchZero $0 -> backToDFromLeft 0$ $%
incD @D -> @D FINAL
$@ checkCD 00 -> checkCD $@ 00
@@ initDividerByTwo 10 -> backToD @@ 11
searchNextBit $& -> $& eqCD
1$ beginCopying $B -> backToStart 1$ $C
$X backToFirstC e1 -> backToFirstC $X e1
@0 restoreCD 0% -> restoreCD @0 00
1D initDivider 00 -> initDividerByTwo 1D 00
e% checkCD eD -> checkCD e% eD
0@ eraseE eE -> prepEraseC 0@ eE
@C backToDFromRight 10 -> backToDFromRight @C 10
1$ massErase $@ -> eraseE 1$ $@
1% nullifier $B -> initDivider 1% $E
@1 backToDFromLeft @% -> backToDFromLeft @1 @%
e% backToSharpZero $0 -> backToSharpZero e% $0
e% checkCD @1 -> checkCD e% @1
eE searchNextBit 10 -> searchNextBit eE 10
eD searchOne @0 -> restoreCD eD @0
0X copyOne 0B -> backToSharpOne 0X 01
eE searchOne $1 -> backToDFromLeft eE $&
0$ gotoMark 00 -> gotoMark 0$ 00
0$ temp e0 -> beginCopying 0$ e0
@E gotoMark $1 -> gotoMark @E $1
0& backToD 10 -> backToD 0& 10
@% eraseC 0C -> backToStart @% 0X
$B backToDFromLeft 1D -> searchNextBit $B 1D
@1 dec 00 -> dec @1 01
1@ gotoDecC 1D -> dec 1@ 1D
@B gotoMark 01 -> gotoMark @B 01
0@ backToDFromRight @0 -> backToDFromRight 0@ @0
0& prepEraseC eD -> eraseC 0& eD
$C initDivider $0 -> initDividerByTwo $C $0
@$ prepEraseC $0 -> prepEraseC @$ $0
1@ backToSharpZero 1E -> backToSharpZero 1@ 1E
@X findBlank e0 -> temp @X e0
0X massErase $@ -> eraseE 0X $@
1$ eraseC 01 -> eraseC 1$ 0B
e# backToSharpZero $C -> backToSharpZero e# $C
@C restoreCD 0& -> restoreCD @C 01
$C gotoDecC 1D -> dec $C 1D
01 eraseC 1C -> backToStart 01 1X
e& backToStart 10 -> backToStart e& 10
$# backToSharpZero $C -> backToSharpZero $# $C
e$ backToFirstC 01 -> backToFirstC e$ 01
1& backToSharpZero $X -> backToSharpZero 1& $X
$B findBlank eB -> FINAL $B eB
11 restoreCD 0& -> restoreCD 11 01
@E restoreCD $0 -> restoreCD @E $0
$@ backToD 10 -> backToD $@ 10
@& backToDFromRight @0 -> backToDFromRight @& @0
@0 eraseE 0E -> prepEraseC @0 0E
1& forwardToLastD eE -> incD 1& eE
@& gotoMark 11 -> gotoMark @& 11
$& gotoLastE 1@ -> dec $& 1@
1% backToD 00 -> backToD 1% 00
1$ dec e1 -> gotoMark 1$ e0
$D backToSharpZero eE -> backToSharpZero $D eE
11 backToD @1 -> backToD 11 @1
0# prepEraseC @0 -> prepEraseC 0# @0
$C gotoDecC 01 -> gotoDecC $C 01
@@ backToDFromLeft @D -> searchNextBit @@ @D
0X copyZero @B -> backToSharpZero 0X @0
0@ backToDFromLeft @% -> backToDFromLeft 0@ @%
00 restoreCD 0% -> restoreCD 00 00
1E backToDFromLeft 1& -> backToDFromLeft 1E 1&
11 backToDFromRight e1 -> backToDFromRight 11 e1
$D backToFirstC 10 -> backToFirstC $D 10
1% searchZero 10 -> backToDFromLeft 1% 1%
e$ searchNextBit 10 -> searchNextBit e$ 10
@E copyZero 0B -> backToSharpZero @E 00
@$ backToFirstC @1 -> backToFirstC @$ @1
@1 findBlank e1 -> temp @1 e1
1@ findZero 11 -> beginCopying 1@ 11
$# findBlank 0B -> FINAL $# 0B
$E backToSharpOne $D -> backToSharpOne $E $D
0# nullifier $B -> initDivider 0# $E
1E backToDFromRight e1 -> backToDFromRight 1E e1
0E temp @1 -> beginCopying 0E @1
eD initDivider $0 -> initDividerByTwo eD $0
$B FINAL -> FINAL $ FINAL
0& findBlank 0B -> FINAL 0& 0B
$# backToDFromRight 0B -> backToDFromRight $# 0B
@D incD 01 -> incD @D 00
0& initDividerByTwo e0 -> backToD 0& e1
1C restoreCD @% -> restoreCD 1C @0
0% initDividerByTwo 00 -> backToD 0% 01
1E checkCD 01 -> checkCD 1E 01
$1 massErase e@ -> eraseE $1 e@
1% backToDFromLeft eD -> searchNextBit 1% eD
eD goToPlaceForDivider $B -> backToFirstC eD $D
$# eraseE @1 -> eraseE $# @B
1$ backToStart @0 -> backToStart 1$ @0
$0 backToSharpOne eX -> backToSharpOne $0 eX
e# backToSharpZero 11 -> backToSharpZero e# 11
$# initDivider e0 -> initDividerByTwo $# e0
@E prepEraseC 10 -> prepEraseC @E 10
1B backToDFromLeft $1 -> backToDFromLeft 1B $1
1% forwardToLastD 0E -> incD 1% 0E
e1 gotoMark e1 -> gotoMark e1 e1
$1 temp 00 -> beginCopying $1 00
1# dec $0 -> dec 1# $1
0E checkCD 11 -> checkCD 0E 11
1D dec 11 -> gotoMark 1D 10
00 restoreCD 1% -> restoreCD 00 10
e& dec e1 -> gotoMark e& e0
$D incD 11 -> incD $D 10
eB restoreCD 0% -> restoreCD eB 00
$C backToSharpOne @C -> backToSharpOne $C @C
@@ backToSharpZero eE -> backToSharpZero @@ eE
eD temp 11 -> beginCopying eD 11
eD findBlank 01 -> temp eD 01
$B massErase 1@ -> eraseE $B 1@
$@ gotoDecC 01 -> gotoDecC $@ 01
e& massErase @@ -> eraseE e& @@
0& backToSharpOne 1E -> backToSharpOne 0& 1E
1C copyOne @B -> backToSharpOne 1C @1
$B eraseC @C -> backToStart $B @X
@$ backToDFromLeft $& -> backToDFromLeft @$ $&
$% backToD @0 -> backToD $% @0
1E gotoDecC e0 -> gotoDecC 1E e0
eB backToSharpZero $E -> backToSharpZero eB $E
eE replaceWithBlanks 1@ -> backToDFromRight eE 1@
1$ findZero $1 -> beginCopying 1$ $1
e% backToSharpOne $0 -> backToSharpOne e% $0
1X incD $0 -> checkCD 1X $1
1# backToSharpZero @1 -> backToSharpZero 1# @1
@C checkCD e1 -> checkCD @C e1
1% prepEraseC 01 -> prepEraseC 1% 01
e$ eraseC e0 -> eraseC e$ eB
eE searchNextBit e0 -> searchNextBit eE e0
$X backToSharpZero @E -> backToSharpZero $X @E
e% gotoLastE 1@ -> dec e% 1@
e0 backToSharpZero @D -> backToSharpZero e0 @D
eX eraseE 01 -> eraseE eX 0B
$E restoreCD @D -> restoreCD $E @D
$0 backToSharpZero e1 -> backToSharpZero $0 e1
$# backToFirstC 11 -> backToFirstC $# 11
1C checkCD 00 -> checkCD 1C 00
@1 restoreCD 1D -> restoreCD @1 1D
1# findBlank 00 -> temp 1# 00
$E beginCopying @B -> backToStart $E @C
0C searchZero @1 -> restoreCD 0C @1
e1 backToDFromLeft 1D -> searchNextBit e1 1D
eE backToStart 00 -> backToStart eE 00
$# checkCD e0 -> checkCD $# e0
$% nullifier eB -> initDivider $% eE
@X gotoDecC 1D -> dec @X 1D
10 prepEraseC e1 -> prepEraseC 10 e1
$0 backToDFromRight 0B -> backToDFromRight $0 0B
e0 eraseC 01 -> eraseC e0 0B
@0 goToPlaceForDivider @B -> backToFirstC @0 @D
@X backToStart e0 -> backToStart @X e0
e$ checkCD 11 -> checkCD e$ 11
0# gotoMark 00 -> gotoMark 0# 00
@@ dec e1 -> gotoMark @@ e0
1% incD @0 -> checkCD 1% @1
@0 backToStart @1 -> backToStart @0 @1
$% searchNextBit @1 -> searchNextBit $% @1
0& nullifier eB -> initDivider 0& eE
@D gotoMark 01 -> gotoMark @D 01
1@ beginCopying 0B -> backToStart 1@ 0C
0% backToStart $1 -> backToStart 0% $1
0E copyZero 0B -> backToSharpZero 0E 00
$E findBlank @1 -> temp $E @1
@D backToDFromLeft @& -> backToDFromLeft @D @&
$C prepEraseC 0D -> eraseC $C 0D
eE backToSharpOne e1 -> backToSharpOne eE e1
1D gotoDecC 10 -> gotoDecC 1D 10
10 restoreCD @& -> restoreCD 10 @1
0$ eraseC e1 -> eraseC 0$ eB
e$ gotoMark @0 -> gotoMark e$ @0
eC gotoMark 11 -> gotoMark eC 11
@D replaceWithBlanks 1@ -> backToDFromRight @D 1@
@& gotoDecC 00 -> gotoDecC @& 00
eE prepEraseC eD -> eraseC eE eD
e$ restoreCD eD -> restoreCD e$ eD
@& eraseE 10 -> eraseE @& 1B
@# copyOne 0B -> backToSharpOne @# 01
11 restoreCD 01 -> restoreCD 11 01
@% temp $1 -> beginCopying @% $1
1# backToStart $1 -> backToStart 1# $1
0# eraseC e1 -> eraseC 0# eB
$D findBlank @B -> FINAL $D @B
1B copyZero 0B -> backToSharpZero 1B 00
$@ eraseE @1 -> eraseE $@ @B
$& copyOne eB -> backToSharpOne $& e1
$$ findBlank eB -> FINAL $$ eB
$1 copyOne 0B -> backToSharpOne $1 01
$C restoreCD 0& -> restoreCD $C 01
$C dec $1 -> gotoMark $C $0
$1 backToSharpOne $0 -> backToSharpOne $1 $0
e$ findBlank $1 -> temp e$ $1
eD searchOne 10 -> restoreCD eD 10
$@ backToSharpZero $1 -> backToSharpZero $@ $1
0$ backToD 01 -> backToD 0$ 01
eX eraseC @0 -> eraseC eX @B
11 restoreCD $D -> restoreCD 11 $D
$# backToDFromLeft @1 -> backToDFromLeft $# @1
0E replaceWithBlanks 1@ -> backToDFromRight 0E 1@
$@ gotoLastE e@ -> dec $@ e@
eB searchNextBit @1 -> searchNextBit eB @1
eE eraseC 11 -> eraseC eE 1B
e@ backToSharpOne 10 -> backToSharpOne e@ 10
@X backToSharpZero e1 -> backToSharpZero @X e1
eX restoreCD @& -> restoreCD eX @1
1X dec 11 -> gotoMark 1X 10
e0 searchNextBit 00 -> searchNextBit e0 00
1X backToSharpZero eE -> backToSharpZero 1X eE
eD backToStart @0 -> backToStart eD @0
eE backToDFromRight @B -> backToDFromRight eE @B
eE backToDFromLeft @% -> backToDFromLeft eE @%
$& backToFirstC @0 -> backToFirstC $& @0
1& beginCopying 1B -> backToStart 1& 1C
$@ checkCD e0 -> checkCD $@ e0
e1 backToDFromRight @E -> backToDFromRight e1 @E
@$ incD @1 -> incD @$ @0
0& eraseC $1 -> eraseC 0& $B
$X backToDFromRight $1 -> backToDFromRight $X $1
e& backToSharpOne eD -> backToSharpOne e& eD
e# backToFirstC e1 -> backToFirstC e# e1
@& restoreCD 1& -> restoreCD @& 11
$$ restoreCD $& -> restoreCD $$ $1
11 temp $0 -> beginCopying 11 $0
1X eraseE @1 -> eraseE 1X @B
$C gotoDecC @0 -> gotoDecC $C @0
0% restoreCD $& -> restoreCD 0% $1
0$ gotoDecC @D -> dec 0$ @D
e& restoreCD eD -> restoreCD e& eD
0% nullifier 0B -> initDivider 0% 0E
e% backToSharpZero 10 -> backToSharpZero e% 10
e& restoreCD $0 -> restoreCD e& $0
01 backToSharpZero 1C -> backToSharpZero 01 1C
e% gotoDecC @0 -> gotoDecC e% @0
e# eraseE $1 -> eraseE e# $B
$@ gotoMark 01 -> gotoMark $@ 01
e& findBlank 10 -> temp e& 10
@# eraseE 11 -> eraseE @# 1B
1# backToSharpZero @X -> backToSharpZero 1# @X
1% copyZero @B -> backToSharpZero 1% @0
e% prepEraseC $0 -> prepEraseC e% $0
@0 backToSharpZero 1X -> backToSharpZero @0 1X
0D backToDFromLeft 11 -> backToDFromLeft 0D 11
$X temp 00 -> beginCopying $X 00
$1 restoreCD 0& -> restoreCD $1 01
$E dec $0 -> dec $E $1
e0 backToSharpZero 10 -> backToSharpZero e0 10
@% eraseE eE -> prepEraseC @% eE
1% temp $0 -> beginCopying 1% $0
eE eraseE 0E -> prepEraseC eE 0E
1B backToStart @0 -> backToStart 1B @0
$$ backToSharpZero 1E -> backToSharpZero $$ 1E
@0 backToSharpZero 0D -> backToSharpZero @0 0D
0% backToSharpZero $X -> backToSharpZero 0% $X
checkOneD $1 -> $1 checkOneD
1C checkEForZero 0B -> stop 1C 0B
0E eraseC e0 -> eraseC 0E eB
1% checkCD 01 -> checkCD 1% 01
1@ forwardToLastD eE -> incD 1@ eE
0$ backToDFromRight $1 -> backToDFromRight 0$ $1
$@ backToStart 10 -> backToStart $@ 10
1X backToSharpOne eC -> backToSharpOne 1X eC
0D prepEraseC e1 -> prepEraseC 0D e1
e# searchZero @0 -> backToDFromLeft e# @%
0X backToDFromLeft e1 -> backToDFromLeft 0X e1
@C replaceWithBlanks e@ -> backToDFromRight @C e@
e0 eraseC @0 -> eraseC e0 @B
eX nullifier 1B -> initDivider eX 1E
0& backToDFromRight @1 -> backToDFromRight 0& @1
e# restoreCD $D -> restoreCD e# $D
e@ gotoDecC e0 -> gotoDecC e@ e0
1B eraseE 11 -> eraseE 1B 1B
@% restoreCD @1 -> restoreCD @% @1
$@ backToDFromRight @1 -> backToDFromRight $@ @1
@E backToDFromRight @1 -> backToDFromRight @E @1
10 gotoMark eE -> gotoDecC 10 eE
$D checkCD @1 -> checkCD $D @1
0& backToD 00 -> backToD 0& 00
10 dec 11 -> gotoMark 10 10
1% backToDFromRight @0 -> backToDFromRight 1% @0
@& backToStart @1 -> backToStart @& @1
$C restoreCD @& -> restoreCD $C @1
@& restoreCD 1D -> restoreCD @& 1D
@@ searchOne 10 -> restoreCD @@ 10
e& backToFirstC e1 -> backToFirstC e& e1
$$ searchOne 10 -> restoreCD $$ 10
$# searchOne 01 -> backToDFromLeft $# 0&
$% backToD 11 -> backToD $% 11
1@ findBlank @B -> FINAL 1@ @B
1$ searchZero $1 -> restoreCD 1$ $1
@X backToSharpOne $C -> backToSharpOne @X $C
1X backToDFromLeft 0% -> backToDFromLeft 1X 0%
eD prepEraseC @D -> eraseC eD @D
@@ backToSharpOne 10 -> backToSharpOne @@ 10
e1 backToSharpZero @C -> backToSharpZero e1 @C
checkEForZero 00 -> 00 checkEForZero
$$ backToSharpOne 1E -> backToSharpOne $$ 1E
1X replaceWithBlanks 1@ -> backToDFromRight 1X 1@
1E backToDFromRight 1E -> backToDFromRight 1E 1E
e$ backToSharpOne eD -> backToSharpOne e$ eD
@% restoreCD @& -> restoreCD @% @1
e1 findZero e1 -> beginCopying e1 e1
e% backToSharpZero 0D -> backToSharpZero e% 0D
1X backToSharpOne @X -> backToSharpOne 1X @X
eE backToDFromRight eB -> backToDFromRight eE eB
0E checkCD 00 -> checkCD 0E 00
$# prepEraseC $1 -> prepEraseC $# $1
1$ findBlank 11 -> temp 1$ 11
1# gotoLastE 0@ -> dec 1# 0@
$# backToFirstC e0 -> backToFirstC $# e0
e% eraseE @1 -> eraseE e% @B
0@ gotoMark $E -> gotoDecC 0@ $E
0% gotoMark 01 -> gotoMark 0% 01
e% backToDFromLeft @% -> backToDFromLeft e% @%
@0 beginCopying 0B -> backToStart @0 0C
checkOneD e0 -> e0 checkOneD
@% backToSharpOne 0C -> backToSharpOne @% 0C
@C gotoMark $1 -> gotoMark @C $1
e# backToFirstC $1 -> backToFirstC e# $1
10 eraseE 10 -> eraseE 10 1B
0D backToDFromLeft $% -> backToDFromLeft 0D $%
1X backToSharpOne @1 -> backToSharpOne 1X @1
0B backToSharpZero @X -> backToSharpZero 0B @X
eX eraseC e0 -> eraseC eX eB
$0 findZero 11 -> beginCopying $0 11
@# backToSharpOne $D -> backToSharpOne @# $D
1E eraseC $1 -> eraseC 1E $B
@1 backToSharpOne $E -> backToSharpOne @1 $E
@C backToSharpOne @D -> backToSharpOne @C @D
1X gotoDecC $1 -> gotoDecC 1X $1
10 eraseE 0E -> prepEraseC 10 0E
e1 findBlank e1 -> temp e1 e1
$X backToDFromRight $0 -> backToDFromRight $X $0
1E backToStart $0 -> backToStart 1E $0
1C goToPlaceForDivider @B -> backToFirstC 1C @D
11 gotoMark $E -> gotoDecC 11 $E
$& checkEForZero eB -> stop $& eB
@$ findBlank 11 -> temp @$ 11
e1 backToFirstC e1 -> backToFirstC e1 e1
e$ temp $0 -> beginCopying e$ $0
@% backToStart 01 -> backToStart @% 01
$$ initDivider e0 -> initDividerByTwo $$ e0
$X massErase @@ -> eraseE $X @@
01 checkCD $0 -> checkCD 01 $0
$& forwardToLastD $E -> incD $& $E
1# backToDFromLeft e% -> backToDFromLeft 1# e%
@& restoreCD e0 -> restoreCD @& e0
@C dec 11 -> gotoMark @C 10
@& restoreCD 00 -> restoreCD @& 00
1E searchNextBit 00 -> searchNextBit 1E 00
$E massErase 1@ -> eraseE $E 1@
e@ backToSharpOne $X -> backToSharpOne e@ $X
@@ massErase 1@ -> eraseE @@ 1@
0X beginCopying $B -> backToStart 0X $C
$% restoreCD eD -> restoreCD $% eD
$B massErase e@ -> eraseE $B e@
0E backToSharpOne @0 -> backToSharpOne 0E @0
e@ checkEForZero eB -> stop e@ eB
1E backToSharpZero 0D -> backToSharpZero 1E 0D
1$ backToSharpOne @0 -> backToSharpOne 1$ @0
$% nullifier $B -> initDivider $% $E
1$ findBlank $B -> FINAL 1$ $B
ifZero e1 -> e1 gotoLastE
0& backToDFromLeft @D -> searchNextBit 0& @D
e1 backToDFromRight @1 -> backToDFromRight e1 @1
01 temp 01 -> beginCopying 01 01
$1 backToSharpOne e0 -> backToSharpOne $1 e0
1B searchOne 00 -> restoreCD 1B 00
@1 findBlank @B -> FINAL @1 @B
0% searchNextBit $1 -> searchNextBit 0% $1
@X incD $0 -> checkCD @X $1
0% backToSharpOne @0 -> backToSharpOne 0% @0
@X gotoMark 10 -> gotoMark @X 10
1# backToD $0 -> backToD 1# $0
1D findBlank 01 -> temp 1D 01
1D prepEraseC 11 -> prepEraseC 1D 11
@D searchOne $0 -> restoreCD @D $0
10 restoreCD $0 -> restoreCD 10 $0
0% backToDFromRight @0 -> backToDFromRight 0% @0
1E restoreCD e% -> restoreCD 1E e0
1# incD $0 -> checkCD 1# $1
0$ backToSharpOne @0 -> backToSharpOne 0$ @0
11 goToPlaceForDivider $B -> backToFirstC 11 $D
e1 backToDFromRight 11 -> backToDFromRight e1 11
@& searchNextBit $0 -> searchNextBit @& $0
@1 nullifier @B -> initDivider @1 @E
$$ eraseC @1 -> eraseC $$ @B
eC backToStart $0 -> backToStart eC $0
00 searchZero e0 -> backToDFromLeft 00 e%
$$ backToSharpZero @1 -> backToSharpZero $$ @1
00 copyZero @B -> backToSharpZero 00 @0
00 prepEraseC eD -> eraseC 00 eD
@E backToDFromLeft 0D -> searchNextBit @E 0D
e@ backToDFromLeft @1 -> backToDFromLeft e@ @1
0E searchZero $0 -> backToDFromLeft 0E $%
0@ gotoDecC @D -> dec 0@ @D
$0 backToD @1 -> backToD $0 @1
01 backToDFromLeft $% -> backToDFromLeft 01 $%
10 initDividerByTwo 00 -> backToD 10 01
$& searchZero 01 -> restoreCD $& 01
@@ incD e0 -> checkCD @@ e1
e% prepEraseC 11 -> prepEraseC e% 11
eC backToD e0 -> backToD eC e0
0D backToD $1 -> backToD 0D $1
$% eraseC 00 -> eraseC $% 0B
$$ backToDFromLeft 0% -> backToDFromLeft $$ 0%
$# gotoMark $E -> gotoDecC $# $E
$D backToSharpOne @X -> backToSharpOne $D @X
1% FINAL -> FINAL 1 FINAL
11 backToSharpOne 1E -> backToSharpOne 11 1E
$1 initDividerByTwo @0 -> backToD $1 @1
e# backToDFromLeft 1D -> searchNextBit e# 1D
1@ backToSharpZero $E -> backToSharpZero 1@ $E
0$ forwardToLastD @E -> incD 0$ @E
e0 gotoDecC e0 -> gotoDecC e0 e0
$$ searchNextBit $0 -> searchNextBit $$ $0
$D beginCopying 1B -> backToStart $D 1C
$% gotoMark eE -> gotoDecC $% eE
FINAL 1C -> FINAL 1 FINAL
$E searchZero e1 -> restoreCD $E e1
@1 checkCD 00 -> checkCD @1 00
e@ findBlank 01 -> temp e@ 01
e% restoreCD $% -> restoreCD e% $0
eD restoreCD 01 -> restoreCD eD 01
$D goToPlaceForDivider @B -> backToFirstC $D @D
$# backToDFromLeft 0& -> backToDFromLeft $# 0&
$C eraseC $C -> backToStart $C $X
e@ restoreCD @% -> restoreCD e@ @0
@D backToD $0 -> backToD @D $0
eC eraseC @0 -> eraseC eC @B
@B backToSharpOne @0 -> backToSharpOne @B @0
$% prepEraseC 10 -> prepEraseC $% 10
e# copyZero eB -> backToSharpZero e# e0
eD gotoMark 01 -> gotoMark eD 01
1C replaceWithBlanks 1@ -> backToDFromRight 1C 1@
$& initDivider $0 -> initDividerByTwo $& $0
eB beginCopying eB -> backToStart eB eC
$C copyOne 0B -> backToSharpOne $C 01
1& backToSharpOne e0 -> backToSharpOne 1& e0
e1 backToSharpZero $0 -> backToSharpZero e1 $0
$& backToStart $1 -> backToStart $& $1
10 checkCD 01 -> checkCD 10 01
@E restoreCD 0% -> restoreCD @E 00
$@ backToStart e1 -> backToStart $@ e1
0# backToDFromLeft 11 -> backToDFromLeft 0# 11
@$ backToSharpZero e0 -> backToSharpZero @$ e0
@% backToSharpOne @1 -> backToSharpOne @% @1
@E searchNextBit @1 -> searchNextBit @E @1
0E backToStart e0 -> backToStart 0E e0
$0 eraseC @C -> backToStart $0 @X
$@ nullifier $B -> initDivider $@ $E
@& backToDFromRight 00 -> backToDFromRight @& 00
1C backToDFromRight 0E -> backToDFromRight 1C 0E
$C gotoLastE e@ -> dec $C e@
e0 backToD $0 -> backToD e0 $0
@% searchZero 11 -> restoreCD @% 11
1B backToDFromRight eB -> backToDFromRight 1B eB
createCopy 0X -> 0C forwardToLastD
@C backToSharpOne 11 -> backToSharpOne @C 11
00 incD 10 -> checkCD 00 11
@C beginCopying 1B -> backToStart @C 1C
backToSharpZero 1# -> 10 createCopy
e$ backToSharpOne $1 -> backToSharpOne e$ $1
0@ replaceWithBlanks $@ -> backToDFromRight 0@ $@
@D nullifier eB -> initDivider @D eE
1# backToSharpZero 1X -> backToSharpZero 1# 1X
@X checkCD e1 -> checkCD @X e1
0E backToD @0 -> backToD 0E @0
1X incD $1 -> incD 1X $0
e% eraseE $1 -> eraseE e% $B
@C findZero e1 -> beginCopying @C e1
1C copyZero 0B -> backToSharpZero 1C 00
eE incD @1 -> incD eE @0
@$ backToDFromRight 00 -> backToDFromRight @$ 00
1E searchNextBit e1 -> searchNextBit 1E e1
e& backToStart $0 -> backToStart e& $0
eD backToStart 11 -> backToStart eD 11
0B eraseE @E -> prepEraseC 0B @E
@B backToSharpZero 0C -> backToSharpZero @B 0C
1# backToSharpZero 1C -> backToSharpZero 1# 1C
@1 dec $1 -> gotoMark @1 $0
10 backToSharpZero 0D -> backToSharpZero 10 0D
0E restoreCD 0% -> restoreCD 0E 00
$B searchZero $1 -> restoreCD $B $1
eC restoreCD @D -> restoreCD eC @D
@E copyZero @B -> backToSharpZero @E @0
1# checkCD eD -> checkCD 1# eD
@@ initDivider 00 -> initDividerByTwo @@ 00
moveToE $E -> $E checkEForZero
$B prepEraseC 01 -> prepEraseC $B 01
10 forwardToLastD 1E -> incD 10 1E
$E backToFirstC 11 -> backToFirstC $E 11
0C backToSharpZero 00 -> backToSharpZero 0C 00
0D dec 01 -> gotoMark 0D 00
1E checkCD 0D -> checkCD 1E 0D
@D copyOne eB -> backToSharpOne @D e1
$C backToSharpZero 10 -> backToSharpZero $C 10
gotoLastE 00 -> 00 gotoLastE
$D gotoDecC e0 -> gotoDecC $D e0
0X backToD @0 -> backToD 0X @0
0% restoreCD e& -> restoreCD 0% e1
$$ incD 11 -> incD $$ 10
e& prepEraseC $D -> eraseC e& $D
1X gotoDecC e0 -> gotoDecC 1X e0
1# backToDFromRight @1 -> backToDFromRight 1# @1
$C gotoDecC 0D -> dec $C 0D
eC incD @1 -> incD eC @0
$B backToSharpOne @X -> backToSharpOne $B @X
$X incD @0 -> checkCD $X @1
@B searchOne $0 -> restoreCD @B $0
e@ gotoMark $E -> gotoDecC e@ $E
1C eraseC @C -> backToStart 1C @X
1X prepEraseC 01 -> prepEraseC 1X 01
$1 copyZero $B -> backToSharpZero $1 $0
eX gotoLastE e@ -> dec eX e@
eX forwardToLastD 0E -> incD eX 0E
$& backToDFromLeft 0& -> backToDFromLeft $& 0&
@1 backToDFromRight 0E -> backToDFromRight @1 0E
1B prepEraseC eD -> eraseC 1B eD
$1 gotoDecC $D -> dec $1 $D
@1 gotoDecC @D -> dec @1 @D
1D copyOne @B -> backToSharpOne 1D @1
$1 backToDFromLeft 01 -> backToDFromLeft $1 01
1E restoreCD 0D -> restoreCD 1E 0D
1E checkEForZero $B -> stop 1E $B
$$ eraseC 0C -> backToStart $$ 0X
0D backToStart 11 -> backToStart 0D 11
e% findBlank 10 -> temp e% 10
eB gotoDecC $1 -> gotoDecC eB $1
$# eraseC @C -> backToStart $# @X
1% eraseE 0E -> prepEraseC 1% 0E
0E gotoDecC 0D -> dec 0E 0D
0X findZero 01 -> beginCopying 0X 01
e@ initDivider e0 -> initDividerByTwo e@ e0
1# goToPlaceForDivider 1B -> backToFirstC 1# 1D
@# eraseC $0 -> eraseC @# $B
$B backToDFromLeft @1 -> backToDFromLeft $B @1
0@ searchZero 11 -> restoreCD 0@ 11
0$ incD 11 -> incD 0$ 10
@X checkEForZero @B -> stop @X @B
1% backToSharpOne 01 -> backToSharpOne 1% 01
@& backToSharpZero e1 -> backToSharpZero @& e1
e% backToDFromRight $1 -> backToDFromRight e% $1
e% backToSharpZero @E -> backToSharpZero e% @E
@# restoreCD 10 -> restoreCD @# 10
1# findZero e1 -> beginCopying 1# e1
e1 backToDFromLeft 1% -> backToDFromLeft e1 1%
0C eraseE @0 -> eraseE 0C @B
1$ restoreCD 1& -> restoreCD 1$ 11
eC backToSharpOne 0E -> backToSharpOne eC 0E
00 backToDFromRight $1 -> backToDFromRight 00 $1
$C backToDFromRight 1E -> backToDFromRight $C 1E
0% initDividerByTwo 10 -> backToD 0% 11
e$ restoreCD $1 -> restoreCD e$ $1
0D backToDFromLeft e& -> backToDFromLeft 0D e&
1& gotoDecC 1D -> dec 1& 1D
1C goToPlaceForDivider 1B -> backToFirstC 1C 1D
1D checkCD 01 -> checkCD 1D 01
@1 checkCD e0 -> checkCD @1 e0
@0 backToDFromLeft e0 -> backToDFromLeft @0 e0
eB findZero $1 -> beginCopying eB $1
eE beginCopying 1B -> backToStart eE 1C
0@ backToDFromRight e1 -> backToDFromRight 0@ e1
0@ gotoMark 0E -> gotoDecC 0@ 0E
$E backToSharpZero $0 -> backToSharpZero $E $0
e% checkCD $0 -> checkCD e% $0
@# backToDFromLeft $D -> searchNextBit @# $D
@# gotoLastE $@ -> dec @# $@
1@ copyZero 1B -> backToSharpZero 1@ 10
0D backToSharpZero @E -> backToSharpZero 0D @E
eC checkCD 11 -> checkCD eC 11
1& backToSharpZero 0X -> backToSharpZero 1& 0X
$0 copyZero @B -> backToSharpZero $0 @0
0$ restoreCD $0 -> restoreCD 0$ $0
$E eraseE @0 -> eraseE $E @B
1# temp @1 -> beginCopying 1# @1
$1 backToSharpZero eD -> backToSharpZero $1 eD
$B eraseE 1E -> prepEraseC $B 1E
$% backToDFromRight e1 -> backToDFromRight $% e1
$& backToSharpOne 01 -> backToSharpOne $& 01
1@ beginCopying @B -> backToStart 1@ @C
0$ restoreCD 00 -> restoreCD 0$ 00
e1 initDividerByTwo $0 -> backToD e1 $1
@E backToDFromLeft 1& -> backToDFromLeft @E 1&
1D backToDFromLeft eD -> searchNextBit 1D eD
1B incD $0 -> checkCD 1B $1
1B gotoMark @0 -> gotoMark 1B @0
e0 backToDFromLeft @1 -> backToDFromLeft e0 @1
1B gotoDecC 01 -> gotoDecC 1B 01
eX gotoMark 10 -> gotoMark eX 10
eC eraseE 10 -> eraseE eC 1B
0B backToDFromLeft 00 -> backToDFromLeft 0B 00
$% prepEraseC @0 -> prepEraseC $% @0
1C searchZero e1 -> restoreCD 1C e1
$& backToSharpZero @E -> backToSharpZero $& @E
11 backToDFromLeft 1& -> backToDFromLeft 11 1&
@$ restoreCD e& -> restoreCD @$ e1
$B backToFirstC $0 -> backToFirstC $B $0
eE copyZero $B -> backToSharpZero eE $0
eE initDivider e0 -> initDividerByTwo eE e0
@@ backToSharpOne 1X -> backToSharpOne @@ 1X
@0 searchZero 10 -> backToDFromLeft @0 1%
e% prepEraseC @D -> eraseC e% @D
ifZero e0 -> e0 ifZero
1E dec $0 -> dec 1E $1
e& backToSharpZero 1D -> backToSharpZero e& 1D
0& backToDFromLeft $% -> backToDFromLeft 0& $%
$1 backToFirstC e1 -> backToFirstC $1 e1
0@ backToSharpOne 10 -> backToSharpOne 0@ 10
searchZero e& -> e& searchZero
@$ checkCD @0 -> checkCD @$ @0
0& nullifier $B -> initDivider 0& $E
@@ backToDFromRight $E -> backToDFromRight @@ $E
eX gotoDecC $0 -> gotoDecC eX $0
0$ backToDFromLeft $& -> backToDFromLeft 0$ $&
$D backToSharpOne $0 -> backToSharpOne $D $0
1C backToSharpOne eX -> backToSharpOne 1C eX
0$ backToD 10 -> backToD 0$ 10
11 backToSharpOne 11 -> backToSharpOne 11 11
@0 initDivider 10 -> initDividerByTwo @0 10
@$ backToDFromLeft e1 -> backToDFromLeft @$ e1
e$ gotoLastE e@ -> dec e$ e@
$B gotoLastE @@ -> dec $B @@
@B backToSharpOne $0 -> backToSharpOne @B $0
$B checkCD @D -> checkCD $B @D
@1 backToD e0 -> backToD @1 e0
eE backToDFromLeft @D -> searchNextBit eE @D
00 gotoLastE e@ -> dec 00 e@
@D searchNextBit 10 -> searchNextBit @D 10
$C backToSharpZero $C -> backToSharpZero $C $C
0% gotoDecC $0 -> gotoDecC 0% $0
copyOne $0 -> $0 copyOne
eB incD @0 -> checkCD eB @1
@B gotoMark 1E -> gotoDecC @B 1E
0$ backToDFromLeft $1 -> backToDFromLeft 0$ $1
1@ searchZero e0 -> backToDFromLeft 1@ e%
e0 temp 11 -> beginCopying e0 11
$X findBlank @1 -> temp $X @1
0E restoreCD @1 -> restoreCD 0E @1
$X restoreCD $& -> restoreCD $X $1
$E searchOne e1 -> backToDFromLeft $E e&
1C eraseC 0C -> backToStart 1C 0X
@B goToPlaceForDivider 1B -> backToFirstC @B 1D
$C backToDFromRight 1B -> backToDFromRight $C 1B
@@ backToFirstC 00 -> backToFirstC @@ 00
@$ prepEraseC e1 -> prepEraseC @$ e1
0X checkCD 0D -> checkCD 0X 0D
@E backToSharpOne eE -> backToSharpOne @E eE
$D backToSharpZero 01 -> backToSharpZero $D 01
eE temp 10 -> beginCopying eE 10
$B forwardToLastD @E -> incD $B @E
0C backToSharpOne 1D -> backToSharpOne 0C 1D
@# backToD @1 -> backToD @# @1
eX gotoDecC e1 -> gotoDecC eX e1
$0 incD 01 -> incD $0 00
0# restoreCD 0% -> restoreCD 0# 00
$X backToFirstC $0 -> backToFirstC $X $0
e1 restoreCD 0& -> restoreCD e1 01
0# checkCD e1 -> checkCD 0# e1
e& backToDFromLeft e0 -> backToDFromLeft e& e0
eC goToPlaceForDivider $B -> backToFirstC eC $D
@X checkCD eD -> checkCD @X eD
$D backToSharpZero @X -> backToSharpZero $D @X
e@ backToDFromRight 1B -> backToDFromRight e@ 1B
$# searchOne 00 -> restoreCD $# 00
1D incD $0 -> checkCD 1D $1
0B searchNextBit $1 -> searchNextBit 0B $1
@@ copyOne @B -> backToSharpOne @@ @1
@1 temp 11 -> beginCopying @1 11
0% eraseC @0 -> eraseC 0% @B
eE gotoMark @0 -> gotoMark eE @0
@E eraseE @E -> prepEraseC @E @E
10 backToSharpZero @1 -> backToSharpZero 10 @1
0D gotoMark e1 -> gotoMark 0D e1
$0 backToFirstC e1 -> backToFirstC $0 e1
1# backToSharpOne $X -> backToSharpOne 1# $X
$@ findBlank @1 -> temp $@ @1
0% restoreCD 01 -> restoreCD 0% 01
0@ gotoDecC @1 -> gotoDecC 0@ @1
1# backToDFromRight 1E -> backToDFromRight 1# 1E
00 checkEForZero eB -> stop 00 eB
0X backToDFromLeft @0 -> backToDFromLeft 0X @0
0C eraseC 1C -> backToStart 0C 1X
@X backToDFromRight e0 -> backToDFromRight @X e0
1C findBlank e1 -> temp 1C e1
e# prepEraseC 01 -> prepEraseC e# 01
$& backToStart 00 -> backToStart $& 00
$X backToDFromRight @1 -> backToDFromRight $X @1
eE dec $0 -> dec eE $1
1X searchZero 10 -> backToDFromLeft 1X 1%
1$ backToSharpZero 10 -> backToSharpZero 1$ 10
0B checkCD 10 -> checkCD 0B 10
@B searchZero 10 -> backToDFromLeft @B 1%
@X dec 01 -> gotoMark @X 00
$% incD e0 -> checkCD $% e1
$B gotoMark e0 -> gotoMark $B e0
$@ temp 11 -> beginCopying $@ 11
$$ gotoMark @1 -> gotoMark $$ @1
e& incD 11 -> incD e& 10
0& eraseC 1C -> backToStart 0& 1X
1$ backToDFromRight @1 -> backToDFromRight 1$ @1
01 restoreCD 00 -> restoreCD 01 00
00 backToDFromRight 11 -> backToDFromRight 00 11
eX dec @1 -> gotoMark eX @0
00 backToSharpZero e0 -> backToSharpZero 00 e0
$E gotoDecC @1 -> gotoDecC $E @1
$$ findZero e1 -> beginCopying $$ e1
e# checkCD e0 -> checkCD e# e0
e% findBlank @0 -> temp e% @0
11 searchZero 01 -> restoreCD 11 01
@1 beginCopying eB -> backToStart @1 eC
@# backToSharpZero e1 -> backToSharpZero @# e1
$& backToDFromRight eE -> backToDFromRight $& eE
0# backToDFromRight @1 -> backToDFromRight 0# @1
1$ incD e1 -> incD 1$ e0
1% searchNextBit $1 -> searchNextBit 1% $1
$& gotoMark 0E -> gotoDecC $& 0E
$# restoreCD @% -> restoreCD $# @0
$E backToDFromRight @B -> backToDFromRight $E @B
0B restoreCD 01 -> restoreCD 0B 01
0# backToSharpZero 0D -> backToSharpZero 0# 0D
1@ backToSharpOne $E -> backToSharpOne 1@ $E
e# backToDFromRight $B -> backToDFromRight e# $B
@$ copyZero 0B -> backToSharpZero @$ 00
1$ restoreCD 10 -> restoreCD 1$ 10
$X temp $0 -> beginCopying $X $0
e% incD 00 -> checkCD e% 01
1% dec 10 -> dec 1% 11
1E backToSharpOne 10 -> backToSharpOne 1E 10
@0 backToSharpOne 1D -> backToSharpOne @0 1D
e% searchZero @1 -> restoreCD e% @1
1C forwardToLastD @E -> incD 1C @E
@0 eraseC $0 -> eraseC @0 $B
e# initDivider e0 -> initDividerByTwo e# e0
@E searchZero $1 -> restoreCD @E $1
$E backToDFromRight 10 -> backToDFromRight $E 10
@% initDivider @0 -> initDividerByTwo @% @0
e0 gotoLastE 1@ -> dec e0 1@
$E initDivider $0 -> initDividerByTwo $E $0
@B prepEraseC 01 -> prepEraseC @B 01
0C backToSharpOne e0 -> backToSharpOne 0C e0
11 checkCD eD -> checkCD 11 eD
1E backToSharpZero @X -> backToSharpZero 1E @X
01 backToDFromRight $B -> backToDFromRight 01 $B
e1 eraseE 01 -> eraseE e1 0B
e# dec $0 -> dec e# $1
$B backToSharpOne eE -> backToSharpOne $B eE
1% searchOne $0 -> restoreCD 1% $0
$$ prepEraseC 00 -> prepEraseC $$ 00
e& gotoLastE e@ -> dec e& e@
0X temp $1 -> beginCopying 0X $1
0B replaceWithBlanks 1@ -> backToDFromRight 0B 1@
1# copyOne @B -> backToSharpOne 1# @1
0% prepEraseC @0 -> prepEraseC 0% @0
$@ checkCD $1 -> checkCD $@ $1
0$ backToSharpZero 1X -> backToSharpZero 0$ 1X
@# gotoMark 10 -> gotoMark @# 10
@E incD 00 -> checkCD @E 01
0@ backToSharpZero $E -> backToSharpZero 0@ $E
0C backToD @0 -> backToD 0C @0
1& dec @0 -> dec 1& @1
01 temp @1 -> beginCopying 01 @1
@% backToDFromRight @0 -> backToDFromRight @% @0
0$ restoreCD 0D -> restoreCD 0$ 0D
@X prepEraseC 1D -> eraseC @X 1D
1E backToD @0 -> backToD 1E @0
$1 eraseE $1 -> eraseE $1 $B
$E eraseE @1 -> eraseE $E @B
1B findBlank 10 -> temp 1B 10
$C checkEForZero 1B -> stop $C 1B
00 findBlank $0 -> temp 00 $0
eD backToDFromLeft @0 -> backToDFromLeft eD @0
@@ backToDFromLeft 1% -> backToDFromLeft @@ 1%
e& temp e1 -> beginCopying e& e1
@% FINAL -> FINAL @ FINAL
$B temp 01 -> beginCopying $B 01
1X dec @0 -> dec 1X @1
@B searchNextBit 10 -> searchNextBit @B 10
0@ gotoDecC 00 -> gotoDecC 0@ 00
eD backToD @0 -> backToD eD @0
@$ copyZero $B -> backToSharpZero @$ $0
$# restoreCD $0 -> restoreCD $# $0
eD backToSharpOne 1D -> backToSharpOne eD 1D
11 backToD 00 -> backToD 11 00
1E backToDFromRight 0E -> backToDFromRight 1E 0E
e$ massErase 1@ -> eraseE e$ 1@
1& backToSharpZero @1 -> backToSharpZero 1& @1
@1 backToSharpZero 0E -> backToSharpZero @1 0E
eX massErase 1@ -> eraseE eX 1@
$% gotoMark @0 -> gotoMark $% @0
0D backToDFromLeft 1% -> backToDFromLeft 0D 1%
e# backToSharpZero $X -> backToSharpZero e# $X
e& eraseE eE -> prepEraseC e& eE
e1 backToSharpOne 01 -> backToSharpOne e1 01
0# backToSharpOne @E -> backToSharpOne 0# @E
0D checkEForZero 1B -> stop 0D 1B
@C replaceWithBlanks @@ -> backToDFromRight @C @@
1D forwardToLastD @E -> incD 1D @E
eD backToDFromRight $E -> backToDFromRight eD $E
11 initDivider 00 -> initDividerByTwo 11 00
copyOne $C -> $C copyOne
1E gotoMark 10 -> gotoMark 1E 10
@1 checkEForZero eB -> stop @1 eB
eD gotoDecC e1 -> gotoDecC eD e1
0# gotoMark @1 -> gotoMark 0# @1
$$ replaceWithBlanks 1@ -> backToDFromRight $$ 1@
10 backToStart @1 -> backToStart 10 @1
11 eraseC @C -> backToStart 11 @X
@& beginCopying 0B -> backToStart @& 0C
e# copyZero 1B -> backToSharpZero e# 10
$% backToSharpOne @D -> backToSharpOne $% @D
01 searchNextBit 11 -> searchNextBit 01 11
1# goToPlaceForDivider $B -> backToFirstC 1# $D
eE backToSharpOne $C -> backToSharpOne eE $C
eB gotoDecC 00 -> gotoDecC eB 00
$$ initDividerByTwo 10 -> backToD $$ 11
0D findBlank 11 -> temp 0D 11
00 backToSharpOne eE -> backToSharpOne 00 eE
@E backToDFromRight 0E -> backToDFromRight @E 0E
1$ incD 00 -> checkCD 1$ 01
$1 nullifier 0B -> initDivider $1 0E
0# gotoMark $0 -> gotoMark 0# $0
@% dec @1 -> gotoMark @% @0
@1 eraseC @C -> backToStart @1 @X
0C gotoMark eE -> gotoDecC 0C eE
1X findBlank @0 -> temp 1X @0
0# eraseC @0 -> eraseC 0# @B
1D backToSharpZero $D -> backToSharpZero 1D $D
searchNextBit @% -> @% eqCD
$E goToPlaceForDivider 0B -> backToFirstC $E 0D
11 FINAL -> FINAL 1 FINAL
$% searchOne e1 -> backToDFromLeft $% e&
$% forwardToLastD 1E -> incD $% 1E
1@ backToStart 11 -> backToStart 1@ 11
1$ initDividerByTwo 00 -> backToD 1$ 01
$# searchZero @0 -> backToDFromLeft $# @%
e0 initDividerByTwo @0 -> backToD e0 @1
$B gotoDecC 00 -> gotoDecC $B 00
0X gotoDecC $0 -> gotoDecC 0X $0
0D gotoMark 10 -> gotoMark 0D 10
0$ eraseE $1 -> eraseE 0$ $B
1C gotoDecC e0 -> gotoDecC 1C e0
e& backToDFromLeft @1 -> backToDFromLeft e& @1
1X initDividerByTwo 10 -> backToD 1X 11
1# initDivider $0 -> initDividerByTwo 1# $0
00 backToDFromRight 1B -> backToDFromRight 00 1B
eC initDividerByTwo @0 -> backToD eC @1
1& backToSharpOne @E -> backToSharpOne 1& @E
e% backToDFromLeft 0& -> backToDFromLeft e% 0&
e0 restoreCD $% -> restoreCD e0 $0
e& backToD e0 -> backToD e& e0
1# backToSharpZero 10 -> backToSharpZero 1# 10
$& backToFirstC 00 -> backToFirstC $& 00
10 checkCD 0D -> checkCD 10 0D
$$ gotoDecC 11 -> gotoDecC $$ 11
@D copyZero 0B -> backToSharpZero @D 00
0E gotoDecC e1 -> gotoDecC 0E e1
1E backToSharpZero eD -> backToSharpZero 1E eD
e0 backToStart @0 -> backToStart e0 @0
$# incD e0 -> checkCD $# e1
1% findBlank eB -> FINAL 1% eB
@B backToStart 11 -> backToStart @B 11
@C incD 11 -> incD @C 10
10 massErase 0@ -> eraseE 10 0@
e$ backToDFromLeft $D -> searchNextBit e$ $D
1B backToD $1 -> backToD 1B $1
0C checkCD 01 -> checkCD 0C 01
0X findBlank @1 -> temp 0X @1
e& eraseE $0 -> eraseE e& $B
@X gotoMark 01 -> gotoMark @X 01
@B restoreCD $0 -> restoreCD @B $0
$0 backToSharpZero eC -> backToSharpZero $0 eC
1& backToDFromLeft @& -> backToDFromLeft 1& @&
1E forwardToLastD eE -> incD 1E eE
0B backToSharpOne @1 -> backToSharpOne 0B @1
0% backToDFromLeft $D -> searchNextBit 0% $D
e0 beginCopying 1B -> backToStart e0 1C
1D searchNextBit $1 -> searchNextBit 1D $1
@C backToDFromRight $1 -> backToDFromRight @C $1
0D backToDFromLeft @1 -> backToDFromLeft 0D @1
0@ searchZero 01 -> restoreCD 0@ 01
e% backToSharpZero $D -> backToSharpZero e% $D
1% findBlank e0 -> temp 1% e0
@% backToDFromRight @1 -> backToDFromRight @% @1
$# backToDFromLeft @% -> backToDFromLeft $# @%
1E restoreCD 01 -> restoreCD 1E 01
@D massErase e@ -> eraseE @D e@
$B backToSharpOne 1E -> backToSharpOne $B 1E
0@ prepEraseC 11 -> prepEraseC 0@ 11
1& eraseE 1E -> prepEraseC 1& 1E
$X eraseC e0 -> eraseC $X eB
0# searchOne @1 -> backToDFromLeft 0# @&
$$ gotoMark 1E -> gotoDecC $$ 1E
@C backToD @1 -> backToD @C @1
1E beginCopying 1B -> backToStart 1E 1C
eC gotoMark 0E -> gotoDecC eC 0E
$D eraseC 1C -> backToStart $D 1X
@E gotoMark 0E -> gotoDecC @E 0E
$0 backToSharpOne 11 -> backToSharpOne $0 11
1E backToDFromRight 11 -> backToDFromRight 1E 11
0$ searchZero 00 -> backToDFromLeft 0$ 0%
11 massErase $@ -> eraseE 11 $@
eD gotoMark $0 -> gotoMark eD $0
$1 massErase @@ -> eraseE $1 @@
e& backToD @1 -> backToD e& @1
$1 forwardToLastD $E -> incD $1 $E
0E temp 10 -> beginCopying 0E 10
1B searchNextBit 11 -> searchNextBit 1B 11
$X backToDFromRight 1B -> backToDFromRight $X 1B
0D eraseC 01 -> eraseC 0D 0B
1# backToDFromLeft eD -> searchNextBit 1# eD
1$ replaceWithBlanks e@ -> backToDFromRight 1$ e@
eB backToSharpOne $1 -> backToSharpOne eB $1
0C backToSharpZero @1 -> backToSharpZero 0C @1
$C gotoMark e1 -> gotoMark $C e1
0# backToSharpOne 1X -> backToSharpOne 0# 1X
0$ backToDFromLeft 1& -> backToDFromLeft 0$ 1&
e1 gotoDecC @D -> dec e1 @D
0# backToD @1 -> backToD 0# @1
1% findZero $1 -> beginCopying 1% $1
backToDFromRight $D -> $D createCopy
@# restoreCD e0 -> restoreCD @# e0
1@ backToSharpOne $X -> backToSharpOne 1@ $X
$# copyOne @B -> backToSharpOne $# @1
00 backToSharpZero $0 -> backToSharpZero 00 $0
$B gotoDecC @1 -> gotoDecC $B @1
10 restoreCD 0& -> restoreCD 10 01
0@ initDivider e0 -> initDividerByTwo 0@ e0
1C checkCD 1D -> checkCD 1C 1D
copyZero $0 -> $0 copyZero
$& gotoLastE @@ -> dec $& @@
$$ prepEraseC 1D -> eraseC $$ 1D
1C searchNextBit $0 -> searchNextBit 1C $0
1@ backToSharpOne 11 -> backToSharpOne 1@ 11
@$ checkCD 0D -> checkCD @$ 0D
@% checkCD 01 -> checkCD @% 01
$E backToSharpOne $X -> backToSharpOne $E $X
1X goToPlaceForDivider @B -> backToFirstC 1X @D
1$ backToSharpZero $0 -> backToSharpZero 1$ $0
e1 backToDFromRight 1E -> backToDFromRight e1 1E
0C restoreCD 11 -> restoreCD 0C 11
0D restoreCD e& -> restoreCD 0D e1
0D backToDFromLeft e% -> backToDFromLeft 0D e%
1E prepEraseC $D -> eraseC 1E $D
@$ backToDFromRight @E -> backToDFromRight @$ @E
0X backToSharpZero $0 -> backToSharpZero 0X $0
e@ prepEraseC 01 -> prepEraseC e@ 01
1@ eraseE 10 -> eraseE 1@ 1B
@1 gotoMark 0E -> gotoDecC @1 0E
1$ incD $0 -> checkCD 1$ $1
1@ backToSharpOne @X -> backToSharpOne 1@ @X
1% backToDFromLeft e1 -> backToDFromLeft 1% e1
$@ restoreCD @1 -> restoreCD $@ @1
0$ replaceWithBlanks @@ -> backToDFromRight 0$ @@
0E eraseE $E -> prepEraseC 0E $E
@# searchNextBit $0 -> searchNextBit @# $0
@& searchNextBit $1 -> searchNextBit @& $1
e1 copyZero 1B -> backToSharpZero e1 10
@$ searchNextBit 01 -> searchNextBit @$ 01
@& backToSharpOne $C -> backToSharpOne @& $C
@B checkEForZero 0B -> stop @B 0B
0% backToFirstC @1 -> backToFirstC 0% @1
$X backToStart 00 -> backToStart $X 00
0D gotoDecC 1D -> dec 0D 1D
@C searchNextBit 01 -> searchNextBit @C 01
0# restoreCD 01 -> restoreCD 0# 01
1@ dec 10 -> dec 1@ 11
@1 eraseE e0 -> eraseE @1 eB
e% backToSharpZero e1 -> backToSharpZero e% e1
@0 eraseE @1 -> eraseE @0 @B
0C incD 11 -> incD 0C 10
1B initDividerByTwo e0 -> backToD 1B e1
@1 backToSharpOne $0 -> backToSharpOne @1 $0
e1 checkCD @D -> checkCD e1 @D
@# incD @1 -> incD @# @0
e% searchNextBit 01 -> searchNextBit e% 01
eX eraseC $C -> backToStart eX $X
1& backToDFromLeft @% -> backToDFromLeft 1& @%
1X dec e1 -> gotoMark 1X e0
0D backToDFromLeft $& -> backToDFromLeft 0D $&
eB backToSharpZero eC -> backToSharpZero eB eC
0@ copyOne $B -> backToSharpOne 0@ $1
1X backToD 11 -> backToD 1X 11
@C checkCD @D -> checkCD @C @D
@B restoreCD 1& -> restoreCD @B 11
0# copyOne eB -> backToSharpOne 0# e1
1X backToDFromRight $B -> backToDFromRight 1X $B
0$ backToStart $1 -> backToStart 0$ $1
1D backToDFromLeft $D -> searchNextBit 1D $D
1# initDivider e0 -> initDividerByTwo 1# e0
01 eraseE 11 -> eraseE 01 1B
$0 backToStart 01 -> backToStart $0 01
0C dec e1 -> gotoMark 0C e0
@$ massErase $@ -> eraseE @$ $@
1X forwardToLastD 0E -> incD 1X 0E
e% backToFirstC 00 -> backToFirstC e% 00
$% findBlank $1 -> temp $% $1
1% initDivider 10 -> initDividerByTwo 1% 10
$$ backToD 10 -> backToD $$ 10
1& backToSharpOne 11 -> backToSharpOne 1& 11
0E restoreCD $D -> restoreCD 0E $D
eX searchZero $0 -> backToDFromLeft eX $%
$$ temp 10 -> beginCopying $$ 10
e@ checkCD 00 -> checkCD e@ 00
0E backToD e1 -> backToD 0E e1
@E beginCopying eB -> backToStart @E eC
@1 backToSharpOne @X -> backToSharpOne @1 @X
e0 restoreCD 01 -> restoreCD e0 01
0$ backToDFromLeft 1D -> searchNextBit 0$ 1D
$D eraseE 0E -> prepEraseC $D 0E
1$ gotoDecC @0 -> gotoDecC 1$ @0
eB backToD 00 -> backToD eB 00
$% backToSharpOne @1 -> backToSharpOne $% @1
0D backToDFromLeft @& -> backToDFromLeft 0D @&
1X copyOne $B -> backToSharpOne 1X $1
@D backToSharpZero @D -> backToSharpZero @D @D
$& restoreCD e1 -> restoreCD $& e1
@& eraseC @1 -> eraseC @& @B
$% restoreCD e% -> restoreCD $% e0
$@ eraseE 00 -> eraseE $@ 0B
0C gotoDecC $0 -> gotoDecC 0C $0
eX backToSharpZero e1 -> backToSharpZero eX e1
eD backToSharpOne $C -> backToSharpOne eD $C
e@ incD $0 -> checkCD e@ $1
1& prepEraseC e0 -> prepEraseC 1& e0
$E backToStart e1 -> backToStart $E e1
0@ backToSharpOne 0D -> backToSharpOne 0@ 0D
$B backToFirstC @1 -> backToFirstC $B @1
$B searchNextBit 00 -> searchNextBit $B 00
$# backToD 00 -> backToD $# 00
$& initDividerByTwo $0 -> backToD $& $1
0# temp 00 -> beginCopying 0# 00
eC restoreCD $0 -> restoreCD eC $0
eE searchZero @1 -> restoreCD eE @1
$D backToDFromLeft @% -> backToDFromLeft $D @%
01 gotoMark e0 -> gotoMark 01 e0
1X findBlank 10 -> temp 1X 10
@X goToPlaceForDivider 1B -> backToFirstC @X 1D
e# findBlank @B -> FINAL e# @B
@# searchZero e0 -> backToDFromLeft @# e%
1% eraseC $0 -> eraseC 1% $B
e@ backToDFromLeft $& -> backToDFromLeft e@ $&
0& backToDFromRight @B -> backToDFromRight 0& @B
@E temp $0 -> beginCopying @E $0
11 backToStart 00 -> backToStart 11 00
10 dec 01 -> gotoMark 10 00
1X beginCopying eB -> backToStart 1X eC
@B checkEForZero eB -> stop @B eB
$$ gotoMark @E -> gotoDecC $$ @E
01 eraseE $1 -> eraseE 01 $B
$1 gotoMark 01 -> gotoMark $1 01
e$ findZero @1 -> beginCopying e$ @1
0% incD $0 -> checkCD 0% $1
1E searchOne e1 -> backToDFromLeft 1E e&
0& replaceWithBlanks @@ -> backToDFromRight 0& @@
0D findBlank 01 -> temp 0D 01
@D searchNextBit @0 -> searchNextBit @D @0
$C findBlank @B -> FINAL $C @B
01 dec $0 -> dec 01 $1
1E searchZero $1 -> restoreCD 1E $1
1& incD 01 -> incD 1& 00
eC backToStart e0 -> backToStart eC e0
1D eraseC $0 -> eraseC 1D $B
eE restoreCD 01 -> restoreCD eE 01
@$ incD 01 -> incD @$ 00
eX searchZero 10 -> backToDFromLeft eX 1%
0@ restoreCD eD -> restoreCD 0@ eD
0% backToSharpZero 11 -> backToSharpZero 0% 11
@B findBlank eB -> FINAL @B eB
01 eraseC 01 -> eraseC 01 0B
$D backToSharpOne $X -> backToSharpOne $D $X
$# backToSharpZero $D -> backToSharpZero $# $D
e1 prepEraseC $0 -> prepEraseC e1 $0
1@ backToSharpZero @D -> backToSharpZero 1@ @D
$C gotoMark 10 -> gotoMark $C 10
@B searchOne 10 -> restoreCD @B 10
$X backToD 00 -> backToD $X 00
1E prepEraseC @0 -> prepEraseC 1E @0
@1 restoreCD 11 -> restoreCD @1 11
@1 checkCD 0D -> checkCD @1 0D
1% backToSharpZero @X -> backToSharpZero 1% @X
e0 gotoDecC 00 -> gotoDecC e0 00
$& searchOne e0 -> restoreCD $& e0
1# dec $1 -> gotoMark 1# $0
@@ temp 11 -> beginCopying @@ 11
@C checkCD 10 -> checkCD @C 10
@# gotoDecC 00 -> gotoDecC @# 00
$& backToSharpZero 1E -> backToSharpZero $& 1E
1& gotoDecC $1 -> gotoDecC 1& $1
1B findBlank $B -> FINAL 1B $B
@$ restoreCD $1 -> restoreCD @$ $1
@@ temp 00 -> beginCopying @@ 00
$D backToSharpOne 0E -> backToSharpOne $D 0E
01 nullifier 0B -> initDivider 01 0E
0C gotoDecC 0D -> dec 0C 0D
11 dec $1 -> gotoMark 11 $0
searchNextBit 1& -> 1& eqCD
0% backToDFromLeft e1 -> backToDFromLeft 0% e1
01 backToDFromRight e0 -> backToDFromRight 01 e0
$0 backToDFromLeft 1& -> backToDFromLeft $0 1&
$% findBlank e1 -> temp $% e1
eC eraseE 11 -> eraseE eC 1B
1B backToSharpZero 01 -> backToSharpZero 1B 01
@$ restoreCD 0& -> restoreCD @$ 01
eD searchOne e0 -> restoreCD eD e0
1@ gotoMark @1 -> gotoMark 1@ @1
10 backToStart @0 -> backToStart 10 @0
0$ searchOne 10 -> restoreCD 0$ 10
@$ searchZero 11 -> restoreCD @$ 11
$& backToSharpOne eE -> backToSharpOne $& eE
@D temp 01 -> beginCopying @D 01
eB backToSharpZero e0 -> backToSharpZero eB e0
$C backToSharpZero 00 -> backToSharpZero $C 00
e0 backToFirstC 00 -> backToFirstC e0 00
0X restoreCD $1 -> restoreCD 0X $1
eE gotoMark 11 -> gotoMark eE 11
$D findBlank 00 -> temp $D 00
00 backToSharpOne $C -> backToSharpOne 00 $C
0B backToStart $1 -> backToStart 0B $1
1& gotoDecC $D -> dec 1& $D
$D findBlank @0 -> temp $D @0
e% backToDFromRight 01 -> backToDFromRight e% 01
@D eraseE $1 -> eraseE @D $B
$X searchNextBit @1 -> searchNextBit $X @1
1@ checkEForZero eB -> stop 1@ eB
1C backToSharpZero e0 -> backToSharpZero 1C e0
@@ backToFirstC e1 -> backToFirstC @@ e1
0# backToFirstC 11 -> backToFirstC 0# 11
@& backToSharpZero $0 -> backToSharpZero @& $0
eB copyZero 0B -> backToSharpZero eB 00
$% searchZero e1 -> restoreCD $% e1
@C searchZero 10 -> backToDFromLeft @C 1%
eX backToDFromRight @1 -> backToDFromRight eX @1
@C backToSharpOne $1 -> backToSharpOne @C $1
@X backToDFromRight @1 -> backToDFromRight @X @1
eE restoreCD e& -> restoreCD eE e1
@C backToDFromLeft 1D -> searchNextBit @C 1D
$X eraseC $0 -> eraseC $X $B
$$ forwardToLastD @E -> incD $$ @E
e# dec e1 -> gotoMark e# e0
01 backToFirstC 01 -> backToFirstC 01 01
0D eraseC 0C -> backToStart 0D 0X
eB incD $1 -> incD eB $0
eB backToDFromRight 0E -> backToDFromRight eB 0E
e1 backToSharpZero eC -> backToSharpZero e1 eC
0# gotoMark eE -> gotoDecC 0# eE
$0 initDivider 00 -> initDividerByTwo $0 00
eD backToStart 01 -> backToStart eD 01
e& gotoMark 10 -> gotoMark e& 10
0& gotoDecC 11 -> gotoDecC 0& 11
@D copyOne @B -> backToSharpOne @D @1
10 searchOne 11 -> backToDFromLeft 10 1&
$1 findBlank 00 -> temp $1 00
1E backToDFromLeft @0 -> backToDFromLeft 1E @0
@1 gotoDecC $D -> dec @1 $D
e$ eraseE $0 -> eraseE e$ $B
0D backToSharpOne @1 -> backToSharpOne 0D @1
$X backToSharpZero $C -> backToSharpZero $X $C
eB eraseC 0C -> backToStart eB 0X
$$ backToSharpOne eX -> backToSharpOne $$ eX
$C backToSharpZero $1 -> backToSharpZero $C $1
@D replaceWithBlanks e@ -> backToDFromRight @D e@
0# restoreCD 1& -> restoreCD 0# 11
e1 backToSharpOne $C -> backToSharpOne e1 $C
$# searchNextBit @1 -> searchNextBit $# @1
1@ gotoLastE 0@ -> dec 1@ 0@
@0 searchZero 00 -> backToDFromLeft @0 0%
0B checkCD e0 -> checkCD 0B e0
@% eraseE 01 -> eraseE @% 0B
e1 backToD 00 -> backToD e1 00
eE backToSharpZero @0 -> backToSharpZero eE @0
0E copyZero @B -> backToSharpZero 0E @0
$& forwardToLastD eE -> incD $& eE
@# backToDFromLeft 0D -> searchNextBit @# 0D
$$ backToStart e1 -> backToStart $$ e1
eD backToDFromRight e0 -> backToDFromRight eD e0
$B gotoDecC @0 -> gotoDecC $B @0
0E backToSharpZero 0C -> backToSharpZero 0E 0C
@B backToDFromRight 0E -> backToDFromRight @B 0E
e@ restoreCD @D -> restoreCD e@ @D
@$ gotoDecC e1 -> gotoDecC @$ e1
00 initDivider e0 -> initDividerByTwo 00 e0
$# temp 01 -> beginCopying $# 01
@D eraseC 00 -> eraseC @D 0B
e& findZero $1 -> beginCopying e& $1
@$ backToSharpOne eX -> backToSharpOne @$ eX
@@ backToSharpZero e0 -> backToSharpZero @@ e0
1E nullifier 0B -> initDivider 1E 0E
$& checkEForZero 1B -> stop $& 1B
searchNextBit @& -> @& eqCD
copyOne eD -> eD copyOne
10 gotoLastE e@ -> dec 10 e@
0D searchOne e0 -> restoreCD 0D e0
1C initDivider @0 -> initDividerByTwo 1C @0
$E eraseE e0 -> eraseE $E eB
$B searchNextBit e0 -> searchNextBit $B e0
0C eraseE 01 -> eraseE 0C 0B
@# eraseC $C -> backToStart @# $X
0D dec 00 -> dec 0D 01
1% gotoLastE 1@ -> dec 1% 1@
1B gotoDecC @0 -> gotoDecC 1B @0
@1 incD @0 -> checkCD @1 @1
11 prepEraseC 1D -> eraseC 11 1D
$& backToSharpOne @C -> backToSharpOne $& @C
@1 replaceWithBlanks @@ -> backToDFromRight @1 @@
1E backToStart 01 -> backToStart 1E 01
$# incD 00 -> checkCD $# 01
11 backToSharpOne $1 -> backToSharpOne 11 $1
$@ checkCD 0D -> checkCD $@ 0D
@@ searchOne @0 -> restoreCD @@ @0
1# backToDFromRight 10 -> backToDFromRight 1# 10
1$ searchOne 01 -> backToDFromLeft 1$ 0&
11 goToPlaceForDivider 0B -> backToFirstC 11 0D
00 searchNextBit e1 -> searchNextBit 00 e1
0% searchNextBit 00 -> searchNextBit 0% 00
createCopy 00 -> 0# copyZero
0D backToSharpZero e0 -> backToSharpZero 0D e0
@@ replaceWithBlanks @@ -> backToDFromRight @@ @@
eX eraseE @1 -> eraseE eX @B
11 gotoLastE 1@ -> dec 11 1@
00 restoreCD e& -> restoreCD 00 e1
@X backToSharpZero @1 -> backToSharpZero @X @1
eC backToSharpOne @X -> backToSharpOne eC @X
$% backToDFromLeft $1 -> backToDFromLeft $% $1
0# prepEraseC $1 -> prepEraseC 0# $1
e0 backToSharpZero 0C -> backToSharpZero e0 0C
$X initDividerByTwo 00 -> backToD $X 01
e% replaceWithBlanks $@ -> backToDFromRight e% $@
0@ nullifier 1B -> initDivider 0@ 1E
1X incD e1 -> incD 1X e0
01 searchZero 11 -> restoreCD 01 11
$& backToSharpOne $1 -> backToSharpOne $& $1
0# backToStart @1 -> backToStart 0# @1
$% checkCD 10 -> checkCD $% 10
10 searchZero 11 -> restoreCD 10 11
$B searchZero @1 -> restoreCD $B @1
@C findBlank 00 -> temp @C 00
$& restoreCD 1& -> restoreCD $& 11
$B restoreCD $0 -> restoreCD $B $0
01 gotoMark @E -> gotoDecC 01 @E
0% searchZero @0 -> backToDFromLeft 0% @%
@$ copyZero eB -> backToSharpZero @$ e0
1# backToSharpOne $1 -> backToSharpOne 1# $1
$# eraseE 00 -> eraseE $# 0B
00 checkCD eD -> checkCD 00 eD
eX backToStart e1 -> backToStart eX e1
@X eraseC @C -> backToStart @X @X
0@ massErase e@ -> eraseE 0@ e@
1C backToDFromLeft 01 -> backToDFromLeft 1C 01
0@ backToDFromLeft @0 -> backToDFromLeft 0@ @0
1B backToDFromRight @0 -> backToDFromRight 1B @0
0C replaceWithBlanks 1@ -> backToDFromRight 0C 1@
$& prepEraseC e1 -> prepEraseC $& e1
0$ backToDFromRight 00 -> backToDFromRight 0$ 00
0C initDivider 10 -> initDividerByTwo 0C 10
1& backToSharpZero 1X -> backToSharpZero 1& 1X
@C backToDFromLeft 01 -> backToDFromLeft @C 01
0C backToSharpOne 00 -> backToSharpOne 0C 00
eB forwardToLastD @E -> incD eB @E
eC dec 00 -> dec eC 01
1% backToD $1 -> backToD 1% $1
0B goToPlaceForDivider 1B -> backToFirstC 0B 1D
eX findBlank $B -> FINAL eX $B
1X gotoLastE e@ -> dec 1X e@
0C forwardToLastD eE -> incD 0C eE
0C backToDFromRight $B -> backToDFromRight 0C $B
$C backToSharpOne 00 -> backToSharpOne $C 00
1& backToSharpOne 01 -> backToSharpOne 1& 01
@C temp $1 -> beginCopying @C $1
e$ prepEraseC 01 -> prepEraseC e$ 01
10 incD $1 -> incD 10 $0
$C checkCD 0D -> checkCD $C 0D
@$ backToDFromLeft @D -> searchNextBit @$ @D
0D backToSharpZero e1 -> backToSharpZero 0D e1
e@ gotoDecC eD -> dec e@ eD
@D eraseC $0 -> eraseC @D $B
1@ backToDFromRight 1E -> backToDFromRight 1@ 1E
e0 copyZero 1B -> backToSharpZero e0 10
@@ gotoLastE $@ -> dec @@ $@
10 restoreCD eD -> restoreCD 10 eD
@0 backToDFromLeft $D -> searchNextBit @0 $D
eD gotoMark 1E -> gotoDecC eD 1E
$# eraseC 1C -> backToStart $# 1X
$D restoreCD $1 -> restoreCD $D $1
1@ searchOne e0 -> restoreCD 1@ e0
@B backToFirstC 11 -> backToFirstC @B 11
@C findZero 11 -> beginCopying @C 11
@C backToDFromRight e1 -> backToDFromRight @C e1
1X searchNextBit 01 -> searchNextBit 1X 01
0E backToDFromRight 1B -> backToDFromRight 0E 1B
eC initDivider e0 -> initDividerByTwo eC e0
$@ eraseC @0 -> eraseC $@ @B
@D gotoLastE $@ -> dec @D $@
@1 prepEraseC @0 -> prepEraseC @1 @0
e& checkEForZero $B -> stop e& $B
e1 backToStart @1 -> backToStart e1 @1
eX gotoMark e1 -> gotoMark eX e1
1& dec 00 -> dec 1& 01
$$ findZero @1 -> beginCopying $$ @1
$C backToDFromRight $1 -> backToDFromRight $C $1
0% backToSharpZero @D -> backToSharpZero 0% @D
0% prepEraseC 0D -> eraseC 0% 0D
1# searchOne @0 -> restoreCD 1# @0
1C restoreCD @& -> restoreCD 1C @1
eX findZero e1 -> beginCopying eX e1
0& searchZero e1 -> restoreCD 0& e1
e$ backToSharpZero 1X -> backToSharpZero e$ 1X
0@ backToSharpOne eX -> backToSharpOne 0@ eX
0% restoreCD @D -> restoreCD 0% @D
@% backToSharpZero $1 -> backToSharpZero @% $1
e% searchNextBit $1 -> searchNextBit e% $1
01 backToSharpZero $E -> backToSharpZero 01 $E
1& restoreCD @% -> restoreCD 1& @0
e@ searchZero 11 -> restoreCD e@ 11
1B backToDFromLeft @0 -> backToDFromLeft 1B @0
@@ initDividerByTwo $0 -> backToD @@ $1
$% backToSharpZero 1X -> backToSharpZero $% 1X
e$ gotoLastE 0@ -> dec e$ 0@
@$ dec e1 -> gotoMark @$ e0
0X backToDFromRight 00 -> backToDFromRight 0X 00
00 findBlank $1 -> temp 00 $1
1B eraseC $1 -> eraseC 1B $B
@0 searchOne e0 -> restoreCD @0 e0
00 backToFirstC @0 -> backToFirstC 00 @0
1$ checkCD $0 -> checkCD 1$ $0
@@ prepEraseC 11 -> prepEraseC @@ 11
@0 backToSharpZero eX -> backToSharpZero @0 eX
1D backToFirstC $1 -> backToFirstC 1D $1
01 restoreCD @D -> restoreCD 01 @D
e% backToStart 00 -> backToStart e% 00
@D gotoMark 11 -> gotoMark @D 11
e1 backToStart 00 -> backToStart e1 00
$@ beginCopying 1B -> backToStart $@ 1C
copyOne 0X -> 0X copyOne
1% eraseE eE -> prepEraseC 1% eE
@# eraseC @C -> backToStart @# @X
$% eraseE 11 -> eraseE $% 1B
0# FINAL -> FINAL 0 FINAL
1D backToStart $0 -> backToStart 1D $0
0C backToFirstC 10 -> backToFirstC 0C 10
e@ gotoMark e1 -> gotoMark e@ e1
copyOne 10 -> 10 copyOne
goToPlaceForDivider 00 -> 00 goToPlaceForDivider
eC backToSharpOne $C -> backToSharpOne eC $C
11 backToDFromRight 10 -> backToDFromRight 11 10
1D beginCopying @B -> backToStart 1D @C
e% backToSharpZero 1D -> backToSharpZero e% 1D
$# checkCD eD -> checkCD $# eD
01 gotoLastE e@ -> dec 01 e@
@D backToDFromLeft $& -> backToDFromLeft @D $&
eC checkEForZero 0B -> stop eC 0B
@1 gotoDecC @0 -> gotoDecC @1 @0
@$ findBlank $0 -> temp @$ $0
e@ backToSharpOne 1X -> backToSharpOne e@ 1X
@1 restoreCD 1& -> restoreCD @1 11
@1 backToDFromLeft $1 -> backToDFromLeft @1 $1
$& FINAL -> FINAL $ FINAL
0B checkCD 01 -> checkCD 0B 01
$C initDividerByTwo $0 -> backToD $C $1
0@ backToFirstC 10 -> backToFirstC 0@ 10
11 backToSharpOne eD -> backToSharpOne 11 eD
$@ backToSharpZero @E -> backToSharpZero $@ @E
$% restoreCD e& -> restoreCD $% e1
@C forwardToLastD 1E -> incD @C 1E
e0 eraseC 1C -> backToStart e0 1X
0@ eraseC @C -> backToStart 0@ @X
eB gotoLastE $@ -> dec eB $@
e% backToDFromRight 0E -> backToDFromRight e% 0E
0& backToStart 10 -> backToStart 0& 10
0E backToSharpOne 1C -> backToSharpOne 0E 1C
1$ initDivider 10 -> initDividerByTwo 1$ 10
1% temp 01 -> beginCopying 1% 01
dec 1E -> 1E replaceWithBlanks
@E gotoLastE $@ -> dec @E $@
$B initDivider 00 -> initDividerByTwo $B 00
e% replaceWithBlanks 0@ -> backToDFromRight e% 0@
eC searchNextBit $0 -> searchNextBit eC $0
@1 restoreCD e& -> restoreCD @1 e1
eX initDivider 10 -> initDividerByTwo eX 10
eX prepEraseC 01 -> prepEraseC eX 01
eC backToSharpZero $0 -> backToSharpZero eC $0
@@ dec 00 -> dec @@ 01
$# backToSharpZero 0E -> backToSharpZero $# 0E
1B backToDFromRight e0 -> backToDFromRight 1B e0
eC gotoLastE @@ -> dec eC @@
@X backToDFromRight 0B -> backToDFromRight @X 0B
$@ backToFirstC @0 -> backToFirstC $@ @0
gotoMark @C -> @C ifZero
e# backToDFromLeft 0% -> backToDFromLeft e# 0%
e& gotoDecC e0 -> gotoDecC e& e0
1C backToDFromLeft 0& -> backToDFromLeft 1C 0&
$C checkCD 1D -> checkCD $C 1D
$0 dec @0 -> dec $0 @1
@E incD 01 -> incD @E 00
1X eraseE e1 -> eraseE 1X eB
0C incD $1 -> incD 0C $0
e@ gotoMark 1E -> gotoDecC e@ 1E
0C checkCD eD -> checkCD 0C eD
@% gotoLastE @@ -> dec @% @@
eD beginCopying $B -> backToStart eD $C
@& incD $1 -> incD @& $0
$% replaceWithBlanks @@ -> backToDFromRight $% @@
0E FINAL -> FINAL 0 FINAL
eD eraseC @1 -> eraseC eD @B
11 temp e0 -> beginCopying 11 e0
@1 checkCD $0 -> checkCD @1 $0
@# backToFirstC 11 -> backToFirstC @# 11
eB backToDFromRight 0B -> backToDFromRight eB 0B
@B copyZero $B -> backToSharpZero @B $0
@& prepEraseC @1 -> prepEraseC @& @1
eC temp 01 -> beginCopying eC 01
0D dec $0 -> dec 0D $1
@# findBlank 0B -> FINAL @# 0B
$C findZero 11 -> beginCopying $C 11
00 backToSharpOne @0 -> backToSharpOne 00 @0
eB backToD 11 -> backToD eB 11
1C initDivider e0 -> initDividerByTwo 1C e0
$E backToDFromRight @0 -> backToDFromRight $E @0
0& backToDFromLeft e% -> backToDFromLeft 0& e%
e% backToStart 01 -> backToStart e% 01
$$ backToSharpOne 11 -> backToSharpOne $$ 11
1@ gotoMark @0 -> gotoMark 1@ @0
eE restoreCD 1& -> restoreCD eE 11
$& dec 11 -> gotoMark $& 10
$& prepEraseC eD -> eraseC $& eD
$$ backToD @0 -> backToD $$ @0
$@ restoreCD e& -> restoreCD $@ e1
$X searchOne 01 -> backToDFromLeft $X 0&
$C findBlank $1 -> temp $C $1
0B gotoDecC 01 -> gotoDecC 0B 01
1B backToSharpZero $E -> backToSharpZero 1B $E
e0 searchZero $0 -> backToDFromLeft e0 $%
FINAL e$ -> FINAL e FINAL
e@ nullifier 0B -> initDivider e@ 0E
0E prepEraseC 0D -> eraseC 0E 0D
e% backToSharpZero e0 -> backToSharpZero e% e0
$B searchOne 11 -> backToDFromLeft $B 1&
0C copyOne eB -> backToSharpOne 0C e1
eB backToStart 00 -> backToStart eB 00
$& temp $0 -> beginCopying $& $0
$$ restoreCD 1& -> restoreCD $$ 11
$% backToDFromLeft 00 -> backToDFromLeft $% 00
@$ backToDFromLeft e& -> backToDFromLeft @$ e&
$B gotoMark $1 -> gotoMark $B $1
FINAL 11 -> FINAL 1 FINAL
e0 temp $1 -> beginCopying e0 $1
10 backToSharpZero 1E -> backToSharpZero 10 1E
0# massErase e@ -> eraseE 0# e@
0D backToSharpZero @C -> backToSharpZero 0D @C
e% backToDFromRight 1E -> backToDFromRight e% 1E
$0 FINAL -> FINAL $ FINAL
0X nullifier 0B -> initDivider 0X 0E
$& checkCD 00 -> checkCD $& 00
e& prepEraseC $0 -> prepEraseC e& $0
01 incD $0 -> checkCD 01 $1
e& copyOne eB -> backToSharpOne e& e1
$E gotoDecC $1 -> gotoDecC $E $1
1@ gotoLastE 1@ -> dec 1@ 1@
$# restoreCD @1 -> restoreCD $# @1
@$ checkCD 11 -> checkCD @$ 11
0X backToSharpOne e0 -> backToSharpOne 0X e0
@$ backToSharpZero eD -> backToSharpZero @$ eD
@% copyZero $B -> backToSharpZero @% $0
1C restoreCD @D -> restoreCD 1C @D
@# backToSharpZero $0 -> backToSharpZero @# $0
eB massErase 0@ -> eraseE eB 0@
@$ gotoMark 0E -> gotoDecC @$ 0E
1# backToD 01 -> backToD 1# 01
0B backToStart 11 -> backToStart 0B 11
0# backToSharpZero eX -> backToSharpZero 0# eX
0X initDividerByTwo @0 -> backToD 0X @1
1D dec @1 -> gotoMark 1D @0
0% backToSharpZero 0E -> backToSharpZero 0% 0E
1D backToSharpOne @C -> backToSharpOne 1D @C
$% searchNextBit 10 -> searchNextBit $% 10
@E gotoMark @0 -> gotoMark @E @0
0B incD $0 -> checkCD 0B $1
1& eraseC @0 -> eraseC 1& @B
@% eraseE @1 -> eraseE @% @B
0B findBlank @0 -> temp 0B @0
0E gotoDecC @D -> dec 0E @D
eB backToSharpZero 0D -> backToSharpZero eB 0D
$% backToDFromRight $E -> backToDFromRight $% $E
eD backToSharpZero e0 -> backToSharpZero eD e0
$$ backToSharpOne 0D -> backToSharpOne $$ 0D
0X gotoDecC e0 -> gotoDecC 0X e0
0X eraseC 00 -> eraseC 0X 0B
e1 eraseC $C -> backToStart e1 $X
@C searchZero e0 -> backToDFromLeft @C e%
10 gotoMark $1 -> gotoMark 10 $1
@& backToD 11 -> backToD @& 11
$$ eraseE $1 -> eraseE $$ $B
eC gotoMark @E -> gotoDecC eC @E
1D eraseC 01 -> eraseC 1D 0B
01 searchOne e1 -> backToDFromLeft 01 e&
$% backToDFromRight $0 -> backToDFromRight $% $0
@& searchOne 11 -> backToDFromLeft @& 1&
0B backToSharpZero @E -> backToSharpZero 0B @E
e1 eraseC 1C -> backToStart e1 1X
e0 findZero e1 -> beginCopying e0 e1
$E initDividerByTwo @0 -> backToD $E @1
eC forwardToLastD 0E -> incD eC 0E
10 checkCD $D -> checkCD 10 $D
@$ backToFirstC e1 -> backToFirstC @$ e1
1# temp 10 -> beginCopying 1# 10
e% backToSharpZero @X -> backToSharpZero e% @X
1D backToSharpOne 0C -> backToSharpOne 1D 0C
11 backToDFromLeft 00 -> backToDFromLeft 11 00
0% prepEraseC 01 -> prepEraseC 0% 01
1X backToSharpOne 1E -> backToSharpOne 1X 1E
0@ backToDFromRight $E -> backToDFromRight 0@ $E
1C backToSharpZero 1C -> backToSharpZero 1C 1C
0& gotoDecC 10 -> gotoDecC 0& 10
checkZeroD e0 -> e0 checkZeroD
1& backToSharpOne $C -> backToSharpOne 1& $C
$$ nullifier $B -> initDivider $$ $E
@B restoreCD 01 -> restoreCD @B 01
0C backToSharpZero eC -> backToSharpZero 0C eC
@B massErase @@ -> eraseE @B @@
e@ restoreCD 1D -> restoreCD e@ 1D
@& searchZero $0 -> backToDFromLeft @& $%
$0 searchZero $0 -> backToDFromLeft $0 $%
@B incD e0 -> checkCD @B e1
eE backToSharpZero 10 -> backToSharpZero eE 10
e1 temp 10 -> beginCopying e1 10
eE gotoDecC $D -> dec eE $D
$E replaceWithBlanks 1@ -> backToDFromRight $E 1@
@$ gotoMark e1 -> gotoMark @$ e1
00 backToSharpOne 11 -> backToSharpOne 00 11
@E searchZero e0 -> backToDFromLeft @E e%
1& temp $0 -> beginCopying 1& $0
00 searchZero 01 -> restoreCD 00 01
1% dec $0 -> dec 1% $1
$@ searchNextBit @0 -> searchNextBit $@ @0
1D backToSharpZero 1E -> backToSharpZero 1D 1E
0# restoreCD @D -> restoreCD 0# @D
@C incD 01 -> incD @C 00
1@ backToFirstC $1 -> backToFirstC 1@ $1
eX backToSharpOne @0 -> backToSharpOne eX @0
1B backToSharpZero @1 -> backToSharpZero 1B @1
@@ backToFirstC $0 -> backToFirstC @@ $0
@E backToStart 00 -> backToStart @E 00
1% findBlank 0B -> FINAL 1% 0B
0% backToSharpOne e1 -> backToSharpOne 0% e1
@% backToDFromLeft e% -> backToDFromLeft @% e%
1% backToDFromLeft $1 -> backToDFromLeft 1% $1
1D initDivider $0 -> initDividerByTwo 1D $0
1X backToSharpOne 1C -> backToSharpOne 1X 1C
@& restoreCD 11 -> restoreCD @& 11
$% backToSharpZero 1C -> backToSharpZero $% 1C
@# gotoDecC 01 -> gotoDecC @# 01
$0 searchZero 10 -> backToDFromLeft $0 1%
@1 beginCopying 0B -> backToStart @1 0C
0& replaceWithBlanks 1@ -> backToDFromRight 0& 1@
@% eraseC 00 -> eraseC @% 0B
e# backToDFromLeft 01 -> backToDFromLeft e# 01
0$ backToDFromLeft @0 -> backToDFromLeft 0$ @0
eX findBlank @B -> FINAL eX @B
1D incD e0 -> checkCD 1D e1
01 backToDFromLeft e% -> backToDFromLeft 01 e%
e0 checkCD e1 -> checkCD e0 e1
$@ backToDFromLeft @1 -> backToDFromLeft $@ @1
eC backToSharpZero e0 -> backToSharpZero eC e0
$& searchNextBit $1 -> searchNextBit $& $1
eX backToFirstC @0 -> backToFirstC eX @0
$X backToSharpZero e1 -> backToSharpZero $X e1
$@ restoreCD $& -> restoreCD $@ $1
$B backToDFromLeft @% -> backToDFromLeft $B @%
0B replaceWithBlanks @@ -> backToDFromRight 0B @@
e% forwardToLastD eE -> incD e% eE
$C eraseE @E -> prepEraseC $C @E
@C eraseE $E -> prepEraseC @C $E
1D backToStart 00 -> backToStart 1D 00
e% searchZero @0 -> backToDFromLeft e% @%
$# backToSharpOne e1 -> backToSharpOne $# e1
1& checkCD 1D -> checkCD 1& 1D
$# backToSharpOne 00 -> backToSharpOne $# 00
$@ dec 01 -> gotoMark $@ 00
$X backToDFromLeft $& -> backToDFromLeft $X $&
1# copyZero 1B -> backToSharpZero 1# 10
eC copyOne $B -> backToSharpOne eC $1
1E checkEForZero 1B -> stop 1E 1B
1C eraseE eE -> prepEraseC 1C eE
@0 backToSharpZero 1D -> backToSharpZero @0 1D
1D copyZero 1B -> backToSharpZero 1D 10
01 restoreCD e1 -> restoreCD 01 e1
1X nullifier $B -> initDivider 1X $E
1D findBlank 0B -> FINAL 1D 0B
0& gotoDecC $D -> dec 0& $D
11 eraseE $E -> prepEraseC 11 $E
$B backToSharpZero @C -> backToSharpZero $B @C
1E massErase 0@ -> eraseE 1E 0@
@X restoreCD $% -> restoreCD @X $0
@& massErase $@ -> eraseE @& $@
$B checkCD @0 -> checkCD $B @0
@B initDivider $0 -> initDividerByTwo @B $0
$% backToSharpZero 10 -> backToSharpZero $% 10
@E searchOne $0 -> restoreCD @E $0
e1 backToSharpOne 0C -> backToSharpOne e1 0C
0@ eraseE 10 -> eraseE 0@ 1B
@X backToStart 11 -> backToStart @X 11
@1 backToSharpOne e1 -> backToSharpOne @1 e1
1X initDivider @0 -> initDividerByTwo 1X @0
10 backToDFromRight 11 -> backToDFromRight 10 11
1B backToSharpOne 0E -> backToSharpOne 1B 0E
0C findBlank 00 -> temp 0C 00
$& backToDFromLeft $& -> backToDFromLeft $& $&
0& eraseE $1 -> eraseE 0& $B
1X backToDFromLeft 0& -> backToDFromLeft 1X 0&
0X eraseC e1 -> eraseC 0X eB
$B restoreCD e1 -> restoreCD $B e1
$# beginCopying $B -> backToStart $# $C
1@ replaceWithBlanks $@ -> backToDFromRight 1@ $@
0B prepEraseC eD -> eraseC 0B eD
@0 prepEraseC @D -> eraseC @0 @D
e1 backToSharpOne 11 -> backToSharpOne e1 11
eC checkCD e1 -> checkCD eC e1
createCopy eX -> eC forwardToLastD
$$ gotoDecC eD -> dec $$ eD
0# backToDFromLeft 10 -> backToDFromLeft 0# 10
1& backToDFromLeft $1 -> backToDFromLeft 1& $1
0X eraseC 10 -> eraseC 0X 1B
0C backToSharpOne $0 -> backToSharpOne 0C $0
01 incD @0 -> checkCD 01 @1
@$ initDivider $0 -> initDividerByTwo @$ $0
$0 forwardToLastD @E -> incD $0 @E
0$ temp $1 -> beginCopying 0$ $1
eE gotoDecC eD -> dec eE eD
$E searchOne 00 -> restoreCD $E 00
$& eraseE 10 -> eraseE $& 1B
FINAL $0 -> FINAL $ FINAL
0@ eraseC $1 -> eraseC 0@ $B
$0 backToFirstC e0 -> backToFirstC $0 e0
01 backToDFromLeft eD -> searchNextBit 01 eD
$D restoreCD e1 -> restoreCD $D e1
1X prepEraseC $D -> eraseC 1X $D
e% forwardToLastD 1E -> incD e% 1E
$# searchNextBit $0 -> searchNextBit $# $0
01 backToDFromLeft $& -> backToDFromLeft 01 $&
0$ nullifier 1B -> initDivider 0$ 1E
0C backToSharpZero eD -> backToSharpZero 0C eD
eX searchOne @1 -> backToDFromLeft eX @&
@E eraseE 11 -> eraseE @E 1B
eB backToDFromRight 1E -> backToDFromRight eB 1E
eB checkCD @D -> checkCD eB @D
0$ eraseE @1 -> eraseE 0$ @B
e@ backToDFromRight $0 -> backToDFromRight e@ $0
$C backToSharpZero @E -> backToSharpZero $C @E
e1 findZero 11 -> beginCopying e1 11
1B eraseC @0 -> eraseC 1B @B
@& gotoMark 0E -> gotoDecC @& 0E
@B backToStart e0 -> backToStart @B e0
@1 replaceWithBlanks $@ -> backToDFromRight @1 $@
1C gotoMark 00 -> gotoMark 1C 00
1& copyZero $B -> backToSharpZero 1& $0
0$ gotoMark 0E -> gotoDecC 0$ 0E
@@ backToSharpOne eX -> backToSharpOne @@ eX
@X eraseE eE -> prepEraseC @X eE
1@ findZero $1 -> beginCopying 1@ $1
1X prepEraseC $1 -> prepEraseC 1X $1
1C backToDFromRight e1 -> backToDFromRight 1C e1
$E backToDFromRight 1B -> backToDFromRight $E 1B
@C goToPlaceForDivider $B -> backToFirstC @C $D
@0 backToDFromLeft 0& -> backToDFromLeft @0 0&
@% backToDFromLeft 1& -> backToDFromLeft @% 1&
0$ initDivider $0 -> initDividerByTwo 0$ $0
0% backToSharpOne 1C -> backToSharpOne 0% 1C
@E prepEraseC $1 -> prepEraseC @E $1
0% backToSharpOne @1 -> backToSharpOne 0% @1
@E findBlank eB -> FINAL @E eB
0B restoreCD @& -> restoreCD 0B @1
10 findBlank eB -> FINAL 10 eB
1@ searchOne e1 -> backToDFromLeft 1@ e&
eX restoreCD 0D -> restoreCD eX 0D
eX searchNextBit 11 -> searchNextBit eX 11
$# backToDFromRight 1E -> backToDFromRight $# 1E
1$ gotoMark e1 -> gotoMark 1$ e1
eE backToDFromRight $E -> backToDFromRight eE $E
1D backToSharpOne $0 -> backToSharpOne 1D $0
@@ checkCD 00 -> checkCD @@ 00
eD backToSharpZero 0C -> backToSharpZero eD 0C
@@ backToSharpZero 10 -> backToSharpZero @@ 10
$# eraseE eE -> prepEraseC $# eE
$0 searchOne $1 -> backToDFromLeft $0 $&
10 backToSharpOne 0E -> backToSharpOne 10 0E
0# backToDFromLeft $D -> searchNextBit 0# $D
0$ checkEForZero eB -> stop 0$ eB
1% prepEraseC @0 -> prepEraseC 1% @0
1C searchNextBit @0 -> searchNextBit 1C @0
0@ gotoMark e1 -> gotoMark 0@ e1
$X backToDFromRight 10 -> backToDFromRight $X 10
$B backToFirstC 00 -> backToFirstC $B 00
0$ searchZero 10 -> backToDFromLeft 0$ 1%
@@ backToDFromLeft 10 -> backToDFromLeft @@ 10
1D findBlank 00 -> temp 1D 00
e1 checkCD 1D -> checkCD e1 1D
eB prepEraseC 0D -> eraseC eB 0D
0C backToFirstC @0 -> backToFirstC 0C @0
$B backToFirstC $1 -> backToFirstC $B $1
$& searchOne 00 -> restoreCD $& 00
$0 prepEraseC @0 -> prepEraseC $0 @0
$B dec 01 -> gotoMark $B 00
@% backToD @1 -> backToD @% @1
$X eraseE 11 -> eraseE $X 1B
e1 eraseC @1 -> eraseC e1 @B
0@ backToFirstC @1 -> backToFirstC 0@ @1
eD findBlank 0B -> FINAL eD 0B
1B backToSharpZero 0E -> backToSharpZero 1B 0E
@B copyOne $B -> backToSharpOne @B $1
0C backToSharpZero 01 -> backToSharpZero 0C 01
1X prepEraseC 1D -> eraseC 1X 1D
$1 gotoDecC 10 -> gotoDecC $1 10
@E incD e0 -> checkCD @E e1
e& findZero 01 -> beginCopying e& 01
$E backToFirstC $1 -> backToFirstC $E $1
e& backToSharpOne $1 -> backToSharpOne e& $1
0B initDivider e0 -> initDividerByTwo 0B e0
checkZeroD $1 -> $1 checkZeroD
@$ findBlank @0 -> temp @$ @0
$0 eraseC eC -> backToStart $0 eX
$@ searchOne 10 -> restoreCD $@ 10
1B backToStart e1 -> backToStart 1B e1
@0 searchOne 11 -> backToDFromLeft @0 1&
0B copyZero 1B -> backToSharpZero 0B 10
eX prepEraseC e1 -> prepEraseC eX e1
$1 dec @0 -> dec $1 @1
01 findBlank 01 -> temp 01 01
@# backToSharpOne @D -> backToSharpOne @# @D
@% searchNextBit @1 -> searchNextBit @% @1
$& gotoMark e1 -> gotoMark $& e1
10 incD $0 -> checkCD 10 $1
eB restoreCD eD -> restoreCD eB eD
$@ searchZero e0 -> backToDFromLeft $@ e%
1B eraseC e0 -> eraseC 1B eB
e$ backToStart e1 -> backToStart e$ e1
10 nullifier @B -> initDivider 10 @E
01 backToDFromLeft $1 -> backToDFromLeft 01 $1
$$ searchZero e1 -> restoreCD $$ e1
e# checkCD 10 -> checkCD e# 10
eX temp $0 -> beginCopying eX $0
e& prepEraseC @1 -> prepEraseC e& @1
$0 backToFirstC @0 -> backToFirstC $0 @0
1% restoreCD 01 -> restoreCD 1% 01
$E searchNextBit @1 -> searchNextBit $E @1
$C initDivider e0 -> initDividerByTwo $C e0
11 gotoMark 01 -> gotoMark 11 01
0E gotoDecC eD -> dec 0E eD
$# backToStart e0 -> backToStart $# e0
eD dec e0 -> dec eD e1
1D gotoMark 0E -> gotoDecC 1D 0E
@E forwardToLastD 0E -> incD @E 0E
0X initDivider @0 -> initDividerByTwo 0X @0
$# backToDFromLeft 1& -> backToDFromLeft $# 1&
$1 backToDFromRight $1 -> backToDFromRight $1 $1
eB backToSharpOne $X -> backToSharpOne eB $X
@B backToSharpOne eE -> backToSharpOne @B eE
@E prepEraseC e1 -> prepEraseC @E e1
@1 backToD 00 -> backToD @1 00
$$ incD e1 -> incD $$ e0
eB findBlank @0 -> temp eB @0
e1 gotoMark eE -> gotoDecC e1 eE
$$ prepEraseC eD -> eraseC $$ eD
1C backToDFromLeft $D -> searchNextBit 1C $D
$@ backToDFromLeft $& -> backToDFromLeft $@ $&
$0 gotoDecC $1 -> gotoDecC $0 $1
0C backToStart e1 -> backToStart 0C e1
1X backToDFromLeft 11 -> backToDFromLeft 1X 11
@D gotoMark eE -> gotoDecC @D eE
@0 temp @0 -> beginCopying @0 @0
1# checkCD @D -> checkCD 1# @D
@$ prepEraseC $1 -> prepEraseC @$ $1
searchZero 0% -> 0% searchZero
1% gotoDecC 00 -> gotoDecC 1% 00
eB searchZero e0 -> backToDFromLeft eB e%
eX backToSharpZero $C -> backToSharpZero eX $C
01 checkCD $D -> checkCD 01 $D
eD backToStart 00 -> backToStart eD 00
0@ backToDFromRight eB -> backToDFromRight 0@ eB
1& incD $0 -> checkCD 1& $1
0@ gotoLastE $@ -> dec 0@ $@
e# backToSharpZero 0D -> backToSharpZero e# 0D
$B prepEraseC $D -> eraseC $B $D
e& backToFirstC e0 -> backToFirstC e& e0
$E restoreCD @1 -> restoreCD $E @1
1D restoreCD 0& -> restoreCD 1D 01
@X backToDFromRight eB -> backToDFromRight @X eB
0X eraseE @E -> prepEraseC 0X @E
@X backToStart 00 -> backToStart @X 00
@D eraseC $C -> backToStart @D $X
1E restoreCD 0% -> restoreCD 1E 00
@C findZero 01 -> beginCopying @C 01
$E backToStart @0 -> backToStart $E @0
forwardToLastD $1 -> $1 forwardToLastD
@X beginCopying 0B -> backToStart @X 0C
0$ backToSharpOne 01 -> backToSharpOne 0$ 01
$B backToDFromRight @E -> backToDFromRight $B @E
@& replaceWithBlanks 0@ -> backToDFromRight @& 0@
e% temp e0 -> beginCopying e% e0
e# incD @0 -> checkCD e# @1
@% searchOne 10 -> restoreCD @% 10
e% nullifier 1B -> initDivider e% 1E
@@ searchZero e1 -> restoreCD @@ e1
@# copyZero eB -> backToSharpZero @# e0
1D prepEraseC $0 -> prepEraseC 1D $0
0E prepEraseC 01 -> prepEraseC 0E 01
$@ incD $0 -> checkCD $@ $1
0$ copyZero 0B -> backToSharpZero 0$ 00
$& backToDFromRight 00 -> backToDFromRight $& 00
0C beginCopying @B -> backToStart 0C @C
$# gotoDecC $1 -> gotoDecC $# $1
@C forwardToLastD @E -> incD @C @E
$@ checkCD @D -> checkCD $@ @D
eD gotoMark 11 -> gotoMark eD 11
1$ findBlank 10 -> temp 1$ 10
@C backToSharpZero 1C -> backToSharpZero @C 1C
1B gotoMark $E -> gotoDecC 1B $E
e# backToDFromRight 01 -> backToDFromRight e# 01
0D backToSharpOne 1E -> backToSharpOne 0D 1E
$$ backToSharpOne @E -> backToSharpOne $$ @E
1@ findBlank 11 -> temp 1@ 11
eB restoreCD 1& -> restoreCD eB 11
$1 backToD e1 -> backToD $1 e1
@B initDivider 10 -> initDividerByTwo @B 10
@B backToSharpZero 1C -> backToSharpZero @B 1C
11 gotoLastE $@ -> dec 11 $@
eC backToDFromLeft $0 -> backToDFromLeft eC $0
00 backToDFromLeft @D -> searchNextBit 00 @D
1@ backToDFromRight 0B -> backToDFromRight 1@ 0B
$$ dec $1 -> gotoMark $$ $0
$@ incD e1 -> incD $@ e0
e1 eraseE 11 -> eraseE e1 1B
$# backToD @0 -> backToD $# @0
eC backToSharpZero 00 -> backToSharpZero eC 00
$C FINAL -> FINAL $ FINAL
00 restoreCD 11 -> restoreCD 00 11
1% restoreCD @& -> restoreCD 1% @1
$C backToFirstC $0 -> backToFirstC $C $0
1B findBlank $0 -> temp 1B $0
$& temp e1 -> beginCopying $& e1
@D dec 10 -> dec @D 11
eB findBlank $0 -> temp eB $0
$B restoreCD e& -> restoreCD $B e1
e# backToD $1 -> backToD e# $1
@@ restoreCD @& -> restoreCD @@ @1
@0 gotoMark @E -> gotoDecC @0 @E
0E searchZero 01 -> restoreCD 0E 01
01 backToSharpZero eE -> backToSharpZero 01 eE
0E searchZero @0 -> backToDFromLeft 0E @%
@C massErase 1@ -> eraseE @C 1@
$& backToSharpOne 0C -> backToSharpOne $& 0C
@$ backToD e1 -> backToD @$ e1
@$ searchNextBit $0 -> searchNextBit @$ $0
e& backToDFromLeft e% -> backToDFromLeft e& e%
$& backToFirstC 01 -> backToFirstC $& 01
$# findBlank 1B -> FINAL $# 1B
0@ findBlank eB -> FINAL 0@ eB
@1 prepEraseC e0 -> prepEraseC @1 e0
0B backToD @0 -> backToD 0B @0
0& backToSharpZero 11 -> backToSharpZero 0& 11
e@ backToSharpOne @1 -> backToSharpOne e@ @1
0% checkEForZero $B -> stop 0% $B
1% backToSharpZero 0X -> backToSharpZero 1% 0X
@1 findBlank 10 -> temp @1 10
e1 checkCD e1 -> checkCD e1 e1
01 gotoDecC e1 -> gotoDecC 01 e1
eC findBlank eB -> FINAL eC eB
0@ beginCopying eB -> backToStart 0@ eC
$C backToStart $0 -> backToStart $C $0
e$ backToDFromLeft @1 -> backToDFromLeft e$ @1
$C backToSharpZero 1E -> backToSharpZero $C 1E
backToSharpZero 0# -> 00 createCopy
@& backToFirstC 10 -> backToFirstC @& 10
00 initDividerByTwo 10 -> backToD 00 11
e# beginCopying 0B -> backToStart e# 0C
e& backToSharpZero 10 -> backToSharpZero e& 10
@E eraseC eC -> backToStart @E eX
eE replaceWithBlanks e@ -> backToDFromRight eE e@
e# replaceWithBlanks 0@ -> backToDFromRight e# 0@
e1 backToD e1 -> backToD e1 e1
0B backToStart 10 -> backToStart 0B 10
@@ findBlank $1 -> temp @@ $1
@X gotoLastE e@ -> dec @X e@
1# checkCD @0 -> checkCD 1# @0
eE backToDFromRight 00 -> backToDFromRight eE 00
@1 massErase @@ -> eraseE @1 @@
0C gotoMark 11 -> gotoMark 0C 11
$& searchNextBit $0 -> searchNextBit $& $0
0C backToSharpZero @C -> backToSharpZero 0C @C
@D backToD $1 -> backToD @D $1
@& restoreCD 1% -> restoreCD @& 10
1@ gotoMark 1E -> gotoDecC 1@ 1E
1& backToFirstC 11 -> backToFirstC 1& 11
0% backToSharpZero eX -> backToSharpZero 0% eX
0D eraseE $E -> prepEraseC 0D $E
@D checkCD 10 -> checkCD @D 10
01 initDividerByTwo e0 -> backToD 01 e1
0@ forwardToLastD eE -> incD 0@ eE
10 backToFirstC $1 -> backToFirstC 10 $1
@% eraseE e0 -> eraseE @% eB
0& restoreCD $& -> restoreCD 0& $1
e1 searchNextBit 10 -> searchNextBit e1 10
1D backToSharpOne @D -> backToSharpOne 1D @D
@0 eraseE 10 -> eraseE @0 1B
@1 eraseE $1 -> eraseE @1 $B
$E backToFirstC e1 -> backToFirstC $E e1
e0 eraseC $C -> backToStart e0 $X
$0 restoreCD eD -> restoreCD $0 eD
@1 backToDFromRight @1 -> backToDFromRight @1 @1
0B massErase e@ -> eraseE 0B e@
10 searchZero @1 -> restoreCD 10 @1
0% backToSharpOne 1E -> backToSharpOne 0% 1E
10 eraseC $C -> backToStart 10 $X
0D checkCD $D -> checkCD 0D $D
1& restoreCD 1& -> restoreCD 1& 11
10 backToStart e0 -> backToStart 10 e0
0E backToStart 11 -> backToStart 0E 11
1X prepEraseC @1 -> prepEraseC 1X @1
00 gotoLastE $@ -> dec 00 $@
@E backToSharpZero 0E -> backToSharpZero @E 0E
1& backToSharpOne @0 -> backToSharpOne 1& @0
00 backToDFromLeft @1 -> backToDFromLeft 00 @1
$C gotoDecC e1 -> gotoDecC $C e1
0X backToFirstC 01 -> backToFirstC 0X 01
01 backToDFromRight 1B -> backToDFromRight 01 1B
@E goToPlaceForDivider 0B -> backToFirstC @E 0D
1C backToSharpOne $1 -> backToSharpOne 1C $1
backToDFromRight eD -> eD createCopy
$% replaceWithBlanks 1@ -> backToDFromRight $% 1@
1X forwardToLastD eE -> incD 1X eE
$$ backToSharpOne 0X -> backToSharpOne $$ 0X
0@ restoreCD 10 -> restoreCD 0@ 10
0& massErase 1@ -> eraseE 0& 1@
@$ prepEraseC 0D -> eraseC @$ 0D
eE backToDFromRight 10 -> backToDFromRight eE 10
eC backToSharpOne eD -> backToSharpOne eC eD
00 backToSharpZero $X -> backToSharpZero 00 $X
0@ dec e0 -> dec 0@ e1
11 findBlank $1 -> temp 11 $1
0$ checkCD $D -> checkCD 0$ $D
e1 backToSharpZero $X -> backToSharpZero e1 $X
$E temp $0 -> beginCopying $E $0
eC backToDFromLeft 11 -> backToDFromLeft eC 11
0# eraseC 0C -> backToStart 0# 0X
@@ gotoMark @1 -> gotoMark @@ @1
1C backToDFromLeft 1% -> backToDFromLeft 1C 1%
1# eraseC @1 -> eraseC 1# @B
10 backToSharpOne 10 -> backToSharpOne 10 10
@X backToDFromLeft 1% -> backToDFromLeft @X 1%
$D backToDFromLeft e1 -> backToDFromLeft $D e1
$B temp e0 -> beginCopying $B e0
0C searchNextBit e0 -> searchNextBit 0C e0
0C findBlank @0 -> temp 0C @0
1# incD 00 -> checkCD 1# 01
@E backToSharpZero $C -> backToSharpZero @E $C
$C backToDFromLeft 1D -> searchNextBit $C 1D
e& backToFirstC 10 -> backToFirstC e& 10
e% eraseC 1C -> backToStart e% 1X
0C replaceWithBlanks $@ -> backToDFromRight 0C $@
eX replaceWithBlanks 0@ -> backToDFromRight eX 0@
eE initDividerByTwo @0 -> backToD eE @1
0# eraseE @1 -> eraseE 0# @B
1B gotoMark $1 -> gotoMark 1B $1
e1 backToDFromRight 10 -> backToDFromRight e1 10
0E incD 00 -> checkCD 0E 01
@% dec e1 -> gotoMark @% e0
1C checkEForZero $B -> stop 1C $B
1D gotoDecC $D -> dec 1D $D
1& backToDFromRight @1 -> backToDFromRight 1& @1
@D searchNextBit 11 -> searchNextBit @D 11
@% incD 10 -> checkCD @% 11
1& backToDFromRight $E -> backToDFromRight 1& $E
@B eraseC @C -> backToStart @B @X
1% dec $1 -> gotoMark 1% $0
@B restoreCD @D -> restoreCD @B @D
massErase 11 -> 11 massErase
@@ findBlank 11 -> temp @@ 11
$X eraseC 00 -> eraseC $X 0B
11 findZero 01 -> beginCopying 11 01
@E gotoLastE e@ -> dec @E e@
0$ eraseC $C -> backToStart 0$ $X
1@ backToSharpOne eE -> backToSharpOne 1@ eE
00 copyZero 1B -> backToSharpZero 00 10
e1 beginCopying eB -> backToStart e1 eC
$@ backToDFromLeft 10 -> backToDFromLeft $@ 10
@E restoreCD $D -> restoreCD @E $D
$& gotoDecC @0 -> gotoDecC $& @0
$% gotoMark e0 -> gotoMark $% e0
0B checkCD @1 -> checkCD 0B @1
@E gotoMark 00 -> gotoMark @E 00
@C backToStart e1 -> backToStart @C e1
@% backToFirstC $1 -> backToFirstC @% $1
massErase 10 -> 10 massErase
@$ searchOne $1 -> backToDFromLeft @$ $&
eB restoreCD e1 -> restoreCD eB e1
$& gotoDecC 01 -> gotoDecC $& 01
00 forwardToLastD 1E -> incD 00 1E
0E backToDFromRight 10 -> backToDFromRight 0E 10
@@ backToSharpZero eD -> backToSharpZero @@ eD
nullifier @0 -> @0 nullifier
0$ gotoLastE 1@ -> dec 0$ 1@
@@ restoreCD e% -> restoreCD @@ e0
@@ copyZero 0B -> backToSharpZero @@ 00
@& gotoDecC eD -> dec @& eD
e# backToFirstC 01 -> backToFirstC e# 01
@% dec $1 -> gotoMark @% $0
1B searchNextBit 00 -> searchNextBit 1B 00
0B eraseE 01 -> eraseE 0B 0B
eE backToDFromLeft 10 -> backToDFromLeft eE 10
1@ backToDFromRight $E -> backToDFromRight 1@ $E
$X eraseC 1C -> backToStart $X 1X
1@ backToD $0 -> backToD 1@ $0
$@ forwardToLastD eE -> incD $@ eE
$C backToStart $1 -> backToStart $C $1
$C initDividerByTwo 10 -> backToD $C 11
1D backToD e1 -> backToD 1D e1
eC backToFirstC 11 -> backToFirstC eC 11
1# backToSharpOne e0 -> backToSharpOne 1# e0
$0 backToDFromLeft e0 -> backToDFromLeft $0 e0
$C backToSharpZero @1 -> backToSharpZero $C @1
0C findBlank $B -> FINAL 0C $B
e# gotoLastE e@ -> dec e# e@
@& prepEraseC @0 -> prepEraseC @& @0
@@ checkCD 11 -> checkCD @@ 11
1& backToD 11 -> backToD 1& 11
e& backToStart @1 -> backToStart e& @1
$$ backToDFromRight 0B -> backToDFromRight $$ 0B
1# forwardToLastD eE -> incD 1# eE
e# backToDFromLeft 11 -> backToDFromLeft e# 11
1& searchOne $0 -> restoreCD 1& $0
0C checkCD 11 -> checkCD 0C 11
1$ backToDFromLeft $& -> backToDFromLeft 1$ $&
0B gotoMark @E -> gotoDecC 0B @E
eC eraseE 1E -> prepEraseC eC 1E
$X gotoDecC 01 -> gotoDecC $X 01
1X eraseC $0 -> eraseC 1X $B
$X searchZero 00 -> backToDFromLeft $X 0%
0& gotoDecC @D -> dec 0& @D
1B restoreCD e% -> restoreCD 1B e0
$1 checkEForZero 0B -> stop $1 0B
0@ eraseC 01 -> eraseC 0@ 0B
0& incD e1 -> incD 0& e0
01 backToD e0 -> backToD 01 e0
@% findBlank 00 -> temp @% 00
$B incD 01 -> incD $B 00
1C backToDFromRight $B -> backToDFromRight 1C $B
e% gotoDecC $D -> dec e% $D
gotoLastE 1E -> 1E gotoLastE
@& backToSharpOne eX -> backToSharpOne @& eX
eC restoreCD $D -> restoreCD eC $D
01 checkCD 0D -> checkCD 01 0D
$# initDivider 00 -> initDividerByTwo $# 00
e% findBlank 1B -> FINAL e% 1B
eE backToSharpZero 1X -> backToSharpZero eE 1X
0E searchOne $1 -> backToDFromLeft 0E $&
$C eraseC eC -> backToStart $C eX
@# searchZero @1 -> restoreCD @# @1
@0 initDivider @0 -> initDividerByTwo @0 @0
e@ gotoDecC 10 -> gotoDecC e@ 10
0% searchOne 10 -> restoreCD 0% 10
0& searchNextBit 00 -> searchNextBit 0& 00
eB gotoDecC @D -> dec eB @D
$D eraseE 10 -> eraseE $D 1B
0@ backToSharpZero @E -> backToSharpZero 0@ @E
0X searchOne @1 -> backToDFromLeft 0X @&
1B initDivider @0 -> initDividerByTwo 1B @0
e% findZero e1 -> beginCopying e% e1
eE copyOne eB -> backToSharpOne eE e1
1X backToDFromLeft @1 -> backToDFromLeft 1X @1
eC gotoMark 00 -> gotoMark eC 00
e0 backToStart @1 -> backToStart e0 @1
@# gotoDecC e0 -> gotoDecC @# e0
e0 initDivider 10 -> initDividerByTwo e0 10
e@ backToFirstC e0 -> backToFirstC e@ e0
@% gotoMark 11 -> gotoMark @% 11
01 findBlank $1 -> temp 01 $1
@1 backToDFromRight @E -> backToDFromRight @1 @E
11 prepEraseC @D -> eraseC 11 @D
@E prepEraseC @0 -> prepEraseC @E @0
$E gotoMark e0 -> gotoMark $E e0
eC backToD 01 -> backToD eC 01
e1 searchZero 11 -> restoreCD e1 11
e1 dec $0 -> dec e1 $1
1X backToSharpOne 0D -> backToSharpOne 1X 0D
copyZero 10 -> 10 copyZero
$E gotoLastE 1@ -> dec $E 1@
e% backToDFromLeft @D -> searchNextBit e% @D
1% massErase 1@ -> eraseE 1% 1@
10 findZero 11 -> beginCopying 10 11
@# eraseC 11 -> eraseC @# 1B
$@ backToSharpOne @D -> backToSharpOne $@ @D
$D replaceWithBlanks $@ -> backToDFromRight $D $@
@B gotoDecC @0 -> gotoDecC @B @0
1$ searchOne e0 -> restoreCD 1$ e0
@X initDivider 00 -> initDividerByTwo @X 00
@0 nullifier $B -> initDivider @0 $E
$$ backToDFromRight $B -> backToDFromRight $$ $B
e0 backToSharpZero 1X -> backToSharpZero e0 1X
$1 backToSharpOne 1X -> backToSharpOne $1 1X
@$ findBlank @1 -> temp @$ @1
$X backToD @0 -> backToD $X @0
0@ massErase $@ -> eraseE 0@ $@
0% findBlank 11 -> temp 0% 11
0C checkEForZero 1B -> stop 0C 1B
FINAL $@ -> FINAL $ FINAL
1& searchNextBit 11 -> searchNextBit 1& 11
1C incD e1 -> incD 1C e0
eE findBlank 01 -> temp eE 01
1# copyOne $B -> backToSharpOne 1# $1
eE gotoLastE 0@ -> dec eE 0@
@% findBlank @B -> FINAL @% @B
@$ eraseC e1 -> eraseC @$ eB
1B temp @0 -> beginCopying 1B @0
$@ backToDFromRight $B -> backToDFromRight $@ $B
$E backToD 10 -> backToD $E 10
eD backToSharpZero 00 -> backToSharpZero eD 00
11 gotoDecC 11 -> gotoDecC 11 11
@E checkCD @D -> checkCD @E @D
11 gotoDecC 01 -> gotoDecC 11 01
@C backToSharpOne 0E -> backToSharpOne @C 0E
eE backToDFromRight 11 -> backToDFromRight eE 11
e@ restoreCD $D -> restoreCD e@ $D
$$ copyZero $B -> backToSharpZero $$ $0
$% replaceWithBlanks $@ -> backToDFromRight $% $@
e$ temp 11 -> beginCopying e$ 11
$0 massErase $@ -> eraseE $0 $@
eX replaceWithBlanks 1@ -> backToDFromRight eX 1@
$E dec 11 -> gotoMark $E 10
moveToE @1 -> @1 moveToE
e& restoreCD e& -> restoreCD e& e1
0@ findZero 11 -> beginCopying 0@ 11
0@ searchZero 00 -> backToDFromLeft 0@ 0%
0B backToSharpOne 0D -> backToSharpOne 0B 0D
1B searchOne $0 -> restoreCD 1B $0
@B backToDFromLeft 00 -> backToDFromLeft @B 00
1$ backToFirstC 10 -> backToFirstC 1$ 10
e@ searchOne $0 -> restoreCD e@ $0
1B backToDFromLeft e& -> backToDFromLeft 1B e&
@@ eraseC $1 -> eraseC @@ $B
1X FINAL -> FINAL 1 FINAL
1@ gotoMark $E -> gotoDecC 1@ $E
eC backToDFromRight eE -> backToDFromRight eC eE
@D goToPlaceForDivider $B -> backToFirstC @D $D
eE replaceWithBlanks 0@ -> backToDFromRight eE 0@
e$ backToDFromRight 0E -> backToDFromRight e$ 0E
$E gotoLastE e@ -> dec $E e@
@# backToSharpZero @E -> backToSharpZero @# @E
1E backToSharpOne $D -> backToSharpOne 1E $D
1D findBlank e1 -> temp 1D e1
@$ gotoDecC 0D -> dec @$ 0D
$X gotoLastE 1@ -> dec $X 1@
$& gotoMark 11 -> gotoMark $& 11
@$ backToSharpOne @0 -> backToSharpOne @$ @0
1& eraseC @1 -> eraseC 1& @B
0@ nullifier eB -> initDivider 0@ eE
10 eraseE e1 -> eraseE 10 eB
e& searchZero 01 -> restoreCD e& 01
@0 checkCD $D -> checkCD @0 $D
$@ searchZero e1 -> restoreCD $@ e1
0% backToD e1 -> backToD 0% e1
@& copyZero 1B -> backToSharpZero @& 10
$D checkCD 1D -> checkCD $D 1D
e0 eraseE @1 -> eraseE e0 @B
0# gotoMark 0E -> gotoDecC 0# 0E
$0 backToDFromRight eB -> backToDFromRight $0 eB
eX backToD e1 -> backToD eX e1
@% eraseE 0E -> prepEraseC @% 0E
e0 checkEForZero $B -> stop e0 $B
01 gotoDecC 1D -> dec 01 1D
@B eraseC 1C -> backToStart @B 1X
1D temp e0 -> beginCopying 1D e0
@E beginCopying $B -> backToStart @E $C
@$ backToSharpZero eC -> backToSharpZero @$ eC
1@ incD @1 -> incD 1@ @0
$# dec 10 -> dec $# 11
0% backToD 01 -> backToD 0% 01
e0 backToSharpZero 1E -> backToSharpZero e0 1E
@C searchZero @1 -> restoreCD @C @1
0D gotoLastE @@ -> dec 0D @@
@C restoreCD 0D -> restoreCD @C 0D
$1 backToStart 00 -> backToStart $1 00
@X copyOne 0B -> backToSharpOne @X 01
eX massErase $@ -> eraseE eX $@
0% backToFirstC @0 -> backToFirstC 0% @0
$E backToDFromRight eB -> backToDFromRight $E eB
1B backToStart 01 -> backToStart 1B 01
$& backToStart 01 -> backToStart $& 01
e$ backToSharpZero 0E -> backToSharpZero e$ 0E
@$ backToD @1 -> backToD @$ @1
e# eraseE @E -> prepEraseC e# @E
$0 initDividerByTwo @0 -> backToD $0 @1
eC eraseE e0 -> eraseE eC eB
e# prepEraseC 11 -> prepEraseC e# 11
1# goToPlaceForDivider @B -> backToFirstC 1# @D
$0 backToDFromLeft $D -> searchNextBit $0 $D
1D gotoDecC @0 -> gotoDecC 1D @0
1X searchNextBit 00 -> searchNextBit 1X 00
e& eraseE e0 -> eraseE e& eB
$1 backToSharpZero 0C -> backToSharpZero $1 0C
$% eraseC 10 -> eraseC $% 1B
0$ backToDFromLeft @1 -> backToDFromLeft 0$ @1
$$ backToDFromRight 11 -> backToDFromRight $$ 11
$C backToSharpOne @E -> backToSharpOne $C @E
1& checkCD e0 -> checkCD 1& e0
@& prepEraseC $1 -> prepEraseC @& $1
0% backToDFromLeft @1 -> backToDFromLeft 0% @1
1@ initDivider 00 -> initDividerByTwo 1@ 00
1E backToStart e1 -> backToStart 1E e1
@E eraseC 0C -> backToStart @E 0X
$# replaceWithBlanks 0@ -> backToDFromRight $# 0@
@1 checkEForZero $B -> stop @1 $B
eE backToSharpZero $X -> backToSharpZero eE $X
@1 eraseE 1E -> prepEraseC @1 1E
0% dec @1 -> gotoMark 0% @0
1B backToSharpOne 1E -> backToSharpOne 1B 1E
1C eraseE e1 -> eraseE 1C eB
01 restoreCD e% -> restoreCD 01 e0
00 restoreCD @D -> restoreCD 00 @D
@1 gotoMark @0 -> gotoMark @1 @0
$@ copyZero @B -> backToSharpZero $@ @0
@C goToPlaceForDivider 0B -> backToFirstC @C 0D
eD temp $1 -> beginCopying eD $1
0E prepEraseC $1 -> prepEraseC 0E $1
1C backToDFromLeft $1 -> backToDFromLeft 1C $1
e& temp $0 -> beginCopying e& $0
$1 backToDFromLeft 10 -> backToDFromLeft $1 10
$$ backToStart @1 -> backToStart $$ @1
eC backToSharpZero 01 -> backToSharpZero eC 01
@# backToDFromLeft @D -> searchNextBit @# @D
0$ findZero @1 -> beginCopying 0$ @1
eD eraseE $E -> prepEraseC eD $E
$# restoreCD e1 -> restoreCD $# e1
0X incD e0 -> checkCD 0X e1
$B backToDFromLeft 0D -> searchNextBit $B 0D
$0 gotoDecC @0 -> gotoDecC $0 @0
0% backToSharpOne 1D -> backToSharpOne 0% 1D
0E findBlank @1 -> temp 0E @1
0& restoreCD $D -> restoreCD 0& $D
0# backToDFromLeft 1& -> backToDFromLeft 0# 1&
$D searchNextBit e1 -> searchNextBit $D e1
$C checkCD $D -> checkCD $C $D
00 findBlank 10 -> temp 00 10
eX backToDFromRight 10 -> backToDFromRight eX 10
@E copyOne @B -> backToSharpOne @E @1
0E backToSharpZero 01 -> backToSharpZero 0E 01
10 prepEraseC 11 -> prepEraseC 10 11
@E backToSharpOne $1 -> backToSharpOne @E $1
0D backToSharpOne $1 -> backToSharpOne 0D $1
1D backToSharpZero $C -> backToSharpZero 1D $C
eX backToDFromLeft 00 -> backToDFromLeft eX 00
$B massErase 0@ -> eraseE $B 0@
@# backToSharpOne $E -> backToSharpOne @# $E
$% initDividerByTwo $0 -> backToD $% $1
$# eraseE $E -> prepEraseC $# $E
@X backToDFromLeft 10 -> backToDFromLeft @X 10
$D dec 01 -> gotoMark $D 00
1$ gotoMark 10 -> gotoMark 1$ 10
$& restoreCD $1 -> restoreCD $& $1
$D incD @0 -> checkCD $D @1
0# checkCD 11 -> checkCD 0# 11
e@ backToD $1 -> backToD e@ $1
$% gotoDecC 10 -> gotoDecC $% 10
0$ prepEraseC e0 -> prepEraseC 0$ e0
@0 backToSharpOne eD -> backToSharpOne @0 eD
e% searchNextBit e1 -> searchNextBit e% e1
0@ checkCD 0D -> checkCD 0@ 0D
eX backToSharpOne e0 -> backToSharpOne eX e0
e$ backToSharpOne @1 -> backToSharpOne e$ @1
1% backToSharpZero 1C -> backToSharpZero 1% 1C
$& prepEraseC @D -> eraseC $& @D
$1 eraseE 1E -> prepEraseC $1 1E
0B prepEraseC $D -> eraseC 0B $D
1# backToStart 10 -> backToStart 1# 10
$@ backToSharpOne @1 -> backToSharpOne $@ @1
@$ backToSharpZero 1E -> backToSharpZero @$ 1E
$% eraseE eE -> prepEraseC $% eE
$X findBlank $B -> FINAL $X $B
$& backToSharpZero e1 -> backToSharpZero $& e1
e% searchOne $0 -> restoreCD e% $0
$X eraseC @C -> backToStart $X @X
eX copyOne @B -> backToSharpOne eX @1
1C backToSharpZero 0X -> backToSharpZero 1C 0X
1X searchZero e1 -> restoreCD 1X e1
eX backToD $1 -> backToD eX $1
$& backToSharpOne eD -> backToSharpOne $& eD
00 backToSharpZero 1E -> backToSharpZero 00 1E
$0 eraseC $0 -> eraseC $0 $B
$D restoreCD 01 -> restoreCD $D 01
$B gotoDecC eD -> dec $B eD
0C searchZero 10 -> backToDFromLeft 0C 1%
0C nullifier @B -> initDivider 0C @E
0B copyOne $B -> backToSharpOne 0B $1
1B restoreCD 0% -> restoreCD 1B 00
@D backToFirstC 01 -> backToFirstC @D 01
11 restoreCD $& -> restoreCD 11 $1
10 restoreCD $% -> restoreCD 10 $0
eC prepEraseC 00 -> prepEraseC eC 00
e@ backToD 01 -> backToD e@ 01
0@ backToDFromLeft 1& -> backToDFromLeft 0@ 1&
eE backToSharpZero @D -> backToSharpZero eE @D
@X gotoMark 11 -> gotoMark @X 11
1% searchOne e1 -> backToDFromLeft 1% e&
@X backToSharpZero eD -> backToSharpZero @X eD
0E forwardToLastD 0E -> incD 0E 0E
1B gotoMark $0 -> gotoMark 1B $0
@$ dec @0 -> dec @$ @1
@# restoreCD e& -> restoreCD @# e1
$X backToDFromRight eB -> backToDFromRight $X eB
e# restoreCD 1% -> restoreCD e# 10
0C backToDFromRight eB -> backToDFromRight 0C eB
@% backToSharpZero 1X -> backToSharpZero @% 1X
0D backToSharpZero 0X -> backToSharpZero 0D 0X
1# searchZero 01 -> restoreCD 1# 01
e0 backToDFromRight $0 -> backToDFromRight e0 $0
@@ temp $1 -> beginCopying @@ $1
1D backToDFromLeft $1 -> backToDFromLeft 1D $1
@B nullifier 1B -> initDivider @B 1E
1$ gotoDecC 10 -> gotoDecC 1$ 10
$X initDividerByTwo $0 -> backToD $X $1
$% backToSharpZero $D -> backToSharpZero $% $D
1B temp 01 -> beginCopying 1B 01
$D gotoLastE 0@ -> dec $D 0@
1# checkCD 01 -> checkCD 1# 01
11 incD @1 -> incD 11 @0
1X backToSharpOne 0E -> backToSharpOne 1X 0E
0B backToDFromLeft @1 -> backToDFromLeft 0B @1
$$ backToDFromLeft @& -> backToDFromLeft $$ @&
0B findBlank $0 -> temp 0B $0
$E prepEraseC e1 -> prepEraseC $E e1
@E eraseC e1 -> eraseC @E eB
1@ eraseE 11 -> eraseE 1@ 1B
0X backToD 10 -> backToD 0X 10
1& prepEraseC $1 -> prepEraseC 1& $1
1B gotoMark e0 -> gotoMark 1B e0
$E backToSharpOne eC -> backToSharpOne $E eC
1B backToSharpOne $C -> backToSharpOne 1B $C
eB findBlank @B -> FINAL eB @B
e1 backToSharpZero eE -> backToSharpZero e1 eE
$E temp e0 -> beginCopying $E e0
e@ findBlank $1 -> temp e@ $1
$$ checkCD 00 -> checkCD $$ 00
$C backToFirstC 00 -> backToFirstC $C 00
$@ findBlank 10 -> temp $@ 10
0C searchOne @1 -> backToDFromLeft 0C @&
e0 backToDFromRight @0 -> backToDFromRight e0 @0
e0 backToSharpOne 0X -> backToSharpOne e0 0X
1C backToStart e0 -> backToStart 1C e0
1D goToPlaceForDivider 0B -> backToFirstC 1D 0D
e$ initDividerByTwo $0 -> backToD e$ $1
gotoLastE 1D -> 1D gotoLastE
eE temp @1 -> beginCopying eE @1
$0 dec e1 -> gotoMark $0 e0
eE gotoMark 1E -> gotoDecC eE 1E
e$ copyOne 0B -> backToSharpOne e$ 01
copyOne 0C -> 0C copyOne
0& backToD $1 -> backToD 0& $1
@0 restoreCD e& -> restoreCD @0 e1
0$ backToSharpZero eD -> backToSharpZero 0$ eD
gotoLastE @D -> @D gotoLastE
00 initDividerByTwo $0 -> backToD 00 $1
@E backToStart 01 -> backToStart @E 01
e@ copyOne @B -> backToSharpOne e@ @1
e1 copyZero $B -> backToSharpZero e1 $0
1# gotoDecC 00 -> gotoDecC 1# 00
0& gotoLastE @@ -> dec 0& @@
@C backToD 10 -> backToD @C 10
$X backToDFromLeft @0 -> backToDFromLeft $X @0
$E backToSharpZero @E -> backToSharpZero $E @E
1$ eraseC $0 -> eraseC 1$ $B
@E incD @0 -> checkCD @E @1
$# copyZero 1B -> backToSharpZero $# 10
@$ findBlank 01 -> temp @$ 01
@D eraseC 0C -> backToStart @D 0X
e$ gotoMark 0E -> gotoDecC e$ 0E
1X searchOne @1 -> backToDFromLeft 1X @&
0B searchOne $0 -> restoreCD 0B $0
$% backToStart 00 -> backToStart $% 00
@@ backToStart $0 -> backToStart @@ $0
0# backToSharpZero $E -> backToSharpZero 0# $E
1$ restoreCD $& -> restoreCD 1$ $1
e@ backToSharpZero $C -> backToSharpZero e@ $C
@D searchOne e1 -> backToDFromLeft @D e&
@B replaceWithBlanks 1@ -> backToDFromRight @B 1@
$E massErase 0@ -> eraseE $E 0@
e& backToSharpZero $1 -> backToSharpZero e& $1
@E restoreCD e0 -> restoreCD @E e0
e0 FINAL -> FINAL e FINAL
eE searchOne @1 -> backToDFromLeft eE @&
1X searchZero 11 -> restoreCD 1X 11
e& temp 00 -> beginCopying e& 00
@$ backToSharpOne 0E -> backToSharpOne @$ 0E
0@ backToDFromLeft 00 -> backToDFromLeft 0@ 00
0D backToDFromRight @1 -> backToDFromRight 0D @1
eE backToD 00 -> backToD eE 00
eX backToDFromLeft e1 -> backToDFromLeft eX e1
eE findZero e1 -> beginCopying eE e1
0@ dec @1 -> gotoMark 0@ @0
e# searchNextBit e1 -> searchNextBit e# e1
1C dec 00 -> dec 1C 01
eX backToStart @0 -> backToStart eX @0
e@ backToSharpZero 0C -> backToSharpZero e@ 0C
$1 backToSharpZero 0X -> backToSharpZero $1 0X
$@ gotoLastE $@ -> dec $@ $@
1C restoreCD $% -> restoreCD 1C $0
0C backToD 11 -> backToD 0C 11
0B backToDFromLeft eD -> searchNextBit 0B eD
01 copyZero eB -> backToSharpZero 01 e0
@D backToD 00 -> backToD @D 00
@D eraseC eC -> backToStart @D eX
e& backToDFromRight $B -> backToDFromRight e& $B
@& backToFirstC e0 -> backToFirstC @& e0
@C backToDFromLeft e% -> backToDFromLeft @C e%
0% searchNextBit e1 -> searchNextBit 0% e1
eB backToSharpOne @E -> backToSharpOne eB @E
$@ temp e0 -> beginCopying $@ e0
e% temp $0 -> beginCopying e% $0
01 copyOne 1B -> backToSharpOne 01 11
@X backToDFromLeft 0D -> searchNextBit @X 0D
0$ beginCopying eB -> backToStart 0$ eC
@# backToDFromLeft 1& -> backToDFromLeft @# 1&
01 eraseE 1E -> prepEraseC 01 1E
$@ prepEraseC 0D -> eraseC $@ 0D
e# gotoDecC 01 -> gotoDecC e# 01
$& backToSharpZero @0 -> backToSharpZero $& @0
$$ forwardToLastD eE -> incD $$ eE
e@ eraseE 01 -> eraseE e@ 0B
0D backToSharpOne 01 -> backToSharpOne 0D 01
e# backToFirstC @0 -> backToFirstC e# @0
0X findBlank eB -> FINAL 0X eB
$# backToSharpOne @0 -> backToSharpOne $# @0
@# backToSharpZero eX -> backToSharpZero @# eX
@D searchZero e1 -> restoreCD @D e1
$E eraseE $1 -> eraseE $E $B
@0 backToSharpZero @D -> backToSharpZero @0 @D
@C copyZero @B -> backToSharpZero @C @0
eC copyOne eB -> backToSharpOne eC e1
@0 gotoDecC 10 -> gotoDecC @0 10
$@ prepEraseC $1 -> prepEraseC $@ $1
11 eraseE eE -> prepEraseC 11 eE
eD eraseC e0 -> eraseC eD eB
@& backToD 10 -> backToD @& 10
@# searchOne 00 -> restoreCD @# 00
0% checkCD @D -> checkCD 0% @D
$# backToDFromRight 1B -> backToDFromRight $# 1B
eX checkEForZero @B -> stop eX @B
1# backToSharpOne 0C -> backToSharpOne 1# 0C
$@ backToSharpZero $C -> backToSharpZero $@ $C
$C goToPlaceForDivider @B -> backToFirstC $C @D
0% restoreCD 0& -> restoreCD 0% 01
0C searchNextBit 11 -> searchNextBit 0C 11
@$ backToSharpOne @D -> backToSharpOne @$ @D
0X gotoMark e0 -> gotoMark 0X e0
$1 prepEraseC @1 -> prepEraseC $1 @1
1& incD 00 -> checkCD 1& 01
@1 goToPlaceForDivider 0B -> backToFirstC @1 0D
@$ gotoDecC @0 -> gotoDecC @$ @0
$1 backToStart 10 -> backToStart $1 10
e% findBlank $B -> FINAL e% $B
$$ findBlank 10 -> temp $$ 10
1# backToSharpZero 01 -> backToSharpZero 1# 01
eE findBlank @B -> FINAL eE @B
@C checkCD 0D -> checkCD @C 0D
$0 checkCD $0 -> checkCD $0 $0
1@ backToSharpZero eC -> backToSharpZero 1@ eC
$0 searchOne 01 -> backToDFromLeft $0 0&
e# copyOne @B -> backToSharpOne e# @1
1& searchNextBit e0 -> searchNextBit 1& e0
0B restoreCD e% -> restoreCD 0B e0
@B backToDFromRight $1 -> backToDFromRight @B $1
e0 searchNextBit 11 -> searchNextBit e0 11
e$ gotoDecC 01 -> gotoDecC e$ 01
@% gotoDecC $1 -> gotoDecC @% $1
0# searchOne 10 -> restoreCD 0# 10
$# backToDFromLeft @D -> searchNextBit $# @D
$0 backToSharpZero $1 -> backToSharpZero $0 $1
e# backToSharpOne $0 -> backToSharpOne e# $0
copyZero 0X -> 0X copyZero
$D backToSharpOne $E -> backToSharpOne $D $E
copyOne eE -> eE copyOne
0C restoreCD 0% -> restoreCD 0C 00
10 searchZero 00 -> backToDFromLeft 10 0%
e@ backToDFromLeft @% -> backToDFromLeft e@ @%
1C eraseE @E -> prepEraseC 1C @E
e1 backToSharpOne @C -> backToSharpOne e1 @C
01 restoreCD @1 -> restoreCD 01 @1
@& copyOne 0B -> backToSharpOne @& 01
1# eraseC $0 -> eraseC 1# $B
@D prepEraseC $1 -> prepEraseC @D $1
0$ backToStart e0 -> backToStart 0$ e0
1B copyOne 0B -> backToSharpOne 1B 01
$& eraseE $0 -> eraseE $& $B
$C backToDFromLeft e% -> backToDFromLeft $C e%
0C searchOne 10 -> restoreCD 0C 10
eX backToSharpZero 0D -> backToSharpZero eX 0D
$# backToStart e1 -> backToStart $# e1
@D backToD 11 -> backToD @D 11
$% checkCD 1D -> checkCD $% 1D
$@ prepEraseC 00 -> prepEraseC $@ 00
@@ backToSharpOne 01 -> backToSharpOne @@ 01
@X searchOne 10 -> restoreCD @X 10
@# gotoMark 01 -> gotoMark @# 01
1X backToDFromRight eB -> backToDFromRight 1X eB
@1 searchNextBit @0 -> searchNextBit @1 @0
e0 copyZero eB -> backToSharpZero e0 e0
0C findBlank 1B -> FINAL 0C 1B
$@ backToStart 01 -> backToStart $@ 01
e% checkCD e0 -> checkCD e% e0
1B prepEraseC 01 -> prepEraseC 1B 01
@% eraseC e0 -> eraseC @% eB
1D gotoDecC @D -> dec 1D @D
1B backToSharpOne 11 -> backToSharpOne 1B 11
e1 backToStart 01 -> backToStart e1 01
@B backToDFromLeft 0D -> searchNextBit @B 0D
$0 findBlank @1 -> temp $0 @1
0$ searchNextBit 01 -> searchNextBit 0$ 01
eD forwardToLastD $E -> incD eD $E
0X restoreCD 10 -> restoreCD 0X 10
@@ restoreCD e& -> restoreCD @@ e1
0$ beginCopying $B -> backToStart 0$ $C
eD backToDFromLeft @D -> searchNextBit eD @D
10 eraseC 10 -> eraseC 10 1B
1@ backToDFromLeft 00 -> backToDFromLeft 1@ 00
@E searchOne 10 -> restoreCD @E 10
$0 backToSharpOne e1 -> backToSharpOne $0 e1
@E checkCD @0 -> checkCD @E @0
@X goToPlaceForDivider eB -> backToFirstC @X eD
1# gotoMark e1 -> gotoMark 1# e1
$$ goToPlaceForDivider eB -> backToFirstC $$ eD
01 checkCD @0 -> checkCD 01 @0
eC backToSharpZero e1 -> backToSharpZero eC e1
11 backToDFromLeft @0 -> backToDFromLeft 11 @0
1& backToDFromRight eB -> backToDFromRight 1& eB
@D forwardToLastD @E -> incD @D @E
00 restoreCD eD -> restoreCD 00 eD
e& backToSharpZero 0D -> backToSharpZero e& 0D
$1 searchZero $1 -> restoreCD $1 $1
@% restoreCD $& -> restoreCD @% $1
00 eraseC 11 -> eraseC 00 1B
11 backToSharpOne @X -> backToSharpOne 11 @X
$$ prepEraseC e0 -> prepEraseC $$ e0
@0 backToDFromLeft 1& -> backToDFromLeft @0 1&
0& temp e1 -> beginCopying 0& e1
@1 nullifier 0B -> initDivider @1 0E
0D gotoDecC 01 -> gotoDecC 0D 01
0% initDivider $0 -> initDividerByTwo 0% $0
@0 backToDFromLeft 10 -> backToDFromLeft @0 10
@# checkCD 01 -> checkCD @# 01
0B prepEraseC @0 -> prepEraseC 0B @0
0D eraseC e0 -> eraseC 0D eB
0B backToSharpZero 0C -> backToSharpZero 0B 0C
0% gotoDecC $1 -> gotoDecC 0% $1
$D checkCD $D -> checkCD $D $D
00 temp @1 -> beginCopying 00 @1
0@ gotoMark 00 -> gotoMark 0@ 00
$1 restoreCD @% -> restoreCD $1 @0
$% backToDFromLeft 0& -> backToDFromLeft $% 0&
01 restoreCD $0 -> restoreCD 01 $0
$0 backToD 00 -> backToD $0 00
00 backToDFromLeft $% -> backToDFromLeft 00 $%
e@ gotoDecC @D -> dec e@ @D
0& gotoMark @0 -> gotoMark 0& @0
eE backToSharpOne eD -> backToSharpOne eE eD
@B checkCD 0D -> checkCD @B 0D
e& copyZero eB -> backToSharpZero e& e0
e# findBlank $1 -> temp e# $1
$# beginCopying @B -> backToStart $# @C
createCopy eD -> eD nullifier
@0 backToSharpZero eD -> backToSharpZero @0 eD
1@ restoreCD @D -> restoreCD 1@ @D
eD gotoMark @1 -> gotoMark eD @1
$0 backToSharpOne 00 -> backToSharpOne $0 00
$$ nullifier 0B -> initDivider $$ 0E
1D backToSharpZero 1D -> backToSharpZero 1D 1D
1B gotoMark @E -> gotoDecC 1B @E
0$ backToD $1 -> backToD 0$ $1
eX backToDFromLeft 0& -> backToDFromLeft eX 0&
e0 prepEraseC @1 -> prepEraseC e0 @1
11 backToDFromLeft @% -> backToDFromLeft 11 @%
1# findBlank @0 -> temp 1# @0
@C backToSharpZero @E -> backToSharpZero @C @E
1% backToSharpZero @0 -> backToSharpZero 1% @0
e1 prepEraseC 1D -> eraseC e1 1D
eX prepEraseC $1 -> prepEraseC eX $1
e& restoreCD 0& -> restoreCD e& 01
$& backToSharpOne @0 -> backToSharpOne $& @0
eX backToDFromRight eB -> backToDFromRight eX eB
$$ backToSharpOne 1D -> backToSharpOne $$ 1D
e# backToSharpZero @C -> backToSharpZero e# @C
eB gotoLastE e@ -> dec eB e@
eB backToStart $1 -> backToStart eB $1
1B gotoDecC 1D -> dec 1B 1D
1X backToDFromLeft e1 -> backToDFromLeft 1X e1
0E findBlank @0 -> temp 0E @0
@1 copyOne 1B -> backToSharpOne @1 11
1$ checkCD @0 -> checkCD 1$ @0
@0 eraseC e0 -> eraseC @0 eB
e& findBlank @1 -> temp e& @1
1@ massErase $@ -> eraseE 1@ $@
@$ checkCD 01 -> checkCD @$ 01
$& eraseC eC -> backToStart $& eX
1# checkCD 0D -> checkCD 1# 0D
$$ backToSharpZero 0D -> backToSharpZero $$ 0D
e$ findBlank 10 -> temp e$ 10
0D backToD 11 -> backToD 0D 11
@# eraseE $0 -> eraseE @# $B
1% backToD @1 -> backToD 1% @1
0% backToStart 11 -> backToStart 0% 11
0% forwardToLastD eE -> incD 0% eE
$0 eraseE 00 -> eraseE $0 0B
$D backToDFromRight @0 -> backToDFromRight $D @0
0# restoreCD e% -> restoreCD 0# e0
00 backToSharpZero $E -> backToSharpZero 00 $E
@X eraseC 11 -> eraseC @X 1B
$C backToDFromLeft 11 -> backToDFromLeft $C 11
@# eraseC 10 -> eraseC @# 1B
@X backToDFromLeft 01 -> backToDFromLeft @X 01
@1 findZero 01 -> beginCopying @1 01
@% eraseE 00 -> eraseE @% 0B
0B backToDFromRight @E -> backToDFromRight 0B @E
1# eraseE 10 -> eraseE 1# 1B
e# gotoDecC @0 -> gotoDecC e# @0
1E backToDFromRight 0B -> backToDFromRight 1E 0B
@C backToSharpZero 10 -> backToSharpZero @C 10
@D backToSharpOne eX -> backToSharpOne @D eX
1@ checkCD $D -> checkCD 1@ $D
e# checkCD @D -> checkCD e# @D
@# backToStart @1 -> backToStart @# @1
@$ nullifier $B -> initDivider @$ $E
e% backToStart @1 -> backToStart e% @1
01 prepEraseC 01 -> prepEraseC 01 01
@1 restoreCD $1 -> restoreCD @1 $1
0B searchNextBit 10 -> searchNextBit 0B 10
e& goToPlaceForDivider eB -> backToFirstC e& eD
$0 beginCopying 0B -> backToStart $0 0C
0& backToD @1 -> backToD 0& @1
0C copyOne $B -> backToSharpOne 0C $1
eX backToD @0 -> backToD eX @0
$E eraseE 01 -> eraseE $E 0B
0X searchOne 11 -> backToDFromLeft 0X 1&
1D backToDFromLeft 00 -> backToDFromLeft 1D 00
@# prepEraseC 1D -> eraseC @# 1D
e0 temp $0 -> beginCopying e0 $0
eqCD 00 -> 0% checkZeroD
0D backToSharpZero @1 -> backToSharpZero 0D @1
$# gotoLastE @@ -> dec $# @@
0X backToDFromLeft $% -> backToDFromLeft 0X $%
@X searchZero $1 -> restoreCD @X $1
0@ findBlank e0 -> temp 0@ e0
$C backToSharpZero $X -> backToSharpZero $C $X
e# restoreCD @% -> restoreCD e# @0
0X gotoMark $1 -> gotoMark 0X $1
0% copyZero @B -> backToSharpZero 0% @0
0B massErase 0@ -> eraseE 0B 0@
eD backToSharpZero 0D -> backToSharpZero eD 0D
01 eraseC e1 -> eraseC 01 eB
$# backToSharpOne @E -> backToSharpOne $# @E
0$ backToStart @0 -> backToStart 0$ @0
@E nullifier 1B -> initDivider @E 1E
@& eraseE @E -> prepEraseC @& @E
eX backToSharpZero 01 -> backToSharpZero eX 01
@& findBlank e0 -> temp @& e0
eE restoreCD @0 -> restoreCD eE @0
$D backToDFromRight 0E -> backToDFromRight $D 0E
eX backToSharpZero @E -> backToSharpZero eX @E
FINAL @X -> FINAL @ FINAL
e0 eraseC @C -> backToStart e0 @X
0$ eraseE 11 -> eraseE 0$ 1B
0D prepEraseC e0 -> prepEraseC 0D e0
01 backToSharpOne 1D -> backToSharpOne 01 1D
eD searchOne 00 -> restoreCD eD 00
backToSharpOne 0# -> 01 createCopy
eX findBlank e1 -> temp eX e1
00 backToDFromRight eB -> backToDFromRight 00 eB
1C findBlank 1B -> FINAL 1C 1B
1% backToSharpZero @1 -> backToSharpZero 1% @1
@B copyZero 1B -> backToSharpZero @B 10
e& backToStart $1 -> backToStart e& $1
$E findBlank e0 -> temp $E e0
@& eraseC @0 -> eraseC @& @B
$C searchZero 10 -> backToDFromLeft $C 1%
e0 backToSharpZero e0 -> backToSharpZero e0 e0
eX prepEraseC @D -> eraseC eX @D
0# eraseE 0E -> prepEraseC 0# 0E
$E backToFirstC @1 -> backToFirstC $E @1
$D prepEraseC 1D -> eraseC $D 1D
0B checkEForZero 1B -> stop 0B 1B
1B restoreCD 11 -> restoreCD 1B 11
eE backToDFromRight 0E -> backToDFromRight eE 0E
e& backToSharpZero e1 -> backToSharpZero e& e1
@E backToDFromLeft @1 -> backToDFromLeft @E @1
eE temp $0 -> beginCopying eE $0
0$ backToSharpOne $1 -> backToSharpOne 0$ $1
checkOneD @0 -> @0 checkOneD
e$ backToDFromRight 11 -> backToDFromRight e$ 11
0B replaceWithBlanks e@ -> backToDFromRight 0B e@
1E backToDFromRight @B -> backToDFromRight 1E @B
eB restoreCD @% -> restoreCD eB @0
@B temp $1 -> beginCopying @B $1
00 checkCD 1D -> checkCD 00 1D
11 gotoMark eE -> gotoDecC 11 eE
0X searchZero @1 -> restoreCD 0X @1
11 gotoDecC $0 -> gotoDecC 11 $0
@& backToDFromRight 0B -> backToDFromRight @& 0B
1# backToDFromLeft 0% -> backToDFromLeft 1# 0%
$1 eraseE @0 -> eraseE $1 @B
$E backToD @1 -> backToD $E @1
1& backToDFromRight 01 -> backToDFromRight 1& 01
e% backToSharpZero eE -> backToSharpZero e% eE
$% backToDFromLeft $0 -> backToDFromLeft $% $0
$X backToSharpOne @E -> backToSharpOne $X @E
0% backToSharpOne @E -> backToSharpOne 0% @E
e0 backToSharpZero 00 -> backToSharpZero e0 00
1# backToFirstC $0 -> backToFirstC 1# $0
10 backToDFromRight @E -> backToDFromRight 10 @E
1@ restoreCD 0& -> restoreCD 1@ 01
eD backToSharpZero @0 -> backToSharpZero eD @0
$1 eraseC 01 -> eraseC $1 0B
eC eraseE 00 -> eraseE eC 0B
11 restoreCD $1 -> restoreCD 11 $1
eX copyOne 0B -> backToSharpOne eX 01
@@ incD @1 -> incD @@ @0
0% backToSharpOne $0 -> backToSharpOne 0% $0
e# backToSharpOne 0X -> backToSharpOne e# 0X
$@ restoreCD @& -> restoreCD $@ @1
@B beginCopying $B -> backToStart @B $C
@B eraseE @E -> prepEraseC @B @E
1B gotoMark 1E -> gotoDecC 1B 1E
@# eraseC 1C -> backToStart @# 1X
01 backToSharpZero 0D -> backToSharpZero 01 0D
0E backToSharpOne eX -> backToSharpOne 0E eX
01 restoreCD $& -> restoreCD 01 $1
1@ backToDFromRight $0 -> backToDFromRight 1@ $0
eX backToSharpOne @C -> backToSharpOne eX @C
eB backToSharpZero $1 -> backToSharpZero eB $1
1$ gotoDecC $1 -> gotoDecC 1$ $1
1D restoreCD $0 -> restoreCD 1D $0
1% backToSharpZero 10 -> backToSharpZero 1% 10
0# backToSharpZero 1D -> backToSharpZero 0# 1D
0@ temp 01 -> beginCopying 0@ 01
$0 eraseE 01 -> eraseE $0 0B
e$ incD e1 -> incD e$ e0
eC eraseC 10 -> eraseC eC 1B
$1 searchOne 11 -> backToDFromLeft $1 1&
@0 searchOne 10 -> restoreCD @0 10
0@ incD 10 -> checkCD 0@ 11
11 backToSharpZero $E -> backToSharpZero 11 $E
$D gotoDecC 10 -> gotoDecC $D 10
@@ restoreCD $& -> restoreCD @@ $1
@& restoreCD $& -> restoreCD @& $1
@% gotoDecC e0 -> gotoDecC @% e0
$C eraseE 10 -> eraseE $C 1B
@& incD 00 -> checkCD @& 01
$X backToSharpZero eE -> backToSharpZero $X eE
@# gotoMark e0 -> gotoMark @# e0
1# beginCopying eB -> backToStart 1# eC
$% backToD 00 -> backToD $% 00
eD eraseE @0 -> eraseE eD @B
$$ backToSharpOne $X -> backToSharpOne $$ $X
eE eraseE $0 -> eraseE eE $B
$0 restoreCD e0 -> restoreCD $0 e0
$0 backToDFromRight @0 -> backToDFromRight $0 @0
$X incD @1 -> incD $X @0
eD eraseE e0 -> eraseE eD eB
1& backToSharpOne 1D -> backToSharpOne 1& 1D
eX goToPlaceForDivider @B -> backToFirstC eX @D
ifZero 10 -> 10 ifZero
e% backToStart e0 -> backToStart e% e0
@% backToSharpZero 10 -> backToSharpZero @% 10
01 gotoMark 11 -> gotoMark 01 11
0$ restoreCD $1 -> restoreCD 0$ $1
@& restoreCD e& -> restoreCD @& e1
eX findZero 11 -> beginCopying eX 11
$% backToFirstC 00 -> backToFirstC $% 00
@D eraseE @E -> prepEraseC @D @E
e# backToD e1 -> backToD e# e1
1% nullifier @B -> initDivider 1% @E
e1 massErase $@ -> eraseE e1 $@
$X gotoDecC $D -> dec $X $D
0X backToDFromRight 01 -> backToDFromRight 0X 01
$$ searchNextBit 01 -> searchNextBit $$ 01
0& backToSharpOne eE -> backToSharpOne 0& eE
backToDAfterInc 0D -> 0D createCopy
eC searchZero 00 -> backToDFromLeft eC 0%
$0 incD 11 -> incD $0 10
e1 backToDFromLeft @1 -> backToDFromLeft e1 @1
eB backToSharpZero 0X -> backToSharpZero eB 0X
@@ eraseC @C -> backToStart @@ @X
0$ backToSharpOne 1C -> backToSharpOne 0$ 1C
@% searchZero $0 -> backToDFromLeft @% $%
$B gotoLastE 1@ -> dec $B 1@
0C prepEraseC eD -> eraseC 0C eD
e# temp e1 -> beginCopying e# e1
@$ eraseC @0 -> eraseC @$ @B
$# backToDFromLeft $D -> searchNextBit $# $D
0$ backToSharpOne @1 -> backToSharpOne 0$ @1
e# incD 10 -> checkCD e# 11
@C gotoMark 01 -> gotoMark @C 01
0# prepEraseC 10 -> prepEraseC 0# 10
$1 backToSharpZero eE -> backToSharpZero $1 eE
e$ backToSharpZero 0X -> backToSharpZero e$ 0X
$% copyZero 1B -> backToSharpZero $% 10
0% eraseE $1 -> eraseE 0% $B
$% searchNextBit e0 -> searchNextBit $% e0
@E searchZero @1 -> restoreCD @E @1
@D backToSharpZero @0 -> backToSharpZero @D @0
$1 backToSharpOne 1E -> backToSharpOne $1 1E
e0 backToFirstC e0 -> backToFirstC e0 e0
0B backToSharpZero @1 -> backToSharpZero 0B @1
@1 backToSharpZero $C -> backToSharpZero @1 $C
1$ backToDFromLeft 1D -> searchNextBit 1$ 1D
10 replaceWithBlanks 0@ -> backToDFromRight 10 0@
eE initDividerByTwo 10 -> backToD eE 11
1% searchNextBit 01 -> searchNextBit 1% 01
$D nullifier $B -> initDivider $D $E
0B backToSharpZero @C -> backToSharpZero 0B @C
$$ backToSharpOne $1 -> backToSharpOne $$ $1
11 checkCD 11 -> checkCD 11 11
e$ backToStart $1 -> backToStart e$ $1
@$ backToSharpOne 1X -> backToSharpOne @$ 1X
10 backToSharpZero eC -> backToSharpZero 10 eC
$B backToFirstC 10 -> backToFirstC $B 10
@$ dec $0 -> dec @$ $1
$0 backToSharpOne 0C -> backToSharpOne $0 0C
@E gotoMark e1 -> gotoMark @E e1
00 backToSharpZero @1 -> backToSharpZero 00 @1
e0 searchZero 11 -> restoreCD e0 11
@& backToSharpOne 1E -> backToSharpOne @& 1E
eC backToDFromLeft $1 -> backToDFromLeft eC $1
e@ gotoMark $1 -> gotoMark e@ $1
1% backToSharpOne eD -> backToSharpOne 1% eD
eB backToSharpZero $0 -> backToSharpZero eB $0
0$ backToSharpZero $C -> backToSharpZero 0$ $C
01 checkEForZero eB -> stop 01 eB
e1 backToSharpOne e1 -> backToSharpOne e1 e1
0@ backToSharpOne 0X -> backToSharpOne 0@ 0X
0% backToDFromLeft $1 -> backToDFromLeft 0% $1
@B checkCD 1D -> checkCD @B 1D
1$ backToSharpOne 10 -> backToSharpOne 1$ 10
e# dec 10 -> dec e# 11
eD checkCD e1 -> checkCD eD e1
0B replaceWithBlanks 0@ -> backToDFromRight 0B 0@
e0 findBlank e0 -> temp e0 e0
@0 gotoDecC $1 -> gotoDecC @0 $1
e$ backToDFromRight eE -> backToDFromRight e$ eE
1$ backToD 11 -> backToD 1$ 11
00 checkCD 0D -> checkCD 00 0D
1& dec $1 -> gotoMark 1& $0
e& copyZero @B -> backToSharpZero e& @0
e% backToSharpZero 1E -> backToSharpZero e% 1E
1% copyOne $B -> backToSharpOne 1% $1
1$ backToStart @1 -> backToStart 1$ @1
eC backToSharpZero @1 -> backToSharpZero eC @1
$E copyOne $B -> backToSharpOne $E $1
e$ checkCD e1 -> checkCD e$ e1
@# searchZero 11 -> restoreCD @# 11
$# nullifier @B -> initDivider $# @E
eC gotoMark e1 -> gotoMark eC e1
eB temp @1 -> beginCopying eB @1
11 backToDFromRight @1 -> backToDFromRight 11 @1
eB backToDFromLeft e& -> backToDFromLeft eB e&
0B restoreCD e0 -> restoreCD 0B e0
createCopy 0D -> 0D nullifier
$% restoreCD e1 -> restoreCD $% e1
@& restoreCD $D -> restoreCD @& $D
1X gotoMark e1 -> gotoMark 1X e1
@1 gotoMark e0 -> gotoMark @1 e0
createCopy $E -> $E gotoLastE
$B eraseC @1 -> eraseC $B @B
e% nullifier eB -> initDivider e% eE
$C incD 10 -> checkCD $C 11
@@ findBlank 01 -> temp @@ 01
goToPlaceForDivider @0 -> @0 goToPlaceForDivider
@B backToDFromRight eE -> backToDFromRight @B eE
@1 backToDFromLeft eD -> searchNextBit @1 eD
eB copyOne $B -> backToSharpOne eB $1
0E backToDFromRight $0 -> backToDFromRight 0E $0
1$ backToSharpZero 1D -> backToSharpZero 1$ 1D
checkEForZero @1 -> @1 massErase
1C massErase $@ -> eraseE 1C $@
$E backToDFromRight $0 -> backToDFromRight $E $0
$E searchZero 11 -> restoreCD $E 11
eC prepEraseC 01 -> prepEraseC eC 01
1& initDividerByTwo e0 -> backToD 1& e1
@& backToDFromRight $E -> backToDFromRight @& $E
@B backToDFromLeft e& -> backToDFromLeft @B e&
0$ eraseC @1 -> eraseC 0$ @B
@E backToDFromRight $0 -> backToDFromRight @E $0
0D backToSharpZero 0E -> backToSharpZero 0D 0E
$& gotoMark $0 -> gotoMark $& $0
@E checkCD $D -> checkCD @E $D
e1 backToDFromLeft 00 -> backToDFromLeft e1 00
1% backToSharpZero $0 -> backToSharpZero 1% $0
eD backToD 00 -> backToD eD 00
@D searchNextBit 01 -> searchNextBit @D 01
1B checkCD $0 -> checkCD 1B $0
$& backToSharpZero 0E -> backToSharpZero $& 0E
01 searchZero $0 -> backToDFromLeft 01 $%
@C goToPlaceForDivider eB -> backToFirstC @C eD
@1 backToSharpOne @0 -> backToSharpOne @1 @0
@C backToDFromLeft 00 -> backToDFromLeft @C 00
e1 searchZero $0 -> backToDFromLeft e1 $%
e% restoreCD e% -> restoreCD e% e0
1& backToDFromLeft $& -> backToDFromLeft 1& $&
00 findZero @1 -> beginCopying 00 @1
01 eraseE @E -> prepEraseC 01 @E
0E searchNextBit 11 -> searchNextBit 0E 11
0# backToDFromRight 01 -> backToDFromRight 0# 01
0D eraseE @1 -> eraseE 0D @B
0@ incD $1 -> incD 0@ $0
@0 eraseC @0 -> eraseC @0 @B
@@ searchOne 00 -> restoreCD @@ 00
1& backToSharpOne 1C -> backToSharpOne 1& 1C
@@ backToD $0 -> backToD @@ $0
eD restoreCD 0D -> restoreCD eD 0D
e# backToFirstC 11 -> backToFirstC e# 11
0X incD @1 -> incD 0X @0
11 gotoDecC 0D -> dec 11 0D
$1 dec $0 -> dec $1 $1
$E restoreCD 1D -> restoreCD $E 1D
$B searchNextBit 11 -> searchNextBit $B 11
0C searchOne e1 -> backToDFromLeft 0C e&
$@ copyOne $B -> backToSharpOne $@ $1
@# incD $0 -> checkCD @# $1
$E restoreCD 10 -> restoreCD $E 10
1# backToDFromRight eE -> backToDFromRight 1# eE
@0 dec @0 -> dec @0 @1
$0 copyZero $B -> backToSharpZero $0 $0
1D gotoLastE $@ -> dec 1D $@
eD checkEForZero 1B -> stop eD 1B
e1 prepEraseC 01 -> prepEraseC e1 01
0@ backToSharpZero @X -> backToSharpZero 0@ @X
eC eraseC e0 -> eraseC eC eB
e0 backToDFromLeft 1& -> backToDFromLeft e0 1&
0# massErase 0@ -> eraseE 0# 0@
@X eraseC 1C -> backToStart @X 1X
0& restoreCD 01 -> restoreCD 0& 01
e0 beginCopying eB -> backToStart e0 eC
1B restoreCD 1D -> restoreCD 1B 1D
1D backToDFromLeft 1% -> backToDFromLeft 1D 1%
$% eraseC 11 -> eraseC $% 1B
$X copyZero @B -> backToSharpZero $X @0
1D backToDFromRight $B -> backToDFromRight 1D $B
@C gotoDecC 00 -> gotoDecC @C 00
@$ searchNextBit 10 -> searchNextBit @$ 10
e% prepEraseC 1D -> eraseC e% 1D
@1 backToSharpOne eC -> backToSharpOne @1 eC
1# checkCD 10 -> checkCD 1# 10
@0 eraseC 1C -> backToStart @0 1X
@& checkCD 01 -> checkCD @& 01
11 backToDFromLeft $% -> backToDFromLeft 11 $%
1% backToSharpZero 0C -> backToSharpZero 1% 0C
1@ backToSharpOne $1 -> backToSharpOne 1@ $1
1% backToSharpOne 11 -> backToSharpOne 1% 11
@E goToPlaceForDivider eB -> backToFirstC @E eD
$% temp e1 -> beginCopying $% e1
$0 searchZero @1 -> restoreCD $0 @1
eB initDividerByTwo e0 -> backToD eB e1
0& incD $1 -> incD 0& $0
eB gotoMark 00 -> gotoMark eB 00
01 findBlank $B -> FINAL 01 $B
$$ findBlank 01 -> temp $$ 01
$B replaceWithBlanks e@ -> backToDFromRight $B e@
0B gotoMark $1 -> gotoMark 0B $1
01 initDividerByTwo 10 -> backToD 01 11
$@ searchOne e1 -> backToDFromLeft $@ e&
@0 eraseE 00 -> eraseE @0 0B
$1 prepEraseC $0 -> prepEraseC $1 $0
1E searchNextBit @0 -> searchNextBit 1E @0
@0 backToSharpZero eE -> backToSharpZero @0 eE
@D backToDFromLeft 11 -> backToDFromLeft @D 11
e$ gotoLastE 1@ -> dec e$ 1@
0@ prepEraseC $D -> eraseC 0@ $D
@& backToSharpOne $E -> backToSharpOne @& $E
e# searchOne $0 -> restoreCD e# $0
1E backToSharpOne 0D -> backToSharpOne 1E 0D
@X backToFirstC e1 -> backToFirstC @X e1
@C eraseE 0E -> prepEraseC @C 0E
e0 copyOne 0B -> backToSharpOne e0 01
1% beginCopying @B -> backToStart 1% @C
copyOne eX -> eX copyOne
10 findBlank 01 -> temp 10 01
eC gotoDecC 01 -> gotoDecC eC 01
eB eraseE e1 -> eraseE eB eB
0D restoreCD $1 -> restoreCD 0D $1
@X restoreCD $0 -> restoreCD @X $0
1C backToDFromLeft 10 -> backToDFromLeft 1C 10
e% temp $1 -> beginCopying e% $1
@1 forwardToLastD eE -> incD @1 eE
$1 backToSharpZero 00 -> backToSharpZero $1 00
@% backToD 01 -> backToD @% 01
$X searchZero e1 -> restoreCD $X e1
@# backToDFromRight @E -> backToDFromRight @# @E
$C prepEraseC e1 -> prepEraseC $C e1
@1 copyZero eB -> backToSharpZero @1 e0
@B searchZero @1 -> restoreCD @B @1
@E prepEraseC e0 -> prepEraseC @E e0
0# searchZero e0 -> backToDFromLeft 0# e%
@# backToSharpZero 00 -> backToSharpZero @# 00
1X backToDFromLeft 1% -> backToDFromLeft 1X 1%
eC checkCD $0 -> checkCD eC $0
@@ searchOne 11 -> backToDFromLeft @@ 1&
e& backToSharpZero $C -> backToSharpZero e& $C
@1 prepEraseC 00 -> prepEraseC @1 00
1@ eraseC e0 -> eraseC 1@ eB
1C backToDFromRight 11 -> backToDFromRight 1C 11
$& beginCopying $B -> backToStart $& $C
0E findZero 11 -> beginCopying 0E 11
eB backToSharpOne $E -> backToSharpOne eB $E
11 backToFirstC 00 -> backToFirstC 11 00
01 backToDFromRight 01 -> backToDFromRight 01 01
@# backToDFromLeft e% -> backToDFromLeft @# e%
1C checkCD 0D -> checkCD 1C 0D
$1 beginCopying 1B -> backToStart $1 1C
@% findZero $1 -> beginCopying @% $1
$& backToDFromLeft 0% -> backToDFromLeft $& 0%
0$ eraseE e1 -> eraseE 0$ eB
eC checkEForZero 1B -> stop eC 1B
$& copyOne $B -> backToSharpOne $& $1
e# eraseC eC -> backToStart e# eX
$# gotoLastE $@ -> dec $# $@
0E gotoMark e1 -> gotoMark 0E e1
@E forwardToLastD eE -> incD @E eE
00 backToDFromRight @1 -> backToDFromRight 00 @1
0B gotoDecC 1D -> dec 0B 1D
0C backToDFromRight e1 -> backToDFromRight 0C e1
0X initDivider 00 -> initDividerByTwo 0X 00
copyZero @E -> @E copyZero
0% backToSharpZero eC -> backToSharpZero 0% eC
1C findZero $1 -> beginCopying 1C $1
@# backToSharpOne eE -> backToSharpOne @# eE
$D backToDFromLeft eD -> searchNextBit $D eD
@% eraseE @0 -> eraseE @% @B
eE eraseC e1 -> eraseC eE eB
0# backToD e0 -> backToD 0# e0
@D gotoMark $0 -> gotoMark @D $0
@0 incD @1 -> incD @0 @0
$$ backToFirstC @0 -> backToFirstC $$ @0
@B checkCD 01 -> checkCD @B 01
@% backToDFromRight 10 -> backToDFromRight @% 10
1D backToSharpZero eX -> backToSharpZero 1D eX
0D prepEraseC 0D -> eraseC 0D 0D
0# backToSharpOne 0C -> backToSharpOne 0# 0C
1X backToDFromLeft 0D -> searchNextBit 1X 0D
@& prepEraseC e1 -> prepEraseC @& e1
@1 checkCD 10 -> checkCD @1 10
$& backToDFromLeft 11 -> backToDFromLeft $& 11
10 backToDFromRight $1 -> backToDFromRight 10 $1
$# findZero 01 -> beginCopying $# 01
0B backToFirstC $1 -> backToFirstC 0B $1
checkOneD e1 -> e1 checkOneD
1# findBlank $1 -> temp 1# $1
eB backToStart @0 -> backToStart eB @0
$1 backToDFromLeft @& -> backToDFromLeft $1 @&
1C incD 01 -> incD 1C 00
0# backToSharpOne @X -> backToSharpOne 0# @X
@X eraseE 1E -> prepEraseC @X 1E
0@ replaceWithBlanks 0@ -> backToDFromRight 0@ 0@
0D incD $0 -> checkCD 0D $1
@X restoreCD 01 -> restoreCD @X 01
@& searchOne 00 -> restoreCD @& 00
1& checkCD $0 -> checkCD 1& $0
@$ backToSharpZero 0C -> backToSharpZero @$ 0C
$# backToSharpOne $C -> backToSharpOne $# $C
0C prepEraseC 0D -> eraseC 0C 0D
@B backToD @1 -> backToD @B @1
e& backToSharpZero 1C -> backToSharpZero e& 1C
01 goToPlaceForDivider eB -> backToFirstC 01 eD
1C gotoMark @1 -> gotoMark 1C @1
$0 beginCopying $B -> backToStart $0 $C
@# backToDFromRight $E -> backToDFromRight @# $E
$X initDivider 00 -> initDividerByTwo $X 00
e# restoreCD 10 -> restoreCD e# 10
@0 gotoDecC @0 -> gotoDecC @0 @0
01 gotoDecC 01 -> gotoDecC 01 01
0$ dec e1 -> gotoMark 0$ e0
1C eraseE 00 -> eraseE 1C 0B
checkEForZero $0 -> $0 checkEForZero
0C restoreCD 1& -> restoreCD 0C 11
$$ gotoMark 01 -> gotoMark $$ 01
e% findZero 01 -> beginCopying e% 01
00 replaceWithBlanks 1@ -> backToDFromRight 00 1@
0% gotoDecC @1 -> gotoDecC 0% @1
$& forwardToLastD 0E -> incD $& 0E
0$ backToSharpOne @C -> backToSharpOne 0$ @C
1B dec @1 -> gotoMark 1B @0
$1 restoreCD $& -> restoreCD $1 $1
@# restoreCD 00 -> restoreCD @# 00
$E nullifier @B -> initDivider $E @E
0X restoreCD e& -> restoreCD 0X e1
@0 restoreCD 1& -> restoreCD @0 11
e& prepEraseC e1 -> prepEraseC e& e1
eD checkCD 11 -> checkCD eD 11
0% backToSharpZero $D -> backToSharpZero 0% $D
1& eraseE 01 -> eraseE 1& 0B
1& massErase 1@ -> eraseE 1& 1@
$D searchZero @0 -> backToDFromLeft $D @%
@D backToSharpOne e0 -> backToSharpOne @D e0
1X findBlank 0B -> FINAL 1X 0B
1D backToDFromLeft 0% -> backToDFromLeft 1D 0%
e0 backToSharpOne $D -> backToSharpOne e0 $D
e% eraseE eE -> prepEraseC e% eE
01 backToSharpZero @C -> backToSharpZero 01 @C
0# replaceWithBlanks $@ -> backToDFromRight 0# $@
0# restoreCD $1 -> restoreCD 0# $1
0B nullifier $B -> initDivider 0B $E
0B backToDFromLeft e% -> backToDFromLeft 0B e%
@B gotoDecC @1 -> gotoDecC @B @1
0D backToSharpOne $E -> backToSharpOne 0D $E
@0 forwardToLastD $E -> incD @0 $E
$& backToDFromRight $0 -> backToDFromRight $& $0
0E eraseE 1E -> prepEraseC 0E 1E
1B incD e0 -> checkCD 1B e1
$D incD $1 -> incD $D $0
@B massErase $@ -> eraseE @B $@
@# restoreCD $1 -> restoreCD @# $1
e1 searchZero @0 -> backToDFromLeft e1 @%
e1 backToSharpOne eC -> backToSharpOne e1 eC
@% checkCD 11 -> checkCD @% 11
$C goToPlaceForDivider 0B -> backToFirstC $C 0D
eX dec @0 -> dec eX @1
0& backToSharpOne 1X -> backToSharpOne 0& 1X
e& backToSharpOne 11 -> backToSharpOne e& 11
$1 backToDFromLeft 0& -> backToDFromLeft $1 0&
00 forwardToLastD eE -> incD 00 eE
11 backToDFromRight $1 -> backToDFromRight 11 $1
$E backToSharpZero @D -> backToSharpZero $E @D
10 massErase 1@ -> eraseE 10 1@
e@ backToSharpZero 0X -> backToSharpZero e@ 0X
e1 backToDFromLeft eD -> searchNextBit e1 eD
e@ restoreCD @0 -> restoreCD e@ @0
0@ backToDFromLeft e1 -> backToDFromLeft 0@ e1
eD backToSharpOne @E -> backToSharpOne eD @E
1# backToSharpOne @E -> backToSharpOne 1# @E
11 prepEraseC @0 -> prepEraseC 11 @0
eE incD 01 -> incD eE 00
$0 eraseC 1C -> backToStart $0 1X
@$ backToSharpZero @1 -> backToSharpZero @$ @1
@D findBlank @B -> FINAL @D @B
0X gotoDecC 00 -> gotoDecC 0X 00
$C restoreCD 1% -> restoreCD $C 10
0B eraseE eE -> prepEraseC 0B eE
0D searchOne 10 -> restoreCD 0D 10
$D nullifier eB -> initDivider $D eE
0X checkCD $D -> checkCD 0X $D
1% backToSharpZero 1E -> backToSharpZero 1% 1E
1D temp 01 -> beginCopying 1D 01
$B nullifier 1B -> initDivider $B 1E
@C prepEraseC 01 -> prepEraseC @C 01
$@ eraseE 11 -> eraseE $@ 1B
e@ backToSharpZero eD -> backToSharpZero e@ eD
@# backToDFromLeft 11 -> backToDFromLeft @# 11
0X searchNextBit e1 -> searchNextBit 0X e1
0X backToDFromRight 0B -> backToDFromRight 0X 0B
11 backToDFromLeft 1% -> backToDFromLeft 11 1%
0D backToSharpZero eD -> backToSharpZero 0D eD
@D backToDFromRight $1 -> backToDFromRight @D $1
@C backToDFromLeft @0 -> backToDFromLeft @C @0
1& backToSharpZero eE -> backToSharpZero 1& eE
0@ prepEraseC @D -> eraseC 0@ @D
@B beginCopying 1B -> backToStart @B 1C
eX gotoDecC $1 -> gotoDecC eX $1
@D searchNextBit e0 -> searchNextBit @D e0
1D backToDFromLeft @0 -> backToDFromLeft 1D @0
e% searchNextBit @0 -> searchNextBit e% @0
@X backToD 00 -> backToD @X 00
e0 checkCD $1 -> checkCD e0 $1
1B searchZero e1 -> restoreCD 1B e1
0& backToSharpZero @1 -> backToSharpZero 0& @1
eB findZero 01 -> beginCopying eB 01
0@ backToDFromRight @E -> backToDFromRight 0@ @E
@B searchZero $0 -> backToDFromLeft @B $%
$1 prepEraseC e0 -> prepEraseC $1 e0
1X backToSharpZero @0 -> backToSharpZero 1X @0
@0 searchOne $1 -> backToDFromLeft @0 $&
$$ gotoLastE $@ -> dec $$ $@
eD goToPlaceForDivider 0B -> backToFirstC eD 0D
@& searchOne e0 -> restoreCD @& e0
@D backToFirstC 00 -> backToFirstC @D 00
@0 prepEraseC @1 -> prepEraseC @0 @1
e% beginCopying @B -> backToStart e% @C
@@ temp @1 -> beginCopying @@ @1
$0 nullifier @B -> initDivider $0 @E
0$ findBlank $0 -> temp 0$ $0
e& dec e0 -> dec e& e1
@D backToFirstC @0 -> backToFirstC @D @0
e& findZero e1 -> beginCopying e& e1
1X backToSharpZero eD -> backToSharpZero 1X eD
1& restoreCD $% -> restoreCD 1& $0
@C backToSharpZero eX -> backToSharpZero @C eX
e@ backToSharpZero @D -> backToSharpZero e@ @D
1X gotoDecC 0D -> dec 1X 0D
ifZero $D -> $D moveToE
$B incD e1 -> incD $B e0
@@ backToSharpZero 11 -> backToSharpZero @@ 11
0@ restoreCD e% -> restoreCD 0@ e0
eC forwardToLastD $E -> incD eC $E
$1 backToSharpZero @1 -> backToSharpZero $1 @1
0% nullifier @B -> initDivider 0% @E
$D massErase e@ -> eraseE $D e@
0D prepEraseC @D -> eraseC 0D @D
@0 prepEraseC $1 -> prepEraseC @0 $1
$% incD 11 -> incD $% 10
0% findBlank e1 -> temp 0% e1
$0 gotoDecC eD -> dec $0 eD
1C backToDFromLeft eD -> searchNextBit 1C eD
copyOne e1 -> e1 copyOne
eB copyOne @B -> backToSharpOne eB @1
eE eraseC 01 -> eraseC eE 0B
$C backToDFromRight @1 -> backToDFromRight $C @1
e& searchOne @0 -> restoreCD e& @0
0& nullifier 0B -> initDivider 0& 0E
0& restoreCD $0 -> restoreCD 0& $0
@X restoreCD @1 -> restoreCD @X @1
0C backToDFromLeft 11 -> backToDFromLeft 0C 11
10 backToDFromLeft 0D -> searchNextBit 10 0D
$% backToSharpZero $X -> backToSharpZero $% $X
$0 backToDFromLeft @& -> backToDFromLeft $0 @&
e@ checkCD 01 -> checkCD e@ 01
e$ eraseE 00 -> eraseE e$ 0B
e# prepEraseC $D -> eraseC e# $D
1# eraseE 11 -> eraseE 1# 1B
@0 findBlank @1 -> temp @0 @1
1% searchOne 00 -> restoreCD 1% 00
@$ backToDFromRight 1E -> backToDFromRight @$ 1E
1C searchOne e0 -> restoreCD 1C e0
1% gotoMark @0 -> gotoMark 1% @0
01 backToStart @0 -> backToStart 01 @0
e$ searchNextBit 11 -> searchNextBit e$ 11
0% backToDFromRight $1 -> backToDFromRight 0% $1
@@ nullifier 0B -> initDivider @@ 0E
0E searchOne e1 -> backToDFromLeft 0E e&
1% backToD @0 -> backToD 1% @0
@C backToStart $0 -> backToStart @C $0
@C restoreCD e% -> restoreCD @C e0
1E searchOne @1 -> backToDFromLeft 1E @&
$& backToDFromLeft @1 -> backToDFromLeft $& @1
11 backToSharpOne @D -> backToSharpOne 11 @D
@& backToSharpZero eE -> backToSharpZero @& eE
eB searchOne 10 -> restoreCD eB 10
1B backToDFromLeft 0% -> backToDFromLeft 1B 0%
$C backToSharpZero 0C -> backToSharpZero $C 0C
0$ searchZero @0 -> backToDFromLeft 0$ @%
$$ restoreCD @1 -> restoreCD $$ @1
10 initDivider $0 -> initDividerByTwo 10 $0
$# checkCD 10 -> checkCD $# 10
1B temp 11 -> beginCopying 1B 11
$1 eraseC @C -> backToStart $1 @X
0X massErase @@ -> eraseE 0X @@
e# prepEraseC @0 -> prepEraseC e# @0
e# backToDFromLeft 10 -> backToDFromLeft e# 10
e$ dec @1 -> gotoMark e$ @0
$& backToStart $0 -> backToStart $& $0
@$ initDividerByTwo $0 -> backToD @$ $1
$0 backToSharpOne $0 -> backToSharpOne $0 $0
e% restoreCD 00 -> restoreCD e% 00
e% backToDFromLeft 11 -> backToDFromLeft e% 11
11 backToD e1 -> backToD 11 e1
@C backToDFromLeft e0 -> backToDFromLeft @C e0
@# findBlank eB -> FINAL @# eB
1C gotoDecC @0 -> gotoDecC 1C @0
@$ backToDFromLeft $% -> backToDFromLeft @$ $%
1& massErase 0@ -> eraseE 1& 0@
@B prepEraseC $0 -> prepEraseC @B $0
eX backToDFromRight 00 -> backToDFromRight eX 00
e1 backToD $0 -> backToD e1 $0
0$ findZero $1 -> beginCopying 0$ $1
0X backToDFromRight @E -> backToDFromRight 0X @E
0C backToStart @1 -> backToStart 0C @1
0E backToDFromRight @1 -> backToDFromRight 0E @1
$E backToSharpOne eE -> backToSharpOne $E eE
$D searchNextBit $0 -> searchNextBit $D $0
0D prepEraseC $0 -> prepEraseC 0D $0
@# findZero $1 -> beginCopying @# $1
1D backToSharpOne eC -> backToSharpOne 1D eC
1B eraseC 10 -> eraseC 1B 1B
$D backToStart e1 -> backToStart $D e1
e& backToDFromRight eB -> backToDFromRight e& eB
e$ initDividerByTwo @0 -> backToD e$ @1
e@ backToSharpOne e0 -> backToSharpOne e@ e0
$0 backToDFromRight @E -> backToDFromRight $0 @E
searchZero $& -> $& searchZero
$X beginCopying @B -> backToStart $X @C
e1 eraseE @E -> prepEraseC e1 @E
$0 searchOne $0 -> restoreCD $0 $0
forwardToLastD e1 -> e1 forwardToLastD
@X copyZero @B -> backToSharpZero @X @0
$1 dec 01 -> gotoMark $1 00
$D beginCopying $B -> backToStart $D $C
$D backToSharpOne 01 -> backToSharpOne $D 01
@% searchNextBit $0 -> searchNextBit @% $0
eX gotoLastE 0@ -> dec eX 0@
@% copyZero 1B -> backToSharpZero @% 10
1C backToDFromRight eB -> backToDFromRight 1C eB
1B backToSharpOne 1C -> backToSharpOne 1B 1C
0B backToDFromRight eE -> backToDFromRight 0B eE
e1 gotoDecC 10 -> gotoDecC e1 10
e1 eraseE 0E -> prepEraseC e1 0E
e# backToSharpOne 1X -> backToSharpOne e# 1X
@C goToPlaceForDivider @B -> backToFirstC @C @D
$# temp 10 -> beginCopying $# 10
00 prepEraseC @D -> eraseC 00 @D
0& restoreCD 10 -> restoreCD 0& 10
1% incD $0 -> checkCD 1% $1
0X findBlank $0 -> temp 0X $0
@0 gotoMark $0 -> gotoMark @0 $0
@$ backToSharpOne 0X -> backToSharpOne @$ 0X
@$ backToD 01 -> backToD @$ 01
@B findBlank e0 -> temp @B e0
$B backToStart 11 -> backToStart $B 11
0# goToPlaceForDivider 1B -> backToFirstC 0# 1D
e0 gotoDecC 1D -> dec e0 1D
0X findBlank $1 -> temp 0X $1
0@ gotoDecC 10 -> gotoDecC 0@ 10
$& backToSharpZero 0X -> backToSharpZero $& 0X
0C replaceWithBlanks e@ -> backToDFromRight 0C e@
e& checkCD 0D -> checkCD e& 0D
10 prepEraseC 10 -> prepEraseC 10 10
1# gotoMark $0 -> gotoMark 1# $0
0# backToDFromLeft 0D -> searchNextBit 0# 0D
$% searchNextBit $0 -> searchNextBit $% $0
e0 initDivider 00 -> initDividerByTwo e0 00
backToDAfterInc eD -> eD createCopy
eC backToDFromLeft 00 -> backToDFromLeft eC 00
$E backToDFromLeft 11 -> backToDFromLeft $E 11
@& backToSharpOne 0C -> backToSharpOne @& 0C
10 backToDFromRight 10 -> backToDFromRight 10 10
1& forwardToLastD @E -> incD 1& @E
e0 restoreCD 1D -> restoreCD e0 1D
$& backToDFromLeft @& -> backToDFromLeft $& @&
$C eraseC e0 -> eraseC $C eB
0B forwardToLastD eE -> incD 0B eE
$@ findBlank @0 -> temp $@ @0
$C backToDFromLeft @% -> backToDFromLeft $C @%
e@ initDividerByTwo e0 -> backToD e@ e1
1D backToDFromRight 1B -> backToDFromRight 1D 1B
e1 backToStart e0 -> backToStart e1 e0
$E backToSharpOne @C -> backToSharpOne $E @C
eD searchZero @0 -> backToDFromLeft eD @%
0B searchZero 01 -> restoreCD 0B 01
11 goToPlaceForDivider @B -> backToFirstC 11 @D
@& searchZero 10 -> backToDFromLeft @& 1%
e1 backToSharpOne @1 -> backToSharpOne e1 @1
$0 backToSharpZero @D -> backToSharpZero $0 @D
$@ backToD 00 -> backToD $@ 00
1# backToDFromLeft 00 -> backToDFromLeft 1# 00
@1 restoreCD e0 -> restoreCD @1 e0
1$ replaceWithBlanks @@ -> backToDFromRight 1$ @@
$D prepEraseC @1 -> prepEraseC $D @1
e& searchNextBit 01 -> searchNextBit e& 01
@0 dec 00 -> dec @0 01
1# eraseC 11 -> eraseC 1# 1B
$& eraseE 1E -> prepEraseC $& 1E
eE backToD e1 -> backToD eE e1
$@ findBlank eB -> FINAL $@ eB
eE temp @0 -> beginCopying eE @0
1B copyOne $B -> backToSharpOne 1B $1
1E searchOne e0 -> restoreCD 1E e0
$% gotoDecC 01 -> gotoDecC $% 01
1& backToSharpOne eD -> backToSharpOne 1& eD
@$ eraseE 1E -> prepEraseC @$ 1E
e$ backToDFromLeft 01 -> backToDFromLeft e$ 01
0B checkEForZero 0B -> stop 0B 0B
1# backToSharpZero 0C -> backToSharpZero 1# 0C
@D goToPlaceForDivider @B -> backToFirstC @D @D
@E gotoDecC 11 -> gotoDecC @E 11
e@ searchOne @0 -> restoreCD e@ @0
@# restoreCD @D -> restoreCD @# @D
e% checkCD 11 -> checkCD e% 11
@# goToPlaceForDivider $B -> backToFirstC @# $D
@C backToDFromLeft 11 -> backToDFromLeft @C 11
0C prepEraseC @1 -> prepEraseC 0C @1
@C backToDFromLeft e1 -> backToDFromLeft @C e1
0% gotoLastE 1@ -> dec 0% 1@
@E findBlank @1 -> temp @E @1
@0 gotoMark $1 -> gotoMark @0 $1
e@ initDivider $0 -> initDividerByTwo e@ $0
1& checkCD @1 -> checkCD 1& @1
e# backToDFromRight 1E -> backToDFromRight e# 1E
$E gotoLastE @@ -> dec $E @@
0$ searchNextBit 00 -> searchNextBit 0$ 00
$# copyZero @B -> backToSharpZero $# @0
0# gotoDecC $1 -> gotoDecC 0# $1
1% eraseC 11 -> eraseC 1% 1B
1# searchOne 10 -> restoreCD 1# 10
1C prepEraseC 10 -> prepEraseC 1C 10
@1 eraseE @1 -> eraseE @1 @B
1E eraseE eE -> prepEraseC 1E eE
e& searchZero 10 -> backToDFromLeft e& 1%
$# initDividerByTwo 10 -> backToD $# 11
$E restoreCD 00 -> restoreCD $E 00
00 restoreCD $0 -> restoreCD 00 $0
11 backToDFromRight 0B -> backToDFromRight 11 0B
@C gotoDecC e0 -> gotoDecC @C e0
1@ initDivider $0 -> initDividerByTwo 1@ $0
1# incD 11 -> incD 1# 10
eB backToDFromLeft @& -> backToDFromLeft eB @&
$@ backToSharpOne 1D -> backToSharpOne $@ 1D
0D findBlank $1 -> temp 0D $1
@E backToStart e0 -> backToStart @E e0
@X forwardToLastD eE -> incD @X eE
1X initDividerByTwo e0 -> backToD 1X e1
$D backToSharpZero 11 -> backToSharpZero $D 11
@E backToDFromRight $B -> backToDFromRight @E $B
@0 backToFirstC $0 -> backToFirstC @0 $0
e% temp @1 -> beginCopying e% @1
e& restoreCD e0 -> restoreCD e& e0
@% copyOne @B -> backToSharpOne @% @1
eB backToDFromLeft $D -> searchNextBit eB $D
e$ dec 01 -> gotoMark e$ 00
$& findBlank 0B -> FINAL $& 0B
e& prepEraseC 10 -> prepEraseC e& 10
0@ backToDFromLeft $D -> searchNextBit 0@ $D
@$ checkCD $D -> checkCD @$ $D
@@ temp @0 -> beginCopying @@ @0
1% nullifier eB -> initDivider 1% eE
e# backToDFromRight @0 -> backToDFromRight e# @0
@D eraseC 10 -> eraseC @D 1B
@& searchNextBit 00 -> searchNextBit @& 00
eD backToD $0 -> backToD eD $0
$X backToStart e0 -> backToStart $X e0
1% restoreCD eD -> restoreCD 1% eD
eD backToSharpOne 1C -> backToSharpOne eD 1C
$C backToSharpOne $1 -> backToSharpOne $C $1
1& temp e0 -> beginCopying 1& e0
0% dec 11 -> gotoMark 0% 10
10 backToDFromRight 0B -> backToDFromRight 10 0B
$% prepEraseC 0D -> eraseC $% 0D
@1 backToD 10 -> backToD @1 10
$X backToSharpOne 0E -> backToSharpOne $X 0E
e$ searchZero e0 -> backToDFromLeft e$ e%
@D searchZero $1 -> restoreCD @D $1
eX gotoMark e0 -> gotoMark eX e0
10 gotoLastE $@ -> dec 10 $@
e$ backToSharpZero e0 -> backToSharpZero e$ e0
@B replaceWithBlanks @@ -> backToDFromRight @B @@
@X findBlank 11 -> temp @X 11
@0 initDividerByTwo 10 -> backToD @0 11
0# eraseE $1 -> eraseE 0# $B
@1 gotoDecC 0D -> dec @1 0D
moveToE eE -> eE checkEForZero
@D eraseC 01 -> eraseC @D 0B
e1 incD 00 -> checkCD e1 01
@X restoreCD 0D -> restoreCD @X 0D
@& gotoMark eE -> gotoDecC @& eE
@E backToDFromLeft $1 -> backToDFromLeft @E $1
eX backToStart 11 -> backToStart eX 11
0$ backToSharpZero eC -> backToSharpZero 0$ eC
@E dec @1 -> gotoMark @E @0
e# backToDFromLeft $0 -> backToDFromLeft e# $0
1% findBlank @B -> FINAL 1% @B
eC restoreCD @1 -> restoreCD eC @1
1C restoreCD $& -> restoreCD 1C $1
eC eraseC @1 -> eraseC eC @B
$B backToSharpZero 00 -> backToSharpZero $B 00
@B backToSharpZero $D -> backToSharpZero @B $D
0$ dec 11 -> gotoMark 0$ 10
e# backToDFromLeft e0 -> backToDFromLeft e# e0
$1 gotoDecC e0 -> gotoDecC $1 e0
00 goToPlaceForDivider @B -> backToFirstC 00 @D
@1 gotoDecC @1 -> gotoDecC @1 @1
1E backToDFromRight eB -> backToDFromRight 1E eB
e1 backToDFromLeft 10 -> backToDFromLeft e1 10
@# backToSharpOne @X -> backToSharpOne @# @X
eX findBlank 10 -> temp eX 10
@% backToSharpZero 0C -> backToSharpZero @% 0C
@0 backToDFromRight @E -> backToDFromRight @0 @E
@# findBlank 10 -> temp @# 10
$C backToD 00 -> backToD $C 00
0& gotoDecC 01 -> gotoDecC 0& 01
01 gotoDecC 0D -> dec 01 0D
@C initDividerByTwo $0 -> backToD @C $1
0# searchZero 00 -> backToDFromLeft 0# 0%
1@ temp $1 -> beginCopying 1@ $1
0E checkCD 10 -> checkCD 0E 10
00 prepEraseC 00 -> prepEraseC 00 00
eC prepEraseC 1D -> eraseC eC 1D
@D backToDFromLeft eD -> searchNextBit @D eD
e# backToSharpZero 1C -> backToSharpZero e# 1C
1$ prepEraseC e0 -> prepEraseC 1$ e0
1# searchOne 11 -> backToDFromLeft 1# 1&
$0 backToDFromLeft 11 -> backToDFromLeft $0 11
$X backToD e0 -> backToD $X e0
e0 findZero 11 -> beginCopying e0 11
$B prepEraseC $1 -> prepEraseC $B $1
0B gotoDecC @0 -> gotoDecC 0B @0
0D eraseE 0E -> prepEraseC 0D 0E
$$ dec 11 -> gotoMark $$ 10
@@ backToD @0 -> backToD @@ @0
@$ backToDFromLeft 1D -> searchNextBit @$ 1D
$@ restoreCD $% -> restoreCD $@ $0
0% nullifier 1B -> initDivider 0% 1E
11 dec 00 -> dec 11 01
0E restoreCD @% -> restoreCD 0E @0
@B copyZero @B -> backToSharpZero @B @0
1% searchZero @1 -> restoreCD 1% @1
0% dec 01 -> gotoMark 0% 00
1$ gotoDecC 11 -> gotoDecC 1$ 11
1@ eraseC 11 -> eraseC 1@ 1B
0@ checkCD e0 -> checkCD 0@ e0
@# backToDFromLeft 1% -> backToDFromLeft @# 1%
1B goToPlaceForDivider eB -> backToFirstC 1B eD
0# dec $0 -> dec 0# $1
1@ findBlank 01 -> temp 1@ 01
e& eraseC @1 -> eraseC e& @B
@E gotoDecC 10 -> gotoDecC @E 10
00 eraseE 1E -> prepEraseC 00 1E
10 backToD $0 -> backToD 10 $0
FINAL @# -> FINAL @ FINAL
$@ forwardToLastD $E -> incD $@ $E
@X checkCD 00 -> checkCD @X 00
e& backToDFromLeft @D -> searchNextBit e& @D
$@ incD 01 -> incD $@ 00
0@ restoreCD 0& -> restoreCD 0@ 01
1D searchOne 11 -> backToDFromLeft 1D 1&
$C searchNextBit $1 -> searchNextBit $C $1
e$ restoreCD @% -> restoreCD e$ @0
0E beginCopying $B -> backToStart 0E $C
@& searchOne 01 -> backToDFromLeft @& 0&
1E prepEraseC 01 -> prepEraseC 1E 01
$B backToSharpOne $X -> backToSharpOne $B $X
$@ backToDFromRight @0 -> backToDFromRight $@ @0
e@ backToDFromRight 11 -> backToDFromRight e@ 11
1$ backToSharpZero eC -> backToSharpZero 1$ eC
1& beginCopying 0B -> backToStart 1& 0C
copyOne @X -> @X copyOne
1$ backToDFromLeft 0D -> searchNextBit 1$ 0D
e0 searchOne e1 -> backToDFromLeft e0 e&
1B initDividerByTwo @0 -> backToD 1B @1
1% gotoMark 00 -> gotoMark 1% 00
eX nullifier 0B -> initDivider eX 0E
0@ restoreCD e& -> restoreCD 0@ e1
@& restoreCD $1 -> restoreCD @& $1
1% checkCD @0 -> checkCD 1% @0
searchNextBit e& -> e& eqCD
1@ restoreCD eD -> restoreCD 1@ eD
@1 searchNextBit 10 -> searchNextBit @1 10
$& eraseC $1 -> eraseC $& $B
e@ backToSharpOne 01 -> backToSharpOne e@ 01
1$ gotoLastE @@ -> dec 1$ @@
@@ incD 00 -> checkCD @@ 01
0C initDividerByTwo 10 -> backToD 0C 11
1% backToStart e0 -> backToStart 1% e0
1$ searchNextBit @0 -> searchNextBit 1$ @0
e# temp e0 -> beginCopying e# e0
$# backToSharpOne 1X -> backToSharpOne $# 1X
$B backToDFromLeft e& -> backToDFromLeft $B e&
eD gotoDecC @1 -> gotoDecC eD @1
eC gotoDecC @0 -> gotoDecC eC @0
@@ eraseC @1 -> eraseC @@ @B
e@ nullifier eB -> initDivider e@ eE
1D incD $1 -> incD 1D $0
1E searchZero @1 -> restoreCD 1E @1
0# searchNextBit @1 -> searchNextBit 0# @1
$$ prepEraseC 01 -> prepEraseC $$ 01
eE backToSharpOne 10 -> backToSharpOne eE 10
eB backToSharpOne 1E -> backToSharpOne eB 1E
eC searchOne 01 -> backToDFromLeft eC 0&
0B backToDFromLeft @D -> searchNextBit 0B @D
1@ backToSharpOne 0X -> backToSharpOne 1@ 0X
$0 eraseC 0C -> backToStart $0 0X
FINAL eD -> FINAL e FINAL
0# findBlank $B -> FINAL 0# $B
@E backToDFromRight e0 -> backToDFromRight @E e0
@1 incD $1 -> incD @1 $0
@D forwardToLastD 1E -> incD @D 1E
0X gotoMark 01 -> gotoMark 0X 01
$# backToSharpOne 10 -> backToSharpOne $# 10
1$ eraseC e0 -> eraseC 1$ eB
e0 backToDFromLeft e% -> backToDFromLeft e0 e%
e@ gotoLastE @@ -> dec e@ @@
eE gotoMark @1 -> gotoMark eE @1
0E checkCD @1 -> checkCD 0E @1
e0 prepEraseC eD -> eraseC e0 eD
$B temp @1 -> beginCopying $B @1
@@ backToDFromLeft $D -> searchNextBit @@ $D
1@ backToD e1 -> backToD 1@ e1
0C gotoDecC $1 -> gotoDecC 0C $1
1D prepEraseC e1 -> prepEraseC 1D e1
@C forwardToLastD 0E -> incD @C 0E
FINAL 01 -> FINAL 0 FINAL
@0 checkCD 11 -> checkCD @0 11
e$ nullifier 1B -> initDivider e$ 1E
1% dec e1 -> gotoMark 1% e0
eX incD 10 -> checkCD eX 11
0B restoreCD 11 -> restoreCD 0B 11
$B incD $1 -> incD $B $0
eC backToFirstC e1 -> backToFirstC eC e1
@E initDividerByTwo @0 -> backToD @E @1
1X dec 10 -> dec 1X 11
e$ dec 11 -> gotoMark e$ 10
@E findBlank @B -> FINAL @E @B
$$ temp e1 -> beginCopying $$ e1
createCopy 0C -> 0C goToPlaceForDivider
1E backToDFromLeft e% -> backToDFromLeft 1E e%
@B temp e0 -> beginCopying @B e0
@# initDividerByTwo 10 -> backToD @# 11
0C incD e1 -> incD 0C e0
$C copyOne eB -> backToSharpOne $C e1
backToStart $$ -> $$ createCopy
11 massErase 0@ -> eraseE 11 0@
$@ backToDFromLeft 00 -> backToDFromLeft $@ 00
00 eraseC 00 -> eraseC 00 0B
@% gotoDecC @0 -> gotoDecC @% @0
$@ searchOne $1 -> backToDFromLeft $@ $&
@C restoreCD 1% -> restoreCD @C 10
$1 checkCD 1D -> checkCD $1 1D
1% prepEraseC $0 -> prepEraseC 1% $0
0D eraseE eE -> prepEraseC 0D eE
eB restoreCD e% -> restoreCD eB e0
e0 gotoDecC $1 -> gotoDecC e0 $1
1% backToSharpZero $1 -> backToSharpZero 1% $1
@1 eraseC eC -> backToStart @1 eX
10 backToSharpZero $E -> backToSharpZero 10 $E
1@ checkCD @1 -> checkCD 1@ @1
1B initDividerByTwo 10 -> backToD 1B 11
@& checkCD $0 -> checkCD @& $0
$X eraseE @1 -> eraseE $X @B
@$ checkCD eD -> checkCD @$ eD
1X gotoDecC 1D -> dec 1X 1D
@X findBlank $0 -> temp @X $0
0E backToDFromLeft e% -> backToDFromLeft 0E e%
1B backToDFromLeft 11 -> backToDFromLeft 1B 11
@X backToDFromLeft @1 -> backToDFromLeft @X @1
11 copyZero eB -> backToSharpZero 11 e0
1& prepEraseC @0 -> prepEraseC 1& @0
1C searchZero $1 -> restoreCD 1C $1
1# dec e1 -> gotoMark 1# e0
11 gotoDecC @D -> dec 11 @D
0$ eraseE eE -> prepEraseC 0$ eE
$@ gotoDecC $D -> dec $@ $D
$C backToSharpZero eD -> backToSharpZero $C eD
e0 restoreCD @0 -> restoreCD e0 @0
e& temp $1 -> beginCopying e& $1
createCopy 11 -> 1# copyOne
0& eraseE 01 -> eraseE 0& 0B
1% copyZero 1B -> backToSharpZero 1% 10
1E checkCD 1D -> checkCD 1E 1D
$X restoreCD 00 -> restoreCD $X 00
1C beginCopying @B -> backToStart 1C @C
e# incD $1 -> incD e# $0
@B restoreCD 11 -> restoreCD @B 11
e% backToDFromRight eE -> backToDFromRight e% eE
0@ initDividerByTwo e0 -> backToD 0@ e1
1& backToFirstC 01 -> backToFirstC 1& 01
e& replaceWithBlanks e@ -> backToDFromRight e& e@
@E searchNextBit 11 -> searchNextBit @E 11
@0 checkCD e0 -> checkCD @0 e0
1% temp $1 -> beginCopying 1% $1
1D replaceWithBlanks e@ -> backToDFromRight 1D e@
$D gotoDecC @1 -> gotoDecC $D @1
eC checkCD 00 -> checkCD eC 00
1& eraseC 1C -> backToStart 1& 1X
1% findZero 01 -> beginCopying 1% 01
eX backToFirstC e1 -> backToFirstC eX e1
$D backToDFromLeft 01 -> backToDFromLeft $D 01
10 prepEraseC @0 -> prepEraseC 10 @0
0% backToDFromRight 1E -> backToDFromRight 0% 1E
e& backToFirstC 00 -> backToFirstC e& 00
11 initDividerByTwo @0 -> backToD 11 @1
0$ dec 10 -> dec 0$ 11
$& findBlank $1 -> temp $& $1
11 backToDFromRight @E -> backToDFromRight 11 @E
0C eraseE 11 -> eraseE 0C 1B
1# backToSharpZero @C -> backToSharpZero 1# @C
$1 eraseC $1 -> eraseC $1 $B
e% eraseE e1 -> eraseE e% eB
0@ forwardToLastD 1E -> incD 0@ 1E
@% backToDFromRight 00 -> backToDFromRight @% 00
e1 copyZero @B -> backToSharpZero e1 @0
@% copyZero 0B -> backToSharpZero @% 00
@# massErase 0@ -> eraseE @# 0@
00 backToDFromRight $E -> backToDFromRight 00 $E
$D backToDFromLeft 1% -> backToDFromLeft $D 1%
eX nullifier @B -> initDivider eX @E
$X initDivider e0 -> initDividerByTwo $X e0
e& backToDFromRight 01 -> backToDFromRight e& 01
0E beginCopying 0B -> backToStart 0E 0C
eC incD e1 -> incD eC e0
@D restoreCD 1% -> restoreCD @D 10
1$ searchNextBit $1 -> searchNextBit 1$ $1
0X gotoDecC 01 -> gotoDecC 0X 01
0X backToStart e0 -> backToStart 0X e0
$D backToD 01 -> backToD $D 01
eX restoreCD 11 -> restoreCD eX 11
01 backToDFromRight $E -> backToDFromRight 01 $E
@% searchNextBit 10 -> searchNextBit @% 10
0# findBlank @B -> FINAL 0# @B
1E searchOne @0 -> restoreCD 1E @0
$B gotoDecC 01 -> gotoDecC $B 01
11 restoreCD 1% -> restoreCD 11 10
1B restoreCD 1% -> restoreCD 1B 10
$& searchOne $0 -> restoreCD $& $0
$C searchZero 11 -> restoreCD $C 11
@0 backToDFromLeft e% -> backToDFromLeft @0 e%
0D findBlank eB -> FINAL 0D eB
01 backToStart 11 -> backToStart 01 11
$C gotoLastE @@ -> dec $C @@
e% backToSharpOne 1E -> backToSharpOne e% 1E
@$ initDivider e0 -> initDividerByTwo @$ e0
@& findBlank 1B -> FINAL @& 1B
0D massErase $@ -> eraseE 0D $@
0E backToSharpZero $0 -> backToSharpZero 0E $0
$$ copyOne 0B -> backToSharpOne $$ 01
00 backToDFromRight 00 -> backToDFromRight 00 00
$# searchOne $0 -> restoreCD $# $0
1E copyZero eB -> backToSharpZero 1E e0
$# backToSharpOne e0 -> backToSharpOne $# e0
11 checkCD $D -> checkCD 11 $D
00 backToSharpOne 00 -> backToSharpOne 00 00
e@ prepEraseC @1 -> prepEraseC e@ @1
e$ searchNextBit e0 -> searchNextBit e$ e0
eC gotoDecC eD -> dec eC eD
eE dec $1 -> gotoMark eE $0
e@ eraseC 11 -> eraseC e@ 1B
$X searchNextBit e0 -> searchNextBit $X e0
0E backToD @1 -> backToD 0E @1
$B temp $0 -> beginCopying $B $0
@1 backToSharpOne eE -> backToSharpOne @1 eE
0X prepEraseC eD -> eraseC 0X eD
0& restoreCD $1 -> restoreCD 0& $1
1D backToSharpOne 10 -> backToSharpOne 1D 10
1# backToDFromRight 01 -> backToDFromRight 1# 01
eC copyOne 0B -> backToSharpOne eC 01
$1 backToSharpZero 01 -> backToSharpZero $1 01
@% searchZero 10 -> backToDFromLeft @% 1%
$E eraseE 1E -> prepEraseC $E 1E
@E backToSharpZero 1D -> backToSharpZero @E 1D
@$ gotoDecC eD -> dec @$ eD
@# nullifier 0B -> initDivider @# 0E
1@ backToDFromLeft 0% -> backToDFromLeft 1@ 0%
$% incD 00 -> checkCD $% 01
00 goToPlaceForDivider 1B -> backToFirstC 00 1D
$@ findBlank @B -> FINAL $@ @B
$X findBlank $0 -> temp $X $0
@& prepEraseC e0 -> prepEraseC @& e0
$% searchOne @0 -> restoreCD $% @0
@B backToSharpZero eX -> backToSharpZero @B eX
$0 eraseE 0E -> prepEraseC $0 0E
eX searchNextBit $0 -> searchNextBit eX $0
@& eraseC @C -> backToStart @& @X
@% backToFirstC e1 -> backToFirstC @% e1
$% forwardToLastD $E -> incD $% $E
e& backToDFromRight e0 -> backToDFromRight e& e0
0C massErase $@ -> eraseE 0C $@
1@ restoreCD 11 -> restoreCD 1@ 11
e0 initDivider e0 -> initDividerByTwo e0 e0
$$ eraseE @E -> prepEraseC $$ @E
eX backToFirstC 01 -> backToFirstC eX 01
e% searchOne @0 -> restoreCD e% @0
1C backToDFromRight @1 -> backToDFromRight 1C @1
@1 checkCD $1 -> checkCD @1 $1
@% checkEForZero eB -> stop @% eB
$0 prepEraseC 00 -> prepEraseC $0 00
eD dec @0 -> dec eD @1
e1 incD 11 -> incD e1 10
@1 replaceWithBlanks 0@ -> backToDFromRight @1 0@
@D backToDFromRight @E -> backToDFromRight @D @E
eD backToDFromRight 00 -> backToDFromRight eD 00
eB gotoMark 10 -> gotoMark eB 10
e$ backToDFromLeft e% -> backToDFromLeft e$ e%
@D backToDFromRight eB -> backToDFromRight @D eB
$E checkCD e1 -> checkCD $E e1
11 nullifier 0B -> initDivider 11 0E
eE eraseE $1 -> eraseE eE $B
e# incD @1 -> incD e# @0
e@ backToSharpZero @E -> backToSharpZero e@ @E
eE checkCD 11 -> checkCD eE 11
0% forwardToLastD @E -> incD 0% @E
eC prepEraseC $1 -> prepEraseC eC $1
@X searchOne 01 -> backToDFromLeft @X 0&
$$ eraseC 11 -> eraseC $$ 1B
1D backToStart 11 -> backToStart 1D 11
0@ beginCopying @B -> backToStart 0@ @C
1# backToDFromLeft 11 -> backToDFromLeft 1# 11
1% gotoMark e1 -> gotoMark 1% e1
@1 searchZero e1 -> restoreCD @1 e1
$% eraseC 0C -> backToStart $% 0X
@% backToStart $0 -> backToStart @% $0
@C gotoMark e0 -> gotoMark @C e0
e# backToSharpZero e1 -> backToSharpZero e# e1
e& backToDFromRight $0 -> backToDFromRight e& $0
e0 backToSharpZero e1 -> backToSharpZero e0 e1
1E backToSharpZero 1D -> backToSharpZero 1E 1D
e% backToDFromLeft $0 -> backToDFromLeft e% $0
0& checkCD 11 -> checkCD 0& 11
eX searchZero 11 -> restoreCD eX 11
$C massErase 1@ -> eraseE $C 1@
10 gotoDecC @0 -> gotoDecC 10 @0
$E backToSharpZero 0E -> backToSharpZero $E 0E
0E backToDFromRight @B -> backToDFromRight 0E @B
0C backToSharpZero @0 -> backToSharpZero 0C @0
eE goToPlaceForDivider 0B -> backToFirstC eE 0D
0X searchNextBit 01 -> searchNextBit 0X 01
10 checkEForZero eB -> stop 10 eB
@B backToSharpZero eE -> backToSharpZero @B eE
@& copyZero @B -> backToSharpZero @& @0
@& incD e0 -> checkCD @& e1
0# incD 00 -> checkCD 0# 01
@C dec @1 -> gotoMark @C @0
@# searchZero $0 -> backToDFromLeft @# $%
0$ backToSharpZero 0C -> backToSharpZero 0$ 0C
10 gotoDecC @D -> dec 10 @D
00 restoreCD @& -> restoreCD 00 @1
$E backToStart $0 -> backToStart $E $0
@B prepEraseC eD -> eraseC @B eD
$$ eraseE 01 -> eraseE $$ 0B
01 backToSharpZero 0X -> backToSharpZero 01 0X
eE eraseE @0 -> eraseE eE @B
e& findBlank 1B -> FINAL e& 1B
0& eraseC 01 -> eraseC 0& 0B
@C backToSharpOne 0X -> backToSharpOne @C 0X
@$ restoreCD $D -> restoreCD @$ $D
e$ copyZero eB -> backToSharpZero e$ e0
$B backToD 01 -> backToD $B 01
e1 gotoLastE e@ -> dec e1 e@
@# findBlank 1B -> FINAL @# 1B
eE findBlank @1 -> temp eE @1
@D backToSharpZero 1X -> backToSharpZero @D 1X
$E gotoMark @1 -> gotoMark $E @1
eC backToSharpZero 10 -> backToSharpZero eC 10
eX initDivider e0 -> initDividerByTwo eX e0
0@ checkCD e1 -> checkCD 0@ e1
e$ backToDFromLeft 0% -> backToDFromLeft e$ 0%
@& restoreCD @0 -> restoreCD @& @0
$E backToDFromLeft 0% -> backToDFromLeft $E 0%
e% restoreCD 10 -> restoreCD e% 10
e1 forwardToLastD 1E -> incD e1 1E
$# findBlank 01 -> temp $# 01
1@ searchNextBit @0 -> searchNextBit 1@ @0
$0 backToSharpOne 1C -> backToSharpOne $0 1C
0$ replaceWithBlanks 1@ -> backToDFromRight 0$ 1@
eE eraseC 00 -> eraseC eE 0B
e# restoreCD @& -> restoreCD e# @1
$E backToSharpOne 10 -> backToSharpOne $E 10
1D eraseC eC -> backToStart 1D eX
FINAL @@ -> FINAL @ FINAL
$C prepEraseC eD -> eraseC $C eD
$D FINAL -> FINAL $ FINAL
0X prepEraseC @1 -> prepEraseC 0X @1
@$ searchOne $0 -> restoreCD @$ $0
1$ replaceWithBlanks 0@ -> backToDFromRight 1$ 0@
$% copyOne 0B -> backToSharpOne $% 01
$D dec $0 -> dec $D $1
$1 goToPlaceForDivider $B -> backToFirstC $1 $D
$@ backToDFromRight e1 -> backToDFromRight $@ e1
0@ restoreCD $0 -> restoreCD 0@ $0
0& searchNextBit e0 -> searchNextBit 0& e0
1# gotoMark 1E -> gotoDecC 1# 1E
e1 eraseC e0 -> eraseC e1 eB
0@ initDividerByTwo 10 -> backToD 0@ 11
0X backToSharpOne $D -> backToSharpOne 0X $D
@1 backToFirstC e1 -> backToFirstC @1 e1
@D incD $0 -> checkCD @D $1
1% copyOne @B -> backToSharpOne 1% @1
01 initDividerByTwo 00 -> backToD 01 01
e@ findBlank 00 -> temp e@ 00
1D checkCD e1 -> checkCD 1D e1
0X findZero 11 -> beginCopying 0X 11
$E incD 11 -> incD $E 10
@# checkCD @D -> checkCD @# @D
eC backToFirstC @0 -> backToFirstC eC @0
eC backToSharpOne e0 -> backToSharpOne eC e0
1C initDividerByTwo @0 -> backToD 1C @1
1# backToDFromRight e0 -> backToDFromRight 1# e0
1B searchOne @0 -> restoreCD 1B @0
$D restoreCD 1& -> restoreCD $D 11
@@ findBlank e1 -> temp @@ e1
@$ backToDFromRight 0B -> backToDFromRight @$ 0B
@D backToFirstC $1 -> backToFirstC @D $1
0% backToSharpZero eE -> backToSharpZero 0% eE
1# restoreCD @D -> restoreCD 1# @D
@@ backToD 01 -> backToD @@ 01
0% backToSharpZero $1 -> backToSharpZero 0% $1
0E backToSharpOne 1X -> backToSharpOne 0E 1X
@# massErase @@ -> eraseE @# @@
@D temp $0 -> beginCopying @D $0
1# massErase 0@ -> eraseE 1# 0@
0D gotoLastE 1@ -> dec 0D 1@
copyZero $D -> $D copyZero
@B backToDFromLeft @0 -> backToDFromLeft @B @0
01 temp 11 -> beginCopying 01 11
eD backToSharpZero @C -> backToSharpZero eD @C
@D backToSharpOne 1D -> backToSharpOne @D 1D
10 prepEraseC $D -> eraseC 10 $D
01 checkCD 00 -> checkCD 01 00
1B backToSharpZero $0 -> backToSharpZero 1B $0
0@ backToDFromLeft eD -> searchNextBit 0@ eD
0& eraseC 0C -> backToStart 0& 0X
0X findBlank 10 -> temp 0X 10
0& restoreCD e0 -> restoreCD 0& e0
eC checkCD 01 -> checkCD eC 01
e% gotoMark @1 -> gotoMark e% @1
1% gotoDecC @1 -> gotoDecC 1% @1
1& gotoMark eE -> gotoDecC 1& eE
0X restoreCD @& -> restoreCD 0X @1
forwardToLastD $D -> $D forwardToLastD
eD prepEraseC $1 -> prepEraseC eD $1
0D backToDFromRight eE -> backToDFromRight 0D eE
@@ findZero @1 -> beginCopying @@ @1
1E prepEraseC 00 -> prepEraseC 1E 00
$D beginCopying eB -> backToStart $D eC
1C temp $0 -> beginCopying 1C $0
1& backToSharpOne e1 -> backToSharpOne 1& e1
e@ restoreCD @& -> restoreCD e@ @1
e1 checkCD 11 -> checkCD e1 11
@$ searchZero $0 -> backToDFromLeft @$ $%
11 backToSharpOne eC -> backToSharpOne 11 eC
backToFirstC $C -> $C createCopy
backToDAfterInc 01 -> 01 backToDAfterInc
$D restoreCD 11 -> restoreCD $D 11
0B backToDFromRight e0 -> backToDFromRight 0B e0
$X forwardToLastD @E -> incD $X @E
e$ checkCD @D -> checkCD e$ @D
00 massErase 0@ -> eraseE 00 0@
0# initDividerByTwo @0 -> backToD 0# @1
@& gotoMark e0 -> gotoMark @& e0
0& findBlank @1 -> temp 0& @1
@D backToStart @1 -> backToStart @D @1
1% searchOne 11 -> backToDFromLeft 1% 1&
@C backToDFromRight @B -> backToDFromRight @C @B
0& backToSharpOne 00 -> backToSharpOne 0& 00
@$ backToDFromRight 0E -> backToDFromRight @$ 0E
1% restoreCD 0% -> restoreCD 1% 00
eD gotoDecC eD -> dec eD eD
1@ initDividerByTwo 00 -> backToD 1@ 01
$& searchOne e1 -> backToDFromLeft $& e&
0X backToDFromRight 11 -> backToDFromRight 0X 11
@@ searchNextBit 00 -> searchNextBit @@ 00
$% restoreCD @1 -> restoreCD $% @1
$X dec 00 -> dec $X 01
10 initDivider 00 -> initDividerByTwo 10 00
1# backToSharpOne $0 -> backToSharpOne 1# $0
1C restoreCD e1 -> restoreCD 1C e1
@% backToSharpOne $X -> backToSharpOne @% $X
$C initDividerByTwo 00 -> backToD $C 01
0B copyZero 0B -> backToSharpZero 0B 00
0X gotoDecC 11 -> gotoDecC 0X 11
0# backToSharpOne eD -> backToSharpOne 0# eD
$0 gotoDecC 01 -> gotoDecC $0 01
01 prepEraseC 1D -> eraseC 01 1D
0D copyOne eB -> backToSharpOne 0D e1
0E initDivider $0 -> initDividerByTwo 0E $0
$D backToDFromLeft 11 -> backToDFromLeft $D 11
1C prepEraseC 00 -> prepEraseC 1C 00
1E incD $1 -> incD 1E $0
@C backToD 00 -> backToD @C 00
@E backToSharpOne 01 -> backToSharpOne @E 01
1E forwardToLastD $E -> incD 1E $E
@# backToSharpOne 0X -> backToSharpOne @# 0X
0C dec 10 -> dec 0C 11
$D backToDFromLeft 1D -> searchNextBit $D 1D
$D prepEraseC 0D -> eraseC $D 0D
0# incD @1 -> incD 0# @0
$D backToSharpOne @C -> backToSharpOne $D @C
0E gotoMark @1 -> gotoMark 0E @1
e% gotoMark eE -> gotoDecC e% eE
0# backToDFromLeft @% -> backToDFromLeft 0# @%
0D copyZero $B -> backToSharpZero 0D $0
$0 searchZero 11 -> restoreCD $0 11
e$ backToSharpZero @0 -> backToSharpZero e$ @0
$X backToSharpOne eD -> backToSharpOne $X eD
00 searchNextBit 01 -> searchNextBit 00 01
restoreCD @C -> @C backToDAfterInc
e@ eraseC $0 -> eraseC e@ $B
@X prepEraseC 10 -> prepEraseC @X 10
$1 backToDFromLeft 00 -> backToDFromLeft $1 00
e1 restoreCD 01 -> restoreCD e1 01
$E searchNextBit e0 -> searchNextBit $E e0
@0 restoreCD 1D -> restoreCD @0 1D
$% backToSharpOne eC -> backToSharpOne $% eC
@B eraseC $C -> backToStart @B $X
@@ backToDFromLeft $& -> backToDFromLeft @@ $&
0E backToD e0 -> backToD 0E e0
1D restoreCD $D -> restoreCD 1D $D
1% findBlank 00 -> temp 1% 00
@& eraseC 00 -> eraseC @& 0B
e% initDivider 10 -> initDividerByTwo e% 10
1# backToFirstC e0 -> backToFirstC 1# e0
$& backToDFromRight eB -> backToDFromRight $& eB
01 eraseE @0 -> eraseE 01 @B
1D backToFirstC @0 -> backToFirstC 1D @0
1X searchNextBit e1 -> searchNextBit 1X e1
eX findZero $1 -> beginCopying eX $1
1& backToStart @0 -> backToStart 1& @0
1% restoreCD @1 -> restoreCD 1% @1
eX backToDFromLeft @D -> searchNextBit eX @D
eX backToSharpZero $X -> backToSharpZero eX $X
0E copyOne $B -> backToSharpOne 0E $1
@E backToSharpOne e0 -> backToSharpOne @E e0
$# backToSharpZero @D -> backToSharpZero $# @D
@0 restoreCD e0 -> restoreCD @0 e0
1D prepEraseC 10 -> prepEraseC 1D 10
@B backToDFromRight @B -> backToDFromRight @B @B
$0 restoreCD 0& -> restoreCD $0 01
@0 dec e0 -> dec @0 e1
$E incD e1 -> incD $E e0
eE backToFirstC @0 -> backToFirstC eE @0
0% prepEraseC $D -> eraseC 0% $D
0# searchNextBit 10 -> searchNextBit 0# 10
@B backToDFromLeft $0 -> backToDFromLeft @B $0
$B searchZero 11 -> restoreCD $B 11
10 backToDFromLeft 0& -> backToDFromLeft 10 0&
eqCD e1 -> e& checkOneD
@D findBlank e0 -> temp @D e0
$1 temp 01 -> beginCopying $1 01
1B checkCD eD -> checkCD 1B eD
@X checkCD @0 -> checkCD @X @0
@& gotoDecC 0D -> dec @& 0D
$# restoreCD 11 -> restoreCD $# 11
1E beginCopying $B -> backToStart 1E $C
0D backToDFromRight 01 -> backToDFromRight 0D 01
@C backToSharpOne 1D -> backToSharpOne @C 1D
e& backToSharpZero e0 -> backToSharpZero e& e0
0X findZero e1 -> beginCopying 0X e1
eC forwardToLastD eE -> incD eC eE
@% searchZero $1 -> restoreCD @% $1
0% backToDFromRight @E -> backToDFromRight 0% @E
0& backToDFromLeft eD -> searchNextBit 0& eD
0X backToFirstC 00 -> backToFirstC 0X 00
@0 restoreCD @% -> restoreCD @0 @0
e1 searchZero e0 -> backToDFromLeft e1 e%
@$ beginCopying 1B -> backToStart @$ 1C
$1 backToSharpOne eE -> backToSharpOne $1 eE
1C restoreCD $D -> restoreCD 1C $D
$X temp @0 -> beginCopying $X @0
eD gotoDecC $D -> dec eD $D
e# massErase 1@ -> eraseE e# 1@
1@ prepEraseC e1 -> prepEraseC 1@ e1
$C replaceWithBlanks 1@ -> backToDFromRight $C 1@
0C initDividerByTwo e0 -> backToD 0C e1
0@ backToDFromLeft $1 -> backToDFromLeft 0@ $1
0B gotoMark 0E -> gotoDecC 0B 0E
$0 backToDFromLeft 0D -> searchNextBit $0 0D
e$ searchNextBit 01 -> searchNextBit e$ 01
0D searchNextBit 00 -> searchNextBit 0D 00
e0 gotoMark $0 -> gotoMark e0 $0
@D gotoMark 0E -> gotoDecC @D 0E
e@ gotoMark e0 -> gotoMark e@ e0
eB gotoDecC 10 -> gotoDecC eB 10
$C checkCD e0 -> checkCD $C e0
$C backToSharpOne $E -> backToSharpOne $C $E
10 eraseE $0 -> eraseE 10 $B
0D forwardToLastD $E -> incD 0D $E
1D goToPlaceForDivider eB -> backToFirstC 1D eD
@0 beginCopying @B -> backToStart @0 @C
1E backToDFromLeft 00 -> backToDFromLeft 1E 00
@D checkEForZero 0B -> stop @D 0B
@# backToFirstC e1 -> backToFirstC @# e1
@D checkCD e1 -> checkCD @D e1
1E findBlank @1 -> temp 1E @1
00 backToDFromLeft 10 -> backToDFromLeft 00 10
@& backToStart @0 -> backToStart @& @0
@$ restoreCD e0 -> restoreCD @$ e0
1@ searchOne 00 -> restoreCD 1@ 00
00 searchOne $1 -> backToDFromLeft 00 $&
$0 backToDFromLeft @D -> searchNextBit $0 @D
0$ incD @1 -> incD 0$ @0
@# backToSharpZero 0D -> backToSharpZero @# 0D
1X backToStart 00 -> backToStart 1X 00
@@ checkCD e1 -> checkCD @@ e1
eX backToSharpZero $1 -> backToSharpZero eX $1
@# backToFirstC 00 -> backToFirstC @# 00
0% incD 11 -> incD 0% 10
$@ gotoMark 0E -> gotoDecC $@ 0E
0X searchZero 10 -> backToDFromLeft 0X 1%
@E eraseC e0 -> eraseC @E eB
@$ goToPlaceForDivider 1B -> backToFirstC @$ 1D
00 backToDFromLeft 0D -> searchNextBit 00 0D
1# restoreCD $1 -> restoreCD 1# $1
10 backToSharpOne 01 -> backToSharpOne 10 01
$0 backToSharpOne @X -> backToSharpOne $0 @X
1@ searchOne $1 -> backToDFromLeft 1@ $&
$% findZero 01 -> beginCopying $% 01
eB searchNextBit $0 -> searchNextBit eB $0
0E searchOne @0 -> restoreCD 0E @0
0D backToDFromRight @E -> backToDFromRight 0D @E
0@ backToStart $0 -> backToStart 0@ $0
@0 findBlank @0 -> temp @0 @0
0D backToSharpZero 0D -> backToSharpZero 0D 0D
@% restoreCD @D -> restoreCD @% @D
e# findBlank 10 -> temp e# 10
e$ eraseE e0 -> eraseE e$ eB
$E backToDFromLeft $% -> backToDFromLeft $E $%
@E backToDFromLeft eD -> searchNextBit @E eD
$& backToStart @1 -> backToStart $& @1
0X searchZero 00 -> backToDFromLeft 0X 0%
@C nullifier 1B -> initDivider @C 1E
$X checkEForZero eB -> stop $X eB
$@ forwardToLastD 1E -> incD $@ 1E
e% temp 00 -> beginCopying e% 00
1& backToSharpZero eX -> backToSharpZero 1& eX
@% backToDFromLeft @1 -> backToDFromLeft @% @1
eD beginCopying eB -> backToStart eD eC
@E searchZero $0 -> backToDFromLeft @E $%
nullifier e0 -> e0 nullifier
$@ beginCopying 0B -> backToStart $@ 0C
10 incD e1 -> incD 10 e0
$@ searchNextBit 00 -> searchNextBit $@ 00
00 temp 01 -> beginCopying 00 01
1& backToSharpOne $1 -> backToSharpOne 1& $1
$% restoreCD 01 -> restoreCD $% 01
1& backToDFromLeft 0D -> searchNextBit 1& 0D
0% searchZero 10 -> backToDFromLeft 0% 1%
checkZeroD eD -> eD searchZero
$% copyOne eB -> backToSharpOne $% e1
1$ backToSharpZero 11 -> backToSharpZero 1$ 11
e1 backToSharpOne 0X -> backToSharpOne e1 0X
eB eraseE 01 -> eraseE eB 0B
eE backToDFromLeft $& -> backToDFromLeft eE $&
e% backToSharpZero $X -> backToSharpZero e% $X
@B backToDFromRight @1 -> backToDFromRight @B @1
0% replaceWithBlanks @@ -> backToDFromRight 0% @@
@X searchNextBit 01 -> searchNextBit @X 01
e$ backToDFromRight 00 -> backToDFromRight e$ 00
eE backToStart 01 -> backToStart eE 01
0% massErase @@ -> eraseE 0% @@
@D backToSharpZero eC -> backToSharpZero @D eC
0# backToSharpZero $X -> backToSharpZero 0# $X
e0 backToSharpZero $C -> backToSharpZero e0 $C
e$ restoreCD 01 -> restoreCD e$ 01
$$ backToDFromRight 1B -> backToDFromRight $$ 1B
$0 checkCD @0 -> checkCD $0 @0
@$ gotoMark 10 -> gotoMark @$ 10
11 searchZero e1 -> restoreCD 11 e1
@1 gotoMark 11 -> gotoMark @1 11
e@ temp @1 -> beginCopying e@ @1
$# backToSharpZero @C -> backToSharpZero $# @C
@# incD @0 -> checkCD @# @1
@X gotoMark e0 -> gotoMark @X e0
e0 eraseE $E -> prepEraseC e0 $E
e@ backToDFromRight 00 -> backToDFromRight e@ 00
$D backToFirstC 11 -> backToFirstC $D 11
0& backToFirstC 10 -> backToFirstC 0& 10
1# gotoDecC @1 -> gotoDecC 1# @1
@C backToSharpOne eD -> backToSharpOne @C eD
@# gotoLastE e@ -> dec @# e@
0D prepEraseC 1D -> eraseC 0D 1D
$D findZero $1 -> beginCopying $D $1
@1 gotoDecC 01 -> gotoDecC @1 01
00 backToDFromRight eE -> backToDFromRight 00 eE
0E gotoDecC @0 -> gotoDecC 0E @0
eE prepEraseC @0 -> prepEraseC eE @0
e# prepEraseC @1 -> prepEraseC e# @1
11 restoreCD @& -> restoreCD 11 @1
e1 replaceWithBlanks @@ -> backToDFromRight e1 @@
1% checkCD e1 -> checkCD 1% e1
$E replaceWithBlanks @@ -> backToDFromRight $E @@
$# checkCD 00 -> checkCD $# 00
$D backToStart 11 -> backToStart $D 11
$& copyZero @B -> backToSharpZero $& @0
@0 searchZero e1 -> restoreCD @0 e1
1& backToD 00 -> backToD 1& 00
1% backToSharpOne 10 -> backToSharpOne 1% 10
@$ findBlank $1 -> temp @$ $1
@X checkEForZero 1B -> stop @X 1B
1& backToSharpZero 0C -> backToSharpZero 1& 0C
1X checkCD 00 -> checkCD 1X 00
eX backToSharpZero 0X -> backToSharpZero eX 0X
1# backToFirstC @0 -> backToFirstC 1# @0
0& backToDFromLeft e0 -> backToDFromLeft 0& e0
$@ gotoDecC @D -> dec $@ @D
0& backToSharpZero $E -> backToSharpZero 0& $E
0D forwardToLastD 0E -> incD 0D 0E
1C gotoDecC eD -> dec 1C eD
$0 findBlank $B -> FINAL $0 $B
0$ backToDFromLeft $0 -> backToDFromLeft 0$ $0
@1 backToDFromRight 1E -> backToDFromRight @1 1E
e1 backToDFromRight e0 -> backToDFromRight e1 e0
0& backToSharpOne $1 -> backToSharpOne 0& $1
eE backToSharpOne $0 -> backToSharpOne eE $0
$@ backToStart $1 -> backToStart $@ $1
1D initDividerByTwo $0 -> backToD 1D $1
0@ backToSharpZero eC -> backToSharpZero 0@ eC
$C eraseC @1 -> eraseC $C @B
00 backToSharpOne @X -> backToSharpOne 00 @X
@@ backToSharpOne $C -> backToSharpOne @@ $C
0B backToSharpOne e0 -> backToSharpOne 0B e0
$B gotoMark 01 -> gotoMark $B 01
@B prepEraseC e1 -> prepEraseC @B e1
$0 gotoMark 10 -> gotoMark $0 10
@$ searchZero e0 -> backToDFromLeft @$ e%
e1 gotoMark 01 -> gotoMark e1 01
10 backToDFromLeft e0 -> backToDFromLeft 10 e0
0$ backToDFromRight @1 -> backToDFromRight 0$ @1
0E findBlank 00 -> temp 0E 00
01 massErase $@ -> eraseE 01 $@
@C backToSharpOne eC -> backToSharpOne @C eC
@B massErase 0@ -> eraseE @B 0@
@$ eraseE 01 -> eraseE @$ 0B
$1 backToSharpZero 1C -> backToSharpZero $1 1C
0B dec $0 -> dec 0B $1
$C nullifier @B -> initDivider $C @E
1C incD $0 -> checkCD 1C $1
e# checkEForZero $B -> stop e# $B
$0 searchZero 01 -> restoreCD $0 01
e$ restoreCD @1 -> restoreCD e$ @1
1B checkCD @1 -> checkCD 1B @1
1E backToDFromRight $1 -> backToDFromRight 1E $1
$D searchOne e1 -> backToDFromLeft $D e&
$% restoreCD $0 -> restoreCD $% $0
e0 backToSharpOne @D -> backToSharpOne e0 @D
0# gotoMark 1E -> gotoDecC 0# 1E
eB eraseE 11 -> eraseE eB 1B
0X backToSharpOne 1X -> backToSharpOne 0X 1X
10 searchZero 01 -> restoreCD 10 01
eE prepEraseC 00 -> prepEraseC eE 00
0X backToDFromRight 0E -> backToDFromRight 0X 0E
@@ backToStart 01 -> backToStart @@ 01
0% initDividerByTwo e0 -> backToD 0% e1
@D backToSharpZero 0D -> backToSharpZero @D 0D
@E backToFirstC @1 -> backToFirstC @E @1
0% backToSharpZero e1 -> backToSharpZero 0% e1
e1 eraseC 0C -> backToStart e1 0X
1C incD 00 -> checkCD 1C 01
0% backToSharpZero 1E -> backToSharpZero 0% 1E
1% eraseE 1E -> prepEraseC 1% 1E
1$ checkCD 10 -> checkCD 1$ 10
1D backToStart @0 -> backToStart 1D @0
00 backToD 00 -> backToD 00 00
$# searchNextBit e0 -> searchNextBit $# e0
goToPlaceForDivider 11 -> 11 goToPlaceForDivider
10 temp e0 -> beginCopying 10 e0
$@ eraseC 01 -> eraseC $@ 0B
@0 backToSharpOne @X -> backToSharpOne @0 @X
0# restoreCD $% -> restoreCD 0# $0
0& prepEraseC e1 -> prepEraseC 0& e1
e@ restoreCD 0% -> restoreCD e@ 00
1& eraseC 10 -> eraseC 1& 1B
0& temp 11 -> beginCopying 0& 11
$@ backToD $0 -> backToD $@ $0
@C searchOne @0 -> restoreCD @C @0
1X backToDFromLeft $D -> searchNextBit 1X $D
$$ restoreCD @0 -> restoreCD $$ @0
@$ eraseE $1 -> eraseE @$ $B
$X backToDFromLeft @% -> backToDFromLeft $X @%
eX checkEForZero 0B -> stop eX 0B
0E incD 11 -> incD 0E 10
$0 findBlank 0B -> FINAL $0 0B
0C backToStart 11 -> backToStart 0C 11
1# initDividerByTwo $0 -> backToD 1# $1
@# nullifier eB -> initDivider @# eE
eB eraseE 10 -> eraseE eB 1B
0& findBlank @0 -> temp 0& @0
11 backToD @0 -> backToD 11 @0
0# incD $0 -> checkCD 0# $1
$% eraseC e0 -> eraseC $% eB
1@ initDivider 10 -> initDividerByTwo 1@ 10
11 checkCD e0 -> checkCD 11 e0
e0 prepEraseC $1 -> prepEraseC e0 $1
0% restoreCD eD -> restoreCD 0% eD
$1 searchZero @1 -> restoreCD $1 @1
eD restoreCD $& -> restoreCD eD $1
e1 checkEForZero @B -> stop e1 @B
10 backToSharpOne e1 -> backToSharpOne 10 e1
0% findZero 01 -> beginCopying 0% 01
0X temp 00 -> beginCopying 0X 00
$& backToDFromRight 01 -> backToDFromRight $& 01
$E eraseE @E -> prepEraseC $E @E
@B forwardToLastD 1E -> incD @B 1E
0X restoreCD 1D -> restoreCD 0X 1D
$@ backToDFromLeft 0D -> searchNextBit $@ 0D
1$ prepEraseC $0 -> prepEraseC 1$ $0
1$ temp 00 -> beginCopying 1$ 00
1# prepEraseC 01 -> prepEraseC 1# 01
@0 initDividerByTwo $0 -> backToD @0 $1
1C eraseE $E -> prepEraseC 1C $E
@# eraseC 0C -> backToStart @# 0X
@% searchOne @1 -> backToDFromLeft @% @&
$D backToFirstC 00 -> backToFirstC $D 00
eX eraseC @1 -> eraseC eX @B
$E forwardToLastD 1E -> incD $E 1E
e# incD $0 -> checkCD e# $1
$# searchZero 11 -> restoreCD $# 11
0# backToDFromRight $E -> backToDFromRight 0# $E
1B prepEraseC 10 -> prepEraseC 1B 10
0& backToFirstC e0 -> backToFirstC 0& e0
00 eraseE 11 -> eraseE 00 1B
@1 incD 10 -> checkCD @1 11
eB checkCD $1 -> checkCD eB $1
0# gotoDecC $0 -> gotoDecC 0# $0
1% eraseE @0 -> eraseE 1% @B
10 checkCD 10 -> checkCD 10 10
@@ backToDFromLeft 0D -> searchNextBit @@ 0D
@@ backToDFromLeft $1 -> backToDFromLeft @@ $1
0E backToStart $1 -> backToStart 0E $1
eX findBlank 1B -> FINAL eX 1B
0B backToDFromLeft 1D -> searchNextBit 0B 1D
@B backToDFromRight 10 -> backToDFromRight @B 10
0C backToDFromLeft 1D -> searchNextBit 0C 1D
0@ eraseC @1 -> eraseC 0@ @B
$1 restoreCD $D -> restoreCD $1 $D
e% restoreCD 0% -> restoreCD e% 00
$C searchOne e1 -> backToDFromLeft $C e&
e0 beginCopying @B -> backToStart e0 @C
$D gotoMark e1 -> gotoMark $D e1
0C replaceWithBlanks 0@ -> backToDFromRight 0C 0@
@% checkCD $1 -> checkCD @% $1
eX initDividerByTwo $0 -> backToD eX $1
@& backToSharpOne $0 -> backToSharpOne @& $0
eB backToDFromRight @1 -> backToDFromRight eB @1
@C restoreCD 01 -> restoreCD @C 01
00 nullifier @B -> initDivider 00 @E
eC massErase 1@ -> eraseE eC 1@
1D temp @0 -> beginCopying 1D @0
1@ checkCD @D -> checkCD 1@ @D
1X temp $0 -> beginCopying 1X $0
$D backToD @1 -> backToD $D @1
$@ backToSharpZero 1E -> backToSharpZero $@ 1E
0C temp 01 -> beginCopying 0C 01
eD findBlank e1 -> temp eD e1
1E searchOne 11 -> backToDFromLeft 1E 1&
$D backToSharpZero @0 -> backToSharpZero $D @0
0% gotoDecC e1 -> gotoDecC 0% e1
1D backToSharpOne $X -> backToSharpOne 1D $X
eE checkEForZero $B -> stop eE $B
@$ checkCD 1D -> checkCD @$ 1D
e@ forwardToLastD $E -> incD e@ $E
1D incD e1 -> incD 1D e0
00 backToDFromRight e1 -> backToDFromRight 00 e1
$@ gotoLastE 1@ -> dec $@ 1@
eE backToSharpZero $0 -> backToSharpZero eE $0
$0 backToStart $1 -> backToStart $0 $1
1@ backToSharpOne 0C -> backToSharpOne 1@ 0C
@& searchNextBit e0 -> searchNextBit @& e0
1D backToDFromRight $0 -> backToDFromRight 1D $0
0D beginCopying $B -> backToStart 0D $C
$C massErase 0@ -> eraseE $C 0@
$% temp @1 -> beginCopying $% @1
@E restoreCD $1 -> restoreCD @E $1
e@ backToSharpZero $D -> backToSharpZero e@ $D
1$ checkCD @1 -> checkCD 1$ @1
1& restoreCD 11 -> restoreCD 1& 11
1D initDividerByTwo 00 -> backToD 1D 01
$E backToSharpZero 10 -> backToSharpZero $E 10
$& checkCD @1 -> checkCD $& @1
$$ backToDFromLeft e0 -> backToDFromLeft $$ e0
$% restoreCD 11 -> restoreCD $% 11
massErase $0 -> $0 massErase
e1 restoreCD 0% -> restoreCD e1 00
1D backToD 10 -> backToD 1D 10
e& dec $0 -> dec e& $1
$E checkEForZero @B -> stop $E @B
01 checkCD @1 -> checkCD 01 @1
01 gotoDecC $1 -> gotoDecC 01 $1
e@ searchOne @1 -> backToDFromLeft e@ @&
eD incD 01 -> incD eD 00
e0 backToSharpOne 1D -> backToSharpOne e0 1D
0& dec $0 -> dec 0& $1
1% initDividerByTwo 10 -> backToD 1% 11
0E copyOne eB -> backToSharpOne 0E e1
1% dec 00 -> dec 1% 01
$X backToStart $0 -> backToStart $X $0
0@ initDivider $0 -> initDividerByTwo 0@ $0
0% backToDFromRight $0 -> backToDFromRight 0% $0
00 backToD @0 -> backToD 00 @0
@$ initDividerByTwo @0 -> backToD @$ @1
$X backToSharpOne 00 -> backToSharpOne $X 00
e% backToSharpOne 0D -> backToSharpOne e% 0D
1$ searchZero 11 -> restoreCD 1$ 11
10 eraseC @0 -> eraseC 10 @B
e% backToSharpOne 00 -> backToSharpOne e% 00
0E dec 01 -> gotoMark 0E 00
eC eraseC 0C -> backToStart eC 0X
1% searchOne @1 -> backToDFromLeft 1% @&
0E goToPlaceForDivider $B -> backToFirstC 0E $D
e& backToSharpOne $E -> backToSharpOne e& $E
@@ beginCopying eB -> backToStart @@ eC
1B findBlank @0 -> temp 1B @0
0X eraseE 01 -> eraseE 0X 0B
$@ checkCD eD -> checkCD $@ eD
0E nullifier @B -> initDivider 0E @E
0$ eraseE @E -> prepEraseC 0$ @E
eX backToDFromRight @0 -> backToDFromRight eX @0
@B findBlank $1 -> temp @B $1
e$ backToDFromRight @1 -> backToDFromRight e$ @1
1B checkCD 1D -> checkCD 1B 1D
eD copyOne 1B -> backToSharpOne eD 11
$$ restoreCD e& -> restoreCD $$ e1
0C backToSharpOne $X -> backToSharpOne 0C $X
e$ eraseC 01 -> eraseC e$ 0B
@1 restoreCD @D -> restoreCD @1 @D
0X backToDFromLeft @% -> backToDFromLeft 0X @%
@# checkCD 10 -> checkCD @# 10
01 eraseC @0 -> eraseC 01 @B
$D massErase 0@ -> eraseE $D 0@
11 eraseE @E -> prepEraseC 11 @E
0% backToDFromLeft 1% -> backToDFromLeft 0% 1%
e& backToDFromRight @B -> backToDFromRight e& @B
1E eraseE 00 -> eraseE 1E 0B
@X backToSharpOne 0D -> backToSharpOne @X 0D
0$ backToDFromLeft @& -> backToDFromLeft 0$ @&
@D findBlank 10 -> temp @D 10
1@ dec $1 -> gotoMark 1@ $0
eD backToFirstC 11 -> backToFirstC eD 11
$E backToDFromLeft eD -> searchNextBit $E eD
eX temp 10 -> beginCopying eX 10
eB backToDFromRight @0 -> backToDFromRight eB @0
0% searchOne $1 -> backToDFromLeft 0% $&
0# backToFirstC @1 -> backToFirstC 0# @1
@D backToStart 10 -> backToStart @D 10
1E backToStart 00 -> backToStart 1E 00
$X searchOne e0 -> restoreCD $X e0
00 incD 00 -> checkCD 00 01
0& eraseE @1 -> eraseE 0& @B
eB eraseE @E -> prepEraseC eB @E
e& backToStart e1 -> backToStart e& e1
1& restoreCD 1% -> restoreCD 1& 10
1D checkCD 1D -> checkCD 1D 1D
@1 temp $1 -> beginCopying @1 $1
@1 dec @0 -> dec @1 @1
@% backToSharpOne 1C -> backToSharpOne @% 1C
0B gotoMark e1 -> gotoMark 0B e1
$E backToDFromLeft 0D -> searchNextBit $E 0D
$X copyOne $B -> backToSharpOne $X $1
eX prepEraseC @0 -> prepEraseC eX @0
0$ backToSharpOne 1D -> backToSharpOne 0$ 1D
$% prepEraseC 11 -> prepEraseC $% 11
1$ backToDFromLeft $1 -> backToDFromLeft 1$ $1
0% backToSharpOne eE -> backToSharpOne 0% eE
0E goToPlaceForDivider eB -> backToFirstC 0E eD
e0 backToSharpZero $0 -> backToSharpZero e0 $0
0B backToDFromLeft 10 -> backToDFromLeft 0B 10
0C backToDFromLeft e0 -> backToDFromLeft 0C e0
@% restoreCD $1 -> restoreCD @% $1
0& eraseC e1 -> eraseC 0& eB
e@ restoreCD 11 -> restoreCD e@ 11
0X gotoMark @0 -> gotoMark 0X @0
00 backToSharpOne e0 -> backToSharpOne 00 e0
0$ backToStart 01 -> backToStart 0$ 01
1# backToDFromRight 00 -> backToDFromRight 1# 00
1C eraseE 0E -> prepEraseC 1C 0E
e0 backToSharpZero eX -> backToSharpZero e0 eX
$E copyOne eB -> backToSharpOne $E e1
1& backToD e1 -> backToD 1& e1
e@ nullifier 1B -> initDivider e@ 1E
1@ restoreCD 0% -> restoreCD 1@ 00
10 temp $1 -> beginCopying 10 $1
1& backToDFromLeft e1 -> backToDFromLeft 1& e1
1$ eraseE e1 -> eraseE 1$ eB
1& backToSharpOne 0C -> backToSharpOne 1& 0C
1X backToStart $0 -> backToStart 1X $0
0D eraseE $0 -> eraseE 0D $B
backToStart 1$ -> 1$ createCopy
0@ findZero $1 -> beginCopying 0@ $1
$E backToDFromLeft 1% -> backToDFromLeft $E 1%
$B temp e1 -> beginCopying $B e1
$X eraseC $C -> backToStart $X $X
@C backToSharpOne $X -> backToSharpOne @C $X
eE backToStart e1 -> backToStart eE e1
1B backToSharpZero 1D -> backToSharpZero 1B 1D
1% findBlank $1 -> temp 1% $1
$% backToSharpZero @D -> backToSharpZero $% @D
1X backToDFromLeft @% -> backToDFromLeft 1X @%
0% searchZero @1 -> restoreCD 0% @1
$0 searchOne @0 -> restoreCD $0 @0
@% checkCD $0 -> checkCD @% $0
e% dec $1 -> gotoMark e% $0
@@ gotoDecC 00 -> gotoDecC @@ 00
0X backToSharpOne 01 -> backToSharpOne 0X 01
copyZero eC -> eC copyZero
restoreCD $C -> $C backToDAfterInc
0X prepEraseC 0D -> eraseC 0X 0D
e0 restoreCD 00 -> restoreCD e0 00
eE backToD @0 -> backToD eE @0
@% prepEraseC 01 -> prepEraseC @% 01
$0 gotoLastE e@ -> dec $0 e@
$% backToDFromLeft 0D -> searchNextBit $% 0D
$X backToSharpZero e0 -> backToSharpZero $X e0
@1 backToDFromRight e1 -> backToDFromRight @1 e1
0C prepEraseC @0 -> prepEraseC 0C @0
eX checkEForZero $B -> stop eX $B
$@ checkEForZero 0B -> stop $@ 0B
eX findBlank 11 -> temp eX 11
01 backToSharpOne eX -> backToSharpOne 01 eX
01 copyOne @B -> backToSharpOne 01 @1
e# backToDFromLeft e1 -> backToDFromLeft e# e1
10 searchNextBit 00 -> searchNextBit 10 00
e& temp 11 -> beginCopying e& 11
@X restoreCD @D -> restoreCD @X @D
e# backToStart $1 -> backToStart e# $1
moveToE @E -> @E checkEForZero
e1 backToFirstC @0 -> backToFirstC e1 @0
@$ checkEForZero eB -> stop @$ eB
0D gotoMark 11 -> gotoMark 0D 11
e0 replaceWithBlanks e@ -> backToDFromRight e0 e@
1$ dec @0 -> dec 1$ @1
$% checkEForZero @B -> stop $% @B
e0 backToDFromRight 01 -> backToDFromRight e0 01
10 backToSharpOne @E -> backToSharpOne 10 @E
1X backToDFromLeft 1& -> backToDFromLeft 1X 1&
@C findBlank 11 -> temp @C 11
@% backToSharpZero 11 -> backToSharpZero @% 11
start 11 -> 11 findZero
@& backToStart $1 -> backToStart @& $1
$$ backToDFromRight $0 -> backToDFromRight $$ $0
01 restoreCD @0 -> restoreCD 01 @0
1C backToFirstC $1 -> backToFirstC 1C $1
$B eraseE 00 -> eraseE $B 0B
e1 backToFirstC $0 -> backToFirstC e1 $0
1# backToSharpZero eC -> backToSharpZero 1# eC
1B gotoDecC @D -> dec 1B @D
0C backToDFromRight @1 -> backToDFromRight 0C @1
eE findBlank e0 -> temp eE e0
e# gotoMark @0 -> gotoMark e# @0
1@ temp 00 -> beginCopying 1@ 00
1@ copyZero eB -> backToSharpZero 1@ e0
e# beginCopying @B -> backToStart e# @C
@X gotoMark @1 -> gotoMark @X @1
1X replaceWithBlanks e@ -> backToDFromRight 1X e@
1& prepEraseC 1D -> eraseC 1& 1D
0X nullifier 1B -> initDivider 0X 1E
@D incD 00 -> checkCD @D 01
0% eraseC 11 -> eraseC 0% 1B
@# gotoLastE @@ -> dec @# @@
$0 temp 10 -> beginCopying $0 10
@E restoreCD 00 -> restoreCD @E 00
@X backToD 01 -> backToD @X 01
1@ incD $1 -> incD 1@ $0
0C checkCD 0D -> checkCD 0C 0D
e0 backToDFromLeft 00 -> backToDFromLeft e0 00
eC backToDFromLeft $% -> backToDFromLeft eC $%
0@ findBlank 1B -> FINAL 0@ 1B
@D backToDFromRight eE -> backToDFromRight @D eE
FINAL 0B -> FINAL 0 FINAL
1# temp @0 -> beginCopying 1# @0
eB eraseC 00 -> eraseC eB 0B
1& backToSharpOne eE -> backToSharpOne 1& eE
0% findBlank 10 -> temp 0% 10
0E eraseE eE -> prepEraseC 0E eE
$# findBlank @B -> FINAL $# @B
@# searchNextBit e0 -> searchNextBit @# e0
eD backToDFromLeft 1% -> backToDFromLeft eD 1%
1X backToStart 11 -> backToStart 1X 11
e0 backToStart $0 -> backToStart e0 $0
e@ backToSharpOne 1D -> backToSharpOne e@ 1D
@0 backToSharpZero 10 -> backToSharpZero @0 10
@$ eraseC @C -> backToStart @$ @X
@C massErase 0@ -> eraseE @C 0@
$1 searchNextBit 01 -> searchNextBit $1 01
1X beginCopying 0B -> backToStart 1X 0C
1X eraseC @1 -> eraseC 1X @B
0& backToDFromRight 1B -> backToDFromRight 0& 1B
$% initDivider @0 -> initDividerByTwo $% @0
$C incD 01 -> incD $C 00
@0 gotoDecC 00 -> gotoDecC @0 00
1& searchNextBit 01 -> searchNextBit 1& 01
1@ searchNextBit $1 -> searchNextBit 1@ $1
@% eraseE e1 -> eraseE @% eB
$$ backToSharpZero eE -> backToSharpZero $$ eE
@C gotoMark 10 -> gotoMark @C 10
$$ forwardToLastD $E -> incD $$ $E
0B initDivider $0 -> initDividerByTwo 0B $0
e@ backToDFromRight eE -> backToDFromRight e@ eE
10 eraseC $0 -> eraseC 10 $B
@C searchNextBit e1 -> searchNextBit @C e1
eD backToSharpOne @0 -> backToSharpOne eD @0
0& backToStart 01 -> backToStart 0& 01
11 incD 10 -> checkCD 11 11
e% findBlank eB -> FINAL e% eB
$C backToStart 11 -> backToStart $C 11
e& backToDFromRight $E -> backToDFromRight e& $E
$$ backToStart 10 -> backToStart $$ 10
@$ backToSharpZero $C -> backToSharpZero @$ $C
0$ eraseC $1 -> eraseC 0$ $B
1X massErase @@ -> eraseE 1X @@
@X backToSharpOne @X -> backToSharpOne @X @X
$X backToDFromLeft $% -> backToDFromLeft $X $%
eE goToPlaceForDivider @B -> backToFirstC eE @D
eB backToD $1 -> backToD eB $1
checkZeroD 11 -> 11 checkZeroD
@C beginCopying eB -> backToStart @C eC
eD checkCD eD -> checkCD eD eD
$0 backToSharpZero @0 -> backToSharpZero $0 @0
0# searchOne $0 -> restoreCD 0# $0
@B backToSharpZero 0D -> backToSharpZero @B 0D
0% backToDFromRight 10 -> backToDFromRight 0% 10
1E backToDFromLeft 01 -> backToDFromLeft 1E 01
e# gotoMark @E -> gotoDecC e# @E
1# findZero $1 -> beginCopying 1# $1
1B prepEraseC 00 -> prepEraseC 1B 00
$# massErase 1@ -> eraseE $# 1@
@X FINAL -> FINAL @ FINAL
@C copyOne eB -> backToSharpOne @C e1
11 backToDFromLeft e& -> backToDFromLeft 11 e&
1@ backToSharpOne 00 -> backToSharpOne 1@ 00
@E eraseE @1 -> eraseE @E @B
copyOne @D -> @D copyOne
1B backToStart $0 -> backToStart 1B $0
@% backToSharpOne @0 -> backToSharpOne @% @0
11 backToSharpZero $X -> backToSharpZero 11 $X
0E incD e1 -> incD 0E e0
@% restoreCD 1% -> restoreCD @% 10
$@ prepEraseC @D -> eraseC $@ @D
$E copyOne 0B -> backToSharpOne $E 01
$B replaceWithBlanks 1@ -> backToDFromRight $B 1@
$B replaceWithBlanks $@ -> backToDFromRight $B $@
e0 restoreCD 1% -> restoreCD e0 10
1C backToSharpOne @0 -> backToSharpOne 1C @0
1C findBlank $B -> FINAL 1C $B
1C prepEraseC $1 -> prepEraseC 1C $1
0X backToSharpOne $X -> backToSharpOne 0X $X
copyOne 01 -> 01 copyOne
eB massErase $@ -> eraseE eB $@
$# restoreCD $1 -> restoreCD $# $1
e$ backToSharpZero 1C -> backToSharpZero e$ 1C
$0 findBlank 1B -> FINAL $0 1B
$@ searchZero 01 -> restoreCD $@ 01
0@ checkEForZero $B -> stop 0@ $B
0$ prepEraseC @D -> eraseC 0$ @D
eX beginCopying 1B -> backToStart eX 1C
1# backToSharpOne $D -> backToSharpOne 1# $D
e# backToSharpZero 1X -> backToSharpZero e# 1X
checkCD $C -> $C eqCD
0C checkCD $1 -> checkCD 0C $1
@B restoreCD e% -> restoreCD @B e0
0D prepEraseC 00 -> prepEraseC 0D 00
$0 restoreCD 1% -> restoreCD $0 10
@C gotoDecC $1 -> gotoDecC @C $1
1% eraseC @1 -> eraseC 1% @B
eX findZero 01 -> beginCopying eX 01
0% backToSharpZero 1X -> backToSharpZero 0% 1X
eD searchNextBit 10 -> searchNextBit eD 10
$E backToDFromLeft 01 -> backToDFromLeft $E 01
$1 backToSharpOne 1D -> backToSharpOne $1 1D
FINAL @D -> FINAL @ FINAL
checkCD 0C -> 0C eqCD
$0 backToDFromRight $E -> backToDFromRight $0 $E
11 copyZero 1B -> backToSharpZero 11 10
$B backToStart e0 -> backToStart $B e0
1& backToSharpOne @C -> backToSharpOne 1& @C
@@ restoreCD $1 -> restoreCD @@ $1
0C findBlank 0B -> FINAL 0C 0B
1# backToSharpOne $C -> backToSharpOne 1# $C
eE temp e0 -> beginCopying eE e0
e% backToD @0 -> backToD e% @0
@% backToDFromLeft 10 -> backToDFromLeft @% 10
$& searchOne 01 -> backToDFromLeft $& 0&
e# goToPlaceForDivider eB -> backToFirstC e# eD
$D eraseE @1 -> eraseE $D @B
01 prepEraseC 10 -> prepEraseC 01 10
$D gotoDecC 00 -> gotoDecC $D 00
$0 initDivider @0 -> initDividerByTwo $0 @0
0D backToSharpOne 0D -> backToSharpOne 0D 0D
1& backToSharpZero eD -> backToSharpZero 1& eD
$1 backToStart 11 -> backToStart $1 11
$D findBlank @1 -> temp $D @1
01 temp $1 -> beginCopying 01 $1
@X prepEraseC @1 -> prepEraseC @X @1
$0 restoreCD 01 -> restoreCD $0 01
1E gotoMark 11 -> gotoMark 1E 11
@D restoreCD $D -> restoreCD @D $D
e& backToSharpOne 0E -> backToSharpOne e& 0E
e1 replaceWithBlanks $@ -> backToDFromRight e1 $@
$X gotoDecC 10 -> gotoDecC $X 10
eC forwardToLastD @E -> incD eC @E
eB gotoMark eE -> gotoDecC eB eE
$@ gotoDecC 10 -> gotoDecC $@ 10
@@ backToSharpOne $0 -> backToSharpOne @@ $0
FINAL $E -> FINAL $ FINAL
0@ restoreCD $D -> restoreCD 0@ $D
e0 backToDFromRight 0B -> backToDFromRight e0 0B
eX eraseE 0E -> prepEraseC eX 0E
$1 findBlank @1 -> temp $1 @1
eC searchZero e0 -> backToDFromLeft eC e%
@C prepEraseC 0D -> eraseC @C 0D
e# restoreCD 01 -> restoreCD e# 01
$E backToDFromLeft e% -> backToDFromLeft $E e%
11 eraseE e0 -> eraseE 11 eB
eE checkCD 10 -> checkCD eE 10
e# gotoDecC $D -> dec e# $D
0B gotoMark e0 -> gotoMark 0B e0
@& checkCD e0 -> checkCD @& e0
1E gotoMark $E -> gotoDecC 1E $E
eX copyZero @B -> backToSharpZero eX @0
eC goToPlaceForDivider 1B -> backToFirstC eC 1D
$B backToSharpZero 1C -> backToSharpZero $B 1C
0B incD 01 -> incD 0B 00
$@ searchOne 01 -> backToDFromLeft $@ 0&
$1 eraseE eE -> prepEraseC $1 eE
@X searchZero e1 -> restoreCD @X e1
@% massErase $@ -> eraseE @% $@
01 dec 01 -> gotoMark 01 00
e@ backToSharpOne $E -> backToSharpOne e@ $E
0X restoreCD 0D -> restoreCD 0X 0D
1E searchZero 00 -> backToDFromLeft 1E 0%
0B incD $1 -> incD 0B $0
1% eraseE $E -> prepEraseC 1% $E
e# backToDFromLeft eD -> searchNextBit e# eD
eE nullifier eB -> initDivider eE eE
@& prepEraseC 1D -> eraseC @& 1D
0% gotoMark @0 -> gotoMark 0% @0
1% restoreCD $0 -> restoreCD 1% $0
e1 backToStart @0 -> backToStart e1 @0
11 backToSharpZero eX -> backToSharpZero 11 eX
eX findBlank 0B -> FINAL eX 0B
0E backToSharpOne eE -> backToSharpOne 0E eE
eD backToDFromRight e1 -> backToDFromRight eD e1
0D checkCD 00 -> checkCD 0D 00
$$ backToDFromLeft $& -> backToDFromLeft $$ $&
00 eraseE 01 -> eraseE 00 0B
0@ searchZero $1 -> restoreCD 0@ $1
11 eraseE 11 -> eraseE 11 1B
eD restoreCD 00 -> restoreCD eD 00
e% backToSharpOne 01 -> backToSharpOne e% 01
$1 backToDFromRight 10 -> backToDFromRight $1 10
eX backToSharpOne 0C -> backToSharpOne eX 0C
1$ backToD 10 -> backToD 1$ 10
0@ eraseE 11 -> eraseE 0@ 1B
0$ backToD e1 -> backToD 0$ e1
0C backToDFromLeft 0% -> backToDFromLeft 0C 0%
11 dec e0 -> dec 11 e1
@C dec 01 -> gotoMark @C 00
$1 searchOne $1 -> backToDFromLeft $1 $&
eC prepEraseC e0 -> prepEraseC eC e0
$1 backToDFromRight 1B -> backToDFromRight $1 1B
1X backToSharpOne @E -> backToSharpOne 1X @E
0$ gotoLastE @@ -> dec 0$ @@
@$ eraseE @E -> prepEraseC @$ @E
1C backToD 01 -> backToD 1C 01
$$ nullifier eB -> initDivider $$ eE
$@ dec 11 -> gotoMark $@ 10
eD massErase $@ -> eraseE eD $@
$X backToSharpZero 10 -> backToSharpZero $X 10
11 dec @0 -> dec 11 @1
eX backToD $0 -> backToD eX $0
gotoLastE 0D -> 0D gotoLastE
$B prepEraseC @0 -> prepEraseC $B @0
@0 gotoDecC @1 -> gotoDecC @0 @1
eE temp e1 -> beginCopying eE e1
1E backToSharpZero 0C -> backToSharpZero 1E 0C
1X restoreCD 11 -> restoreCD 1X 11
11 backToSharpZero $0 -> backToSharpZero 11 $0
@X findZero 11 -> beginCopying @X 11
00 eraseE $0 -> eraseE 00 $B
@E gotoDecC $1 -> gotoDecC @E $1
01 gotoLastE 1@ -> dec 01 1@
0# restoreCD $& -> restoreCD 0# $1
1D eraseC 1C -> backToStart 1D 1X
eD gotoMark $E -> gotoDecC eD $E
$1 searchNextBit e0 -> searchNextBit $1 e0
1$ prepEraseC $1 -> prepEraseC 1$ $1
1E goToPlaceForDivider $B -> backToFirstC 1E $D
@E checkEForZero $B -> stop @E $B
0D gotoLastE e@ -> dec 0D e@
0C temp $1 -> beginCopying 0C $1
eC incD $0 -> checkCD eC $1
1X checkCD $0 -> checkCD 1X $0
$C searchZero @0 -> backToDFromLeft $C @%
0$ backToDFromRight e0 -> backToDFromRight 0$ e0
0# backToD $0 -> backToD 0# $0
@B restoreCD $1 -> restoreCD @B $1
10 backToFirstC e1 -> backToFirstC 10 e1
0D backToDFromLeft 0& -> backToDFromLeft 0D 0&
0@ backToSharpZero 1C -> backToSharpZero 0@ 1C
e# backToD e0 -> backToD e# e0
@C restoreCD $& -> restoreCD @C $1
10 checkCD 11 -> checkCD 10 11
1E gotoDecC 11 -> gotoDecC 1E 11
0D gotoMark 0E -> gotoDecC 0D 0E
$& backToSharpZero $1 -> backToSharpZero $& $1
eD backToStart e0 -> backToStart eD e0
0B dec 01 -> gotoMark 0B 00
@X copyOne @B -> backToSharpOne @X @1
0X backToDFromLeft 00 -> backToDFromLeft 0X 00
eB searchOne 01 -> backToDFromLeft eB 0&
1D backToDFromRight eE -> backToDFromRight 1D eE
@E gotoDecC $0 -> gotoDecC @E $0
1$ searchZero 01 -> restoreCD 1$ 01
1X backToSharpZero 0E -> backToSharpZero 1X 0E
0@ backToDFromRight 10 -> backToDFromRight 0@ 10
@B gotoLastE $@ -> dec @B $@
@D incD 11 -> incD @D 10
$@ copyOne @B -> backToSharpOne $@ @1
$D gotoDecC e1 -> gotoDecC $D e1
@& backToD @0 -> backToD @& @0
1$ findBlank 01 -> temp 1$ 01
0X backToStart @0 -> backToStart 0X @0
eC backToDFromRight 1B -> backToDFromRight eC 1B
$% eraseE 1E -> prepEraseC $% 1E
0@ backToDFromRight 1B -> backToDFromRight 0@ 1B
e& backToSharpZero $D -> backToSharpZero e& $D
$D checkEForZero $B -> stop $D $B
$C searchZero $0 -> backToDFromLeft $C $%
1B backToFirstC e0 -> backToFirstC 1B e0
e% backToD @1 -> backToD e% @1
$D backToDFromLeft 0& -> backToDFromLeft $D 0&
e@ backToD @1 -> backToD e@ @1
$X backToDFromLeft 11 -> backToDFromLeft $X 11
@B eraseC $1 -> eraseC @B $B
01 searchNextBit 01 -> searchNextBit 01 01
@X beginCopying eB -> backToStart @X eC
@E backToDFromRight 00 -> backToDFromRight @E 00
$& eraseE e1 -> eraseE $& eB
11 backToSharpZero 00 -> backToSharpZero 11 00
$% eraseE $1 -> eraseE $% $B
0$ restoreCD @& -> restoreCD 0$ @1
eC searchNextBit 11 -> searchNextBit eC 11
eX searchZero 01 -> restoreCD eX 01
@E backToDFromRight 01 -> backToDFromRight @E 01
$E restoreCD $& -> restoreCD $E $1
eX initDividerByTwo @0 -> backToD eX @1
1@ findBlank e1 -> temp 1@ e1
$B eraseE 0E -> prepEraseC $B 0E
$D goToPlaceForDivider 0B -> backToFirstC $D 0D
$B backToSharpZero 0D -> backToSharpZero $B 0D
$1 backToFirstC $0 -> backToFirstC $1 $0
10 restoreCD 1% -> restoreCD 10 10
$1 prepEraseC @D -> eraseC $1 @D
1@ backToDFromLeft 1D -> searchNextBit 1@ 1D
$1 dec 11 -> gotoMark $1 10
$E backToDFromLeft 1D -> searchNextBit $E 1D
eE eraseC $C -> backToStart eE $X
@X checkCD $0 -> checkCD @X $0
0B eraseE @0 -> eraseE 0B @B
$$ dec e0 -> dec $$ e1
e% backToDFromLeft @& -> backToDFromLeft e% @&
e0 gotoLastE e@ -> dec e0 e@
@$ nullifier 1B -> initDivider @$ 1E
eX backToSharpOne eX -> backToSharpOne eX eX
1B searchOne 01 -> backToDFromLeft 1B 0&
1# goToPlaceForDivider eB -> backToFirstC 1# eD
10 findBlank 10 -> temp 10 10
0# backToDFromLeft @0 -> backToDFromLeft 0# @0
1B initDivider e0 -> initDividerByTwo 1B e0
$B backToSharpZero $X -> backToSharpZero $B $X
eE backToSharpOne e0 -> backToSharpOne eE e0
0$ gotoDecC eD -> dec 0$ eD
$% checkCD 11 -> checkCD $% 11
e@ backToDFromLeft $0 -> backToDFromLeft e@ $0
0& backToSharpZero e0 -> backToSharpZero 0& e0
@$ restoreCD e% -> restoreCD @$ e0
$@ backToSharpOne eX -> backToSharpOne $@ eX
@E backToDFromLeft @& -> backToDFromLeft @E @&
e@ searchZero @1 -> restoreCD e@ @1
@X searchZero @1 -> restoreCD @X @1
e$ nullifier @B -> initDivider e$ @E
0& backToDFromRight 11 -> backToDFromRight 0& 11
1& backToFirstC $0 -> backToFirstC 1& $0
beginCopying $1 -> $1 beginCopying
$% gotoDecC @0 -> gotoDecC $% @0
@& backToSharpZero 1X -> backToSharpZero @& 1X
1# eraseC 01 -> eraseC 1# 0B
11 restoreCD 0% -> restoreCD 11 00
0@ checkEForZero eB -> stop 0@ eB
e@ restoreCD e% -> restoreCD e@ e0
0& prepEraseC @0 -> prepEraseC 0& @0
10 gotoDecC 10 -> gotoDecC 10 10
eX backToSharpOne @D -> backToSharpOne eX @D
@0 gotoLastE 0@ -> dec @0 0@
eC restoreCD 11 -> restoreCD eC 11
e% gotoDecC 11 -> gotoDecC e% 11
$X restoreCD 11 -> restoreCD $X 11
$E searchNextBit @0 -> searchNextBit $E @0
@# dec $1 -> gotoMark @# $0
@@ backToSharpOne 1D -> backToSharpOne @@ 1D
@& temp @1 -> beginCopying @& @1
1% gotoMark $0 -> gotoMark 1% $0
01 eraseC $C -> backToStart 01 $X
$X eraseE eE -> prepEraseC $X eE
e$ searchNextBit 00 -> searchNextBit e$ 00
0B backToFirstC 11 -> backToFirstC 0B 11
@E initDivider 00 -> initDividerByTwo @E 00
@@ goToPlaceForDivider 1B -> backToFirstC @@ 1D
@% copyOne 1B -> backToSharpOne @% 11
0@ findBlank 10 -> temp 0@ 10
1& searchNextBit 00 -> searchNextBit 1& 00
e& backToSharpZero $X -> backToSharpZero e& $X
1X copyOne 0B -> backToSharpOne 1X 01
$$ backToSharpOne @D -> backToSharpOne $$ @D
1B eraseE 0E -> prepEraseC 1B 0E
$X incD 01 -> incD $X 00
0$ restoreCD $% -> restoreCD 0$ $0
$C checkCD 11 -> checkCD $C 11
@C gotoMark @0 -> gotoMark @C @0
eD forwardToLastD @E -> incD eD @E
$@ replaceWithBlanks 0@ -> backToDFromRight $@ 0@
1& nullifier $B -> initDivider 1& $E
@X nullifier @B -> initDivider @X @E
@X searchZero 00 -> backToDFromLeft @X 0%
e# dec 11 -> gotoMark e# 10
e$ gotoDecC e1 -> gotoDecC e$ e1
1B gotoDecC 0D -> dec 1B 0D
0E backToSharpOne 10 -> backToSharpOne 0E 10
eD prepEraseC 1D -> eraseC eD 1D
1C massErase e@ -> eraseE 1C e@
e@ prepEraseC e1 -> prepEraseC e@ e1
@& searchZero @0 -> backToDFromLeft @& @%
@1 backToSharpZero 1E -> backToSharpZero @1 1E
e@ findBlank 1B -> FINAL e@ 1B
e0 backToSharpZero 0E -> backToSharpZero e0 0E
@$ searchZero $1 -> restoreCD @$ $1
@# backToDFromLeft e& -> backToDFromLeft @# e&
FINAL 1B -> FINAL 1 FINAL
eC backToDFromRight 11 -> backToDFromRight eC 11
1C gotoDecC 00 -> gotoDecC 1C 00
1B searchZero @0 -> backToDFromLeft 1B @%
$B restoreCD $D -> restoreCD $B $D
@$ restoreCD $0 -> restoreCD @$ $0
$& prepEraseC @1 -> prepEraseC $& @1
0X goToPlaceForDivider 0B -> backToFirstC 0X 0D
1# gotoDecC @0 -> gotoDecC 1# @0
eE backToSharpZero 0C -> backToSharpZero eE 0C
$1 searchNextBit 00 -> searchNextBit $1 00
0X copyOne @B -> backToSharpOne 0X @1
1D gotoMark $E -> gotoDecC 1D $E
0% backToStart e0 -> backToStart 0% e0
e@ searchOne e1 -> backToDFromLeft e@ e&
$0 temp $1 -> beginCopying $0 $1
1& backToDFromLeft eD -> searchNextBit 1& eD
1E findBlank 0B -> FINAL 1E 0B
$% gotoDecC 11 -> gotoDecC $% 11
$# beginCopying 1B -> backToStart $# 1C
eC backToFirstC @1 -> backToFirstC eC @1
$# gotoDecC 00 -> gotoDecC $# 00
@# findBlank 00 -> temp @# 00
$E incD 00 -> checkCD $E 01
@$ backToSharpOne $1 -> backToSharpOne @$ $1
@E checkEForZero eB -> stop @E eB
1@ dec 01 -> gotoMark 1@ 00
0D initDividerByTwo $0 -> backToD 0D $1
e& findBlank $B -> FINAL e& $B
e@ findBlank $B -> FINAL e@ $B
1$ copyOne eB -> backToSharpOne 1$ e1
eC gotoMark 01 -> gotoMark eC 01
$0 backToSharpOne eD -> backToSharpOne $0 eD
@& prepEraseC 00 -> prepEraseC @& 00
eB dec 11 -> gotoMark eB 10
0C restoreCD @& -> restoreCD 0C @1
@E backToSharpZero eD -> backToSharpZero @E eD
@& prepEraseC 01 -> prepEraseC @& 01
e@ backToD @0 -> backToD e@ @0
e0 gotoMark e1 -> gotoMark e0 e1
@B backToSharpOne $X -> backToSharpOne @B $X
e$ backToSharpOne 01 -> backToSharpOne e$ 01
1E findBlank $1 -> temp 1E $1
1$ restoreCD 11 -> restoreCD 1$ 11
@$ dec e0 -> dec @$ e1
$% findBlank 0B -> FINAL $% 0B
1% gotoMark eE -> gotoDecC 1% eE
eE dec 01 -> gotoMark eE 00
0$ backToSharpZero $0 -> backToSharpZero 0$ $0
$0 checkCD e0 -> checkCD $0 e0
eB backToFirstC 01 -> backToFirstC eB 01
$% backToSharpOne 11 -> backToSharpOne $% 11
e@ backToSharpZero eX -> backToSharpZero e@ eX
1@ searchNextBit @1 -> searchNextBit 1@ @1
1# copyOne 1B -> backToSharpOne 1# 11
@X backToSharpZero 1X -> backToSharpZero @X 1X
0C backToSharpZero @D -> backToSharpZero 0C @D
eD eraseE 00 -> eraseE eD 0B
@1 backToDFromLeft e& -> backToDFromLeft @1 e&
1# replaceWithBlanks $@ -> backToDFromRight 1# $@
$@ backToDFromLeft e% -> backToDFromLeft $@ e%
0% searchZero e0 -> backToDFromLeft 0% e%
$0 backToDFromRight 01 -> backToDFromRight $0 01
0C searchZero 11 -> restoreCD 0C 11
0@ searchOne $1 -> backToDFromLeft 0@ $&
1& gotoDecC 00 -> gotoDecC 1& 00
eX restoreCD $& -> restoreCD eX $1
@E prepEraseC $D -> eraseC @E $D
eB backToSharpZero eE -> backToSharpZero eB eE
eB backToSharpZero 1X -> backToSharpZero eB 1X
@D prepEraseC 00 -> prepEraseC @D 00
@1 massErase 1@ -> eraseE @1 1@
$D temp e1 -> beginCopying $D e1
1% findBlank @1 -> temp 1% @1
$0 backToDFromRight 10 -> backToDFromRight $0 10
eE incD 10 -> checkCD eE 11
0$ dec @1 -> gotoMark 0$ @0
e% prepEraseC $1 -> prepEraseC e% $1
$@ searchOne @1 -> backToDFromLeft $@ @&
10 incD e0 -> checkCD 10 e1
$C restoreCD e& -> restoreCD $C e1
0# checkEForZero $B -> stop 0# $B
1C backToSharpOne 1C -> backToSharpOne 1C 1C
eD eraseE 0E -> prepEraseC eD 0E
$1 backToSharpOne $X -> backToSharpOne $1 $X
1$ dec 01 -> gotoMark 1$ 00
eX beginCopying 0B -> backToStart eX 0C
$D dec 11 -> gotoMark $D 10
eC backToSharpOne $D -> backToSharpOne eC $D
1B findZero $1 -> beginCopying 1B $1
$$ searchNextBit $1 -> searchNextBit $$ $1
0% backToDFromRight 11 -> backToDFromRight 0% 11
e& searchNextBit $1 -> searchNextBit e& $1
$0 backToSharpOne e0 -> backToSharpOne $0 e0
$% backToFirstC 11 -> backToFirstC $% 11
$D findZero e1 -> beginCopying $D e1
eD backToDFromLeft 00 -> backToDFromLeft eD 00
@$ eraseE @0 -> eraseE @$ @B
$E backToSharpZero $E -> backToSharpZero $E $E
1# findBlank @B -> FINAL 1# @B
1# checkEForZero @B -> stop 1# @B
eD incD 00 -> checkCD eD 01
0% backToDFromLeft e0 -> backToDFromLeft 0% e0
FINAL e0 -> FINAL e FINAL
eX searchZero @1 -> restoreCD eX @1
10 prepEraseC $0 -> prepEraseC 10 $0
eD restoreCD $1 -> restoreCD eD $1
$E gotoDecC 11 -> gotoDecC $E 11
1@ backToDFromRight eE -> backToDFromRight 1@ eE
0& searchOne @1 -> backToDFromLeft 0& @&
$& backToFirstC 10 -> backToFirstC $& 10
$# gotoDecC 10 -> gotoDecC $# 10
1& copyOne 0B -> backToSharpOne 1& 01
0& backToDFromLeft $1 -> backToDFromLeft 0& $1
0$ backToDFromRight eB -> backToDFromRight 0$ eB
0# checkCD 01 -> checkCD 0# 01
@% gotoDecC 0D -> dec @% 0D
$# backToSharpOne 11 -> backToSharpOne $# 11
e& backToD 01 -> backToD e& 01
0B incD e0 -> checkCD 0B e1
e0 backToFirstC @1 -> backToFirstC e0 @1
@0 replaceWithBlanks e@ -> backToDFromRight @0 e@
1# gotoLastE 1@ -> dec 1# 1@
@@ incD e1 -> incD @@ e0
@@ searchOne $1 -> backToDFromLeft @@ $&
eD searchOne 11 -> backToDFromLeft eD 1&
0X backToSharpOne 0D -> backToSharpOne 0X 0D
@$ eraseC $0 -> eraseC @$ $B
eX gotoDecC 01 -> gotoDecC eX 01
1B prepEraseC $D -> eraseC 1B $D
0$ checkCD e1 -> checkCD 0$ e1
1C backToDFromLeft e& -> backToDFromLeft 1C e&
1D gotoMark eE -> gotoDecC 1D eE
0& backToFirstC $0 -> backToFirstC 0& $0
0C searchNextBit @0 -> searchNextBit 0C @0
$& eraseE @E -> prepEraseC $& @E
eE restoreCD @1 -> restoreCD eE @1
$@ massErase 1@ -> eraseE $@ 1@
e$ checkCD 10 -> checkCD e$ 10
0C massErase @@ -> eraseE 0C @@
0D backToD 00 -> backToD 0D 00
e@ goToPlaceForDivider 1B -> backToFirstC e@ 1D
1# searchZero 11 -> restoreCD 1# 11
@D backToFirstC 11 -> backToFirstC @D 11
@0 initDivider 00 -> initDividerByTwo @0 00
1@ replaceWithBlanks 1@ -> backToDFromRight 1@ 1@
@# initDivider 10 -> initDividerByTwo @# 10
1D checkCD $0 -> checkCD 1D $0
11 replaceWithBlanks 0@ -> backToDFromRight 11 0@
@% eraseC $0 -> eraseC @% $B
e0 searchZero @1 -> restoreCD e0 @1
eB restoreCD $1 -> restoreCD eB $1
$# restoreCD eD -> restoreCD $# eD
@1 backToSharpOne 0X -> backToSharpOne @1 0X
e@ gotoMark 10 -> gotoMark e@ 10
e# findZero 01 -> beginCopying e# 01
1D gotoMark 01 -> gotoMark 1D 01
1D gotoDecC $0 -> gotoDecC 1D $0
@% searchNextBit @0 -> searchNextBit @% @0
@B incD @0 -> checkCD @B @1
@E backToD @1 -> backToD @E @1
$B nullifier @B -> initDivider $B @E
e1 checkCD 10 -> checkCD e1 10
@0 restoreCD e1 -> restoreCD @0 e1
1$ backToSharpOne 0E -> backToSharpOne 1$ 0E
@% initDividerByTwo @0 -> backToD @% @1
0& eraseC 00 -> eraseC 0& 0B
$% checkCD 01 -> checkCD $% 01
e# copyOne 1B -> backToSharpOne e# 11
$@ incD 11 -> incD $@ 10
eX gotoMark 11 -> gotoMark eX 11
@E eraseE $0 -> eraseE @E $B
@% initDivider e0 -> initDividerByTwo @% e0
$@ eraseC 10 -> eraseC $@ 1B
1% restoreCD $& -> restoreCD 1% $1
@D gotoLastE 1@ -> dec @D 1@
0@ restoreCD @& -> restoreCD 0@ @1
@# backToSharpZero eC -> backToSharpZero @# eC
$$ backToDFromLeft @D -> searchNextBit $$ @D
0& dec @0 -> dec 0& @1
1@ backToStart $1 -> backToStart 1@ $1
1& gotoMark $0 -> gotoMark 1& $0
1# restoreCD 1D -> restoreCD 1# 1D
1B checkCD 01 -> checkCD 1B 01
1B gotoMark @1 -> gotoMark 1B @1
e0 backToSharpOne 1C -> backToSharpOne e0 1C
@D restoreCD 10 -> restoreCD @D 10
e$ checkEForZero 1B -> stop e$ 1B
0@ forwardToLastD $E -> incD 0@ $E
1X searchZero $0 -> backToDFromLeft 1X $%
@@ massErase 0@ -> eraseE @@ 0@
0# backToSharpOne e1 -> backToSharpOne 0# e1
11 backToFirstC 11 -> backToFirstC 11 11
e0 backToD @1 -> backToD e0 @1
$0 checkEForZero $B -> stop $0 $B
@$ backToSharpZero e1 -> backToSharpZero @$ e1
$@ incD @1 -> incD $@ @0
11 backToDFromLeft @1 -> backToDFromLeft 11 @1
e& eraseE 01 -> eraseE e& 0B
e0 backToSharpZero @0 -> backToSharpZero e0 @0
1B prepEraseC @0 -> prepEraseC 1B @0
$$ goToPlaceForDivider $B -> backToFirstC $$ $D
@$ massErase e@ -> eraseE @$ e@
1X checkCD e0 -> checkCD 1X e0
e$ findBlank @B -> FINAL e$ @B
1@ incD $0 -> checkCD 1@ $1
1$ backToSharpOne @C -> backToSharpOne 1$ @C
01 findZero $1 -> beginCopying 01 $1
0& backToDFromRight eE -> backToDFromRight 0& eE
$# backToD @1 -> backToD $# @1
1& findBlank e1 -> temp 1& e1
$C backToSharpOne 1X -> backToSharpOne $C 1X
@0 eraseC eC -> backToStart @0 eX
e# gotoMark 1E -> gotoDecC e# 1E
@1 backToSharpOne 0D -> backToSharpOne @1 0D
11 backToSharpOne e1 -> backToSharpOne 11 e1
$1 gotoDecC $1 -> gotoDecC $1 $1
10 dec 10 -> dec 10 11
11 restoreCD $% -> restoreCD 11 $0
1$ gotoLastE 0@ -> dec 1$ 0@
e# backToStart @0 -> backToStart e# @0
1% backToDFromRight 01 -> backToDFromRight 1% 01
$0 backToDFromRight $0 -> backToDFromRight $0 $0
e@ backToDFromRight $B -> backToDFromRight e@ $B
@@ prepEraseC 1D -> eraseC @@ 1D
$C findBlank $B -> FINAL $C $B
0D findBlank e0 -> temp 0D e0
e& backToFirstC @1 -> backToFirstC e& @1
eC checkEForZero $B -> stop eC $B
@@ forwardToLastD eE -> incD @@ eE
eX checkCD 11 -> checkCD eX 11
e# eraseC 10 -> eraseC e# 1B
@D incD $1 -> incD @D $0
incD 1D -> 1D FINAL
@E backToD $0 -> backToD @E $0
eB backToDFromLeft @0 -> backToDFromLeft eB @0
@C searchNextBit e0 -> searchNextBit @C e0
0% replaceWithBlanks 0@ -> backToDFromRight 0% 0@
1@ prepEraseC @D -> eraseC 1@ @D
0C eraseE 0E -> prepEraseC 0C 0E
1# backToDFromLeft 01 -> backToDFromLeft 1# 01
11 incD 00 -> checkCD 11 01
0& restoreCD 1% -> restoreCD 0& 10
0# temp @1 -> beginCopying 0# @1
$1 findZero 11 -> beginCopying $1 11
@E massErase @@ -> eraseE @E @@
eD backToSharpZero 1E -> backToSharpZero eD 1E
$% backToSharpZero $1 -> backToSharpZero $% $1
$1 searchZero 10 -> backToDFromLeft $1 1%
0& prepEraseC $1 -> prepEraseC 0& $1
e@ replaceWithBlanks @@ -> backToDFromRight e@ @@
1E backToSharpOne 1C -> backToSharpOne 1E 1C
0X restoreCD @1 -> restoreCD 0X @1
$@ backToDFromRight eE -> backToDFromRight $@ eE
e% eraseE 01 -> eraseE e% 0B
$E backToSharpOne 0D -> backToSharpOne $E 0D
e@ backToStart 00 -> backToStart e@ 00
0& backToDFromLeft @% -> backToDFromLeft 0& @%
e0 backToFirstC $1 -> backToFirstC e0 $1
$D checkCD $1 -> checkCD $D $1
$1 initDivider e0 -> initDividerByTwo $1 e0
@@ backToDFromRight @B -> backToDFromRight @@ @B
copyZero @0 -> @0 copyZero
11 replaceWithBlanks $@ -> backToDFromRight 11 $@
1# gotoMark 11 -> gotoMark 1# 11
@% findZero 11 -> beginCopying @% 11
0% searchZero 00 -> backToDFromLeft 0% 0%
@0 gotoMark 11 -> gotoMark @0 11
1E gotoMark e1 -> gotoMark 1E e1
11 backToDFromLeft e0 -> backToDFromLeft 11 e0
0D restoreCD 11 -> restoreCD 0D 11
e# gotoDecC @D -> dec e# @D
@@ gotoLastE e@ -> dec @@ e@
@% backToSharpZero $X -> backToSharpZero @% $X
$D findBlank 10 -> temp $D 10
e$ checkCD $D -> checkCD e$ $D
0B backToD 01 -> backToD 0B 01
1% eraseE 00 -> eraseE 1% 0B
@D backToDFromLeft $D -> searchNextBit @D $D
1B searchNextBit e1 -> searchNextBit 1B e1
e0 eraseE 11 -> eraseE e0 1B
$1 searchOne 10 -> restoreCD $1 10
$X restoreCD 1D -> restoreCD $X 1D
10 backToD 11 -> backToD 10 11
e& backToSharpZero 11 -> backToSharpZero e& 11
0D backToFirstC $0 -> backToFirstC 0D $0
1% backToSharpOne $X -> backToSharpOne 1% $X
e% backToFirstC e1 -> backToFirstC e% e1
@$ prepEraseC @0 -> prepEraseC @$ @0
1C backToSharpOne 0E -> backToSharpOne 1C 0E
e@ restoreCD 1& -> restoreCD e@ 11
0E backToSharpOne 01 -> backToSharpOne 0E 01
1$ checkCD @D -> checkCD 1$ @D
1@ prepEraseC 1D -> eraseC 1@ 1D
e& searchZero 00 -> backToDFromLeft e& 0%
11 findZero @1 -> beginCopying 11 @1
$% backToDFromLeft 1& -> backToDFromLeft $% 1&
$E checkCD 10 -> checkCD $E 10
0@ restoreCD e0 -> restoreCD 0@ e0
10 backToDFromLeft 01 -> backToDFromLeft 10 01
0C backToSharpOne eX -> backToSharpOne 0C eX
e& gotoMark eE -> gotoDecC e& eE
1@ backToSharpOne @D -> backToSharpOne 1@ @D
1E checkCD 00 -> checkCD 1E 00
e& backToDFromLeft 0% -> backToDFromLeft e& 0%
e@ eraseC eC -> backToStart e@ eX
@D dec 11 -> gotoMark @D 10
$E searchZero e0 -> backToDFromLeft $E e%
e& checkCD @1 -> checkCD e& @1
$& replaceWithBlanks $@ -> backToDFromRight $& $@
@C incD 10 -> checkCD @C 11
1% eraseE 01 -> eraseE 1% 0B
$1 temp 10 -> beginCopying $1 10
$C backToSharpOne 10 -> backToSharpOne $C 10
1E prepEraseC 11 -> prepEraseC 1E 11
eB replaceWithBlanks @@ -> backToDFromRight eB @@
eX backToDFromLeft e& -> backToDFromLeft eX e&
00 backToDFromLeft 1& -> backToDFromLeft 00 1&
$1 restoreCD 01 -> restoreCD $1 01
$D backToDFromLeft @1 -> backToDFromLeft $D @1
0E backToD 00 -> backToD 0E 00
@0 nullifier eB -> initDivider @0 eE
eE checkEForZero eB -> stop eE eB
@E gotoDecC 01 -> gotoDecC @E 01
@0 restoreCD @1 -> restoreCD @0 @1
$D backToDFromLeft e0 -> backToDFromLeft $D e0
$% massErase 0@ -> eraseE $% 0@
1@ backToDFromLeft e0 -> backToDFromLeft 1@ e0
@$ gotoLastE $@ -> dec @$ $@
eE backToSharpOne 1E -> backToSharpOne eE 1E
eC prepEraseC @0 -> prepEraseC eC @0
$X searchOne 10 -> restoreCD $X 10
e@ searchNextBit $0 -> searchNextBit e@ $0
1B temp @1 -> beginCopying 1B @1
@# backToDFromLeft 1D -> searchNextBit @# 1D
@$ backToSharpOne 11 -> backToSharpOne @$ 11
eC backToStart @0 -> backToStart eC @0
$$ gotoDecC @1 -> gotoDecC $$ @1
11 findBlank @0 -> temp 11 @0
10 restoreCD @% -> restoreCD 10 @0
@B backToFirstC 00 -> backToFirstC @B 00
1% backToDFromLeft 1D -> searchNextBit 1% 1D
0X checkCD 11 -> checkCD 0X 11
@@ backToSharpZero 01 -> backToSharpZero @@ 01
0# eraseC 01 -> eraseC 0# 0B
e& gotoMark 00 -> gotoMark e& 00
$% backToSharpOne @0 -> backToSharpOne $% @0
$$ checkCD 11 -> checkCD $$ 11
eB restoreCD @D -> restoreCD eB @D
@X restoreCD 1& -> restoreCD @X 11
0$ checkCD e0 -> checkCD 0$ e0
1X prepEraseC 11 -> prepEraseC 1X 11
@% prepEraseC e0 -> prepEraseC @% e0
0& backToDFromLeft 0% -> backToDFromLeft 0& 0%
@& temp @0 -> beginCopying @& @0
eX checkCD 0D -> checkCD eX 0D
$0 temp @1 -> beginCopying $0 @1
$B eraseE 10 -> eraseE $B 1B
1E backToSharpOne @C -> backToSharpOne 1E @C
$# nullifier 0B -> initDivider $# 0E
@@ gotoMark $E -> gotoDecC @@ $E
@X restoreCD 0% -> restoreCD @X 00
1C backToSharpOne 0C -> backToSharpOne 1C 0C
@0 backToStart 11 -> backToStart @0 11
@X eraseE e1 -> eraseE @X eB
eB backToSharpOne @D -> backToSharpOne eB @D
$% beginCopying eB -> backToStart $% eC
11 searchZero e0 -> backToDFromLeft 11 e%
e1 backToSharpZero 1E -> backToSharpZero e1 1E
$B gotoMark 0E -> gotoDecC $B 0E
$B eraseE e1 -> eraseE $B eB
$1 backToSharpZero 0D -> backToSharpZero $1 0D
1X gotoMark @0 -> gotoMark 1X @0
eX forwardToLastD 1E -> incD eX 1E
@@ findBlank @0 -> temp @@ @0
e1 backToDFromRight 1B -> backToDFromRight e1 1B
1B backToSharpOne e0 -> backToSharpOne 1B e0
eD restoreCD 0& -> restoreCD eD 01
e& backToDFromLeft 11 -> backToDFromLeft e& 11
eE prepEraseC @1 -> prepEraseC eE @1
e# checkCD 1D -> checkCD e# 1D
$E backToDFromLeft @D -> searchNextBit $E @D
$E gotoMark @E -> gotoDecC $E @E
$1 checkCD e1 -> checkCD $1 e1
@% backToDFromLeft @& -> backToDFromLeft @% @&
1& gotoMark 00 -> gotoMark 1& 00
@# backToStart 10 -> backToStart @# 10
1E backToD @1 -> backToD 1E @1
@& gotoDecC @D -> dec @& @D
eX backToDFromLeft @1 -> backToDFromLeft eX @1
00 backToDFromLeft @0 -> backToDFromLeft 00 @0
$0 eraseE 1E -> prepEraseC $0 1E
e1 backToSharpZero @0 -> backToSharpZero e1 @0
$C backToSharpZero 0E -> backToSharpZero $C 0E
$C gotoMark eE -> gotoDecC $C eE
eD backToSharpOne 00 -> backToSharpOne eD 00
e$ restoreCD @& -> restoreCD e$ @1
$X gotoMark @1 -> gotoMark $X @1
0E searchOne 11 -> backToDFromLeft 0E 1&
eE restoreCD $% -> restoreCD eE $0
01 restoreCD 1% -> restoreCD 01 10
00 restoreCD 0D -> restoreCD 00 0D
1$ prepEraseC @D -> eraseC 1$ @D
$# backToSharpOne @D -> backToSharpOne $# @D
@% searchZero 00 -> backToDFromLeft @% 0%
e& prepEraseC 01 -> prepEraseC e& 01
@B eraseE 00 -> eraseE @B 0B
@# prepEraseC e0 -> prepEraseC @# e0
@1 backToFirstC @0 -> backToFirstC @1 @0
$# backToSharpZero 1C -> backToSharpZero $# 1C
$% backToDFromLeft @D -> searchNextBit $% @D
0X goToPlaceForDivider $B -> backToFirstC 0X $D
1% replaceWithBlanks @@ -> backToDFromRight 1% @@
$0 prepEraseC 10 -> prepEraseC $0 10
0@ checkCD @1 -> checkCD 0@ @1
0D backToSharpOne 0E -> backToSharpOne 0D 0E
00 searchNextBit 10 -> searchNextBit 00 10
0$ temp 10 -> beginCopying 0$ 10
1# gotoDecC e1 -> gotoDecC 1# e1
e# backToDFromRight 1B -> backToDFromRight e# 1B
eC backToDFromLeft 1D -> searchNextBit eC 1D
$X backToSharpOne $1 -> backToSharpOne $X $1
eE backToSharpZero $C -> backToSharpZero eE $C
$0 backToSharpOne @D -> backToSharpOne $0 @D
1$ searchOne e1 -> backToDFromLeft 1$ e&
1E dec 11 -> gotoMark 1E 10
0B dec 00 -> dec 0B 01
0C restoreCD 1% -> restoreCD 0C 10
@% prepEraseC @0 -> prepEraseC @% @0
@X backToDFromLeft @& -> backToDFromLeft @X @&
0% copyOne 1B -> backToSharpOne 0% 11
@# checkCD eD -> checkCD @# eD
$X forwardToLastD $E -> incD $X $E
@E backToSharpOne 1C -> backToSharpOne @E 1C
backToDAfterInc 11 -> 11 backToDAfterInc
eC restoreCD 1D -> restoreCD eC 1D
@X backToDFromLeft eD -> searchNextBit @X eD
e1 temp @0 -> beginCopying e1 @0
eD backToDFromLeft e& -> backToDFromLeft eD e&
@& backToSharpOne @C -> backToSharpOne @& @C
e# gotoLastE 0@ -> dec e# 0@
eE gotoMark @E -> gotoDecC eE @E
$1 checkCD $D -> checkCD $1 $D
@X backToDFromLeft $% -> backToDFromLeft @X $%
e$ beginCopying $B -> backToStart e$ $C
1D temp $1 -> beginCopying 1D $1
$& gotoDecC $0 -> gotoDecC $& $0
00 gotoDecC 01 -> gotoDecC 00 01
1D eraseE 00 -> eraseE 1D 0B
@& backToDFromLeft @0 -> backToDFromLeft @& @0
@D backToSharpOne 1E -> backToSharpOne @D 1E
eC backToSharpOne eX -> backToSharpOne eC eX
$X gotoMark eE -> gotoDecC $X eE
@D findBlank @1 -> temp @D @1
$0 backToSharpOne 10 -> backToSharpOne $0 10
01 incD 01 -> incD 01 00
e$ backToSharpOne 0C -> backToSharpOne e$ 0C
$C dec $0 -> dec $C $1
1D backToDFromLeft @D -> searchNextBit 1D @D
eD prepEraseC e0 -> prepEraseC eD e0
@@ eraseC 1C -> backToStart @@ 1X
1$ gotoMark 00 -> gotoMark 1$ 00
1C restoreCD @1 -> restoreCD 1C @1
$E initDividerByTwo e0 -> backToD $E e1
1& backToDFromRight e0 -> backToDFromRight 1& e0
$B prepEraseC 0D -> eraseC $B 0D
$@ eraseC @C -> backToStart $@ @X
@& temp 01 -> beginCopying @& 01
$1 backToDFromRight $B -> backToDFromRight $1 $B
$# findZero $1 -> beginCopying $# $1
0X backToSharpZero 01 -> backToSharpZero 0X 01
$& backToDFromLeft $1 -> backToDFromLeft $& $1
eD backToSharpOne eD -> backToSharpOne eD eD
10 backToD @1 -> backToD 10 @1
@0 checkCD e1 -> checkCD @0 e1
1& gotoLastE 0@ -> dec 1& 0@
eE checkCD $D -> checkCD eE $D
@X backToSharpZero e0 -> backToSharpZero @X e0
@C copyZero eB -> backToSharpZero @C e0
$C backToDFromRight eE -> backToDFromRight $C eE
@C checkCD e0 -> checkCD @C e0
@& checkCD e1 -> checkCD @& e1
eD copyZero 0B -> backToSharpZero eD 00
@1 temp @1 -> beginCopying @1 @1
1B backToD 01 -> backToD 1B 01
eD backToSharpZero $D -> backToSharpZero eD $D
1@ eraseE 0E -> prepEraseC 1@ 0E
eX backToSharpZero 0E -> backToSharpZero eX 0E
1D backToDFromLeft 1D -> searchNextBit 1D 1D
$0 backToSharpZero @E -> backToSharpZero $0 @E
@X searchZero @0 -> backToDFromLeft @X @%
@$ backToDFromLeft 1% -> backToDFromLeft @$ 1%
01 backToDFromLeft @% -> backToDFromLeft 01 @%
10 backToSharpOne 1D -> backToSharpOne 10 1D
0& backToStart 00 -> backToStart 0& 00
0$ restoreCD $D -> restoreCD 0$ $D
0E backToDFromRight 00 -> backToDFromRight 0E 00
e0 initDividerByTwo $0 -> backToD e0 $1
1C gotoLastE $@ -> dec 1C $@
0D backToDFromLeft 1D -> searchNextBit 0D 1D
@% eraseC 10 -> eraseC @% 1B
@$ backToSharpZero 01 -> backToSharpZero @$ 01
@X backToSharpZero @D -> backToSharpZero @X @D
$E incD 10 -> checkCD $E 11
@X restoreCD 00 -> restoreCD @X 00
$B checkCD @1 -> checkCD $B @1
$E searchZero 01 -> restoreCD $E 01
0C temp e1 -> beginCopying 0C e1
0E eraseE e1 -> eraseE 0E eB
1X backToSharpZero $E -> backToSharpZero 1X $E
$E backToSharpZero eC -> backToSharpZero $E eC
@# backToSharpOne 0E -> backToSharpOne @# 0E
1C forwardToLastD $E -> incD 1C $E
$$ backToSharpZero @X -> backToSharpZero $$ @X
11 temp @1 -> beginCopying 11 @1
e& findZero @1 -> beginCopying e& @1
@$ backToStart e1 -> backToStart @$ e1
eX backToSharpZero $E -> backToSharpZero eX $E
@@ eraseE $E -> prepEraseC @@ $E
$% prepEraseC 01 -> prepEraseC $% 01
10 prepEraseC @1 -> prepEraseC 10 @1
@# eraseC e0 -> eraseC @# eB
$$ searchZero 01 -> restoreCD $$ 01
e1 prepEraseC @D -> eraseC e1 @D
0$ backToDFromLeft @D -> searchNextBit 0$ @D
$E checkCD e0 -> checkCD $E e0
$X restoreCD $1 -> restoreCD $X $1
0C backToSharpOne @E -> backToSharpOne 0C @E
1C findZero 01 -> beginCopying 1C 01
@D backToDFromLeft e& -> backToDFromLeft @D e&
0# backToSharpOne eX -> backToSharpOne 0# eX
$D restoreCD eD -> restoreCD $D eD
eD backToDFromRight @0 -> backToDFromRight eD @0
0B backToDFromLeft e& -> backToDFromLeft 0B e&
$& searchZero @1 -> restoreCD $& @1
@B backToSharpZero $E -> backToSharpZero @B $E
eE backToSharpZero 00 -> backToSharpZero eE 00
1@ eraseC 0C -> backToStart 1@ 0X
eB prepEraseC e0 -> prepEraseC eB e0
1& gotoLastE e@ -> dec 1& e@
eC eraseE @0 -> eraseE eC @B
$X goToPlaceForDivider $B -> backToFirstC $X $D
1B initDividerByTwo $0 -> backToD 1B $1
e$ backToDFromRight e1 -> backToDFromRight e$ e1
$$ gotoMark 11 -> gotoMark $$ 11
@% eraseC 01 -> eraseC @% 0B
@@ incD $0 -> checkCD @@ $1
eC temp @1 -> beginCopying eC @1
1$ backToDFromLeft e0 -> backToDFromLeft 1$ e0
@$ eraseE e1 -> eraseE @$ eB
eD backToFirstC $0 -> backToFirstC eD $0
1C eraseC 1C -> backToStart 1C 1X
01 forwardToLastD eE -> incD 01 eE
1X gotoMark 1E -> gotoDecC 1X 1E
0$ goToPlaceForDivider 0B -> backToFirstC 0$ 0D
e& gotoMark @1 -> gotoMark e& @1
@C backToFirstC @1 -> backToFirstC @C @1
1C checkCD e1 -> checkCD 1C e1
$0 eraseE e0 -> eraseE $0 eB
1X restoreCD $& -> restoreCD 1X $1
1@ eraseC @C -> backToStart 1@ @X
e1 prepEraseC $1 -> prepEraseC e1 $1
11 gotoDecC 1D -> dec 11 1D
@D backToD 01 -> backToD @D 01
e$ eraseC eC -> backToStart e$ eX
1$ checkEForZero 1B -> stop 1$ 1B
e$ forwardToLastD @E -> incD e$ @E
0X backToSharpOne @C -> backToSharpOne 0X @C
01 copyZero 1B -> backToSharpZero 01 10
eE findBlank $0 -> temp eE $0
1$ checkEForZero 0B -> stop 1$ 0B
@D backToSharpZero e0 -> backToSharpZero @D e0
0& backToDFromLeft 1& -> backToDFromLeft 0& 1&
e$ backToSharpZero $D -> backToSharpZero e$ $D
e& backToStart 00 -> backToStart e& 00
eE goToPlaceForDivider eB -> backToFirstC eE eD
1# massErase @@ -> eraseE 1# @@
$C incD @1 -> incD $C @0
@& backToSharpZero 1C -> backToSharpZero @& 1C
1& backToFirstC 00 -> backToFirstC 1& 00
0$ backToStart 00 -> backToStart 0$ 00
0& backToDFromRight $0 -> backToDFromRight 0& $0
01 gotoDecC e0 -> gotoDecC 01 e0
1% searchNextBit e0 -> searchNextBit 1% e0
$& backToDFromLeft @% -> backToDFromLeft $& @%
1% backToSharpZero @D -> backToSharpZero 1% @D
0X restoreCD @0 -> restoreCD 0X @0
e% backToSharpOne 1X -> backToSharpOne e% 1X
$E eraseC 10 -> eraseC $E 1B
eX backToSharpOne 0X -> backToSharpOne eX 0X
0% prepEraseC e1 -> prepEraseC 0% e1
1C copyOne 0B -> backToSharpOne 1C 01
$$ backToSharpOne 10 -> backToSharpOne $$ 10
@D searchZero 01 -> restoreCD @D 01
0C backToSharpZero 0C -> backToSharpZero 0C 0C
e@ prepEraseC 0D -> eraseC e@ 0D
$$ checkEForZero @B -> stop $$ @B
00 nullifier 0B -> initDivider 00 0E
e$ prepEraseC 10 -> prepEraseC e$ 10
@E backToDFromLeft 1D -> searchNextBit @E 1D
@B searchNextBit $1 -> searchNextBit @B $1
0& eraseC @C -> backToStart 0& @X
0E findBlank 0B -> FINAL 0E 0B
$% massErase @@ -> eraseE $% @@
eX gotoDecC $D -> dec eX $D
e1 gotoMark 0E -> gotoDecC e1 0E
$X backToDFromRight 1E -> backToDFromRight $X 1E
$$ searchZero 10 -> backToDFromLeft $$ 1%
1& backToSharpOne 0X -> backToSharpOne 1& 0X
@0 dec 01 -> gotoMark @0 00
0D backToDFromRight e1 -> backToDFromRight 0D e1
$@ backToDFromLeft @% -> backToDFromLeft $@ @%
e% backToD $1 -> backToD e% $1
checkOneD 01 -> 01 checkOneD
e$ restoreCD 1D -> restoreCD e$ 1D
e@ backToSharpOne 1C -> backToSharpOne e@ 1C
1E findBlank $B -> FINAL 1E $B
$B backToDFromRight 1B -> backToDFromRight $B 1B
$0 massErase @@ -> eraseE $0 @@
0C searchZero $1 -> restoreCD 0C $1
$X backToDFromLeft 0& -> backToDFromLeft $X 0&
@% backToStart 10 -> backToStart @% 10
e0 backToSharpOne 00 -> backToSharpOne e0 00
@D backToSharpZero $0 -> backToSharpZero @D $0
e$ restoreCD 0% -> restoreCD e$ 00
@D checkEForZero @B -> stop @D @B
eC restoreCD 1% -> restoreCD eC 10
e& checkCD e1 -> checkCD e& e1
0B massErase $@ -> eraseE 0B $@
@B temp e1 -> beginCopying @B e1
$D prepEraseC @D -> eraseC $D @D
$B backToSharpZero $C -> backToSharpZero $B $C
01 findBlank @B -> FINAL 01 @B
@@ backToSharpOne @C -> backToSharpOne @@ @C
$& eraseE eE -> prepEraseC $& eE
1D backToSharpZero 0C -> backToSharpZero 1D 0C
$E backToSharpZero 01 -> backToSharpZero $E 01
1D searchOne 10 -> restoreCD 1D 10
00 findZero 11 -> beginCopying 00 11
@0 backToDFromRight e1 -> backToDFromRight @0 e1
0C restoreCD 01 -> restoreCD 0C 01
11 checkCD 1D -> checkCD 11 1D
$D backToDFromLeft $0 -> backToDFromLeft $D $0
@E restoreCD 1% -> restoreCD @E 10
eD backToDFromLeft @1 -> backToDFromLeft eD @1
$% searchOne 11 -> backToDFromLeft $% 1&
e1 searchNextBit 11 -> searchNextBit e1 11
@# backToSharpOne @E -> backToSharpOne @# @E
11 gotoMark @0 -> gotoMark 11 @0
e0 gotoLastE 0@ -> dec e0 0@
@0 copyOne eB -> backToSharpOne @0 e1
@% temp 00 -> beginCopying @% 00
$1 searchNextBit $1 -> searchNextBit $1 $1
e$ backToFirstC e1 -> backToFirstC e$ e1
@C gotoDecC eD -> dec @C eD
@C eraseE @0 -> eraseE @C @B
$C temp @0 -> beginCopying $C @0
0B backToSharpZero @0 -> backToSharpZero 0B @0
@D findZero 11 -> beginCopying @D 11
$& temp 01 -> beginCopying $& 01
0& temp @1 -> beginCopying 0& @1
0% copyZero eB -> backToSharpZero 0% e0
e% findBlank e0 -> temp e% e0
eC backToSharpOne 10 -> backToSharpOne eC 10
0D backToSharpZero 01 -> backToSharpZero 0D 01
1B restoreCD @% -> restoreCD 1B @0
1C eraseC $1 -> eraseC 1C $B
$D backToSharpZero eD -> backToSharpZero $D eD
0B findBlank 1B -> FINAL 0B 1B
e@ restoreCD 1% -> restoreCD e@ 10
1E replaceWithBlanks $@ -> backToDFromRight 1E $@
@B backToDFromLeft 01 -> backToDFromLeft @B 01
e0 forwardToLastD 0E -> incD e0 0E
@$ checkCD @D -> checkCD @$ @D
0@ searchNextBit 01 -> searchNextBit 0@ 01
$C backToSharpOne eE -> backToSharpOne $C eE
@& backToDFromRight 1E -> backToDFromRight @& 1E
$E nullifier 0B -> initDivider $E 0E
@E restoreCD @0 -> restoreCD @E @0
11 forwardToLastD $E -> incD 11 $E
e% backToDFromRight 10 -> backToDFromRight e% 10
eD restoreCD eD -> restoreCD eD eD
0& gotoDecC e1 -> gotoDecC 0& e1
$% temp @0 -> beginCopying $% @0
@0 forwardToLastD eE -> incD @0 eE
1C goToPlaceForDivider $B -> backToFirstC 1C $D
0@ backToDFromLeft @1 -> backToDFromLeft 0@ @1
beginCopying $0 -> $0 beginCopying
0@ backToFirstC 01 -> backToFirstC 0@ 01
@% searchNextBit $1 -> searchNextBit @% $1
@$ checkCD $1 -> checkCD @$ $1
e# searchOne @1 -> backToDFromLeft e# @&
@D copyOne 0B -> backToSharpOne @D 01
@B restoreCD eD -> restoreCD @B eD
0% backToStart @0 -> backToStart 0% @0
e% backToSharpOne 11 -> backToSharpOne e% 11
@0 eraseC @C -> backToStart @0 @X
1% incD $1 -> incD 1% $0
@@ eraseE eE -> prepEraseC @@ eE
0B backToSharpZero e1 -> backToSharpZero 0B e1
00 backToStart $0 -> backToStart 00 $0
0& checkCD @D -> checkCD 0& @D
$E backToSharpOne 01 -> backToSharpOne $E 01
1$ prepEraseC e1 -> prepEraseC 1$ e1
@C eraseE $1 -> eraseE @C $B
00 restoreCD 00 -> restoreCD 00 00
1B restoreCD @0 -> restoreCD 1B @0
$B findZero 01 -> beginCopying $B 01
@@ goToPlaceForDivider @B -> backToFirstC @@ @D
e% eraseE e0 -> eraseE e% eB
1C eraseE $0 -> eraseE 1C $B
@& beginCopying $B -> backToStart @& $C
$% restoreCD 1D -> restoreCD $% 1D
1& eraseC $1 -> eraseC 1& $B
01 backToSharpZero eC -> backToSharpZero 01 eC
@E prepEraseC $0 -> prepEraseC @E $0
$E gotoDecC $D -> dec $E $D
01 beginCopying 0B -> backToStart 01 0C
@0 dec $0 -> dec @0 $1
$C backToStart 10 -> backToStart $C 10
0C backToDFromLeft 0D -> searchNextBit 0C 0D
eB searchZero 11 -> restoreCD eB 11
0& checkCD @1 -> checkCD 0& @1
@& backToSharpZero @E -> backToSharpZero @& @E
@D backToSharpZero $1 -> backToSharpZero @D $1
@@ findZero e1 -> beginCopying @@ e1
0& backToDFromRight e1 -> backToDFromRight 0& e1
$% backToDFromLeft @& -> backToDFromLeft $% @&
e@ backToDFromLeft @0 -> backToDFromLeft e@ @0
@X replaceWithBlanks 1@ -> backToDFromRight @X 1@
1@ restoreCD $& -> restoreCD 1@ $1
$$ backToFirstC @1 -> backToFirstC $$ @1
@X temp 11 -> beginCopying @X 11
1@ searchOne @0 -> restoreCD 1@ @0
1D findBlank 11 -> temp 1D 11
$0 checkCD 11 -> checkCD $0 11
1C checkEForZero @B -> stop 1C @B
eC gotoDecC 1D -> dec eC 1D
@% backToSharpZero eE -> backToSharpZero @% eE
e& massErase e@ -> eraseE e& e@
1D replaceWithBlanks 0@ -> backToDFromRight 1D 0@
$$ searchZero $1 -> restoreCD $$ $1
e% forwardToLastD 0E -> incD e% 0E
$X backToDFromLeft 0% -> backToDFromLeft $X 0%
1$ copyZero $B -> backToSharpZero 1$ $0
e# searchOne 00 -> restoreCD e# 00
1B checkCD $1 -> checkCD 1B $1
1& checkEForZero @B -> stop 1& @B
$C backToStart @0 -> backToStart $C @0
1B eraseC @1 -> eraseC 1B @B
e& restoreCD $% -> restoreCD e& $0
e% gotoMark 11 -> gotoMark e% 11
0X eraseC @0 -> eraseC 0X @B
@B prepEraseC $D -> eraseC @B $D
10 temp 00 -> beginCopying 10 00
e1 backToSharpZero $D -> backToSharpZero e1 $D
1@ backToSharpOne e1 -> backToSharpOne 1@ e1
1$ searchNextBit $0 -> searchNextBit 1$ $0
1# restoreCD 0% -> restoreCD 1# 00
@% eraseE 11 -> eraseE @% 1B
0B checkEForZero $B -> stop 0B $B
00 gotoDecC $1 -> gotoDecC 00 $1
@$ initDividerByTwo 10 -> backToD @$ 11
0D backToFirstC @0 -> backToFirstC 0D @0
@$ eraseC $1 -> eraseC @$ $B
0@ backToD 00 -> backToD 0@ 00
@% restoreCD 0D -> restoreCD @% 0D
0# initDivider 10 -> initDividerByTwo 0# 10
1X gotoMark $1 -> gotoMark 1X $1
@X searchOne e0 -> restoreCD @X e0
$B prepEraseC 10 -> prepEraseC $B 10
goToPlaceForDivider e0 -> e0 goToPlaceForDivider
0X backToD $1 -> backToD 0X $1
$@ eraseE 1E -> prepEraseC $@ 1E
e@ eraseC @1 -> eraseC e@ @B
$0 backToDFromLeft $% -> backToDFromLeft $0 $%
e& copyZero 1B -> backToSharpZero e& 10
$D incD 10 -> checkCD $D 11
e# checkCD @1 -> checkCD e# @1
0E checkCD eD -> checkCD 0E eD
e@ gotoDecC 01 -> gotoDecC e@ 01
$B backToSharpOne @C -> backToSharpOne $B @C
$0 eraseE e1 -> eraseE $0 eB
$E searchNextBit $1 -> searchNextBit $E $1
e0 searchZero 01 -> restoreCD e0 01
checkOneD 00 -> 00 checkOneD
e1 copyZero 0B -> backToSharpZero e1 00
$E gotoMark 11 -> gotoMark $E 11
1X gotoDecC 11 -> gotoDecC 1X 11
$C gotoDecC eD -> dec $C eD
$D checkCD 11 -> checkCD $D 11
@E copyOne 0B -> backToSharpOne @E 01
0D eraseC $C -> backToStart 0D $X
$% backToFirstC 10 -> backToFirstC $% 10
forwardToLastD 1D -> 1D forwardToLastD
$@ backToDFromLeft @& -> backToDFromLeft $@ @&
$B gotoMark e1 -> gotoMark $B e1
@1 copyZero @B -> backToSharpZero @1 @0
eE backToSharpZero 0X -> backToSharpZero eE 0X
$1 backToStart e0 -> backToStart $1 e0
@& backToSharpZero 01 -> backToSharpZero @& 01
e& gotoMark e0 -> gotoMark e& e0
1% searchNextBit 10 -> searchNextBit 1% 10
$$ checkCD e0 -> checkCD $$ e0
@X backToSharpZero 1D -> backToSharpZero @X 1D
0X eraseE 00 -> eraseE 0X 0B
FINAL $D -> FINAL $ FINAL
$% searchZero @1 -> restoreCD $% @1
e% restoreCD 11 -> restoreCD e% 11
0X backToDFromRight @0 -> backToDFromRight 0X @0
@C backToDFromLeft 1& -> backToDFromLeft @C 1&
e$ prepEraseC 11 -> prepEraseC e$ 11
e1 backToDFromRight 01 -> backToDFromRight e1 01
0D temp 11 -> beginCopying 0D 11
$D gotoMark $1 -> gotoMark $D $1
e1 backToSharpZero @D -> backToSharpZero e1 @D
@$ backToSharpOne 1C -> backToSharpOne @$ 1C
e1 backToSharpZero 01 -> backToSharpZero e1 01
0E backToDFromLeft 00 -> backToDFromLeft 0E 00
0B gotoDecC 10 -> gotoDecC 0B 10
1@ gotoDecC $D -> dec 1@ $D
@D backToDFromLeft 1% -> backToDFromLeft @D 1%
1D gotoMark $1 -> gotoMark 1D $1
@& beginCopying 1B -> backToStart @& 1C
1D backToDFromLeft 10 -> backToDFromLeft 1D 10
1D backToStart 01 -> backToStart 1D 01
11 backToFirstC $0 -> backToFirstC 11 $0
11 backToFirstC 01 -> backToFirstC 11 01
$% searchZero 10 -> backToDFromLeft $% 1%
0C backToSharpZero 11 -> backToSharpZero 0C 11
11 forwardToLastD @E -> incD 11 @E
e& gotoDecC 00 -> gotoDecC e& 00
eX backToDFromRight 01 -> backToDFromRight eX 01
1% checkEForZero @B -> stop 1% @B
0C restoreCD @1 -> restoreCD 0C @1
eD backToSharpOne @1 -> backToSharpOne eD @1
0@ backToSharpOne @C -> backToSharpOne 0@ @C
@D searchZero @1 -> restoreCD @D @1
1C eraseE $1 -> eraseE 1C $B
e% replaceWithBlanks 1@ -> backToDFromRight e% 1@
0$ backToSharpOne 1E -> backToSharpOne 0$ 1E
1@ backToFirstC @1 -> backToFirstC 1@ @1
10 prepEraseC @D -> eraseC 10 @D
eC eraseE @1 -> eraseE eC @B
0$ backToStart 11 -> backToStart 0$ 11
$D prepEraseC $D -> eraseC $D $D
01 backToDFromRight @B -> backToDFromRight 01 @B
eD gotoDecC @D -> dec eD @D
e# eraseE 01 -> eraseE e# 0B
@X dec 11 -> gotoMark @X 10
eB gotoMark $E -> gotoDecC eB $E
@X nullifier 0B -> initDivider @X 0E
1D backToSharpZero $X -> backToSharpZero 1D $X
$& searchZero e1 -> restoreCD $& e1
e# incD 01 -> incD e# 00
0D backToDFromLeft e1 -> backToDFromLeft 0D e1
$B checkCD $0 -> checkCD $B $0
00 searchZero 11 -> restoreCD 00 11
$@ restoreCD @% -> restoreCD $@ @0
@& findBlank 11 -> temp @& 11
$B backToFirstC e0 -> backToFirstC $B e0
10 backToSharpZero @D -> backToSharpZero 10 @D
0@ backToStart 00 -> backToStart 0@ 00
1D massErase $@ -> eraseE 1D $@
@% backToDFromLeft @0 -> backToDFromLeft @% @0
e& backToSharpOne @X -> backToSharpOne e& @X
@X incD 11 -> incD @X 10
@$ eraseC 00 -> eraseC @$ 0B
@1 backToSharpOne @E -> backToSharpOne @1 @E
1$ findBlank @B -> FINAL 1$ @B
eX backToDFromLeft $& -> backToDFromLeft eX $&
$B nullifier eB -> initDivider $B eE
1% gotoDecC eD -> dec 1% eD
1E goToPlaceForDivider 0B -> backToFirstC 1E 0D
e$ eraseC @1 -> eraseC e$ @B
e1 searchOne $1 -> backToDFromLeft e1 $&
$D backToDFromLeft $1 -> backToDFromLeft $D $1
$1 backToSharpOne eD -> backToSharpOne $1 eD
0& initDivider $0 -> initDividerByTwo 0& $0
@E FINAL -> FINAL @ FINAL
0% eraseC eC -> backToStart 0% eX
1D dec e1 -> gotoMark 1D e0
e% backToSharpOne @E -> backToSharpOne e% @E
@& backToStart 00 -> backToStart @& 00
@C backToDFromRight $0 -> backToDFromRight @C $0
$1 backToD 10 -> backToD $1 10
e$ backToSharpOne eC -> backToSharpOne e$ eC
e1 gotoLastE 1@ -> dec e1 1@
@$ dec 01 -> gotoMark @$ 00
1& goToPlaceForDivider 1B -> backToFirstC 1& 1D
1% backToSharpZero e1 -> backToSharpZero 1% e1
e& eraseE 00 -> eraseE e& 0B
@@ backToD $1 -> backToD @@ $1
@& gotoLastE $@ -> dec @& $@
0% searchNextBit @0 -> searchNextBit 0% @0
@C gotoDecC @0 -> gotoDecC @C @0
$% backToSharpZero eE -> backToSharpZero $% eE
1D copyZero 0B -> backToSharpZero 1D 00
@$ findBlank 1B -> FINAL @$ 1B
01 backToSharpOne 10 -> backToSharpOne 01 10
e1 restoreCD @% -> restoreCD e1 @0
eD searchNextBit @0 -> searchNextBit eD @0
eX backToSharpOne $0 -> backToSharpOne eX $0
e& backToDFromLeft 0& -> backToDFromLeft e& 0&
0@ findBlank 11 -> temp 0@ 11
0D backToDFromRight 10 -> backToDFromRight 0D 10
0X findBlank 0B -> FINAL 0X 0B
1E backToSharpZero e0 -> backToSharpZero 1E e0
@D backToSharpOne $C -> backToSharpOne @D $C
@@ searchZero $1 -> restoreCD @@ $1
0D backToFirstC $1 -> backToFirstC 0D $1
eC copyOne 1B -> backToSharpOne eC 11
0X backToSharpZero 11 -> backToSharpZero 0X 11
1# gotoDecC e0 -> gotoDecC 1# e0
$# checkCD 0D -> checkCD $# 0D
eX eraseC 0C -> backToStart eX 0X
0& findBlank @B -> FINAL 0& @B
@& backToSharpOne 0X -> backToSharpOne @& 0X
1C backToSharpZero 01 -> backToSharpZero 1C 01
$1 backToSharpOne @C -> backToSharpOne $1 @C
$C backToSharpZero $D -> backToSharpZero $C $D
1& findBlank 01 -> temp 1& 01
01 gotoMark e1 -> gotoMark 01 e1
e# backToSharpOne $E -> backToSharpOne e# $E
10 backToSharpZero e0 -> backToSharpZero 10 e0
$E eraseC @C -> backToStart $E @X
1@ backToDFromLeft 0& -> backToDFromLeft 1@ 0&
eC backToDFromLeft 0% -> backToDFromLeft eC 0%
1X backToDFromRight @0 -> backToDFromRight 1X @0
@% beginCopying $B -> backToStart @% $C
$C findBlank 11 -> temp $C 11
0@ prepEraseC eD -> eraseC 0@ eD
$# backToDFromLeft @& -> backToDFromLeft $# @&
01 backToSharpZero @D -> backToSharpZero 01 @D
@E temp 01 -> beginCopying @E 01
$C restoreCD @1 -> restoreCD $C @1
@% copyZero eB -> backToSharpZero @% e0
$$ backToSharpZero eX -> backToSharpZero $$ eX
$E findBlank 0B -> FINAL $E 0B
eB backToSharpOne @C -> backToSharpOne eB @C
0@ backToSharpOne 11 -> backToSharpOne 0@ 11
eE searchZero 01 -> restoreCD eE 01
0B backToSharpOne @C -> backToSharpOne 0B @C
e& restoreCD 0D -> restoreCD e& 0D
01 dec @1 -> gotoMark 01 @0
eE gotoMark e1 -> gotoMark eE e1
@$ backToDFromLeft @& -> backToDFromLeft @$ @&
00 eraseE $1 -> eraseE 00 $B
1C backToSharpZero e1 -> backToSharpZero 1C e1
$# eraseE e1 -> eraseE $# eB
1X backToDFromRight 01 -> backToDFromRight 1X 01
0X eraseE @0 -> eraseE 0X @B
0X eraseE eE -> prepEraseC 0X eE
e$ copyOne eB -> backToSharpOne e$ e1
1B massErase e@ -> eraseE 1B e@
1E checkCD e0 -> checkCD 1E e0
00 initDividerByTwo @0 -> backToD 00 @1
0B restoreCD $1 -> restoreCD 0B $1
$X forwardToLastD eE -> incD $X eE
10 goToPlaceForDivider 0B -> backToFirstC 10 0D
1E searchNextBit @1 -> searchNextBit 1E @1
@E replaceWithBlanks 1@ -> backToDFromRight @E 1@
@C restoreCD e1 -> restoreCD @C e1
$$ backToSharpZero $0 -> backToSharpZero $$ $0
eD backToFirstC e0 -> backToFirstC eD e0
0$ incD @0 -> checkCD 0$ @1
$$ backToSharpZero $1 -> backToSharpZero $$ $1
0B restoreCD $D -> restoreCD 0B $D
@$ prepEraseC $D -> eraseC @$ $D
@1 findZero $1 -> beginCopying @1 $1
eD checkCD e0 -> checkCD eD e0
0C searchZero e1 -> restoreCD 0C e1
1% dec @1 -> gotoMark 1% @0
1X searchZero $1 -> restoreCD 1X $1
1E backToSharpZero eX -> backToSharpZero 1E eX
@$ backToStart 01 -> backToStart @$ 01
1X backToSharpZero 10 -> backToSharpZero 1X 10
createCopy 01 -> 0# copyOne
@E searchNextBit $0 -> searchNextBit @E $0
$0 backToDFromLeft e% -> backToDFromLeft $0 e%
$D checkCD 00 -> checkCD $D 00
e1 checkEForZero eB -> stop e1 eB
0# gotoDecC @1 -> gotoDecC 0# @1
$& restoreCD 1% -> restoreCD $& 10
1B backToSharpZero @0 -> backToSharpZero 1B @0
$X FINAL -> FINAL $ FINAL
$@ backToFirstC 10 -> backToFirstC $@ 10
e0 backToSharpZero eC -> backToSharpZero e0 eC
gotoLastE @0 -> @0 gotoLastE
@& gotoMark $0 -> gotoMark @& $0
0B prepEraseC e1 -> prepEraseC 0B e1
1C gotoMark $0 -> gotoMark 1C $0
1% backToSharpOne 0C -> backToSharpOne 1% 0C
$& eraseC 0C -> backToStart $& 0X
1E searchOne 00 -> restoreCD 1E 00
1@ gotoDecC $1 -> gotoDecC 1@ $1
$E searchOne 01 -> backToDFromLeft $E 0&
$% gotoDecC 0D -> dec $% 0D
e# backToDFromRight @E -> backToDFromRight e# @E
0D backToStart 00 -> backToStart 0D 00
$% searchOne @1 -> backToDFromLeft $% @&
@% gotoMark e1 -> gotoMark @% e1
@% incD e1 -> incD @% e0
e@ eraseE @E -> prepEraseC e@ @E
0& eraseE eE -> prepEraseC 0& eE
$B eraseC $C -> backToStart $B $X
e% initDividerByTwo 00 -> backToD e% 01
$# restoreCD $% -> restoreCD $# $0
1X prepEraseC 10 -> prepEraseC 1X 10
eX backToSharpOne $X -> backToSharpOne eX $X
eB temp $0 -> beginCopying eB $0
@C backToDFromLeft $& -> backToDFromLeft @C $&
goToPlaceForDivider $0 -> $0 goToPlaceForDivider
0B nullifier 1B -> initDivider 0B 1E
eE backToSharpZero 1E -> backToSharpZero eE 1E
0D eraseC eC -> backToStart 0D eX
@E backToStart e1 -> backToStart @E e1
0@ findBlank 01 -> temp 0@ 01
@D gotoMark @1 -> gotoMark @D @1
$X restoreCD @% -> restoreCD $X @0
$E forwardToLastD 0E -> incD $E 0E
0% backToSharpOne 10 -> backToSharpOne 0% 10
00 gotoMark eE -> gotoDecC 00 eE
1# backToSharpZero $C -> backToSharpZero 1# $C
1& checkEForZero $B -> stop 1& $B
$@ backToFirstC $1 -> backToFirstC $@ $1
1E incD e1 -> incD 1E e0
@1 gotoDecC $1 -> gotoDecC @1 $1
1% backToDFromRight $B -> backToDFromRight 1% $B
1X backToFirstC $1 -> backToFirstC 1X $1
$0 checkEForZero eB -> stop $0 eB
0$ eraseE 01 -> eraseE 0$ 0B
0E restoreCD 0& -> restoreCD 0E 01
01 backToFirstC e1 -> backToFirstC 01 e1
10 gotoDecC eD -> dec 10 eD
$X checkEForZero 1B -> stop $X 1B
@1 backToDFromLeft e0 -> backToDFromLeft @1 e0
e$ dec e1 -> gotoMark e$ e0
0X findBlank 1B -> FINAL 0X 1B
1# checkCD $0 -> checkCD 1# $0
@1 gotoLastE 1@ -> dec @1 1@
1D prepEraseC @1 -> prepEraseC 1D @1
$$ searchZero e0 -> backToDFromLeft $$ e%
@$ backToDFromRight $0 -> backToDFromRight @$ $0
e1 beginCopying @B -> backToStart e1 @C
1# findBlank 11 -> temp 1# 11
@D backToSharpOne @E -> backToSharpOne @D @E
$# restoreCD 01 -> restoreCD $# 01
00 backToSharpZero 0E -> backToSharpZero 00 0E
0D prepEraseC 11 -> prepEraseC 0D 11
@C backToDFromLeft @% -> backToDFromLeft @C @%
1# gotoMark @0 -> gotoMark 1# @0
0B backToSharpZero eX -> backToSharpZero 0B eX
1$ backToDFromLeft e% -> backToDFromLeft 1$ e%
@B dec $1 -> gotoMark @B $0
$& backToSharpOne 11 -> backToSharpOne $& 11
1$ backToSharpOne 0X -> backToSharpOne 1$ 0X
@0 eraseE 1E -> prepEraseC @0 1E
@% backToDFromRight 0B -> backToDFromRight @% 0B
e@ temp 11 -> beginCopying e@ 11
eB restoreCD $D -> restoreCD eB $D
eX backToDFromRight @B -> backToDFromRight eX @B
$@ incD $1 -> incD $@ $0
@1 eraseE @E -> prepEraseC @1 @E
@0 incD 01 -> incD @0 00
0E backToFirstC e0 -> backToFirstC 0E e0
e$ eraseC @C -> backToStart e$ @X
0% checkCD 10 -> checkCD 0% 10
1$ backToFirstC 00 -> backToFirstC 1$ 00
@C gotoMark 11 -> gotoMark @C 11
eD searchZero 00 -> backToDFromLeft eD 0%
1& searchOne 00 -> restoreCD 1& 00
@B eraseC $0 -> eraseC @B $B
e% goToPlaceForDivider $B -> backToFirstC e% $D
0@ forwardToLastD 0E -> incD 0@ 0E
$% massErase e@ -> eraseE $% e@
$E searchNextBit e1 -> searchNextBit $E e1
1& checkCD 01 -> checkCD 1& 01
$B copyZero $B -> backToSharpZero $B $0
@$ backToSharpOne @C -> backToSharpOne @$ @C
@& copyOne @B -> backToSharpOne @& @1
1X gotoDecC eD -> dec 1X eD
1# backToSharpZero 11 -> backToSharpZero 1# 11
01 searchNextBit @0 -> searchNextBit 01 @0
00 eraseC $1 -> eraseC 00 $B
0E backToD $0 -> backToD 0E $0
1% prepEraseC 0D -> eraseC 1% 0D
$@ backToSharpZero 01 -> backToSharpZero $@ 01
@@ prepEraseC 00 -> prepEraseC @@ 00
eX gotoDecC @1 -> gotoDecC eX @1
$1 backToFirstC e0 -> backToFirstC $1 e0
10 restoreCD 01 -> restoreCD 10 01
1# backToDFromRight $E -> backToDFromRight 1# $E
$B backToSharpZero $0 -> backToSharpZero $B $0
@X searchOne @0 -> restoreCD @X @0
@E gotoDecC 1D -> dec @E 1D
@C searchNextBit @0 -> searchNextBit @C @0
1B backToSharpZero $X -> backToSharpZero 1B $X
e% copyOne 0B -> backToSharpOne e% 01
10 backToFirstC 11 -> backToFirstC 10 11
copyOne 1D -> 1D copyOne
1& backToDFromRight 1B -> backToDFromRight 1& 1B
1@ searchOne @1 -> backToDFromLeft 1@ @&
0$ gotoMark eE -> gotoDecC 0$ eE
@1 backToSharpOne @1 -> backToSharpOne @1 @1
0& searchOne $0 -> restoreCD 0& $0
@@ backToDFromLeft 11 -> backToDFromLeft @@ 11
0% backToDFromLeft eD -> searchNextBit 0% eD
1C backToDFromRight 01 -> backToDFromRight 1C 01
1$ backToSharpZero 0E -> backToSharpZero 1$ 0E
@0 restoreCD 11 -> restoreCD @0 11
e0 searchOne $1 -> backToDFromLeft e0 $&
0& backToSharpOne $C -> backToSharpOne 0& $C
1$ incD $1 -> incD 1$ $0
0X incD 10 -> checkCD 0X 11
00 backToDFromLeft e1 -> backToDFromLeft 00 e1
@B eraseE e0 -> eraseE @B eB
@C temp 00 -> beginCopying @C 00
@@ backToDFromLeft @1 -> backToDFromLeft @@ @1
1C findBlank 11 -> temp 1C 11
@0 searchNextBit e1 -> searchNextBit @0 e1
$D findZero 11 -> beginCopying $D 11
$C replaceWithBlanks 0@ -> backToDFromRight $C 0@
$& backToSharpZero 0C -> backToSharpZero $& 0C
1D backToDFromRight eB -> backToDFromRight 1D eB
0E checkEForZero @B -> stop 0E @B
$D initDividerByTwo e0 -> backToD $D e1
00 backToSharpOne 01 -> backToSharpOne 00 01
@C searchZero $0 -> backToDFromLeft @C $%
01 searchNextBit $1 -> searchNextBit 01 $1
1X searchOne $0 -> restoreCD 1X $0
e0 eraseE 00 -> eraseE e0 0B
e1 backToSharpZero 00 -> backToSharpZero e1 00
1& replaceWithBlanks 1@ -> backToDFromRight 1& 1@
replaceWithBlanks e1 -> eB replaceWithBlanks
$& dec $1 -> gotoMark $& $0
eB gotoLastE 0@ -> dec eB 0@
eE backToSharpZero @E -> backToSharpZero eE @E
$1 gotoMark $1 -> gotoMark $1 $1
10 backToDFromLeft @0 -> backToDFromLeft 10 @0
0# backToD 00 -> backToD 0# 00
@$ backToSharpZero 10 -> backToSharpZero @$ 10
$$ backToDFromLeft 11 -> backToDFromLeft $$ 11
@# replaceWithBlanks 0@ -> backToDFromRight @# 0@
0$ eraseC @C -> backToStart 0$ @X
@1 backToSharpOne @D -> backToSharpOne @1 @D
11 prepEraseC 01 -> prepEraseC 11 01
e@ backToDFromRight $E -> backToDFromRight e@ $E
1@ restoreCD 1% -> restoreCD 1@ 10
10 searchZero $1 -> restoreCD 10 $1
@# restoreCD @& -> restoreCD @# @1
1& restoreCD @& -> restoreCD 1& @1
$1 backToSharpOne $C -> backToSharpOne $1 $C
0% checkEForZero eB -> stop 0% eB
1% goToPlaceForDivider 1B -> backToFirstC 1% 1D
0B eraseC e0 -> eraseC 0B eB
1X backToDFromRight $E -> backToDFromRight 1X $E
@% checkCD e0 -> checkCD @% e0
eB backToSharpOne e0 -> backToSharpOne eB e0
@% searchOne 00 -> restoreCD @% 00
10 backToDFromLeft 0% -> backToDFromLeft 10 0%
e% backToFirstC $1 -> backToFirstC e% $1
@$ backToFirstC 00 -> backToFirstC @$ 00
$# backToSharpZero 1D -> backToSharpZero $# 1D
@1 backToDFromLeft 1D -> searchNextBit @1 1D
$@ findBlank e0 -> temp $@ e0
1# searchOne @1 -> backToDFromLeft 1# @&
$E checkCD @0 -> checkCD $E @0
@D backToSharpZero 01 -> backToSharpZero @D 01
searchOne 0& -> 0& searchOne
1D nullifier 0B -> initDivider 1D 0E
$0 backToDFromLeft eD -> searchNextBit $0 eD
e$ prepEraseC 0D -> eraseC e$ 0D
$B eraseE $E -> prepEraseC $B $E
$C forwardToLastD $E -> incD $C $E
e& backToStart 11 -> backToStart e& 11
$X restoreCD @D -> restoreCD $X @D
@& searchNextBit 10 -> searchNextBit @& 10
0# searchOne 00 -> restoreCD 0# 00
1@ copyZero 0B -> backToSharpZero 1@ 00
eC findBlank 01 -> temp eC 01
1C prepEraseC 0D -> eraseC 1C 0D
